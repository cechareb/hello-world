create or replace 
PACKAGE BODY PAQUETE_FACTURACION
AS
PROCEDURE procesar_occ_masiva
IS
    -- PROPÓSITO:
    -- Carga la base de procesamiento de OCC Masiva ;
    --
    -- HISTORIAL DE MODIFICACION
    -- Usuario                              Fecha           Comentario
    -- ----------                           ---------           ----------------------
    -- CCHAHUAS                   09/03/2015     Revisión del flujo y documentacion.
    -- --------------------------------------------------------------------------

    -------------------------------------------------------------------------------
       /*
       T1. SE ALMACENA EN CURSOR LOS COD_INCIDENTE Y UN CONTADOR
       Se genera una vista de FA_OCC_INCIDENTE con cada uno de los cod_incidentes
       y un contador. Solo se guardarán en el cursor aquellos cod_incidentes con más de 1 incidencia.
       */
    -------------------------------------------------------------------------------
       CURSOR c_incidentes
       IS
          SELECT cuenta, razonsocial, campo_estadistica, desc_incidente, cod_incidente, monto_incidente, ciclo, estado_cobranza, uni_act_post, uni_susp,
                 uni_desac, fecha_ingreso_cliente, suma_horasinbox, nombre_inbox_dest, temaincidente, tipoincidente, estadoincidente, asignadoa,
                 horaingresoincidente, especificacion, fecha_reci_incidente, instancia_rec_incidente, resolucion, tiporeclamo, usuario_vantive,
                 nombre_vantive, distrito, region, provincia, fec_ing_incid_full, departamento, scorecrediticio, tipocuenta, defaultinbox, fechacierreincidente,
                 montoajusteacumulado, campo_estadistica2, creadopor, fechaingresosinhora, inboxasignado
              FROM fa_occ_incidente
            ORDER BY fec_ing_incid_full DESC;
       reg_incidente fa_occ_incidente%ROWTYPE;
       cont NUMBER (4);
    BEGIN
       OPEN c_incidentes;
       LOOP
          FETCH c_incidentes INTO reg_incidente;
          EXIT
       WHEN c_incidentes%NOTFOUND;
          SELECT COUNT (cod_incidente)
          INTO cont
          FROM fa_occ_incidente_final
          WHERE cod_incidente = reg_incidente.cod_incidente;
          IF (cont            = 0) THEN
             INSERT
             INTO fa_occ_incidente_final
                (cuenta, razonsocial, campo_estadistica, desc_incidente, cod_incidente, monto_incidente, ciclo, estado_cobranza, uni_act_post, uni_susp,
                uni_desac, fecha_ingreso_cliente, suma_horasinbox, nombre_inbox_dest, temaincidente, tipoincidente, estadoincidente, asignadoa,
                horaingresoincidente, especificacion, fecha_reci_incidente, instancia_rec_incidente, resolucion, tiporeclamo, usuario_vantive,
                nombre_vantive, distrito, region, provincia, fec_ing_incid_full, departamento, scorecrediticio, tipocuenta, defaultinbox,
                fechacierreincidente, montoajusteacumulado, campo_estadistica2, creadopor, fechaingresosinhora, inboxasignado)
                VALUES
                (reg_incidente.cuenta, reg_incidente.razonsocial, reg_incidente.campo_estadistica, reg_incidente.desc_incidente, reg_incidente.cod_incidente,
                 reg_incidente.monto_incidente, reg_incidente.ciclo, reg_incidente.estado_cobranza, reg_incidente.uni_act_post, reg_incidente.uni_susp,
                 reg_incidente.uni_desac, reg_incidente.fecha_ingreso_cliente, reg_incidente.suma_horasinbox, reg_incidente.nombre_inbox_dest,
                 reg_incidente.temaincidente, reg_incidente.tipoincidente, reg_incidente.estadoincidente, reg_incidente.asignadoa,
                 reg_incidente.horaingresoincidente, reg_incidente.especificacion, reg_incidente.fecha_reci_incidente, reg_incidente.instancia_rec_incidente,
                 reg_incidente.resolucion, reg_incidente.tiporeclamo, reg_incidente.usuario_vantive, reg_incidente.nombre_vantive, reg_incidente.distrito,
                 reg_incidente.region, reg_incidente.provincia, reg_incidente.fec_ing_incid_full, reg_incidente.departamento, reg_incidente.scorecrediticio,
                 reg_incidente.tipocuenta, reg_incidente.defaultinbox, reg_incidente.fechacierreincidente, reg_incidente.montoajusteacumulado,
                 reg_incidente.campo_estadistica2, reg_incidente.creadopor, reg_incidente.fechaingresosinhora, reg_incidente.inboxasignado);
          END IF;
       END LOOP;
       CLOSE c_incidentes;
       --------------------------------------------------------------------------
       /*
       T2. SE ACTUALIZA LA INFORMACION DE LA TABLA FA_OCC_OCC
       Usando la foto de equipos se identifica el ciclo de facturacion
       */
    --------------------------------------------------------------------------
       /*UPDATE
          /*+BYPASS_UJVC*//*
          (
          SELECT c.ciclo AS cicloe, c4.ciclofacturacioncontrato AS ciclo
          FROM fa_occ_occ c, (SELECT numerocuentaresponsable,
                ciclofacturacioncontrato
             FROM fotoequipos
             GROUP BY numerocuentaresponsable, ciclofacturacioncontrato
             ) c4
          WHERE c.cuenta = c4.numerocuentaresponsable
          )
       SET cicloe = ciclo;*/
       /*validado 247*/
       MERGE INTO(SELECT c.cuenta, c.ciclo AS cicloe
                      FROM fa_occ_occ c)A
       USING (SELECT numerocuentaresponsable, ciclofacturacioncontrato as ciclo
                  FROM fotoequipos
                GROUP BY numerocuentaresponsable, ciclofacturacioncontrato)B
         ON (A.cuenta = B.numerocuentaresponsable)
       WHEN MATCHED THEN
       UPDATE SET cicloe = ciclo;

       --------------------------------------------------------------------------
       /*
       T3. SE ACTUALIZA LA CANTIDAD DE REGISTROS POR CUENTA Y MONTTO
       Se identifican las cantidades y frecuencia por cada uno de las cuentas y los montos asignados,
       para poderfiltrar el las siguientes partes del proceso
       */
    --------------------------------------------------------------------------
      /* UPDATE
          /*+BYPASS_UJVC*//*
          (
          SELECT c.cantidad AS cantidade, c4.cantidad AS cantidad
          FROM fa_occ_occ c, (SELECT cuenta, monto, COUNT (*) cantidad
             FROM fa_occ_occ
             GROUP BY cuenta, monto
             ) c4
          WHERE c.cuenta = c4.cuenta
          AND c.monto    = c4.monto
          )
       SET cantidade = cantidad;*/
       /*validado 453*/
       MERGE INTO(SELECT cuenta,monto,c.cantidad AS cantidade
                      FROM fa_occ_occ c)A
       USING(SELECT cuenta, monto, COUNT (*) cantidad
                 FROM fa_occ_occ
               GROUP BY cuenta, monto)B
       ON (A.cuenta = B.cuenta
           AND A.monto  = B.monto)
       WHEN MATCHED THEN
       UPDATE SET cantidade = cantidad;

       COMMIT;


END procesar_occ_masiva;
FUNCTION factorcriticidad(
      valoranterior NUMBER,
      valorevaluado NUMBER)
   RETURN NUMBER
IS
   factor NUMBER (10, 2);
BEGIN
   factor := ( ABS (valorevaluado - valoranterior) * ( (ABS (valorevaluado -
   valoranterior))                / valoranterior * 100)) / ( (valorevaluado +
   valoranterior)                 * 0.5);
   RETURN ROUND (factor, 2);
EXCEPTION
WHEN OTHERS THEN
   RETURN -1;
END;

PROCEDURE procesar_occs_y_ajustenr(SANHO VARCHAR2,SMES VARCHAR2, SCICLO VARCHAR2)
IS
   --
   -- exec PROCESA_OCCS_Y_AJUSTENR;
   -- Purpose: Briefly explain the functionality of the procedure
   --
   -- MODIFICATION HISTORY
   -- Person      Date        Comments
   -- ---------   ----------  -------------------------------------------
   -- echumbe     18/12/2012  Creación.
   -- vortega     08/09/2014  Modificación Nueva Lógica de Asignación de Denominaciones
   -- vortega     18/12/2014  Modificación para la Asignación Manual de Denominaciones
   -- vortega     15/02/2015  Revision del flujo y Documentacion
   -- alinares    18/08/2016  Función para determinar DENOMINACION, procesamiento por ciclo y periodo
BEGIN
    --ASIGNAR DENOMINACIÓN
    UPDATE FA_OCC_PRUEBA SET DENOMINACION = fn_fa_occ_denominacion(descripcion, sncode, reasoncode, tipo)
      WHERE mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO);
    COMMIT;

    --CUENTA
    UPDATE FA_OCC_PRUEBA SET CUENTA=CUENTA||'0'
      WHERE LENGTH(CUENTA)<10 AND CUENTA LIKE '1.%'
         AND mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO);

    UPDATE FA_OCC_PRUEBA SET CUENTA=CUENTA||'0'
      WHERE LENGTH(CUENTA)<6 AND CUENTA LIKE '4.%'
         AND mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO);

    UPDATE FA_OCC_PRUEBA SET CUENTA=CUENTA||'0'
      WHERE LENGTH(CUENTA)<7 AND CUENTA LIKE '5.%'
         AND mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO);

   --------------------------------------------------------------------------
   /*
   T1. ASIGNACIÓN DEL MONTO IGV EN LA TABLA FA_OCC_PRUEBA
   Se asigna el montoigv dependiendo del campo tipo TAXABLE o NON-TAX para aplicar
   un incremento del 18%
   */
   --------------------------------------------------------------------------
   -- MONTOIGV PARA TAXABLE Y NON-TAX
   UPDATE fa_occ_prueba --fa_occ_pruebas
    SET MONTOIGV = (TO_NUMBER (MONTO))
     WHERE tipo   = 'TAXABLE'
        AND mes = sanho||smes
        AND CICLO
     LIKE DECODE(SCICLO,'0','%%',SCICLO);

   UPDATE fa_occ_prueba --fa_occ_pruebas
    SET montoigv = (TO_NUMBER (monto) / 1.18)
     WHERE TIPO   = 'NON-TAX'
        AND mes = sanho||smes
        AND CICLO
     LIKE DECODE(SCICLO,'0','%%',SCICLO);

   --------------------------------------------------------------------------
   /*
   T2. ASIGNACIÓN DEL TIPO DE OCC EN LA TABLA FA_OCC_PRUEBA
   Se asigna el tipoocc dependiendo del campo descripcion
   */
   --------------------------------------------------------------------------
   --TIPOOCC segun descripcion
   UPDATE fa_occ_prueba --fa_occ_pruebas
    SET tipoocc = 'Acuerdos Comerciales'
     WHERE descripcion LIKE '%OCCAC%'
        AND TIPOOCC IS NULL
        AND MES = SANHO||SMES
        AND CICLO
     LIKE DECODE(SCICLO,'0','%%',SCICLO);

   UPDATE fa_occ_prueba --fa_occ_pruebas
    SET tipoocc = 'Masivas'
     WHERE ( DESCRIPCION LIKE '°%'
        OR descripcion
         LIKE 'Transf Saldo%'
        OR DESCRIPCION
         LIKE 'Ajuste MMS with text only%'
        OR descripcion
         LIKE 'Descuento excesos Modem 3G%'
        OR descripcion
         LIKE '%Ajuste Mensajeria%')
        AND tipoocc IS NULL
        AND MES = SANHO||SMES
        AND CICLO
         LIKE DECODE(SCICLO,'0','%%',SCICLO);

   UPDATE fa_occ_prueba --fa_occ_pruebas
   SET tipoocc = 'Manuales'
   WHERE ( descripcion LIKE '%Inc%'
   AND descripcion NOT LIKE '%Inc. de%'
   OR descripcion LIKE 'extorno cargo%')
   AND tipoocc IS NULL
   AND mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO);

   UPDATE fa_occ_prueba --fa_occ_pruebas
   SET tipoocc = 'Sistemas'
   WHERE tipoocc IS NULL
   AND mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO);

      --------------------------------------------------------------------------
   /*
   T3. ASIGNACIÓN DEL COD_INCIDENTE EN LA TABLA FA_OCC_PRUEBA
   Se asigna el cod_incidente en base a la descripcion
   La segunda parte de la asignación es innecesaria puesto que FA_OCC_INCIDENTE llega vacía.
   */
   --------------------------------------------------------------------------
   UPDATE fa_occ_prueba t1 --fa_occ_pruebas t1
   SET
      (
         t1.cod_incidente
      )
      = (TRIM ( TRANSLATE ( SUBSTR ( t1.descripcion, INSTR ( t1.descripcion,
      CASE tipoocc
         WHEN 'Manuales'
         THEN 'Inc'
         WHEN 'Masivas'
         THEN 'Inc'
         WHEN 'Acuerdos Comerciales'
         THEN 'AC'
      END, 1, 1)),
      'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ().¿+-ó%/°á',
      '                                                               ')))
   WHERE tipoocc IN ('Manuales', 'Masivas', 'Acuerdos Comerciales')
   AND mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO);

  --------------------------------------------------------------------------
   /*
   T4. ACTUALIZACION DEL CAMPO MOTIVO DE OCCs DE TIPO ACUERDOS COMERCIALES
   Se actualiza el campo motivo en base a la descripcion que en primer lugar se le asigna al motivo.
   */
   --------------------------------------------------------------------------

  --------------------------------------------------------------------------
   /*
   T5. ACTUALIZACION DEL CAMPO MOTIVO EN BASE A LA DESCRIPCION DE TIPO OCC "SISTEMAS"
   Se actualiza el campo motivo en base a la descripcion.
   */
   --------------------------------------------------------------------------

  --------------------------------------------------------------------------
   /*
   T6. ASIGNACIÓN EN FA_OCC_PRUEBAS DE CAMPOS INFORMATIVOS POR CUENTA COMPANIA
   Se asigna los campos informativos en base a un cruce con P_COMPANIA por CUENTA
   */
   --------------------------------------------------------------------------

   MERGE INTO
   (
     SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE , t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE ,  t.CODIGOCOMPANIA AS
      codigocompaniaE , t.distrito AS
      DISTRITOE,T.PROVINCIA AS  PROVINCIAE,
       t.departamento AS departamentoE, T.CUENTA

     FROM fa_occ_prueba t
     WHERE mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
   )A
   USING
   (
   select * from (
SELECT
   c.ruccompania AS ruccompania, c.tipocuenta AS tipocuenta, c.canalventa AS canalventa,
   c.dealer AS dealer,c.tipodocumento AS tipodocumento, c.segmento AS segmento,
   C.CODIGOCOMPANIA AS CODIGOCOMPANIA, C.DISTRITO AS DISTRITO, C.PROVINCIA AS PROVINCIA,
   c.departamento AS departamento, C.CUENTACOMPANIA,c.consultor AS consultor,row_number () over (partition by c.cuentacompania order by c.fechacreacion desc) rn
   FROM P_COMPANIA c
) where rn=1
   )B
   ON
   (
   FN_DECODIFICA_CUENTA(A.CUENTA)=B.CUENTACOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,codigocompaniaE=codigocompania,distritoE=distrito,
   provinciaE=provincia,departamentoE=departamento;

    COMMIT;

  --------------------------------------------------------------------------
   /*
   T7. ASIGNACIÓN EN FA_OCC_PRUEBAS DE CAMPOS INFORMATIVOS POR RAZON SOCIAL
   Se asigna los campos informativos en base a un cruce con P_COMPANIA por RAZON SOCIAL
   */
   --------------------------------------------------------------------------
  MERGE INTO
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE , t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE ,  t.CODIGOCOMPANIA AS
      codigocompaniaE , t.distrito AS
      DISTRITOE, T.PROVINCIA AS
      provinciaE, t.departamento AS departamentoE,T.codigocompania,T.RAZONSOCIAL

   FROM fa_occ_prueba t where t.codigocompania IS NULL
    AND mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
   )A
   USING(
   select * from

   (SELECT
    C.RUCCOMPANIA AS RUCCOMPANIA, C.TIPOCUENTA AS TIPOCUENTA,  C.CANALVENTA AS CANALVENTA, C.CONSULTOR AS CONSULTOR, C.DEALER AS DEALER, C.TIPODOCUMENTO AS TIPODOCUMENTO, C.SEGMENTO AS SEGMENTO, C.CODIGOCOMPANIA AS CODIGOCOMPANIA,
    C.PROVINCIA AS PROVINCIA, C.DISTRITO AS DISTRITO, C.DEPARTAMENTO AS DEPARTAMENTO,C.RAZONSOCIAL,ROW_NUMBER() OVER ( PARTITION BY C.RAZONSOCIAL ORDER BY C.FECHACREACION DESC) as rn
   FROM P_COMPANIA C )
   where rn=1
   )B
   ON
   (
    A.RAZONSOCIAL   =B.razonsocial
   )
   WHEN MATCHED THEN
   UPDATE SET ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   SEGMENTOE     =SEGMENTO ,CODIGOCOMPANIAE=CODIGOCOMPANIA,DISTRITOE=DISTRITO,
   provinciaE=provincia   ,departamentoE=departamento;

 --------------------------------------------------------------------------
   /*
   T8. ASIGNACIÓN EN FA_OCC_PRUEBAS DE CAMPO CANTIDAD3G POR CODIGOCOMPANIA
   Se asigna valor a cantidad 3g en base a un cruce con una vista de fotoequipos
   y pm_planes por codigo compania.
   */
   --------------------------------------------------------------------------
MERGE INTO
   (
   SELECT C.CANTIDAD3G AS motivoE,C.cuenta,C.codigocompania
   FROM fa_occ_prueba c
   WHERE mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo',         'Suspendido')
      AND b.product IN ('Non PTT Post','IN Post','HP PTT Post','Banda Ancha',         'Non PTT Prepago','IN Pre')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania     =B.codigocompania
   AND instr(A.cuenta,'.',1,3)=0
   AND A.cuenta NOT LIKE '1.%'
   )
   WHEN MATCHED THEN
   UPDATE SET
   motivoE = motivo ;

  --------------------------------------------------------------------------
   /*
   T9. ASIGNACIÓN EN FA_OCC_PRUEBAS DE CAMPO CANTIDAD2G POR CODIGOCOMPANIA
   Se asigna la cantidad2g en base a un cruce con una vista de fotoequipos
   y pm_planes por codigocompania
   */
   --------------------------------------------------------------------------
MERGE INTO
   (
   SELECT C.CANTIDAD2G AS motivoE , C.CUENTA,C.CODIGOCOMPANIA
   FROM fa_occ_prueba c --fa_occ_pruebas c
   WHERE mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
   )A
   USING
   (
    SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo',         'Suspendido')
      AND b.product IN ('iDen Post','iDen Pre')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
    A.codigocompania     =B.codigocompania
   AND instr(A.cuenta,'.',1,3)=0
   AND A.cuenta NOT LIKE '1.%'
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

  --------------------------------------------------------------------------
   /*
   T10. ASIGNACIÓN EN FA_OCC_PRUEBAS DE CAMPO CANTIDAD3G POR NUMEROCUENTARESPONSABLE
   Se asigna la cantidad3g en base a un cruce con una vista de fotoequipos
   y pm_planes por numerocuentaresponsable
   */
   --------------------------------------------------------------------------
MERGE INTO
   (
    SELECT C.CANTIDAD3G AS motivoE,C.cuenta
   FROM fa_occ_prueba c
    WHERE mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
   )A
   USING
   (
    SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs = b.c_plan
      WHERE a.estadocontrato                            IN ('Activo',         'Suspendido')
      AND b.product IN ('Non PTT Post','IN Post','HP PTT Post','Banda Ancha',         'Non PTT Prepago','IN Pre')
      GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
     A.cuenta = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

  --------------------------------------------------------------------------
   /*
   T11. ASIGNACIÓN EN FA_OCC_PRUEBAS DE CAMPO CANTIDAD2G POR NUMEROCUENTARESPONSABLE
   Se asigna la cantidad3g en base a un cruce con una vista de fotoequipos
   y pm_planes por numerocuentaresponsable
   */
   --------------------------------------------------------------------------
MERGE INTO
   (
   SELECT c.CANTIDAD2G AS motivoE,c.cuenta
   FROM fa_occ_prueba c
   WHERE mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
   )A
   USING
   (
    SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs = b.c_plan
      WHERE a.estadocontrato                            IN ('Activo',         'Suspendido')
      AND b.product IN ('iDen Post','iDen Pre')
      GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.cuenta = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

  --------------------------------------------------------------------------
   /*
   T12. ACTUALIZACION EN FA_OCC_PRUEBAS DE CAMPO CLASIFICACION
   Se actualiza el campo clasificacion en base a cantidad3g y cantidad2g
   */
   --------------------------------------------------------------------------
UPDATE fa_occ_prueba --fa_occ_pruebas
SET clasificacion  ='Mixto'
WHERE (CANTIDAD3G IS NOT NULL )
AND (CANTIDAD2G   IS NOT NULL )
AND mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO);

UPDATE fa_occ_prueba --fa_occ_pruebas
SET clasificacion  ='iDen'
WHERE (CANTIDAD3G IS NULL )
AND (CANTIDAD2G   IS NOT NULL )
AND mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO);

UPDATE fa_occ_prueba --fa_occ_pruebas
SET clasificacion  ='3G'
WHERE (CANTIDAD3G IS NOT NULL )
AND (CANTIDAD2G   IS NULL )
AND mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO);


  --------------------------------------------------------------------------
   /*
   T13. ACTUALIZACION EN FA_OCC_PRUEBAS DE CAMPO CODIGOCOMPANIA PARA RAZON SOCIAL NEXTEL
   Se actualiza el campo de codigo compania cuando la razon social contiene la palabra
   NEXTEL
   */
   --------------------------------------------------------------------------

  --------------------------------------------------------------------------
   /*
   T14. ASIGNACION EN FA_OCC_PRUEBAS DE CAMPOS INFORMATIVOS POR CODIGOCOMPANIA
   Se asigna datos a campos informativos en base a cruce con P_COMPANIA
   por codigocompania y con el campo de tipo de documento nulo
   */
   --------------------------------------------------------------------------

   MERGE INTO
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE ,  t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE ,  t.CODIGOCOMPANIA ,  t.distrito AS
      DISTRITOE, T.PROVINCIA AS   PROVINCIAE,
       t.departamento AS departamentoE,T.TIPODOCUMENTO

   FROM fa_occ_prueba t --fa_occ_pruebas t
   WHERE mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
   )A
   USING
   (
   SELECT
   c.ruccompania AS ruccompania, c.tipocuenta AS tipocuenta, c.canalventa AS canalventa,
   c.consultor AS consultor, c.dealer AS dealer,c.tipodocumento AS tipodocumento,
   C.SEGMENTO AS SEGMENTO, C.CODIGOCOMPANIA , C.PROVINCIA AS PROVINCIA,
   c.distrito AS distrito, c.departamento AS departamento
   FROM P_COMPANIA c
   )B
   ON
   (
   A.CODIGOCOMPANIA=B.CODIGOCOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,distritoE=distrito,
   provinciaE=provincia  ,departamentoE=departamento
   --,codigocompaniaE=codigocompania
   WHERE A.TIPODOCUMENTO IS NULL;




  --------------------------------------------------------------------------
   /*
   T15. ACTUALIZACION DE CAMPO TIPODOCUMENTO EN FA_OCC_PRUEBAS
   Se actualiza el campo tipodocumento en base al ruccompania
   */
   --------------------------------------------------------------------------

 UPDATE fa_occ_prueba SET tipodocumento = obtener_tipodoc(ruccompania)
 WHERE mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
   AND tipodocumento IS NULL;

 UPDATE fa_occ_prueba --fa_occ_pruebas
 SET tipodocumento=decode(tipodocumento,'DNI','DNI','RUC',DECODE(SUBSTR(RUCCOMPANIA,0,2),'20','RUC 20','RUC 10'))
 WHERE mes = sanho||smes AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO);
 COMMIT;

merge into
(select ciclo,cuenta from FA_OCC_PRUEBA where mes = sanho||smes AND CICLO=0) A
using (
select to_number(ciclo) as ciclo,cuentacompania from p_compania where cuentacompania is not null
) B
on (fn_decodifica_cuenta(a.cuenta)=b.cuentacompania)
WHEN MATCHED THEN
UPDATE set a.ciclo=b.ciclo;
commit;

update FA_OCC_PRUEBA set ciclo=1 where mes = sanho||smes AND CICLO=0;
commit;


    --PENALIDAD
     MERGE INTO fa_occ_prueba  A
     USING (SELECT codigocuentacompania, telefono, motivodesactivacion, fechadesactivacioncontrato
              FROM
                (SELECT codigocuentacompania, SUBSTR(telefono,-9) telefono, motivodesactivacion, fechadesactivacioncontrato
                     , row_number()OVER (PARTITION BY codigocuentacompania, SUBSTR(telefono,-9)
                                             ORDER BY fechadesactivacioncontrato desc) RN
                  FROM FA_OCC_MOTIV_DESACTIVACION )
             WHERE RN = 1 ) B
       ON (fn_decodifica_cuenta(A.cuenta) = B.codigocuentacompania  AND INSTR(A.descripcion, B.telefono) > 0)
     WHEN MATCHED THEN UPDATE SET A.penalidad_motivo_desact = B.motivodesactivacion
    WHERE A.denominacion = 'PENALIDADES'
      AND A.mes = sanho||smes
      AND A.CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
      AND INSTR(A.descripcion,'P.') = 0;
    COMMIT;

    MERGE INTO fa_occ_prueba  A
     USING (SELECT codigocuentacompania, telefono, motivodesactivacion, fechadesactivacioncontrato
              FROM
                (SELECT codigocuentacompania, SUBSTR(telefono,-9) telefono, motivodesactivacion, fechadesactivacioncontrato
                     , row_number()OVER (PARTITION BY SUBSTR(telefono,-9)
                                             ORDER BY fechadesactivacioncontrato desc) RN
                  FROM FA_OCC_MOTIV_DESACTIVACION )
             WHERE RN = 1 ) B
       ON (SUBSTR(TRIM(A.descripcion),-9) = B.telefono)--(fn_decodifica_cuenta(A.cuenta) = B.codigocuentacompania  AND INSTR(A.descripcion, B.telefono) > 0)
     WHEN MATCHED THEN UPDATE SET A.penalidad_motivo_desact = B.motivodesactivacion
    WHERE A.denominacion = 'PENALIDADES'
      AND A.mes = sanho||smes
      AND A.CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
      AND INSTR(A.descripcion,'P.') = 0
      AND A.penalidad_motivo_desact IS NULL;
    COMMIT;

     UPDATE fa_occ_prueba a
       SET penalidad_motivo_desact = 'Orden con Cargo al Recibo'
     WHERE A.denominacion = 'PENALIDADES'
       AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
       AND mes = sanho||smes
       AND INSTR(A.descripcion,'P.') > 0;
    COMMIT;


    --PROMOCIONES
    UPDATE fa_occ_prueba
       SET promocion_clasificacion = fn_fa_occ_promocion(descripcion)
     WHERE denominacion = 'PROMOCIONES'
       AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
       AND mes = sanho||smes;
    COMMIT;


 --------------------------------------------------------------------------
   /*
   T16. ELIMINACION DE LA DATA DEL MISMO PERIODO EN PROCESO
   */
   --------------------------------------------------------------------------

delete from FA_REPORTEOCC_RESUMEN2 --FA_REPORTEOCC_RESUMEN
where to_char(mes,'yyyymm')=(SANHO||SMES) and ciclo LIKE DECODE(SCICLO,'0','%%',SCICLO);

   --------------------------------------------------------------------------
   /*
   T16. INSERCION DE INFORMACION A LA TABLA RESUMEN DE OCC
   */
   --------------------------------------------------------------------------

 INSERT
INTO FA_REPORTEOCC_RESUMEN2
-- FA_REPORTEOCC_RESUMEN2
   (
      MES, CICLO, MONTO, CLASIFICACION, DENOMINACION, TIPODOCUMENTO,
      CANTIDAD, PROVINCIA, SEGMENTO, DEPARTAMENTO, NATURALACCOUNT,TIPO
   )
  select MES, CICLO, MONTO, CLASIFICACION, DENOMINACION, TIPODOCUMENTO,
      CANTIDAD, PROVINCIA, SEGMENTO, DEPARTAMENTO, NATURALACCOUNT,TIPO from  (
SELECT  to_date(SANHO  ||SMES,'yyyymm') mes,A.CICLO, SUM(ROUND(TO_NUMBER(monto),3)) MONTO,
NVL(   clasificacion,'N/A') clasificacion,denominacion, tipodocumento,COUNT(1)   CANTIDAD,
   CASE
      WHEN a.PROVINCIA='LIMA'
      OR a.PROVINCIA  ='CALLAO'
      THEN 'LIMA'
      WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
      THEN 'PROVINCIA'
      ELSE 'N/A'
   END provincia,NVL(A.SEGMENTO,'N/A') SEGMENTO,NVL(A.DEPARTAMENTO,'N/A')
   DEPARTAMENTO,NVL(C.TIPO,'N/A') NATURALACCOUNT,A.TIPO
FROM FA_OCC_prueba a
LEFT JOIN FA_GLCODES b        ON A.sncode         =b.descripcion
LEFT JOIN FA_NATURALACCOUNT c ON b.naturalaccount =c.naturalaccount
WHERE  a.mes = sanho||smes AND a.CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
GROUP BY  to_date(SANHO  ||SMES,'yyyymm') ,NVL(clasificacion,'N/A'),denominacion,tipodocumento,
   CASE
      WHEN a.PROVINCIA='LIMA'
      OR a.PROVINCIA  ='CALLAO'
      THEN 'LIMA'
      WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
      THEN 'PROVINCIA'
      ELSE 'N/A'
   END,A.SEGMENTO,NVL(A.SEGMENTO,'N/A'),NVL(A.DEPARTAMENTO,'N/A') ,NVL(C.TIPO,
   'N/A'),A.CICLO,A.TIPO
   );

   COMMIT;

END procesar_occs_y_ajustenr;

PROCEDURE procesar_baseimpresion
IS
BEGIN
-- PROPÓSITO:
--
--
-- HISTORIAL DE MODIFICACION
-- Usuario                              Fecha               Comentario
-- ----------                           ---------           ----------------------
-- VORTEGA                              13/03/2015           Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

-------------------------------------------------------------------------------
   /*
   T1. FORMATEO DEL CAMPO CUENTAS DE FA_BASEIMPRESION_BASEMES Y FA_BASEIMPRESION_MOTIVADOSMES
   Se da formato al campo cuentas de las tablas fa_baseimpresion_basemes y fa_baseimpresion_motivadosmes
   según el tipo de cuenta
   */
-------------------------------------------------------------------------------
   UPDATE fa_baseimpresion_basemes SET cuenta = REPLACE (cuenta, '''', '');
   UPDATE fa_baseimpresion_basemes
   SET cuenta = RPAD (cuenta, 10, '0')
   WHERE cuenta LIKE '1.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE fa_baseimpresion_basemes
   SET cuenta = RPAD (cuenta, 5, '0')
   WHERE cuenta LIKE '3.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE fa_baseimpresion_basemes
   SET cuenta = RPAD (cuenta, 6, '0')
   WHERE cuenta LIKE '4.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE fa_baseimpresion_basemes
   SET cuenta = RPAD (cuenta, 7, '0')
   WHERE cuenta LIKE '5.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE fa_baseimpresion_motivadosmes
   SET cuenta = RPAD (cuenta, 10, '0')
   WHERE cuenta LIKE '1.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE fa_baseimpresion_motivadosmes
   SET cuenta = RPAD (cuenta, 5, '0')
   WHERE cuenta LIKE '3.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE fa_baseimpresion_motivadosmes
   SET cuenta = RPAD (cuenta, 6, '0')
   WHERE cuenta LIKE '4.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE fa_baseimpresion_motivadosmes
   SET cuenta = RPAD (cuenta, 7, '0')
   WHERE cuenta LIKE '5.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;

-------------------------------------------------------------------------------
   /*
   T2. ACTUALIZACION DE CAMPOS INFORMATIVOS DE FA_BASEIMPRESION_BASEMES
   Se actualizan los campos informativos de la tabla de FA_BASEIMPRESION_BASEMES
   en base a cruce con P_COMPANIA por cuentacompania
   */
-------------------------------------------------------------------------------
/* UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.segmento AS segmentoe, c4.segmento AS segmento, c.consultor AS
      consultore, c4.consultor AS consultor, c.dealer AS dealere, c4.dealer AS
      dealer, c.canalventa AS canalventae, c4.canalventa AS canalventa,
      c.tipocuenta AS tipocuentae,c4.tipocuenta AS tipocuenta,c.tipopersona AS
      tipopersonae,c4.tipopersona AS tipopersona,c.tipodocumento AS
      tipodocumentoe, c4.tipodocumento,c.codigocompania AS codigocompaniae,
      c4.codigocompania AS codigocompania
   FROM fa_baseimpresion_basemes c, p_compania c4
   WHERE DECODE (INSTR (c.cuenta, '.', 1, 2), 0, c.cuenta, SUBSTR (c.cuenta, 1,
      INSTR (c.cuenta, '.', 1, 2) - 1)) = c4.cuentacompania
   )
SET segmentoe    = segmento, consultore = consultor, dealere = dealer, canalventae
                 = canalventa,tipocuentae=tipocuenta,tipopersonae=tipopersona,
   tipodocumentoe=tipodocumento,codigocompaniae=codigocompania;*/
/*VALIDADO 263,848*/
   MERGE INTO
   (
   SELECT c.segmento AS segmentoe,  c.consultor AS
      consultore,  c.dealer AS dealere,  c.canalventa AS canalventae,
      c.tipocuenta AS tipocuentae,c.tipopersona AS
      TIPOPERSONAE,C.TIPODOCUMENTO AS
      tipodocumentoe, c.codigocompania AS codigocompaniae,C.cuenta

   FROM fa_baseimpresion_basemes c
   )A
   USING
   (
   SELECT
    c4.segmento AS segmento, c4.consultor AS consultor, c4.dealer AS
      dealer, c4.tipocuenta AS tipocuenta, c4.canalventa AS canalventa,
      C4.TIPOPERSONA AS TIPOPERSONA,
      c4.tipodocumento, c4.codigocompania AS codigocompania,C4.cuentacompania
   FROM  p_compania c4
   )B
   ON
   (
    DECODE (INSTR (A.cuenta, '.', 1, 2), 0, A.cuenta, SUBSTR (A.cuenta, 1,
      INSTR (A.cuenta, '.', 1, 2) - 1)) = B.cuentacompania
   )
   WHEN MATCHED THEN
   UPDATE SET segmentoe    = segmento, consultore = consultor, dealere = dealer, canalventae = canalventa,tipocuentae=tipocuenta,tipopersonae=tipopersona,
   tipodocumentoe=tipodocumento,codigocompaniae=codigocompania;

-------------------------------------------------------------------------------
   /*
   T3. ACTUALIZACION DEL CODIGOCOMPANIA EN FA_BASEIMPRESION_BASEMES
   Se actualiza el codigo compania de la tabla FA_BSEIMPRESION_BASEMES
   en base a un cruce con la tabla P_COMPANIA por razonsocial.
   */
-------------------------------------------------------------------------------
  /*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.codigocompania AS motivoE , c4.codigocompania AS motivo
   FROM FA_BASEIMPRESION_BASEMES c, p_compania c4
   WHERE c.RAZONSOCIAL  =c4.RAZONSOCIAL
   AND C.codigocompania IS NULL
   )
SET motivoE=motivo;*/
/*VALIDADO 0*/
MERGE INTO
   (
   SELECT c.codigocompania AS motivoE,C.RAZONSOCIAL,C.codigocompania   FROM FA_BASEIMPRESION_BASEMES c
   )A
   USING
   (
   select razonsocial,codigocompania as motivo from (
   select razonsocial,codigocompania,row_number () over (partition by razonsocial order by codigocompania desc) as rn from p_compania where tipocompania <> 'Prospecto'
   ) where rn=1
   )B
   ON
   (
   A.RAZONSOCIAL  =B.RAZONSOCIAL
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE=motivo;

-------------------------------------------------------------------------------
   /*
   T4. ACTUALIZACION DE CAMPOS INFORMATIVOS DE FA_BASEIMPRESION_BASEMES
   Se actualizan los campos informativos de la tabla de FA_BASEIMPRESION_BASEMES
   en base a cruce con P_COMPANIA por codigocompania
   */
-------------------------------------------------------------------------------
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.segmento AS segmentoe, c4.segmento AS segmento, c.consultor AS
      consultore, c4.consultor AS consultor, c.dealer AS dealere, c4.dealer AS
      dealer, c.canalventa AS canalventae, c4.canalventa AS canalventa,
      c.tipocuenta AS tipocuentae,c4.tipocuenta AS tipocuenta,c.tipopersona AS
      tipopersonae,c4.tipopersona AS tipopersona,c.tipodocumento AS
      tipodocumentoe, DECODE(LENGTH(c4.ruccompania),8,'DNI',11,'RUC','-') AS
      tipodocumento
   FROM fa_baseimpresion_basemes c, p_compania c4
   WHERE C.CODIGOCOMPANIA = c4.CODIGOCOMPANIA
   AND C.TIPODOCUMENTO   IS NULL
   )
SET segmentoe    = segmento, consultore = consultor, dealere = dealer, canalventae
                 = canalventa,tipocuentae=tipocuenta,tipopersonae=tipopersona,
   tipodocumentoe=tipodocumento;*/
/*VALIDADO 0*/
   MERGE INTO
   (
    SELECT c.segmento AS segmentoe, c.consultor AS
      consultore,  c.dealer AS dealere,  c.canalventa AS canalventae,
      c.tipocuenta AS tipocuentae,c.tipopersona AS
      TIPOPERSONAE,C.TIPODOCUMENTO AS
      tipodocumentoe,C.TIPODOCUMENTO,C.CODIGOCOMPANIA
   FROM fa_baseimpresion_basemes c
   )A
   USING
   (
   SELECT
    c4.segmento AS segmento, c4.consultor AS consultor, c4.dealer AS
      dealer, c4.canalventa AS canalventa, c4.tipocuenta AS tipocuenta,
      C4.TIPOPERSONA AS TIPOPERSONA, DECODE(LENGTH(C4.RUCCOMPANIA),8,'DNI',11,'RUC','-') AS
      tipodocumento,C4.CODIGOCOMPANIA
   FROM  p_compania c4
   )B
   ON
   (
   A.CODIGOCOMPANIA = B.CODIGOCOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET segmentoe    = segmento, consultore = consultor, dealere = dealer, canalventae    = canalventa,tipocuentae=tipocuenta,tipopersonae=tipopersona,
   tipodocumentoe=tipodocumento;

-------------------------------------------------------------------------------
   /*
   T5. ACTUALIZACION DEL CAMPO DETALLEMOTIVO Y MOTIVO DE FA_BASEIMPRESION_MOTIVADOSMES
   Se actualizan los campos detallemotivo y motivo de la tabla FA_BASEIMPRESION_MOTIVADOSMES
   */
-------------------------------------------------------------------------------

   UPDATE fa_baseimpresion_motivadosmes
   SET detallemotivo = SUBSTR (motivo, INSTR (motivo, '-', 1, 1) - LENGTH (
      motivo))
   WHERE motivo LIKE 'Direccion Errada%';
   UPDATE fa_baseimpresion_motivadosmes
   SET detallemotivo = SUBSTR (motivo, INSTR (motivo, '-', 1, 2) - LENGTH (
      motivo))
   WHERE motivo LIKE 'Direccion Incompleta-Inexacta%';
   UPDATE fa_baseimpresion_motivadosmes
   SET detallemotivo = SUBSTR (motivo, INSTR (motivo, '(', 1, 1) - LENGTH (
      motivo), LENGTH (motivo)                                   - INSTR (
      motivo, '(', 1, 1)                                         - 1)
   WHERE motivo LIKE 'DIREC. ERRADA%';
   UPDATE fa_baseimpresion_motivadosmes
   SET motivo = 'Direccion Incompleta'
   WHERE UPPER (motivo) LIKE '%INCOMPLETA%';
   UPDATE fa_baseimpresion_motivadosmes
   SET motivo = 'Direccion Errada'
   WHERE UPPER (motivo) LIKE '%ERRADA%';
   UPDATE fa_baseimpresion_motivadosmes SET motivo = TRIM (motivo);

 -------------------------------------------------------------------------------
   /*
   T6. ACTUALIZACION DE CAMPOS MOTIVO, DETALLEMOTIVO Y ESMOTIVADO DE FA_BASEIMPRESION_BASEMES
   Se actualizan los campos motivo y detallemotivo de la tabla FA_BASEIMPRESION_BASEMES
   en base a un cruce con la tabla FA_BASEIMPRESION_MOTIVADOSMES por recibo. Además se
   actualiza el campo esmotivado con 'X' si es que el campo motivo no es nulo.
   */
-------------------------------------------------------------------------------
   /*UPDATE
      /*+BYPASS_UJVC*//*
      (
      SELECT c.motivo AS motivoe, c4.motivo AS motivo, c.detallemotivo AS
         detallemotivoe, c4.detallemotivo AS detallemotivo
      FROM fa_baseimpresion_basemes c, fa_baseimpresion_motivadosmes c4
      WHERE c.recibo = c4.recibo
      )
   SET motivoe = motivo, detallemotivoe = detallemotivo;*/
   /*VALIDADO 0*/
  MERGE INTO
   (
      SELECT C.MOTIVO AS MOTIVOE,  C.DETALLEMOTIVO AS
         detallemotivoe,C.ESMOTIVADO as fechae,C.recibo
      FROM fa_baseimpresion_basemes c
   )A
   USING
   (
   SELECT
   c4.motivo AS motivo, c4.detallemotivo AS detallemotivo,'X' as fecha,C4.recibo
   from fa_baseimpresion_motivadosmes c4
   )B
   ON
   (
    A.recibo = B.recibo
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoe = motivo, detallemotivoe = detallemotivo,fechae=fecha;





 -------------------------------------------------------------------------------
   /*
   T7. ACTUALIZACION DE CAMPO CANTIDAD3G Y TIENE3G DE FA_BASEIMPRESION_BASEMES
   Se actualiza el campo cantidad3g en base a vista de fotoequipos y pm_planes.
   Además actualiza el campo tiene3g si el campo cantidad3g no es nulo.
   */
-------------------------------------------------------------------------------
 /*  UPDATE
      /*+BYPASS_UJVC*//*
      (
      SELECT c.cantidad3g AS cantidad3ge, c4.cnt3g AS cantidad3g
      FROM fa_baseimpresion_basemes c, (SELECT numerocuentaresponsable, COUNT (
            *) cnt3g
         FROM
            (SELECT a.numerocuentaresponsable, b.product, b.grupo
            FROM fotoequipos a
            LEFT JOIN pm_planes b ON TO_CHAR ( a.codigoplantarifariobscs) =
               b.c_plan
            )
         WHERE grupo LIKE '%3G%'
         OR grupo           = 'Internet Nextel'
         AND product not in ('iDen Pre','IN Pre','Non PTT Prepago')
         GROUP BY numerocuentaresponsable
         ) c4
      WHERE c.cuenta = c4.numerocuentaresponsable
      )
   SET cantidad3ge = cantidad3g;*/
   /*VALIDADO 47,125*/
    MERGE INTO
   (
    SELECT c.cantidad3g AS cantidad3ge,C.cuenta
      FROM fa_baseimpresion_basemes c
   )A
   USING
   (
    SELECT numerocuentaresponsable, COUNT (
            *) cantidad3g
         FROM
            (SELECT a.numerocuentaresponsable, b.product, b.grupo
            FROM fotoequipos a
            LEFT JOIN pm_planes b ON TO_CHAR ( a.codigoplantarifariobscs) =
               b.c_plan
            )
         WHERE grupo LIKE '%3G%'
         OR grupo           = 'Internet Nextel'
         AND product not in ('iDen Pre','IN Pre','Non PTT Prepago')
         GROUP BY numerocuentaresponsable
   )B
   ON
   (
   A.cuenta = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET cantidad3ge = cantidad3g;


-------------------------------------------------------------------------------
   /*
   T8. ACTUALIZACION DE CAMPO CANTIDAD2G Y TIENE2G DE FA_BASEIMPRESION_BASEMES
   Se actualiza el campo cantidad2g en base a vista de fotoequipos y pm_planes.
   Además actualiza el campo tiene2g si el campo cantidad3g no es nulo.
   */
-------------------------------------------------------------------------------
 /*  UPDATE
      /*+BYPASS_UJVC*//*
      (
      SELECT c.cantidad2g AS cantidad2ge, c4.cnt2g AS cantidad2g
      FROM fa_baseimpresion_basemes c, (SELECT numerocuentaresponsable, COUNT (
            *) cnt2g
         FROM
            (SELECT a.numerocuentaresponsable, b.product, b.grupo
            FROM fotoequipos a
            LEFT JOIN pm_planes b ON TO_CHAR ( a.codigoplantarifariobscs) =
               b.c_plan
            )
         WHERE grupo NOT LIKE '%3G%'
         AND grupo         <> 'Internet Nextel'
         AND product not in ('iDen Pre','IN Pre','Non PTT Prepago')
         /*g_osiptel NOT IN ('Prepago', 'IN Prepago')*//*
         GROUP BY numerocuentaresponsable
         ) c4
      WHERE c.cuenta = c4.numerocuentaresponsable
      )
   SET cantidad2ge = cantidad2g;*/
   /*validado 4,637*/
     MERGE INTO
   (
   SELECT C.CANTIDAD2G AS CANTIDAD2GE,c.cuenta
      FROM fa_baseimpresion_basemes c
   )A
   USING
   (
    SELECT numerocuentaresponsable, COUNT (
            *) cantidad2g
         FROM
            (SELECT a.numerocuentaresponsable, b.product, b.grupo
            FROM fotoequipos a
            LEFT JOIN pm_planes b ON TO_CHAR ( a.codigoplantarifariobscs) =
               b.c_plan
            )
         WHERE grupo NOT LIKE '%3G%'
         AND grupo         <> 'Internet Nextel'
         AND product not in ('iDen Pre','IN Pre','Non PTT Prepago')
         /*g_osiptel NOT IN ('Prepago', 'IN Prepago')*/
         GROUP BY numerocuentaresponsable
   )B
   ON
   (
   A.cuenta = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET cantidad2ge = cantidad2g;




-------------------------------------------------------------------------------
   /*
   T9. ACTUALIZACION DE CAMPOS ESTADO, CONSULTOR Y CANALVENTA DE FA_BASEIMPRESION_MOTIVADOSMES
   Se actualizan los campos estado, consultor y canal veta de la tabla
   fa_baseimpresion_motivadosmes en base a un cruce con FA_BASEIMPRESION_BASEMES
   por recibo
   */
-------------------------------------------------------------------------------
   /*UPDATE
      /*+BYPASS_UJVC*//*
      (
      SELECT c.estado AS estadoe, c4.estado AS estado, c.consultor AS
         consultore, c4.consultor AS consultor, c.canalventa AS canalventae,
         c4.canalventa AS canalventa
      FROM fa_baseimpresion_motivadosmes c, fa_baseimpresion_basemes c4
      WHERE c.recibo = c4.recibo
      )
   SET estadoe = estado, consultore = consultor, canalventae = canalventa;*/
/*validado 0*/
   MERGE INTO
   (
   SELECT c.estado AS estadoe, c.consultor AS
         consultore,  c.canalventa AS canalventae,c.recibo
      FROM fa_baseimpresion_motivadosmes c
   )A
   USING
   (
   SELECT
    c4.estado AS estado, c4.consultor AS consultor, c4.canalventa AS canalventa,c4.recibo
   FROM fa_baseimpresion_basemes c4
   )B
   ON
   (
   A.recibo = B.recibo
   )
   WHEN MATCHED THEN
   UPDATE SET estadoe = estado, consultore = consultor, canalventae = canalventa;

-------------------------------------------------------------------------------
   /*
   T10. ACTUALIZACION DE CAMPO CANTIDADNEXTELPLUS DE FA_BASEIMPRESION_BASEMES
   Se actualiza el campo cantidadnextelplus de la tabla FA_BASEIMPRESION_BASEMES
   en vase a cruce con vista de fotoequipos por cuenta-numerocuentaresponsable
   */
-------------------------------------------------------------------------------
  /* UPDATE
      /*+BYPASS_UJVC*//*
      (
      SELECT c.cantidadnextelplus AS cantidadnextelpluse, c4.cnt AS
         cantidadnextelplus
      FROM fa_baseimpresion_basemes c, (SELECT numerocuentaresponsable, COUNT (
            *) cnt
         FROM fotoequipos
         WHERE plantarifario LIKE '%Nextel+%'
         AND estadocontrato IN ('Activo', 'Suspendido')
         GROUP BY numerocuentaresponsable
         ) c4
      WHERE c.cuenta = c4.numerocuentaresponsable
      )
   SET cantidadnextelpluse = cantidadnextelplus;*/
   /*validado 45*/
    MERGE INTO
   (
    SELECT c.cantidadnextelplus AS cantidadnextelpluse,c.cuenta
      FROM fa_baseimpresion_basemes c
   )A
   USING
   (
    SELECT numerocuentaresponsable, COUNT (
            *) cantidadnextelplus
         FROM fotoequipos
         WHERE plantarifario LIKE '%Nextel+%'
         AND estadocontrato IN ('Activo', 'Suspendido')
         GROUP BY numerocuentaresponsable
   )B
   ON
   (
   A.cuenta = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET cantidadnextelpluse = cantidadnextelplus;

  /*
   INSERT
   INTO FA_BASEIMPRESIONTOTAL
   (
   CUENTA, RECIBO, RAZONSOCIAL, DIRECCION, DISTRITO, PROVINCIA, DEPARTAMENTO,
   IMPORTE, ESTADO,
   MES , CICLO, REFERENCIA, MOTIVO, ESMOTIVADO, TIENE3G, CANTIDAD3G, TIENE2G,
   CANTIDAD2G,
   SEGMENTO, CANTIDADNEXTELPLUS, CONSULTOR, DEALER, CANALVENTA,tipopersona,tipodocumento,tipocuenta
   )
   SELECT CUENTA, RECIBO, RAZONSOCIAL, DIRECCION, DISTRITO, PROVINCIA,
   DEPARTAMENTO, IMPORTE, ESTADO
   , MES, CICLO, REFERENCIA, MOTIVO, ESMOTIVADO, TIENE3G, CANTIDAD3G, TIENE2G,
   CANTIDAD2G,
   SEGMENTO, CANTIDADNEXTELPLUS, CONSULTOR, DEALER, CANALVENTA,tipopersona,tipodocumento,tipocuenta
   FROM FA_BASEIMPRESION_BASEMES ;
   INSERT
   INTO FA_BASEMOTIVADOSTOTAL
   (
   CUENTA, RECIBO, MOTIVO, MES, CICLO, CANALVENTA, CONSULTOR, ESTADO,DISTRITO,
   DEPARTAMENTO
   )
   SELECT CUENTA, RECIBO, MOTIVO, MES, CICLO, CANALVENTA, CONSULTOR, ESTADO,
   DISTRITO,DEPARTAMENTO
   FROM FA_BASEIMPRESION_MOTIVADOSMES ;


/*
INSERT
INTO FA_RESUMEN_RECHAZADOSCVENTA
   (
      GROSS, RECHAZADOS, CONSULTOR, DEALER, MES, CANALVENTA, MOTIVO
   )
SELECT SUM(GROSS) GROSS, SUM(RECHAZADOS) RECHAZADOS ,B.CONSULTOR,B.DEALER,B.MES, B.CANALVENTA , UPPER(B.MOTIVO) MOTIVO
FROM
(SELECT COUNT(NVL(a.RECIBO,0)) GROSS, a.MOTIVO, A.MES, a.CICLO, a.CANALVENTA,
A.CONSULTOR, A.ESTADO, a.DISTRITO, a.DEPARTAMENTO, A.DEALER,SUM(DECODE(a.esmotivado,'X',1,0))
RECHAZADOS FROM FA_BASEIMPRESIONTOTAL A
--WHERE A.estado IN ('LIMA NUEVO','PROV NUEVO') and
a.mes='Jul-13'
GROUP BY a.MOTIVO, A.MES, a.CICLO, a.CANALVENTA,
   A.CONSULTOR, A.ESTADO, a.DISTRITO, a.DEPARTAMENTO, a.dealer)  B
GROUP BY B.CONSULTOR,B.DEALER,B.MES,B.CANALVENTA,UPPER(B.MOTIVO)
ORDER BY  CONSULTOR , to_date(MES,'mon-yy', 'nls_date_language=spanish' );
 */
   COMMIT;
END;
PROCEDURE procesarreclamosdelivery(
      periodo VARCHAR2)
IS
-- PROPÓSITO:
--
--
-- HISTORIAL DE MODIFICACION
-- Usuario                   Fecha           Comentario
-- ----------                ---------       ----------------------
-- VORTEGA                   13/03/2015      Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

-------------------------------------------------------------------------------
   /*
   T1. SE ALMACENA EN CURSOR LOS COD_INCIDENTE Y UN CONTADOR
   Se genera una vista de fa_reclamosdelivery_incidentes con cada uno de los cod_incidentes
   y un contador. Solo se guardarán en el cursor aquellos cod_incidentes con más de 1 incidencia.
   */
-------------------------------------------------------------------------------
   CURSOR delivery
   IS
      SELECT cod_incidente, COUNT (*)
      FROM fa_reclamosdelivery_incidentes
      GROUP BY cod_incidente
      HAVING COUNT (*) > 1;
   c_linea delivery%ROWTYPE;
BEGIN
--------------------------------------------------------------------------
   /*
   T2. ACTUALIZACION DEL CAMPO INDREINGRESO DE LA TABLA FA_RECLAMOSDELIVERY_INCIDENTES
   Se asigna al campo indreingreso "Original" si es que existe solo un registro
   con el codigo de incidente en la misma tabla.
   */
--------------------------------------------------------------------------
   UPDATE fa_reclamosdelivery_incidentes a
   SET a.indreingreso = 'Original'
   WHERE (SELECT COUNT (1)
      FROM fa_reclamosdelivery_incidentes b
      WHERE b.cod_incidente = a.cod_incidente) = 1;

--------------------------------------------------------------------------
   /*
   T3. ACTUALIZACION DEL CAMPO INDREINGRESO DE LA TABLA FA_RECLAMOSDELIVERY_INCIDENTES
   Se recorre cada registro del cursor anteriormente guardado para cruzarlos con
   la tabla FA_RECLAMOSDELIVERY_INCIDENTES con el mismo cod_incidente para setear el campo
   indreingreso como 'Original' o 'Reingreso'
   */
--------------------------------------------------------------------------
   OPEN delivery;
   LOOP
      FETCH delivery INTO c_linea;
      EXIT
   WHEN delivery%NOTFOUND;
      UPDATE fa_reclamosdelivery_incidentes a
      SET a.indreingreso         = 'Original'
      WHERE a.cod_incidente      = c_linea.cod_incidente
      AND a.fecha_reci_incidente =
         (SELECT fecha_reci_incidente
         FROM
            (SELECT fecha_reci_incidente
            FROM fa_reclamosdelivery_incidentes
            WHERE cod_incidente = c_linea.cod_incidente
            ORDER BY TO_DATE (fecha_reci_incidente, 'DD-MON-YY') ASC
            )
         WHERE ROWNUM < 2
         );
      UPDATE fa_reclamosdelivery_incidentes
      SET indreingreso    = 'Reingreso'
      WHERE cod_incidente = c_linea.cod_incidente
      AND indreingreso   IS NULL;
   END LOOP;
   CLOSE delivery;
   --------------------------------------------------------------------------
   /*
   T4. ASIGNACION DEL CAMPO MESFACTURACION DE LA TABLA FA_RECLAMOSDELIVERY_INCIDENTES
   Se asigna mesfacturacion dependiendo del ciclo y la fecha
   de ingreso (puede ser el mismo mes o el mes anterior)
   */
--------------------------------------------------------------------------
   UPDATE fa_reclamosdelivery_incidentes
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '12'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
         ELSE TO_CHAR ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), 'YYYYMM')
      END)
   WHERE ciclo = '04';
   UPDATE fa_reclamosdelivery_incidentes
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '19'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
         ELSE TO_CHAR ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), 'YYYYMM')
      END)
   WHERE ciclo = '03';
   UPDATE fa_reclamosdelivery_incidentes
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '26'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
         ELSE TO_CHAR ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), 'YYYYMM')
      END)
   WHERE ciclo = '05';
   UPDATE fa_reclamosdelivery_incidentes
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '04'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -2), 'YYYYMM')
         ELSE TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
      END)
   WHERE ciclo = '01';

--------------------------------------------------------------------------
   /*
   T5. ASIGNACION DEL CAMPO PROVINCIA2 DE LA TABLA fa_reclamosdelivery_incidentes
   Se asigna provincia2 dependiendo si el campo provincia es 'LIMA' o 'CALLAO' o no
   */
--------------------------------------------------------------------------

   UPDATE fa_reclamosdelivery_incidentes
   SET provincia2   = 'LIMA'
   WHERE provincia IN ('LIMA', 'CALLAO');
   UPDATE fa_reclamosdelivery_incidentes
   SET provincia2       = 'PROVINCIA'
   WHERE provincia NOT IN ('LIMA', 'CALLAO');

--------------------------------------------------------------------------
   /*
   T6. LIMPIEZA DE FA_RECLAMOSDELIVERY_RESUMEN PARA REPROCESO
   Se elimina los registro cuyo mesfacturacion sea igual al periodo en proceso
   */
--------------------------------------------------------------------------
   DELETE FROM fa_reclamosdelivery_resumen WHERE mesfacturacion = periodo;


--------------------------------------------------------------------------
   /*
   T7. INGRESO DE REGISTROS DEL PERIODO EN PROCESO A FA_RECLAMOSDELIVERY_RESUMEN
   Se inserta en FA_RECLAMOSDELIVERY_RESUMEN una vista de la baase de impresion total y
   de fa_reclamosdelivery_incidentes del mes
   */
--------------------------------------------------------------------------
   INSERT
   INTO fa_reclamosdelivery_resumen
      (
         cantidadreclamos, region, mesfacturacion, ciclo,tipocuenta,tipopersona,tipodocumento,cantidadrecibos,cantidadenviados
      )
   SELECT d.cantidad,'LIMA',TO_CHAR ( TO_DATE (c.mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM') MES,'0'||c.ciclo,c.tipocuenta,c.tipopersona,
   c.tipodocumento,c.cantidad recibos,u.cantidad cantidadenviados
FROM
   (SELECT COUNT (recibo) cantidad, mes, ciclo,tipopersona,tipocuenta,
      tipodocumento
   FROM fa_baseimpresiontotal
   WHERE estado IN ('LIMA NUEVO', 'LIMA ANTIGUO','LIMA NEGATIVOS') and  TO_CHAR ( TO_DATE (mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')=periodo
   GROUP BY mes, ciclo,tipopersona,tipocuenta,tipodocumento
   ) c
LEFT JOIN
   (SELECT COUNT (a.cod_incidente) cantidad, a.provincia2 region,
      a.mesfacturacion, a.ciclo,b.tipocuenta,b.tipopersona,DECODE(LENGTH(
      b.ruccompania),8,'DNI',11,'RUC','-') tipodocumento FROM
      fa_reclamosdelivery_incidentes A
   LEFT JOIN P_COMPANIA B ON A.CUENTA=b.cuentacompania
   WHERE a.indreingreso              = 'Original'
   AND a.provincia2                  ='LIMA'
   AND a.mesfacturacion              = periodo
   GROUP BY a.provincia2, a.mesfacturacion, a.ciclo,b.tipocuenta,b.tipopersona,
      DECODE(LENGTH(b.ruccompania),8,'DNI',11,'RUC','-')
   ) d ON d.mesfacturacion = TO_CHAR ( TO_DATE (c.mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')

AND d.ciclo = ('0'
   || c.ciclo)
AND c.tipopersona  =d.tipopersona
AND c.tipodocumento=d.tipodocumento
AND c.tipocuenta   =d.tipocuenta

left join (SELECT COUNT (recibo) cantidad, mes, ciclo,tipopersona,tipocuenta,
      tipodocumento
   FROM fa_baseimpresiontotal
   WHERE estado IN ('LIMA NUEVO', 'LIMA ANTIGUO','LIMA NEGATIVOS') and  TO_CHAR ( TO_DATE (mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')=periodo and esretencion is null
   GROUP BY mes, ciclo,tipopersona,tipocuenta,tipodocumento
   ) u

ON u.mes = c.mes

AND u.ciclo = c.ciclo
AND c.tipopersona  =u.tipopersona
AND c.tipodocumento=u.tipodocumento
AND c.tipocuenta   =u.tipocuenta

;

    INSERT
   INTO fa_reclamosdelivery_resumen
      (
         cantidadreclamos, region, mesfacturacion, ciclo,tipocuenta,tipopersona,tipodocumento,cantidadrecibos,cantidadenviados
      )
   SELECT d.cantidad,'PROVINCIA',TO_CHAR ( TO_DATE (c.mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM') MES,'0'||c.ciclo,c.tipocuenta,c.tipopersona,
   c.tipodocumento,c.cantidad recibos,u.cantidad retenidos
FROM
   (SELECT COUNT (recibo) cantidad, mes, ciclo,tipopersona,tipocuenta,
      tipodocumento
   FROM fa_baseimpresiontotal
   WHERE estado  IN ('PROV NUEVO', 'PROV ANTIGUO','PROV NEGATIVOS') and  TO_CHAR ( TO_DATE (mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')=periodo
   GROUP BY mes, ciclo,tipopersona,tipocuenta,tipodocumento
   ) c
LEFT JOIN
   (SELECT COUNT (a.cod_incidente) cantidad, a.provincia2 region,
      a.mesfacturacion, a.ciclo,b.tipocuenta,b.tipopersona,DECODE(LENGTH(
      b.ruccompania),8,'DNI',11,'RUC','-') tipodocumento FROM
      fa_reclamosdelivery_incidentes A
   LEFT JOIN P_COMPANIA B ON A.CUENTA=b.cuentacompania
   WHERE a.indreingreso              = 'Original'
   AND a.provincia2                  ='PROVINCIA'
   AND a.mesfacturacion              = periodo
   GROUP BY a.provincia2, a.mesfacturacion, a.ciclo,b.tipocuenta,b.tipopersona,
      DECODE(LENGTH(b.ruccompania),8,'DNI',11,'RUC','-')
   ) d ON d.mesfacturacion = TO_CHAR ( TO_DATE (c.mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')

AND d.ciclo = ('0'
   || c.ciclo)
AND c.tipopersona  =d.tipopersona
AND c.tipodocumento=d.tipodocumento
AND c.tipocuenta   =d.tipocuenta
LEFT JOIN  (SELECT COUNT (recibo) cantidad, mes, ciclo,tipopersona,tipocuenta,
      tipodocumento
   FROM fa_baseimpresiontotal
   WHERE estado  IN ('PROV NUEVO', 'PROV ANTIGUO','PROV NEGATIVOS') and  TO_CHAR ( TO_DATE (mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')=periodo and esretencion is null
   GROUP BY mes, ciclo,tipopersona,tipocuenta,tipodocumento
   ) U ON u.mes = c.mes

AND u.ciclo = c.ciclo
AND c.tipopersona  =u.tipopersona
AND c.tipodocumento=u.tipodocumento
AND c.tipocuenta   =u.tipocuenta;

   /*
   UPDATE
      /*+BYPASS_UJVC*/
  /*    (
      SELECT c.cantidadrecibos AS cantidade, c4.cantidad AS cantidad
      FROM fa_reclamosdelivery_resumen c, (SELECT COUNT (recibo) cantidad, mes,
            ciclo,tipopersona,tipocuenta,tipodocumento
         FROM fa_baseimpresiontotal
         WHERE estado IN ('LIMA NUEVO', 'LIMA ANTIGUO')
         GROUP BY mes, ciclo,tipopersona,tipocuenta,tipodocumento
         ) c4
      WHERE c.mesfacturacion = TO_CHAR ( TO_DATE (c4.mes, 'MON-YY',
         'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')
      AND c.ciclo = ('0'
         || c4.ciclo)
      AND c.region = 'LIMA' and c.tipopersona=c4.tipopersona and c.tipodocumento=c4.tipodocumento and c.tipocuenta=c4.tipocuenta
      )
   SET cantidade = cantidad;
   UPDATE
      /*+BYPASS_UJVC*/
  /*    (
      SELECT c.cantidadrecibos AS cantidade, c4.cantidad AS cantidad
      FROM fa_reclamosdelivery_resumen c, (SELECT COUNT (recibo) cantidad, mes,
            ciclo,tipopersona,tipocuenta,tipodocumento
         FROM fa_baseimpresiontotal
         WHERE estado IN ('PROV NUEVO', 'PROV ANTIGUO')
         GROUP BY mes, ciclo,tipopersona,tipocuenta,tipodocumento
         ) c4
      WHERE c.mesfacturacion = TO_CHAR ( TO_DATE (c4.mes, 'MON-YY',
         'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')
      AND c.ciclo = ('0'
         || c4.ciclo)
      AND c.region = 'PROVINCIA' and c.tipopersona=c4.tipopersona and c.tipodocumento=c4.tipodocumento and c.tipocuenta=c4.tipocuenta
      )
   SET cantidade = cantidad;*/
-------------------------------------------------------------------------------
   /*
   T8. SE LIMPIA REGISTROS DE FA_RECLAMOSDELIVERY_INCIDENTES FUERA DE PERIODO DE PROCESO
   Se eliminan los registros de la tabla fa_reclamosdelivery_incidentes con el mesfacturacion
   diferente al periodo en proceso.
   */
-------------------------------------------------------------------------------
   DELETE FROM fa_reclamosdelivery_incidentes WHERE mesfacturacion <> periodo;
   COMMIT;
END;
PROCEDURE procesaoccpromosmanuales(
      sciclo VARCHAR2)
IS
BEGIN
   UPDATE fa_promosmanuales_occ SET ciclo = sciclo;
   UPDATE fa_promosmanuales_occ a
   SET promocion =
      (SELECT b.promocion
      FROM fa_claves_occpromosmanuales b
      WHERE a.descripcion LIKE b.palabraclave
         || '%'
      );
   UPDATE fa_promosmanuales_occ a
   SET a.bloque =
      (SELECT b.bloque
      FROM fa_claves_occpromosmanuales b
      WHERE a.descripcion LIKE b.palabraclave
         || '%'
      );
   UPDATE fa_promosmanuales_occ a
   SET a.nextel      = SUBSTR (TRIM (a.descripcion), -9, 9)
   WHERE a.promocion = 'LIBRE i0 IC';
   /*UPDATE
      /*+BYPASS_UJVC*//*
      (
      SELECT c.fechaactivacion AS fechaactivacione, c4.fechaactivacioncontrato
         AS fechaactivacion
      FROM fa_promosmanuales_occ c, fotoequipos c4
      WHERE c.nextel = c4.telefono
      )
   SET fechaactivacione = fechaactivacion;*/
   /* 985*/-->/*981*/ --CORREGIDO
     MERGE INTO
   (
   SELECT  c.nextel,c.fechaactivacion AS fechaactivacione
      FROM fa_promosmanuales_occ c
   )A
   USING
   (
   select telefono,fechaactivacion from (
   SELECT c4.fechaactivacioncontrato AS fechaactivacion,c4.telefono,row_number () over (partition by c4.telefono order by c4.fechaactivacioncontrato desc) rn
   FROM  fotoequipos c4
   ) where rn=1
   )B
   ON
   (
   A.nextel = B.telefono
   )
   WHEN MATCHED THEN
   UPDATE SET fechaactivacione = fechaactivacion;

   UPDATE fa_promosmanuales_occ
   SET promocion = promocion
      || ' - '
      || TO_CHAR (fechaactivacion, 'MONTH', 'nls_date_language=SPANISH')
   WHERE promocion = 'LIBRE i0 IC';
END procesaoccpromosmanuales;

PROCEDURE procesarresumenbasemaildiaria(
      fecha DATE)
IS
BEGIN
--Grafica 1--
   DELETE
   FROM fa_resumenbaserecibomail
   WHERE TO_CHAR (mes, 'mmyyyy') = TO_CHAR (sysdate - 1, 'mmyyyy');/*AQUI*/
   DELETE
   FROM fa_resumenbasemail_postpago
   WHERE TO_CHAR (mes, 'mmyyyy') = TO_CHAR (sysdate - 1, 'mmyyyy');/*AQUI*/
   DELETE
   FROM fa_afiliadosmail_diario
   WHERE tipodocumento NOT IN ('DNI', 'RUC')
   OR tipodocumento        IS NULL;
   DELETE
   FROM FA_AFILIADOSMAIL_DIARIO a
   WHERE a.cargo = 'ENCARGADO-RECIBO ELECT. Y FISICO'
   AND EXISTS
      (SELECT 1
      FROM FA_AFILIADOSMAIL_DIARIO b
      WHERE a.codigocompania = b.codigocompania
      AND b.base             = '2'
      AND b.cargo            = 'ENCARGADO-RECIBO ELECTRONICO'
      )
   AND a.base = '2';
   UPDATE fa_afiliadosmail_diario
   SET cargo   = 'RECIBO ELECTRONICO Y FISICO'
   WHERE cargo = 'ENCARGADO-RECIBO ELECT. Y FISICO';
   UPDATE fa_afiliadosmail_diario
   SET cargo   = 'RECIBO ELECTRONICO'
   WHERE cargo = 'ENCARGADO-RECIBO ELECTRONICO';
   UPDATE fa_afiliadosmail_diario
   SET cargo  = 'RECIBO ELECTRONICO'
   WHERE base = '1';

--Grafica 2
DELETE
   FROM fa_resumenbaserecibomail_rec3
   WHERE TO_CHAR (mes, 'mmyyyy') = TO_CHAR (sysdate - 1, 'mmyyyy');/*AQUI*/
--Grafica 1--
   INSERT
   INTO fa_resumenbaserecibomail
      (
         tipopersona, tipodocumento, subtipo, cantidadafiliados, canaldeventa,
         ciclo, provincia, departamento, mes, estado, base,tiempoafiliado,grupo,CONSULTOR
      )/*AQUI*/
   SELECT tipopersona, tipodocumento, cargo, COUNT (DISTINCT codigocompania),
      canalventa, ciclo, provincia, departamento, sysdate - 1, estado2, base,
      tiempoafiliado,grupo,CONSULTOR
   FROM
      (SELECT tipopersona, tipodocumento, cargo, codigocompania, canalventa,
         ciclo, provincia, departamento, estado2, base,
         CASE
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=90
            THEN '0 a 3 meses'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=180
            THEN '3 a 6 meses'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=270
            THEN '6 a 9 meses'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=360
            THEN '9 meses a 1 año'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=720
            THEN '1 a 2 años'
            ELSE 'Más de dos años'
         END tiempoafiliado,grupo,CONSULTOR
      FROM fa_afiliadosmail_diario
      where COMPANHIAACTIVA='Activa'
      GROUP BY tipopersona, tipodocumento, cargo, codigocompania, canalventa,
         ciclo, provincia, departamento, estado2, base,
         CASE
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=90
            THEN '0 a 3 meses'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=180
            THEN '3 a 6 meses'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=270
            THEN '6 a 9 meses'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=360
            THEN '9 meses a 1 año'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=720
            THEN '1 a 2 años'
            ELSE 'Más de dos años'
         END,grupo,CONSULTOR
      )
   WHERE tipodocumento IS NOT NULL
   GROUP BY estado2, ciclo, tipodocumento, canalventa, tipopersona, base, cargo
      , provincia, departamento,tiempoafiliado,grupo,CONSULTOR
   ORDER BY ciclo, estado2, tipopersona, base;

   INSERT INTO fa_resumenbaserecibomail
      (
         tipodocumento, tipopersona, ciclo, provincia, departamento, base,
         subtipo, canaldeventa, mes, cantidadmotivados
      )
  SELECT tipodocumento, tipopersona, ciclo, provincia, departamento, base,
      cargo, canalventa, mes, count(codigocompania) from (
   SELECT tipodocumento, tipopersona, ciclo, provincia, departamento, base,
      cargo, canalventa, mes, codigocompania,ROW_NUMBER () over (partition by codigocompania
                                 order by base desc) RN
   FROM
      (SELECT a.tipodocumento, a.tipopersona, a.ciclo, a.provincia,
         a.departamento, a.base, 'RECIBO ELECTRONICO' cargo, a.canalventa,
         sysdate - 1 mes, a.codigocompania/*AQUI*/
      FROM fa_motivadosmail_diario a
      WHERE a.base      = '1'
      AND tipodocumento = 'DNI'
      GROUP BY a.tipodocumento, a.ciclo, a.provincia, a.departamento, a.base,
         a.tipopersona, a.canalventa, a.codigocompania
      )) where rn=1 group by tipodocumento, tipopersona, ciclo, provincia, departamento, base,
      cargo, canalventa, mes;

   INSERT
   INTO fa_resumenbaserecibomail
      (
         tipodocumento, tipopersona, ciclo, provincia, departamento, base,
         subtipo, canaldeventa, mes, cantidadmotivados
      )
   SELECT tipodocumento, tipopersona, ciclo, provincia, departamento, base,
      cargo, canalventa, sysdate - 1 mes, COUNT (DISTINCT codigocompania)/*AQUI*/
   FROM
      (SELECT a.tipodocumento, a.tipopersona, a.ciclo, a.provincia,
         a.departamento, a.base, 'RECIBO ELECTRONICO Y FISICO' cargo,
         a.canalventa, a.codigocompania
      FROM fa_motivadosmail_diario a
      WHERE a.base       = '2'
      AND tipodocumento IN ('RUC', 'DNI')
      AND NOT EXISTS
         (SELECT 1
         FROM fa_motivadosmail_diario b
         WHERE a.codigocompania = b.codigocompania
         AND b.base             = '1'
         )
      GROUP BY a.tipodocumento, a.ciclo, a.provincia, a.departamento, a.base,
         a.tipopersona, a.canalventa, a.codigocompania
      )
   GROUP BY tipodocumento, tipopersona, ciclo, provincia, departamento, base,
      cargo, canalventa, sysdate - 1;/*AQUI*/
   DELETE
   FROM FA_RESUMENBASERECIBOMAIL
   WHERE tipodocumento = 'DNI'
   AND tipopersona     = 'Jurídica';

    DELETE
   FROM FA_RESUMENBASERECIBOMAIL
   WHERE cantidadafiliados=0;
   UPDATE fa_resumenbaserecibomail SET ciclo = '05' WHERE ciclo = '5';
   UPDATE fa_resumenbaserecibomail SET ciclo = '03' WHERE ciclo = '3';
   UPDATE fa_resumenbaserecibomail SET ciclo = '04' WHERE ciclo = '4';
   UPDATE fa_resumenbaserecibomail SET ciclo = '01' WHERE ciclo = '1';

   --Grafica 2--
   INSERT
   INTO fa_resumenbaserecibomail_rec3
      (
         tipopersona, tipodocumento, subtipo, cantidadafiliados, canaldeventa,
         ciclo, provincia, departamento, mes, estado, base,tiempoafiliado,grupo,CONSULTOR
      )
   SELECT tipopersona, tipodocumento, cargo, COUNT (DISTINCT codigocompania),
      canalventa, ciclo, provincia, departamento, sysdate - 1, estado2, base,/*AQUI*/
      tiempoafiliado,grupo,CONSULTOR
   FROM
      (SELECT tipopersona, tipodocumento, cargo, codigocompania, canalventa,
         ciclo, provincia, departamento, estado2, base,
         CASE
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=90
            THEN '0 a 3 meses'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=180
            THEN '3 a 6 meses'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=270
            THEN '6 a 9 meses'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=360
            THEN '9 meses a 1 año'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=720
            THEN '1 a 2 años'
            ELSE 'Más de dos años'
         END tiempoafiliado,grupo,CONSULTOR
      FROM fa_afiliadosmail_diario
      where COMPANHIAACTIVA='Activa'

      GROUP BY tipopersona, tipodocumento, cargo, codigocompania, canalventa,
         ciclo, provincia, departamento, estado2, base,
         CASE
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=90
            THEN '0 a 3 meses'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=180
            THEN '3 a 6 meses'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=270
            THEN '6 a 9 meses'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=360
            THEN '9 meses a 1 año'
            WHEN TRUNC(sysdate)-TRUNC(fechaafiliacion)<=720
            THEN '1 a 2 años'
            ELSE 'Más de dos años'
         END,grupo,CONSULTOR
      )
   WHERE tipodocumento IS NOT NULL
   GROUP BY estado2, ciclo, tipodocumento, canalventa, tipopersona, base, cargo
      , provincia, departamento,tiempoafiliado,grupo,CONSULTOR
   ORDER BY ciclo, estado2, tipopersona, base;

   INSERT
   INTO fa_resumenbaserecibomail_rec3
      (
         tipodocumento, tipopersona, ciclo, provincia, departamento, base,
         subtipo, canaldeventa, mes, cantidadmotivados
      )
      SELECT tipodocumento, tipopersona, ciclo, provincia, departamento, base,
      cargo, canalventa, mes, count(codigocompania) from (
   SELECT tipodocumento, tipopersona, ciclo, provincia, departamento, base,
      cargo, canalventa, mes, codigocompania,ROW_NUMBER () over (partition by codigocompania
                                 order by base desc) RN
   FROM
      (SELECT a.tipodocumento, a.tipopersona, a.ciclo, a.provincia,
         a.departamento, a.base, 'RECIBO ELECTRONICO' cargo, a.canalventa,
         sysdate - 1 mes, a.codigocompania/*AQUI*/
      FROM fa_motivadosmail_diario a
      WHERE a.base      = '1'
      AND tipodocumento = 'DNI'
      GROUP BY a.tipodocumento, a.ciclo, a.provincia, a.departamento, a.base,
         a.tipopersona, a.canalventa, a.codigocompania
      )) where rn=1 group by tipodocumento, tipopersona, ciclo, provincia, departamento, base,
      cargo, canalventa, mes;

   INSERT
   INTO fa_resumenbaserecibomail_rec3
      (
         tipodocumento, tipopersona, ciclo, provincia, departamento, base,
         subtipo, canaldeventa, mes, cantidadmotivados
      )
   SELECT tipodocumento, tipopersona, ciclo, provincia, departamento, base,
      cargo, canalventa, sysdate - 1  mes, COUNT (DISTINCT codigocompania)/*AQUI*/
   FROM
      (SELECT a.tipodocumento, a.tipopersona, a.ciclo, a.provincia,
         a.departamento, a.base, 'RECIBO ELECTRONICO Y FISICO' cargo,
         a.canalventa, a.codigocompania
      FROM fa_motivadosmail_diario a
      WHERE a.base       = '2'
      AND tipodocumento IN ('RUC', 'DNI')
      AND NOT EXISTS
         (SELECT 1
         FROM fa_motivadosmail_diario b
         WHERE a.codigocompania = b.codigocompania
         AND b.base             = '1'
         )
      GROUP BY a.tipodocumento, a.ciclo, a.provincia, a.departamento, a.base,
         a.tipopersona, a.canalventa, a.codigocompania
      )
   GROUP BY tipodocumento, tipopersona, ciclo, provincia, departamento, base,
      cargo, canalventa, sysdate - 1;/*AQUI*/

   DELETE
   FROM FA_RESUMENBASERECIBOMAIL_rec3
   WHERE tipodocumento = 'DNI'
   AND tipopersona     = 'Jurídica';

    DELETE
   FROM FA_RESUMENBASERECIBOMAIL_rec3
   WHERE cantidadafiliados=0;
   UPDATE fa_resumenbaserecibomail_rec3 SET ciclo = '05' WHERE ciclo = '5';
   UPDATE fa_resumenbaserecibomail_rec3 SET ciclo = '03' WHERE ciclo = '3';
   UPDATE fa_resumenbaserecibomail_rec3 SET ciclo = '04' WHERE ciclo = '4';
   UPDATE fa_resumenbaserecibomail_rec3 SET ciclo = '01' WHERE ciclo = '1';

   INSERT
   INTO fa_resumenbasemail_postpago
      (
         tipodocumento, tipopersona, cantidad, mes,CICLO,REGION
      )
   SELECT
      /*+ NO_MERGE(A) */
      a.tipodocumento, a.tipopersona, COUNT(CODIGOCOMPANIA), sysdate - 1 fecha,/*AQUI*/
      a.CICLOFACTURACIONCONTRATO,DECODE(a.provincia,'LIMA','LIMA','CALLAO',
      'LIMA','PROVINCIA')
   FROM
      (SELECT FOTOEQUIPOS.CODIGOCOMPANIA, DECODE(LENGTH(FOTOEQUIPOS.ruccompania
         ), 8, 'DNI', 11, 'RUC', NULL) tipodocumento, FOTOEQUIPOS.tipopersona,
         FOTOEQUIPOS.CICLOFACTURACIONCONTRATO,c.provincia
      FROM fotoequipos
      LEFT JOIN pm_planes ON FOTOEQUIPOS.codigoplantarifariobscs =
         PM_PLANES.c_plan
      LEFT JOIN p_compania c ON FOTOEQUIPOS.codigocompania=c.codigocompania
      WHERE estadocontrato                               IN ('Activo',
         'Suspendido')
      AND PM_PLANES.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      /*g_osiptel NOT IN ('IN Prepago', 'Prepago')*/
      GROUP BY FOTOEQUIPOS.CODIGOCOMPANIA, DECODE(LENGTH(
         FOTOEQUIPOS.ruccompania), 8, 'DNI', 11, 'RUC', NULL),
         FOTOEQUIPOS.tipopersona,CICLOFACTURACIONCONTRATO,c.provincia
      ) a
   WHERE a.tipodocumento IS NOT NULL
   GROUP BY a.tipodocumento, a.tipopersona, sysdate - 1,/*AQUI*/
      a.CICLOFACTURACIONCONTRATO,DECODE(a.provincia,'LIMA','LIMA','CALLAO',
      'LIMA','PROVINCIA') ;


   DELETE
   FROM fa_resumenbasemail_postpago
   WHERE tipodocumento = 'DNI'
   AND tipopersona     = 'Jurídica';


   delete from  FA_RESUMENPLANMAIL;


   INSERT
INTO FA_RESUMENPLANMAIL
   (
      CODIGOPLANTARIFARIOBSCS, PLANTARIFARIO, CANTIDADCONTRATOS, PRODUCT, BASE,
      FECHA
   )
    SELECT b.CODIGOPLANTARIFARIOBSCS,b.PLANTARIFARIO,COUNT(DISTINCT
   b.codigocontratobscs) CANTIDADCONTRATOS,c.PRODUCT,a.base,trunc(sysdate)-1 FECHA/*AQUI*/
FROM
   (SELECT codigocompania,base,COMPANHIAACTIVA
   FROM FA_AFILIADOSMAIL_DIARIO
   GROUP BY codigocompania,base,COMPANHIAACTIVA
   ) a
LEFT JOIN fotoequipos b ON a.codigocompania         =b.CODIGOCOMPANIA
LEFT JOIN pm_planes c   ON b.CODIGOPLANTARIFARIOBSCS=c.C_PLAN
WHERE c.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
/*c.G_OSIPTEL NOT                              IN ('Prepago','IN Prepago')*/
AND a.COMPANHIAACTIVA                               ='Activa'
AND c.T_PLAN                                        ='Comercial'
GROUP BY b.CODIGOPLANTARIFARIOBSCS,b.PLANTARIFARIO,c.PRODUCT,a.base,trunc(sysdate)-1  ;/*AQUI*/



   COMMIT;
END procesarresumenbasemaildiaria;

PROCEDURE PROCESAREPORTERECIENTREGADOS
IS
-- PROPÓSITO:
--
--
-- HISTORIAL DE MODIFICACION
-- Usuario                              Fecha               Comentario
-- ----------                           ---------           ----------------------
-- VORTEGA                              10/03/2015          Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

BEGIN

--------------------------------------------------------------------------
   /*
   T1. ASIGNACION DEL CAMPO CUENTA DE LA TABLA FA_RECIBOSENTREGADOS_ENVIADOS
   Se asigna al campo cuenta de la tabla FA_RECIBOSENTREGADOS_ENVIADOS una
   cuenta formateada de la tabla fa_baseImpresiontotal cruzadas por
   numerodocumento
   */
--------------------------------------------------------------------------
   /*UPDATE
      /*+BYPASS_UJVC*//*
      (
      SELECT c.CUENTA AS cuenta, C4.CUENTA AS cuentaE
      FROM FA_RECIBOSENTREGADOS_ENVIADOS c,(SELECT DECODE ( INSTR (CUENTA, '.',
            1, 2), 0, CUENTA, SUBSTR (CUENTA, 1, INSTR (CUENTA, '.', 1, 2) - 1)
            ) CUENTA,RECIBO
         FROM fa_baseImpresiontotal
         GROUP BY DECODE ( INSTR (CUENTA, '.', 1, 2), 0, CUENTA, SUBSTR (CUENTA
            , 1 , INSTR (CUENTA, '.', 1, 2) - 1)),RECIBO
         ) c4
      WHERE c.NRODOCUMENTO ='001-'
         ||SUBSTR( c4.recibo,-8,8)
      )
   SET cuenta = cuentaE;*/
   /*validado 0*/
   MERGE INTO
   (
   SELECT c.CUENTA AS cuenta,c.NRODOCUMENTO
      FROM FA_RECIBOSENTREGADOS_ENVIADOS c
   )A
   USING
   (
   SELECT DECODE ( INSTR (CUENTA, '.',
            1, 2), 0, CUENTA, SUBSTR (CUENTA, 1, INSTR (CUENTA, '.', 1, 2) - 1)
            ) cuentaE,RECIBO
         FROM fa_baseImpresiontotal
         GROUP BY DECODE ( INSTR (CUENTA, '.', 1, 2), 0, CUENTA, SUBSTR (CUENTA
            , 1 , INSTR (CUENTA, '.', 1, 2) - 1)),RECIBO
   )B
   ON
   (
    A.NRODOCUMENTO ='001-'
         ||SUBSTR( b.recibo,-8,8)
   )
   WHEN MATCHED THEN
   UPDATE SET cuenta = cuentaE;

  /* UPDATE
      /*+BYPASS_UJVC*//*
      (
      SELECT c.CUENTA AS cuenta, C4.CODE AS cuentaE
      FROM FA_RECIBOSENTREGADOS_ENVIADOS c,(SELECT DECODE ( INSTR (CODE, '.', 1
            , 2), 0, CODE, SUBSTR (CODE, 1, INSTR (CODE, '.', 1, 2) - 1)) CODE,
            INVOICE
         FROM fa_mail_base_impresion
         GROUP BY DECODE ( INSTR (CODE, '.', 1, 2), 0, CODE, SUBSTR (CODE, 1 ,
            INSTR (CODE, '.', 1, 2) - 1)),INVOICE
         ) c4
      WHERE c.NRODOCUMENTO ='001-'
         ||SUBSTR( c4.INVOICE,-8,8)
      )
   SET cuenta = cuentaE;*/
   /*validado 0*/
   MERGE INTO
   (
     SELECT c.CUENTA AS cuenta,c.NRODOCUMENTO
      FROM FA_RECIBOSENTREGADOS_ENVIADOS c
   )A
   USING
   (
   SELECT DECODE ( INSTR (CODE, '.', 1
            , 2), 0, CODE, SUBSTR (CODE, 1, INSTR (CODE, '.', 1, 2) - 1)) cuentaE,
            INVOICE
         FROM fa_mail_base_impresion
         GROUP BY DECODE ( INSTR (CODE, '.', 1, 2), 0, CODE, SUBSTR (CODE, 1 ,
            INSTR (CODE, '.', 1, 2) - 1)),INVOICE
   )B
   ON
   (
   A.NRODOCUMENTO ='001-'
         ||SUBSTR( b.INVOICE,-8,8)
   )
   WHEN MATCHED THEN
   UPDATE SET cuenta = cuentaE;

   /*UPDATE
      /*+BYPASS_UJVC*//*
      (
      SELECT c.recibo AS recibo, c4.nrodocumento AS reciboE
      FROM FA_RECIBOSENTREGADOS_INCIDENTE C, FA_RECIBOSENTREGADOS_ENVIADOS c4
      WHERE c.cuentacompania =c4.cuenta
      )
   SET recibo = reciboE;*/
   /*validado 0*/
   MERGE INTO
   (
    SELECT c.recibo AS recibo,c.cuentacompania
      FROM FA_RECIBOSENTREGADOS_INCIDENTE C
   )A
   USING
   (
   SELECT
    c4.nrodocumento AS reciboE,c4.cuenta
   FROM FA_RECIBOSENTREGADOS_ENVIADOS c4
   )B
   ON
   (
   A.cuentacompania =B.cuenta
   )
   WHEN MATCHED THEN
   UPDATE SET recibo = reciboE;

END PROCESAREPORTERECIENTREGADOS;
PROCEDURE PROCESAREPORTECOSTO0
IS
-- PROPÓSITO:
--
--
-- HISTORIAL DE MODIFICACION
-- Usuario                            Fecha             Comentario
-- ----------                         ---------         ----------------------
-- VORTEGA                            13/03/2015        Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

BEGIN

-------------------------------------------------------------------------------
   /*
   T1. ELIMINACION DE REGISTROS DE FA_REPORTECOSTO0
   Se elimina registros de la tabla FA_REPORTECOSTO0 donde el concepto no contenga
   la palabra 'CAMBIO' o la descripcion no contenga la palabra 'CON DEVOLUCION'
   o que el valor de venta sea diferente a 0
   */
-------------------------------------------------------------------------------
   DELETE FROM fa_reportecosto0 WHERE upper(concepto) NOT LIKE '%CAMBIO%';
   DELETE FROM fa_reportecosto0 WHERE upper(DESCRIPCION) NOT LIKE '%CON DEVOLUCION%';
   DELETE FROM fa_reportecosto0 WHERE VALORVENTA<>0;

-------------------------------------------------------------------------------
   /*
   T2. ACTUALIZACION DE CAMPO DESCRIPCION Y DESCRIPCION2 DE FA_REPORTECOSTO0
   Se actualiza el campo descripcion y descripcion2 de la tabla FA_REPORTECOSTO0
   */
-------------------------------------------------------------------------------
   UPDATE fa_reportecosto0 SET DESCRIPCION=UPPER(DESCRIPCION);
   UPDATE fa_reportecosto0 SET DESCRIPCION2=UPPER(DESCRIPCION);
   UPDATE fa_reportecosto0 SET DESCRIPCION=SUBSTR(descripcion,1,INSTR(descripcion,'CONTENIDO')-1)
   WHERE DESCRIPCION LIKE '%CONTENIDO%';
   --UPDATE fa_reportecosto0 SET DESCRIPCION=REPLACE(DESCRIPCION,'BAT ');
   UPDATE fa_reportecosto0 SET DESCRIPCION=REPLACE(DESCRIPCION,'.');
  /* UPDATE fa_reportecosto0 SET DESCRIPCION=REPLACE(DESCRIPCION,'TARJETA');
   UPDATE fa_reportecosto0
   SET PRODUCTO =
      CASE
         WHEN descripcion LIKE '%EQUIPO PORTATIL%'
         THEN SUBSTR( descripcion, INSTR( descripcion, 'PORTATIL ',1)+ 9)
         WHEN descripcion LIKE '%MODELO%'
         THEN SUBSTR( descripcion, INSTR( descripcion, 'MODELO ',1) +7)
         WHEN descripcion LIKE '%EQUIPO%'
         THEN SUBSTR( descripcion, INSTR( descripcion, 'EQUIPO ',1))
         ELSE TRIM(SUBSTR( descripcion, INSTR( descripcion, '-',1,2)+2))
      END;
   UPDATE fa_reportecosto0
   SET PRODUCTO =SUBSTR( producto,1, INSTR( producto, ' ',1)-1)
   WHERE (PRODUCTO NOT LIKE 'BAT%'
   AND PRODUCTO NOT LIKE 'EQUIPO%'
   AND PRODUCTO NOT LIKE 'EQUIP%')
   AND INSTR(producto,' ')>0;
   UPDATE fa_reportecosto0
   SET PRODUCTO =SUBSTR( producto,INSTR( producto, 'EQUIPO',1)+7)
   WHERE PRODUCTO LIKE 'EQUIPO%';
   UPDATE fa_reportecosto0
   SET PRODUCTO =REPLACE(PRODUCTO,'EQUIP ')
   WHERE PRODUCTO LIKE 'EQUIP%';
   UPDATE fa_reportecosto0
   SET PRODUCTO =SUBSTR( producto,INSTR( producto, 'BAT',1)+4,INSTR( producto,
      ' ',2))
   WHERE PRODUCTO LIKE 'BAT%';
   UPDATE fa_reportecosto0
   SET PRODUCTO =SUBSTR( producto,1,INSTR( producto, 'BAT',1)-1)
   WHERE PRODUCTO LIKE '%BAT%';
   UPDATE fa_reportecosto0
   SET PRODUCTO =SUBSTR( producto,1,INSTR( producto, 'BAT',1)-1)
   WHERE PRODUCTO LIKE '%BAT%';*/

-------------------------------------------------------------------------------
   /*
   T3. ACTUALIZACION DE CAMPOS VALORVENTA E IGV DE FA_REPORTECOSTO0
   Se actualizan los campos valorventa e igv de la tabla FA_REPORTE_COSTO0
   usando los campos cantidad y precio unitario y valorvena respectivamente.
   */
-------------------------------------------------------------------------------
   UPDATE fa_reportecosto0 SET VALORVENTA=CANTIDAD*PRECIOUNITARIO;
   UPDATE fa_reportecosto0 SET IGV=VALORVENTA*0.18;

   /*UPDATE
      /*+BYPASS_UJVC*//*
      (
      SELECT c.producto AS motivoE , c4.modeloitem AS motivo
      FROM FA_REPORTECOSTO0 c, FA_ITEMORACLE c4
      WHERE  c.itemoracle=c4.codigooracle

      ) SET motivoE=motivo;*/
      /*validado 10,180*/
      MERGE INTO
   (
    SELECT c.producto AS motivoE ,c.itemoracle
      FROM FA_REPORTECOSTO0 c
   )A
   USING
   (
   SELECT
    c4.modeloitem AS motivo,c4.codigooracle
   FROM  FA_ITEMORACLE c4
   )B
   ON
   (
   A.itemoracle=B.codigooracle
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE=motivo;

END PROCESAREPORTECOSTO0;
PROCEDURE PROCESARDELIVERYSCHARFF(
      periodo VARCHAR2)
IS
-- PROPÓSITO:
--
--
-- HISTORIAL DE MODIFICACION
-- Usuario                              Fecha               Comentario
-- ----------                           ---------           ----------------------
-- VORTEGA                              10/03/2015          Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

--------------------------------------------------------------------------
   /*
   T1. SE ALMACENA EN CURSOR LOS COD_INCIDENTE Y UN CONTADOR
   Se genera una vista de FA_DELIVERYSCHARFF_INCIDENTES con cada uno de los cod_incidentes
   y un contador. Solo se guardarán en el cursor aquellos cod_incidentes con más de 1 incidencia.
   */
--------------------------------------------------------------------------
CURSOR delivery
   IS
      SELECT cod_incidente, COUNT (*)
      FROM FA_DELIVERYSCHARFF_INCIDENTES
      GROUP BY cod_incidente
      HAVING COUNT (*) > 1;
   c_linea delivery%ROWTYPE;


BEGIN
--------------------------------------------------------------------------
   /*
   T2. SE ASIGNA EL CAMPO RECIBO DE LA TABLA FA_DELIVERYSCHARFF_INCIDENTES
   Se asigna al campo recibo en base al campo desc_incidente
   */
--------------------------------------------------------------------------
   UPDATE FA_DELIVERYSCHARFF_INCIDENTES
   SET RECIBO=SUBSTR(DESC_INCIDENTE,INSTR(DESC_INCIDENTE,'001-'),13)
   WHERE INSTR(DESC_INCIDENTE,'001-')<>0;

   UPDATE FA_DELIVERYSCHARFF_INCIDENTES
   SET RECIBO=SUBSTR(DESC_INCIDENTE,1,INSTR(DESC_INCIDENTE,chr(10),instr(
      DESC_INCIDENTE,'/'),1))
   WHERE RECIBO                 IS NULL
   AND instr(DESC_INCIDENTE,'/')<>0;

   UPDATE FA_DELIVERYSCHARFF_INCIDENTES
   SET RECIBO=SUBSTR(DESC_INCIDENTE,instr(DESC_INCIDENTE,'RPTE'),INSTR(
      DESC_INCIDENTE,chr(10),instr(DESC_INCIDENTE,'RPTE'),2)-instr(DESC_INCIDENTE,
      'RPTE'))
   WHERE RECIBO                    IS NULL
   AND instr(DESC_INCIDENTE,'RPTE')<>0;

   UPDATE FA_DELIVERYSCHARFF_INCIDENTES
   SET RECIBO=SUBSTR(DESC_INCIDENTE,instr(DESC_INCIDENTE,'N°'),INSTR(
      DESC_INCIDENTE,chr(10),instr(DESC_INCIDENTE,'N°'))-instr(DESC_INCIDENTE,'N°'
      ))
   WHERE RECIBO                  IS NULL
   AND instr(DESC_INCIDENTE,'N°')<>0;

   UPDATE FA_DELIVERYSCHARFF_INCIDENTES
   SET RECIBO=SUBSTR(DESC_INCIDENTE,1,8)
   WHERE DESC_INCIDENTE LIKE '5%'
   OR DESC_INCIDENTE LIKE '6%'
   OR DESC_INCIDENTE LIKE '7%'
   AND RECIBO IS NULL;
   UPDATE FA_DELIVERYSCHARFF_INCIDENTES
   SET RECIBO=SUBSTR(RECIBO,instr(RECIBO,'RPTE'));


--------------------------------------------------------------------------
   /*
   T3. SE ASIGNA EL CAMPO REFERENCIA DE LA TABLA FA_DELIVERYSCHARFF_INCIDENTES
   Se asigna al campo referencia en base al campo desc_incidente
   */
--------------------------------------------------------------------------
   UPDATE FA_DELIVERYSCHARFF_INCIDENTES
   SET REFERENCIA=SUBSTR(DESC_INCIDENTE,instr(DESC_INCIDENTE,'REF'),INSTR(
      DESC_INCIDENTE,chr(10),instr(DESC_INCIDENTE,'REF'))-instr(DESC_INCIDENTE,
      'REF'))
   WHERE instr(DESC_INCIDENTE,'REF')<>0;

--------------------------------------------------------------------------
   /*
   T4. SE ASIGNA EL CAMPO INDREINGRESO DE LA TABLA FA_DELIVERYSCHARFF_INCIDENTES
   Se asigna al campo indreingreso 'Original' si es que el cod_incidente
   solo tiene una incidencia en la tabla
   */
--------------------------------------------------------------------------
   UPDATE FA_DELIVERYSCHARFF_INCIDENTES a
   SET a.indreingreso = 'Original'
   WHERE (SELECT COUNT (1)
      FROM FA_DELIVERYSCHARFF_INCIDENTES b
      WHERE b.cod_incidente = a.cod_incidente) = 1;

--------------------------------------------------------------------------
   /*
   T5. ASIGNACION DEL CAMPO INDREINGRESO
   Se recorre el cursor y por cada uno de los cod_incidente guardados
   se cruza con la tabla FA_DELIVERYSCHARFF_INCIDENTES para asignar
   'Original' o 'Reingreso'
   */
--------------------------------------------------------------------------
   OPEN delivery;
   LOOP
      FETCH delivery INTO c_linea;
      EXIT
   WHEN delivery%NOTFOUND;
      UPDATE FA_DELIVERYSCHARFF_INCIDENTES a
      SET a.indreingreso         = 'Original'
      WHERE a.cod_incidente      = c_linea.cod_incidente
      AND a.fecha_reci_incidente =
         (SELECT fecha_reci_incidente
         FROM
            (SELECT fecha_reci_incidente
            FROM FA_DELIVERYSCHARFF_INCIDENTES
            WHERE cod_incidente = c_linea.cod_incidente
            ORDER BY TO_DATE (fecha_reci_incidente, 'DD-MON-YY') ASC
            )
         WHERE ROWNUM < 2
         );
      UPDATE FA_DELIVERYSCHARFF_INCIDENTES
      SET indreingreso    = 'Reingreso'
      WHERE cod_incidente = c_linea.cod_incidente
      AND indreingreso   IS NULL;
   END LOOP;
   CLOSE delivery;

--------------------------------------------------------------------------
   /*
   T6. ASIGNACION DEL CAMPO MESFACTURACION DE LA TABLA FA_DELIVERYSCHARFF_INCIDENTES
   Se asigna mesfacturacion dependiendo del ciclo y la fecha
   de ingreso (puede ser el mismo mes o el mes anterior)
   */
--------------------------------------------------------------------------
   UPDATE FA_DELIVERYSCHARFF_INCIDENTES
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '12'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
         ELSE TO_CHAR ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), 'YYYYMM')
      END)
   WHERE ciclo = '04';
   UPDATE FA_DELIVERYSCHARFF_INCIDENTES
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '19'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
         ELSE TO_CHAR ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), 'YYYYMM')
      END)
   WHERE ciclo = '03';
   UPDATE FA_DELIVERYSCHARFF_INCIDENTES
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '26'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
         ELSE TO_CHAR ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), 'YYYYMM')
      END)
   WHERE ciclo = '05';
   UPDATE FA_DELIVERYSCHARFF_INCIDENTES
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '04'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -2), 'YYYYMM')
         ELSE TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
      END)
   WHERE ciclo = '01';

--------------------------------------------------------------------------
   /*
   T6. ELIMINACION DE REGISTROS DE FA_DELIVERYSCHARFF_INCIDENTES DE OTRO PERIODO
   Se elimina registros de la tabla FA_DELIVERYSCHARFF_INCIDENTES que no pertenezcan
   al mismo periodo en proceso
   */
--------------------------------------------------------------------------
   DELETE FROM FA_DELIVERYSCHARFF_INCIDENTES WHERE mesfacturacion <> periodo;

END PROCESARDELIVERYSCHARFF;

PROCEDURE PROCESARINCIDENTESDIARIOS is

begin

UPDATE FA_INCIDENTEDIARIO A SET A.especificacionfacturacion=(SELECT B.ESPECIFICACIONFACTURACION
FROM FA_INCIDENTEDIARIO_ESPECIF B WHERE a.especificacion=B.ESPECIFICACION) WHERE A.especificacionfacturacion IS NULL AND (A.INBOXASIGNADO='FACT.SERVICIOS' or a.inboxorigen    ='FACT.SERVICIOS');

UPDATE FA_INCIDENTEDIARIO SET especificacionfacturacion='AMR' WHERE (INBOXASIGNADO='FACT.SERVICIOS' OR inboxorigen    ='FACT.SERVICIOS' or inboxdestino='FACT.SERVICIOS') AND tipoincidente='RECLAMO' AND especificacionfacturacion IS NULL ;

UPDATE FA_INCIDENTEDIARIO SET especificacionfacturacion='OTROS' WHERE especificacionfacturacion IS NULL AND (INBOXASIGNADO='FACT.SERVICIOS' OR inboxorigen    ='FACT.SERVICIOS'  or inboxdestino='FACT.SERVICIOS');



UPDATE FA_INCIDENTEDIARIO a set a.secuencia='Último' where exists (select 1 from (SELECT COD_INCIDENTE,FECHARECIBIDO FROM (
SELECT COD_INCIDENTE,FECHARECIBIDO,row_number() over ( partition BY
         COD_INCIDENTE order by FECHARECIBIDO DESC) AS num
      FROM FA_INCIDENTEDIARIO
      ORDER BY COD_INCIDENTE ASC) WHERE NUM=1) b where a.cod_incidente=b.cod_incidente and b.fecharecibido=a.fecharecibido) and a.inboxasignado='FACT.SERVICIOS';

UPDATE FA_INCIDENTEDIARIO a set a.secuencia='Anterior' where a.secuencia is null and a.inboxasignado='FACT.SERVICIOS';


update FA_INCIDENTEDIARIO a set a.vigencia='Antiguo' where sysdate-fecharecibido>90 and a.inboxasignado='FACT.SERVICIOS';

update FA_INCIDENTEDIARIO a set a.vigencia='Vigente' where a.inboxasignado='FACT.SERVICIOS' and a.vigencia is null;

UPDATE FA_INCIDENTEDIARIO a
SET a.secuencia2='Último'
WHERE EXISTS
   (SELECT 1
   FROM
      (SELECT COD_INCIDENTE,FECHARECIBIDO
      FROM
         (SELECT COD_INCIDENTE,FECHARECIBIDO,row_number() over ( partition BY
            COD_INCIDENTE order by FECHARECIBIDO DESC) AS num
         FROM FA_INCIDENTEDIARIO
         ORDER BY COD_INCIDENTE ASC
         )
      WHERE NUM=1
      ) b
   WHERE a.cod_incidente=b.cod_incidente
   AND b.fecharecibido  =a.fecharecibido
   )
AND (a.inboxasignado='FACT.SERVICIOS'
OR a.inboxorigen    ='FACT.SERVICIOS');

UPDATE FA_INCIDENTEDIARIO a set a.secuencia2='Anterior' where a.secuencia2 is null AND (a.inboxasignado='FACT.SERVICIOS'
OR a.inboxorigen    ='FACT.SERVICIOS');


delete from FA_INCIDENTEDIARIO_RESUMEN where fecha=trunc(sysdate);

delete from FA_INCIDENTEDIARIO_RESUMEN where fecha=trunc(sysdate-1) and inboxorigen is not null ;
delete from FA_INCIDENTEDIARIO_RESUMEN where fecha=trunc(sysdate-1) and inboxdestino is not null ;

INSERT
INTO FA_INCIDENTEDIARIO_RESUMEN
   (
      CANTIDAD, CICLO, ESTADOINCIDENTE, TEMAINCIDENTE, ESPECIFICACION,
      ESPECIFICACIONFACTURACION, SECUENCIA, VIGENCIA, INBOXASIGNADO, TIPOCUENTA
      , FECHA,FECHAMASANTIGUA
   )

SELECT count(distinct COD_INCIDENTE) cantidad,CICLO,  ESTADOINCIDENTE,
   TEMAINCIDENTE, ESPECIFICACION,
    ESPECIFICACIONFACTURACION, SECUENCIA, VIGENCIA,inboxasignado,TIPOCUENTA,TRUNC(SYSDATE) FECHA,min(fecharecibido) FECHAMINIMA
FROM FA_INCIDENTEDIARIO where inboxasignado='FACT.SERVICIOS'
GROUP BY CICLO,  ESTADOINCIDENTE,
   TEMAINCIDENTE, ESPECIFICACION,
    ESPECIFICACIONFACTURACION, SECUENCIA, VIGENCIA,inboxasignado,TIPOCUENTA,TRUNC(SYSDATE);

INSERT
INTO FA_INCIDENTEDIARIO_RESUMEN
   (
      ATENDIDOS, CICLO, ESTADOINCIDENTE, TEMAINCIDENTE, ESPECIFICACION,
      ESPECIFICACIONFACTURACION, SECUENCIA, VIGENCIA, INBOXASIGNADO, TIPOCUENTA
      , FECHA,FECHAMASANTIGUA,INBOXORIGEN
   )

SELECT count(distinct COD_INCIDENTE) cantidad,CICLO,  ESTADOINCIDENTE,
   TEMAINCIDENTE, ESPECIFICACION,
    ESPECIFICACIONFACTURACION, SECUENCIA2, VIGENCIA,inboxasignado,TIPOCUENTA,TRUNC(SYSDATE)-1 FECHA,min(fecharecibido) FECHAMINIMA,INBOXORIGEN
FROM FA_INCIDENTEDIARIO where INBOXORIGEN='FACT.SERVICIOS'
GROUP BY CICLO,  ESTADOINCIDENTE,
   TEMAINCIDENTE, ESPECIFICACION,
    ESPECIFICACIONFACTURACION, SECUENCIA2, VIGENCIA,inboxasignado,TIPOCUENTA,TRUNC(SYSDATE)-1,INBOXORIGEN;

    INSERT
INTO FA_INCIDENTEDIARIO_RESUMEN
   (
      ENTRANTES, CICLO, ESTADOINCIDENTE, TEMAINCIDENTE, ESPECIFICACION,
      ESPECIFICACIONFACTURACION, SECUENCIA, VIGENCIA, INBOXASIGNADO, TIPOCUENTA
      , FECHA,FECHAMASANTIGUA,INBOXDESTINO
   )
SELECT count(distinct COD_INCIDENTE) cantidad,CICLO,  ESTADOINCIDENTE,
   TEMAINCIDENTE, ESPECIFICACION,
    ESPECIFICACIONFACTURACION, SECUENCIA2, VIGENCIA,inboxasignado,TIPOCUENTA,TRUNC(SYSDATE)-1 FECHA,min(fecharecibido) FECHAMINIMA,INBOXDESTINO
FROM FA_INCIDENTEDIARIO where INBOXDESTINO='FACT.SERVICIOS' and trunc(fecharecibido)=trunc(sysdate)-1
GROUP BY CICLO,  ESTADOINCIDENTE,
   TEMAINCIDENTE, ESPECIFICACION,
    ESPECIFICACIONFACTURACION, SECUENCIA2, VIGENCIA,inboxasignado,TIPOCUENTA,TRUNC(SYSDATE)-1,INBOXDESTINO;
commit;

end PROCESARINCIDENTESDIARIOS;


PROCEDURE BASE_MEC_PROCESAR_INCIDENTES
IS
-- PROPÓSITO:
--
--
-- HISTORIAL DE MODIFICACION
-- Usuario                              Fecha               Comentario
-- ----------                           ---------           ----------------------
-- VORTEGA                              09/03/2015          Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

--------------------------------------------------------------------------
   /*
   T1. SE ALMACENA EN CURSOR LOS COD_INCIDENTE Y UN CONTADOR
   Se genera una vista de FA_BASESCOURIER_INCIDENTES con cada uno de los cod_incidentes
   y un contador. Solo se guardarán en el cursor aquellos cod_incidentes con más de 1 incidencia.
   */
--------------------------------------------------------------------------
   CURSOR delivery
   IS
      SELECT cod_incidente, COUNT (*)
      FROM FA_BASESCOURIER_INCIDENTES
      GROUP BY cod_incidente
      HAVING COUNT (*) > 1;
   c_linea delivery%ROWTYPE;
BEGIN

--------------------------------------------------------------------------
   /*
   T2. ACTUALIZACION DEL CAMPO INDREINGRESO DE LA TABLA FA_BASESCOURIER_INCIDENTES
   Se asigna al campo indreingreso "Original" si es que existe solo un registro
   con el codigo de incidente en la misma tabla.
   */
--------------------------------------------------------------------------
   UPDATE FA_BASESCOURIER_INCIDENTES a
   SET a.indreingreso = 'Original'
   WHERE (SELECT COUNT (1)
      FROM FA_BASESCOURIER_INCIDENTES b
      WHERE b.cod_incidente = a.cod_incidente) = 1;

--------------------------------------------------------------------------
   /*
   T3. ACTUALIZACION DEL CAMPO INDREINGRESO DE LA TABLA FA_BASESCOURIER_INCIDENTES
   Se recorre cada registro del cursor anteriormente guardado para cruzarlos con
   la tabla FA_BASESCOURIER_INCIDENTES con el mismo cod_incidente para setear el campo
   indreingreso como 'Original' o 'Reingreso'
   */
--------------------------------------------------------------------------
   OPEN delivery;
   LOOP
      FETCH delivery INTO c_linea;
      EXIT
   WHEN delivery%NOTFOUND;
      UPDATE FA_BASESCOURIER_INCIDENTES a
      SET a.indreingreso         = 'Original'
      WHERE a.cod_incidente      = c_linea.cod_incidente
      AND a.fecha_reci_incidente =
         (SELECT fecha_reci_incidente
         FROM
            (SELECT fecha_reci_incidente
            FROM FA_BASESCOURIER_INCIDENTES
            WHERE cod_incidente = c_linea.cod_incidente
            ORDER BY TO_DATE (fecha_reci_incidente, 'DD-MM-YY') ASC
            )
         WHERE ROWNUM < 2
         );
      UPDATE FA_BASESCOURIER_INCIDENTES
      SET indreingreso    = 'Reingreso'
      WHERE cod_incidente = c_linea.cod_incidente
      AND indreingreso   IS NULL;
   END LOOP;
   CLOSE delivery;

--------------------------------------------------------------------------
   /*
   T4. ASIGNACION DEL CAMPO MESFACTURACION DE LA TABLA FA_BASESCOURIER_INCIDENTES
   Se asigna mesfacturacion dependiendo del ciclo y la fecha
   de ingreso (puede ser el mismo mes o el mes anterior)
   */
--------------------------------------------------------------------------
   UPDATE FA_BASESCOURIER_INCIDENTES
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '12'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
         ELSE TO_CHAR ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), 'YYYYMM')
      END)
   WHERE ciclo = '04';
   UPDATE FA_BASESCOURIER_INCIDENTES
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '19'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
         ELSE TO_CHAR ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), 'YYYYMM')
      END)
   WHERE ciclo = '03';
   UPDATE FA_BASESCOURIER_INCIDENTES
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '26'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
         ELSE TO_CHAR ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), 'YYYYMM')
      END)
   WHERE ciclo = '05';
   UPDATE FA_BASESCOURIER_INCIDENTES
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '04'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -2), 'YYYYMM')
         ELSE TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
      END)
   WHERE ciclo = '01';

--------------------------------------------------------------------------
   /*
   T5. ASIGNACION DEL CAMPO PROVINCIA2 DE LA TABLA FA_BASESCOURIER_INCIDENTES
   Se asigna provincia2 dependiendo si el campo provincia es 'LIMA' o 'CALLAO' o no
   */
--------------------------------------------------------------------------
   UPDATE FA_BASESCOURIER_INCIDENTES
   SET provincia2   = 'LIMA'
   WHERE provincia IN ('LIMA', 'CALLAO');
   UPDATE FA_BASESCOURIER_INCIDENTES
   SET provincia2       = 'PROVINCIA'
   WHERE provincia NOT IN ('LIMA', 'CALLAO');

--------------------------------------------------------------------------
   /*
   T6. ELIMINACION DE REGISTROS CON INDREINGRESOS <> 'Original' DE FA_BASESCOURIER_INCIDENTES
   Se elimina los registro cuyo indreingreso sea diferente a 'Original'
   */
--------------------------------------------------------------------------
   delete from FA_BASESCOURIER_INCIDENTES where indreingreso<>'Original';

--------------------------------------------------------------------------
   /*
   T7. ACTUALIZACION DE CAMPO ULTIMOS3MESES DE FA_BASESCOURIER_INCIDENTES
   Se actualiza el campo ultimos3meses de una vista que contiene la cantidad
   de incidentes de los ultimos 3 meses de cada cuenta de la misma tabla
   FA_BASESCOURIER_INCIDENTES
   */
--------------------------------------------------------------------------
  /* UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.ultimos3meses AS motivoE , c4.cantidad AS motivo
   FROM FA_BASESCOURIER_INCIDENTES c, (SELECT COUNT(COD_INCIDENTE) cantidad,
         cuenta
      FROM FA_BASESCOURIER_INCIDENTES B
      WHERE TO_DATE (fechaingresosinhora, 'DD/MM/YYYY')>add_months(TRUNC(
         sysdate) ,-3 )
      GROUP BY cuenta
      ) c4
   WHERE c.cuenta=c4.cuenta
   )
SET motivoE=motivo;*/
/*validado 216*/
MERGE INTO
   (
    SELECT c.ultimos3meses AS motivoE ,c.cuenta
   FROM FA_BASESCOURIER_INCIDENTES c
   )A
   USING
   (
   SELECT COUNT(COD_INCIDENTE) motivo,
         cuenta
      FROM FA_BASESCOURIER_INCIDENTES B
      WHERE TO_DATE (fechaingresosinhora, 'DD/MM/YYYY')>add_months(TRUNC(
         sysdate) ,-3 )
      GROUP BY cuenta
   )B
   ON
   (
   A.cuenta=B.cuenta
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE=motivo;

   COMMIT;
END BASE_MEC_PROCESAR_INCIDENTES;

PROCEDURE procesarbasemaildiaria
IS
BEGIN
-- PROPÓSITO:
-- Carga las base mail del dia anterior para su uso en la asignacion de bonos y metricas de afiliacion a recibo electronico;
--
-- HISTORIAL DE MODIFICACION
-- Usuario                              Fecha               Comentario
-- ----------                           ---------           ----------------------
-- CZORRILLA                            N/D                 Creación.
-- VORTEGA/CCHAHUAS                     25/11/2014          Revision del flujo
-- CCHAHUAS/FESPINOZA                   26/01/2015          Revision del flujo
-- VORTEGA/CCHAHUAS                     29/01/2015          Inclusión de actualización para que el campo companhiaActiva sea 'Activa' al cruzar con los planes de la tabla PM_PLANES_PROMOCION
--------------------------------------------------------------------------
   --------------------------------------------------------------------------
   /*
   T1. LIMPIEZA DE DE TABLAS FA_AFILIADOSMAIL_HISTORICO Y FA_MAIL_CONTRATOSPROMOCION
   Limpieza de informacion para tablas historica de afiliacion y
   limpieza de los contratos de promocion solo para el dia a procesar
   */
   --------------------------------------------------------------------------
    DELETE FROM fa_afiliadosmail_historico WHERE TRUNC(fecha)=TRUNC(sysdate-1);
    commit;
    DELETE FROM fa_mail_contratospromocion WHERE TRUNC(fecha)=TRUNC(sysdate);
    commit;
    DELETE FROM FA_AFILIADOSMAIL_DIARIO;
    commit;
   --------------------------------------------------------------------------
   /*
   T8. INSERCION DE BASE 1 EN FA_AFILIADOSMAIL_DIARIO
   Se agregan la base 1 en fa_afiliadosmail_diario (C) incluyendo
   fa_base_hp (A) y p_compania (D), fa_afiliadosmail_historico (E)
   fotoequipos (B) adicionalmente se filtra fa_motivados_semanal (F)
   y fa_basedesafiliados_sd (G)
   */
   --------------------------------------------------------------------------
   INSERT INTO fa_afiliadosmail_diario
    (
    codigocompania, numerocuentaresponsable, tipodocumento, ruccompania, razonsocial,
    cuentacompania, provincia, departamento, mail, ciclo, canalventa, fechaingreso,
    estado, base, tipopersona, estado2, distrito, riesgofinanciero, indicecrediticio,
    estadodecobranza, consultor, dealer, nombrecontacto
    )
    WITH HPENCARGADORECIBOELECTRONICO AS
        (SELECT *
        FROM fa_base_hp
        WHERE (cargo = 'ENCARGADO-RECIBO ELECTRONICO' OR tiponotificacion='Recibo Electrónico')
        ),
        PERSONAS AS
        (SELECT * FROM p_compania WHERE tipodocumento <> 'RUC'
        ),
        AFILIADOSHASTAMESPASADO AS
        (SELECT codigocompaniahistorico
        FROM fa_afiliadosmail_historico
        WHERE fecha < TRUNC(sysdate-1,'MM')
        OR fecha   IS NULL
        GROUP BY codigocompaniahistorico
        ),
        DATOSPOSTPAGOMASNUEVO as
        (SELECT DECODE(canalventacontrato, NULL, canalventa, canalventacontrato) canal, codigocompania,
        NVL(consultorcontrato, identificadorconsultor) consultor, NVL(dealercontrato, identificadordealer) dealer
        FROM
            (SELECT a.canalventa,a.canalventacontrato,a.consultorcontrato,
            a.identificadorconsultor,a.dealercontrato,a.identificadordealer,
            a.codigocompania,row_number() over ( PARTITION BY a.codigocompania ORDER BY
            a.codigocompania ASC, a.fechaactivacioncontrato DESC) ar
            FROM fotoequipos a
            --LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
            WHERE (upper(a.product) like '%POST%' or a.product is null)
            --b.product not in ('iDen Pre','IN Pre','Non PTT Prepago','Fijo Movil Prepago')
            AND a.estadocontrato IN ('Activo','Suspendido')
            ORDER BY codigocompania
            )
        WHERE ar=1
        )
    SELECT b.codigocompania, b.cuentacompania, b.tipodocumento, b.ruccompania,
    b.razonsocial, b.cuentacompania, b.provincia, b.departamento, a.mail,
    b.ciclo, c1.canal, b.fechaingreso, DECODE (c.base, NULL, 'NUEVO', 'ANTIGUO')
    estado, '1', b.tipopersona, DECODE (D1.codigocompaniahistorico , NULL,
    'NUEVO', 'ANTIGUO'), b.distrito, b.riesgofinanciero, b.indice,
    b.estadocobranza,c1.consultor, c1.dealer,a.nombrecontacto
    FROM hpencargadoreciboelectronico a, personas b, fa_afiliadosmail_historico c, afiliadoshastamespasado D1,datospostpagomasnuevo c1
    WHERE a.codigocompanianum = b.codigocompania(+)
    AND a.codigocompanianum   = c.codigocompaniahistorico(+)
    AND a.codigocompanianum   = D1.codigocompaniahistorico(+)
    AND b.codigocompania      =c1.codigocompania(+)
    AND NOT EXISTS
        (SELECT 1 FROM fa_motivados_semanal v WHERE (UPPER (v.mail)=a.mail and  v.cuenta=a.numerocuentaresponsable) and (v.mes>a.fechacreacioncontacto or v.mes is null))
    AND NOT EXISTS
        (SELECT 1 FROM fa_basedesafiliados_sd v WHERE (UPPER (v.mail)=a.mail and  v.cuenta=a.numerocuentaresponsable) and v.periododesafil>a.fechacreacioncontacto)
    GROUP BY b.codigocompania, b.cuentacompania, b.tipodocumento, b.ruccompania, b.razonsocial,
    b.cuentacompania, b.provincia, b.departamento, a.mail, b.ciclo, c1.canal, b.fechaingreso,
    DECODE (c.base, NULL, 'NUEVO', 'ANTIGUO') ,b.tipopersona, DECODE (D1.codigocompaniahistorico, NULL, 'NUEVO', 'ANTIGUO'),
    b.distrito, b.riesgofinanciero, b.indice, b.estadocobranza, c1.consultor, c1.dealer, a.nombrecontacto;
    commit;
   --------------------------------------------------------------------------
   /*
   T9. INSERCION DE BASE 2 EN FA_AFILIADOSMAIL_DIARIO
   Se agregan la base 1 en fa_afiliadosmail_diario (C) incluyendo
   fa_base_hp (A) y p_compania (D), fa_afiliadosmail_historico (E)
   fotoequipos (B) adicionalmente se filtra fa_motivados_semanal (F)
   y fa_basedesafiliados_sd (G)
   */
   --------------------------------------------------------------------------
    INSERT INTO fa_afiliadosmail_diario
    (
      codigocompania, numerocuentaresponsable, tipodocumento, ruccompania, razonsocial,
      cuentacompania, provincia, departamento, mail, ciclo, canalventa, fechaingreso,
      cargo, estado, base, tipopersona, estado2, distrito, riesgofinanciero, indicecrediticio,
      estadoDEcobranza, consultor ,dealer,nombrecontacto
    )
    WITH afiliadoshastamespasado AS
        (SELECT codigocompaniahistorico
        FROM fa_afiliadosmail_historico
        WHERE fecha < TRUNC(sysdate-1,'MM') OR fecha IS NULL
        GROUP BY codigocompaniahistorico
        )
    SELECT b.codigocompania, b.cuentacompania, b.tipodocumento, b.ruccompania,
    b.razonsocial, b.cuentacompania, b.provincia, b.departamento, a.mail,
    b.ciclo, b.canalventa, b.fechaingreso, a.cargo, DECODE (c.base, NULL, 'NUEVO', 'ANTIGUO') estado,
    '2', b.tipopersona, DECODE(D1.codigocompaniahistorico, NULL, 'NUEVO', 'ANTIGUO'),
    b.distrito, b.riesgofinanciero, b.indice, b.estadocobranza,b.consultor,b.dealer,
    a.nombrecontacto
    FROM fa_base_hp a, p_compania b, fa_afiliadosmail_historico c, afiliadoshastamespasado D1
    WHERE a.codigocompaniaNUM = b.codigocompania(+)
    AND a.codigocompaniaNUM   = c.codigocompaniahistorico(+)
    AND a.codigocompaniaNUM   = D1.codigocompaniahistorico(+)
    AND NOT EXISTS
        (SELECT 1 FROM fa_motivados_semanal v WHERE (UPPER (v.mail)=a.mail and  v.cuenta=a.numerocuentaresponsable) and (v.mes>a.fechacreacioncontacto or v.mes is null))
    AND NOT EXISTS
        (SELECT 1 FROM fa_basedesafiliados_sd v WHERE (UPPER (v.mail)=a.mail and  v.cuenta=a.numerocuentaresponsable) and v.periododesafil>a.fechacreacioncontacto)
    AND (
        (
        (a.cargo = 'ENCARGADO-RECIBO ELECTRONICO' OR a.cargo = 'ENCARGADO-RECIBO ELECT. Y FISICO' OR a.tiponotificacion = 'Recibo Electrónico' OR a.tiponotificacion = 'Recibo Electrónico y Físico')
        AND b.tipodocumento   = 'RUC')
        OR (a.cargo          = 'ENCARGADO-RECIBO ELECT. Y FISICO' OR a.tiponotificacion = 'Recibo Electrónico y Físico')
        )
    GROUP BY b.codigocompania, b.cuentacompania, b.tipodocumento, b.ruccompania, b.razonsocial,
    b.cuentacompania, b.provincia, b.departamento, a.mail, b.ciclo, b.canalventa, b.fechaingreso,
    a.cargo, DECODE (c.base, NULL, 'NUEVO', 'ANTIGUO'), b.tipopersona, DECODE ( D1.codigocompaniahistorico, NULL, 'NUEVO', 'ANTIGUO'),
    b.distrito, b.riesgofinanciero, b.indice, b.estadocobranza,b.consultor,b.dealer,a.nombrecontacto;
    commit;
   --------------------------------------------------------------------------
   /*
   T10. ACTUALIZAN EL CAMPO COMPANHIAACTIVA EN BASE MAIL
   Se clasifica el campo companhiaactiva de acuerdo al estado
   de contrato en la foto de equipo.
   */
   --------------------------------------------------------------------------
    MERGE INTO
   (
   SELECT c.companhiaActiva AS motivoE, 'Activa' AS motivo,c.codigocompania
    FROM fa_afiliadosmail_diario c
   )A
   USING
   (
   SELECT a.codigocompania
    FROM fotoequipos a--, pm_planes_promocion b
         WHERE
         --a.codigoplantarifariobscs = b.c_plan
         --AND
         a.estadocontrato IN ('Activo','Suspendido')
         AND upper(a.product) like '%POST%'
         --AND b.product NOT IN ('iDen Pre','IN Pre','Non PTT Prepago')
         GROUP BY a.codigocompania
   )B
   ON
   (
   A.codigocompania = B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

    COMMIT;

    UPDATE fa_afiliadosmail_diario SET companhiaActiva='Inactiva'
    WHERE companhiaActiva IS NULL;
    commit;
   --------------------------------------------------------------------------
   /*
   T11. ACTUALIZAN BASE MAIL CON INFORMACION DE FA_AFILIADOSMAIL_HISTORICO
   Se actualizan la informacion de fa_afiliadosmail_diario tomando los campos
   grupo, fechaafiliacion
   */
   --------------------------------------------------------------------------
    MERGE INTO
   (
   SELECT c4.fechaafiliacion AS fecha,c4.codigocompania
    FROM fa_afiliadosmail_diario c4 where c4.fechaafiliacion IS  NULL /*se quito el NOT NULL*/
   )A
   USING
   (
   SELECT fechaE,codigocompania FROM (
   SELECT
    c.fechaingreso AS fechaE,c.codigocompania,row_number () over (partition by c.codigocompania order by c.fechaingreso desc) rn
   FROM fa_base_hp c where c.fechaingreso IS NOT NULL
   )
   WHERE RN=1
   )B
   ON
   (
    B.codigocompania = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET fecha = fechaE;
   commit;

   MERGE INTO
   (
   SELECT  c4.grupo AS motivo, c4.subgrupo AS razon,  c4.fechaafiliacion AS fecha,c4.codigocompania
    FROM fa_afiliadosmail_diario c4 where c4.fechaafiliacion IS NOT NULL
   )A
   USING
   (
   SELECT
   c.grupo AS motivoE, c.subgrupo AS razonE, c.fechaafiliacion AS fechaE,c.codigocompaniahistorico
   FROM fa_afiliadosmail_historico c where
         c.grupo IS NOT NULL
        AND c.subgrupo IS NOT NULL
        AND c.fechaafiliacion IS NOT NULL
   )B
   ON
   (
   B.codigocompaniahistorico = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivo = motivoE,razon = razonE, fecha = fechaE;
   commit;
   --------------------------------------------------------------------------
   /*
   T12. ACTUALIZAN BASE MAIL CON INFORMACION DE FA_AFILIADOSMAIL_HISTORICO
   Se actualizan la informacion de fa_afiliadosmail_diario tomando los campos
   grupo, fechaafiliacion
   */
   --------------------------------------------------------------------------
   MERGE INTO
   (
   SELECT  c4.grupo AS motivo, c4.subgrupo AS razon,
   c4.fechaafiliacion AS fecha,c4.consultor as consultor,
   c4.dealer as dealer,c4.codigocompania
   FROM fa_afiliadosmail_diario c4 where (c4.consultor= 'Sin Consultor' OR c4.consultor IS NULL) AND c4.dealer IS NULL
   )A
   USING
   (
   SELECT
   c.grupo AS motivoE,c.subgrupo AS razonE, c.fechaafiliacion AS fechaE, c.consultor as consultorE, c.dealer as dealerE,c.codigocompaniahistorico
   FROM fa_afiliadosmail_historico c where (c.consultor  <>  'Sin Consultor' OR c.consultor IS NOT NULL)
        AND c.dealer IS NOT NULL
        AND c.grupo IS NOT NULL
        AND c.subgrupo IS NOT NULL
        AND c.fechaafiliacion IS NOT NULL
   )B
   ON
   (
   B.codigocompaniahistorico = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET consultor=consultorE,dealer=dealerE;
   commit;
 --------------------------------------------------------------------------
   /*
   T13. ACTUALIZAN BASE MAIL CON INFORMACION DE FA_RESUMENBASEMAIL_INCIDENTE
   Se actualizan la informacion de fa_afiliadosmail_diario tomando los campos
   grupo, fechaingresoincidente
   */
   --------------------------------------------------------------------------
   MERGE INTO
   (
   SELECT  c4.grupo AS motivo, c4.subgrupo AS razon,  c4.fechaafiliacion AS fecha, c4.codigocompania
   FROM fa_afiliadosmail_diario c4 where /*c4.fechaafiliacion IS NULL
        AND*/ c4.grupo IS NULL
        AND c4.subgrupo IS NULL
   )A
   USING
   (
   SELECT
   c.grupo AS motivoE, c.subgrupo AS razonE, c.fechaingresoincidente AS fechaE,c.codigocompania
   FROM  fa_resumenbasemail_incidente c
   )B
   ON
   (
   B.codigocompania  = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivo = motivoE,razon = razonE, fecha = fechaE;
   commit;
   --------------------------------------------------------------------------
   /*
   T14. ACTUALIZAN BASE MAIL LAS FECHAS DE AFILIACION VACIAS
   Se actualizan la informacion de fa_afiliadosmail_diario identificando las fechas
   de afiliacion y grupos vacios
   */
   --------------------------------------------------------------------------
   UPDATE fa_afiliadosmail_diario
   SET fechaafiliacion = fechaingreso, grupo = 'Como Cliente'
   WHERE /*fechaafiliacion IS NULL
   AND*/ grupo IS NULL;
   commit;

   --------------------------------------------------------------------------
   /*
   T15. DEPURACION DE DUPLICADOS EN BASE 1 PRESENTES EN BASE 2
   Se depura la informacion duplicada dentro de la base 1 que ya han sido identificados
   en la base 2
   */
   --------------------------------------------------------------------------
   DELETE FROM fa_afiliadosmail_diario a
   WHERE a.base = '2'
   AND EXISTS
        (SELECT 1
        FROM fa_afiliadosmail_diario b
        WHERE b.codigocompania = a.codigocompania
        AND b.base = '1'
        );
   commit;
   --------------------------------------------------------------------------
   /*
   T16. ACTUALIZACION FALTANTE DESDE LA FOTOEQUIPOS
   Se actualizan el codigocompania, ciclofacturacion y cantidad de equipos
   extrayendolo de la foto de equipos
   */
   --------------------------------------------------------------------------
   MERGE INTO
   (
   SELECT c.cantidadequipos AS motivoE,c.codigocompania
    FROM fa_afiliadosmail_diario c
   )A
   USING
   (
   SELECT a.codigocompania, COUNT (*) motivo
         FROM fotoequipos a--, pm_planes b
         WHERE
         --a.codigoplantarifariobscs = b.c_plan(+)
         --AND
         A.ESTADOCONTRATO IN ('Activo', 'Suspendido')
         AND (upper(a.product) like '%POST%' or a.product is null)
         --AND b.product NOT IN ('iDen Pre','IN Pre','Non PTT Prepago','Fijo Movil Prepago')
         GROUP BY a.codigocompania
   )B
   ON
   (
   A.codigocompania = B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;
   commit;
--modificado por inestabilidad
   MERGE INTO
   (
   SELECT c.ciclo AS motivoE,c.codigocompania
   FROM fa_afiliadosmail_diario c where c.ciclo IS NULL
   )A
   USING
   (
   select motivo,codigocompania from (
   SELECT
    c4.ciclofacturacioncontrato AS motivo,c4.codigocompania,ROW_NUMBER () over (partition by c4.codigocompania order by c4.fechaactivacioncontrato desc) rn
   FROM fotoequipos c4
   ) where rn=1
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE=motivo;
   commit;

     MERGE INTO
   (
   SELECT c.cantidad3G AS cantidad3GE,c.codigocompania
    FROM fa_afiliadosmail_diario c
   )A
   USING
   (
   SELECT x.codigocompania, COUNT (1) cantidad3G
    FROM fotoequipos x, pm_planes z
    WHERE x.codigoplantarifariobscs = z.c_plan(+)
        AND ( Z.GRUPO LIKE '%3G%' OR Z.GRUPO = 'Internet Nextel')
        AND (upper(x.product) like '%POST%' or x.product is null)
        --AND z.product NOT IN ('iDen Pre','IN Pre','Non PTT Prepago','Fijo Movil Prepago')
        AND x.estadocontrato IN ('Activo', 'Suspendido')
        GROUP BY x.codigocompania
   )B
   ON
   (
   A.codigocompania = B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET CANTIDAD3GE = CANTIDAD3G;
   commit;

    MERGE INTO
   (
     SELECT  c4.tipocompania AS motivo,c4.codigocompania
        FROM fa_afiliadosmail_diario c4
   )A
   USING
   (
   SELECT
   c.tipocompania AS motivoE,c.codigocompania
   FROM p_compania c
   )B
   ON
   (
   B.codigocompania  = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivo = motivoE;
   commit;
   --------------------------------------------------------------------------
       delete from FA_AFILIADOSMAIL_DIARIO where codigocompania is null;
       commit;
   /*
   T17. ACTUALIZACION DE RESULTADOS DE DOMINIOS MAS COMUNES
   Se verifican mediante una funcion de correlacion la conicidencia de dominios de correo
   */
   --------------------------------------------------------------------------
    UPDATE fa_afiliadosmail_diario a
    SET a.resultado1=func_corr(SUBSTR(a.mail,instr(a.mail,'@')+1),'GMAIL.COM');
    commit;
    UPDATE fa_afiliadosmail_diario a
    SET A.RESULTADO2=FUNC_CORR(SUBSTR(A.MAIL,INSTR(A.MAIL,'@')+1),'HOTMAIL.COM');
    commit;
   --------------------------------------------------------------------------
   /*
   T18. INSERCION DE LOS MOTIVADOS MAIL
   Se ingresan los motivados identificados del dia que incluyen la informacion de
   fotoequipos y la basemail diaria cruzado con el fa_motivados_semanal y que no
   se encuentre en fa_basedesafiliados_sd
   */
   --------------------------------------------------------------------------
    /*INSERT INTO fa_motivadosmail_diario
    (cuenta, mail, base, ciclo, nombres, motivo, canalventa, region, ruccompania, tipodocumento,
    codigocompania, razonsocial, departamento, provincia, fechaingreso, tipopersona)
    WITH companiasactivassuspendidas AS
        (SELECT X.numerocuentacompania cta_cia
        FROM fotoequipos x, pm_planes y
        WHERE X.CODIGOPLANTARIFARIOBSCS = Y.C_PLAN(+)
        AND y.product NOT IN ('iDen Pre','IN Pre','Non PTT Prepago','Fijo Movil Prepago')
        AND x.estadocontrato IN ('Activo', 'Suspendido')
        GROUP BY X.numerocuentacompania
        )
    SELECT a.cuenta, a.mail, a.base, a.ciclo, a.nombres, a.motivo, b.canalventa,
    b.region, b.ruccompania, b.tipodocumento, b.codigocompania, b.razonsocial,
    b.departamento, b.provincia, b.fechaingreso, b.tipopersona
    FROM fa_motivados_semanal a,companiasactivassuspendidas c , p_compania b
    WHERE FN_DECODIFICA_CUENTA(a.cuenta) = b.cuentacompania(+)
    AND FN_DECODIFICA_CUENTA(a.cuenta) = c.cta_cia
    AND NOT EXISTS
            (SELECT 1
            FROM fa_afiliadosmail_diario g
            WHERE b.codigocompania = g.codigocompania
            AND a.base = g.base
            AND g.companhiaactiva = 'Activa'
            )
    AND NOT EXISTS
            (SELECT 1
            FROM fa_basedesafiliados_sd v
            WHERE UPPER (v.mail) = a.mail
            );
*/
    MERGE INTO
   (
   SELECT  c4.territorio AS motivo,
     c4.clasificacion AS fecha,c4.consultor
    FROM fa_afiliadosmail_diario c4 where c4.territorio IS NULL
    AND c4.clasificacion IS NULL
   )A
   USING
   (
   SELECT
   c.territorio AS motivoE, c.clasificacion AS fechaE,c.consultor
   FROM base_consultores c
   )B
   ON
   (
   B.consultor  = A.consultor

   )
   WHEN MATCHED THEN
   UPDATE SET motivo = motivoE, fecha = fechaE;

    COMMIT;

    UPDATE fa_afiliadosmail_diario
    SET clasificacion= 'Tiendas Propias'
    WHERE grupo= 'CAP';
    COMMIT;

    UPDATE fa_afiliadosmail_diario
    SET clasificacion = 'CAL Tercerizado'
    WHERE grupo = 'CAL Tercerizado';
    COMMIT;

    UPDATE fa_afiliadosmail_diario
    SET clasificacion = 'CAL Inhouse'
    WHERE grupo = 'CAL Inhouse';
    COMMIT;

    UPDATE fa_afiliadosmail_diario
    SET clasificacion = 'Web'
    WHERE grupo = 'Web';
    COMMIT;

    UPDATE fa_afiliadosmail_diario
    SET clasificacion= 'NO CLASIFICADO'
    WHERE clasificacion IS NULL ;
    COMMIT;

    UPDATE fa_afiliadosmail_diario
    SET territorio= 'NO CLASIFICADO'
    WHERE territorio IS NULL ;
    COMMIT;

   --------------------------------------------------------------------------
   /*
   T23. DEPURACION DE FA_PROSPECTOSMAIL_DIARIO DE BASE MAIL
   se identifican los fa_prospectosmail_diario dentro de la fa_afiliadosmail_diario
   para eliminarlos para evitar redundancia
   */
   --------------------------------------------------------------------------
    DELETE from fa_afiliadosmail_diario Y
    WHERE EXISTS
        (SELECT 1 FROM
                (SELECT a.ruccompania
                FROM p_compania a, fotoequipos b
                WHERE a.ruccompania=b.ruccompania(+) AND a.tipocompania='Prospecto') x
    WHERE x.ruccompania=y.ruccompania)
    AND y.ruccompania IS NOT NULL;
    COMMIT;

   --------------------------------------------------------------------------
   /*
   T24. CORRECCION DE DOMINIOS
   se identifican los dominios erroneos dentro de la tabla de validacion de correo
   */
   --------------------------------------------------------------------------
    MERGE INTO
   (select mail,correccionmail AS mailc from FA_AFILIADOSMAIL_DIARIO)A
   USING
   (SELECT b.correccion,b.error
    FROM fa_correccion_mail b
   )B
   ON
   (
   SUBSTR(A.mail,INSTR(A.mail,'@')+1) = B.error
   )
   WHEN MATCHED THEN
   UPDATE SET  a.mailc= REPLACE(a.mail, SUBSTR(a.mail,INSTR(a.mail,'@')+1), b.correccion);

    COMMIT;

    MERGE INTO
   (
   SELECT c4.fechaafiliacion as fechaafil,c4.consultor as consultor,c4.grupo as grupo,  c4.subgrupo as subgrupo,c4.codigocompania
    FROM fa_afiliadosmail_diario c4
   )A
   USING
   (
    SELECT c.fechaingresoincidente as fechaafilE,c.identificadorusuariovantive as consultorE,c.grupo as grupoE, c.subgrupo AS subgrupoE,c.codigocompania
   FROM FA_RESUMENBASEMAIL_INCIDENTE c where to_char(fechaingresoincidente,'yyyymmdd')>'20160331'
   )B
   ON
   (
   B.codigocompania = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET fechaafil=fechaafilE,consultor=consultorE,grupo=grupoE,subgrupo=subgrupoE;
  commit;
   --------------------------------------------------------------------------
   /*
    cruce con base de sat push para actualizar el campo grupo
   */
   --------------------------------------------------------------------------

    MERGE INTO
    (
    SELECT NUMEROCUENTARESPONSABLE,consultor,grupo
    FROM FA_AFILIADOSMAIL_DIARIO
    ) a
    USING
    (
    SELECT COD_BSCS,'INC-RECIBOS' AS consultorE, 'Web' as grupoE
    FROM FA_SAT_PUSH
    GROUP BY COD_BSCS
    ) b
    ON
    (trim(a.numerocuentaresponsable)=trim(b.cod_bscs))
    WHEN MATCHED THEN
    UPDATE SET consultor = consultorE,
               grupo=grupoE;
    commit;

  update FA_AFILIADOSMAIL_DIARIO set esrechazado='NO' where esrechazado is null;
  COMMIT;

  MERGE INTO
   (
     SELECT  c4.esrechazado AS marca,c4.numerocuentaresponsable,c4.mail
        FROM FA_AFILIADOSMAIL_DIARIO c4
   )A
   USING
   (
   SELECT
   'SI' AS marcaE,c.codigocompania,c.email
   FROM fa_rechazados_basemail_ciclo c
   )B
   ON
   (
   FN_DECODIFICA_CUENTA(a.numerocuentaresponsable)=FN_DECODIFICA_CUENTA(b.codigocompania) and a.mail=b.email
   )
   WHEN MATCHED THEN
   UPDATE SET marca = marcaE;
   commit;

   --------------------------------------------------------------------------
   /*
   T25. INSERCION Y ACTUALIZACION DE REGISTROS HISTORICOS DE AFILIADOSMAIL_HISTORICO
   se ingresan SOLO los nuevos afiliados de la base mail para guardarlos dentro
   del historico de afiliadomail,adicionalmente se actualizan los datos de los clasificados
   */
   --------------------------------------------------------------------------
    INSERT INTO fa_afiliadosmail_historico
    (cuenta, base, fecha, grupo, fechaafiliacion, canalventa, codigocompaniahistorico,
    consultor, dealer, territorio, clasificacion, provincia, departamento,tipocompania,subgrupo,cargo,esrechazado
    )
    SELECT numerocuentaresponsable, base, sysdate - 1, grupo, fechaafiliacion, canalventa,
    codigocompania,consultor,dealer,territorio,clasificacion,'NO CLASIFICADO' provincia,'NO CLASIFICADO' departamento,tipocompania,subgrupo,cargo,esrechazado
    FROM fa_afiliadosmail_diario
    WHERE estado = 'NUEVO'
    AND companhiaactiva='Activa'
    GROUP BY NUMEROCUENTARESPONSABLE, BASE, sysdate - 1, GRUPO, FECHAAFILIACION, CANALVENTA,
    codigocompania, consultor, dealer, territorio, clasificacion, provincia, departamento,tipocompania,subgrupo,cargo,esrechazado;
    COMMIT;

    MERGE INTO
   (
   SELECT c4.provincia as consultor,c4.departamento as dealer,c4.codigocompaniahistorico
    FROM fa_afiliadosmail_historico c4 where (c4.provincia IS NULL OR c4.provincia = 'NO CLASIFICADO')
    AND (c4.departamento IS NULL OR c4.departamento = 'NO CLASIFICADO')
   )A
   USING
   (
   SELECT
   c.provincia as consultorE, c.departamento as dealerE,c.codigocompania
   FROM p_compania c
   )B
   ON
   (
   B.codigocompania = A.codigocompaniahistorico
   )
   WHEN MATCHED THEN
   UPDATE SET  consultor=consultorE,dealer=dealerE;

    COMMIT;
     --------------------------------------------------------------------------
   /*
   T27. CORRECCIÓN DE BASEMAIL MOTIVADOS
   */
   --------------------------------------------------------------------------
    INSERT INTO FA_RESUMEN_AFILIADOSMAIL (BASE, DOMINIO, CANTIDAD, FECHA)
    SELECT BASE,SUBSTR(MAIL,instr(MAIL,'@')+1,LENGTH(MAIL)) DOMINIO, COUNT(*) CANTIDAD,
           TO_CHAR(sysdate,'YYYYMMDD') FECHA
    FROM FA_AFILIADOSMAIL_DIARIO
    GROUP BY BASE,SUBSTR(MAIL,instr(MAIL,'@')+1,LENGTH(MAIL)),TO_CHAR(sysdate,'YYYYMMDD');
    commit;

    DELETE FROM FA_AFILIADOSMAIL_DIARIO_CORR;
    commit;

    INSERT INTO FA_AFILIADOSMAIL_DIARIO_CORR
    SELECT A.CODIGOCOMPANIA,A.NUMEROCUENTARESPONSABLE,A.TIPODOCUMENTO,A.RUCCOMPANIA,A.RAZONSOCIAL,A.CUENTACOMPANIA,A.PROVINCIA,A.DEPARTAMENTO,A.MAIL,A.CICLO,A.CANALVENTA,A.FECHAINGRESO,A.ESTADO,A.BASE,A.CARGO,A.TIPOPERSONA,A.ESTADO2,A.DISTRITO,A.CANTIDADEQUIPOS,A.ESTADODECOBRANZA,A.INDICECREDITICIO,A.RIESGOFINANCIERO,A.MARGENCONTRIBUCION,A.EVA,A.CANTIDAD3G,A.FECHAAFILIACION,A.GRUPO,A.DEALER,A.CONSULTOR,A.RESULTADO1,A.RESULTADO2,A.RESULTADO3,A.COMPANHIAACTIVA,A.NOMBRECONTACTO,A.TERRITORIO,A.CLASIFICACION,A.CORRECCIONMAIL,A.TIPOCOMPANIA,A.SUBGRUPO, 0 AS CTDAD, 0.0 AS CORREL1,SUBSTR(A.mail,INSTR(A.mail,'@')+1) DOMINIO, 0 AS CODCOMPANIAMATCH,'-' as DOMINIO_A, 0 as ctdad_m, '-' as mail_corr, 0 as Flag_Mod, 0 as Flag_Alerta
    FROM FA_AFILIADOSMAIL_DIARIO A;
    commit;

    MERGE INTO
   (
     SELECT  c4.codigoincidente AS motivo,c4.fechaincidente AS caso,c4.codigocompania
        FROM fa_afiliadosmail_diario c4
   )A
   USING
   (
   SELECT
   c.codigoincidente AS motivoE,c.fechaingresoincidente AS casoE,c.codigocompania
   FROM fa_resumenbasemail_incidente c
   )B
   ON
   (
   B.codigocompania  = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET MOTIVO = MOTIVOE,CASO = CASOE;
   commit;

   UPDATE fa_afiliadosmail_diario SET codigoincidente='-' WHERE codigoincidente IS NULL;
   commit;

    PRC_FA_BMAIL_ID_DOMINIOS;
    --PRC_FA_DOMINIO_NOTIFICA;

    INSERT INTO FA_AFILIADOSMAIL_DIARIO_ALERTA
    SELECT A.*, to_char(sysdate,'yyyymmdd') AS FECHA_ALERTA  FROM FA_AFILIADOSMAIL_DIARIO_CORR A
    WHERE FLAG_MOD = 1;
    commit;


END procesarbasemaildiaria;

procedure PROCESARREPORTECARGOREACT(SCICLO VARCHAR2) IS
BEGIN
-- PROPÓSITO:
-- Procesar la informacion de carga OCC por reactivacion calculando y clasifando la base
-- cargada de acuerdo a la cantidad de equipos activos y suspendidos;
--
-- HISTORIAL DE MODIFICACION
-- Usuario                           Fecha             Comentario
-- ----------                           ---------           ----------------------
-- CCHAHUAS                   09/03/2015    Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

PRC_FORMATEACUENTA('FA_OCCCR_OCC','CUENTA');
--------------------------------------------------------------------------
   /*
   T1. SE ENRIQUECE LA BASE FA_OCCCR_OCC CON UNIDADES
   Usando la foto de equipos se realiza un conteo de las unidades activas y suspendidas,
   solo usando las unidades de planes postpago
   */
--------------------------------------------------------------------------
MERGE INTO
   (
    SELECT c.equipospostactivos AS motivoE ,c.CUENTA
   FROM FA_OCCCR_OCC c
   )A
   USING
   (
   SELECT a.numerocuentaresponsable cuentacia, COUNT( * ) motivo
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo')
       and b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')  or plantarifario in ('Pack SIM','Pack SIM Pre activado','Pack Sim 3G IN Trasp','Pack Sim 3G Smart Trasp')
     /* AND b.g_osiptel NOT IN ('Prepago', 'IN Prepago')*/
      GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.CUENTA=B.cuentacia
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;
COMMIT;

MERGE INTO
   (
   SELECT c.equipospostsuspendidos AS motivoE ,c.CUENTA
   FROM FA_OCCCR_OCC c
   )A
   USING
   (
   SELECT a.numerocuentaresponsable cuentacia, COUNT( * ) motivo
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Suspendido')
      and b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')  or plantarifario in ('Pack SIM','Pack SIM Pre activado','Pack Sim 3G IN Trasp','Pack Sim 3G Smart Trasp')
     /* AND b.g_osiptel NOT IN ('Prepago','IN Prepago')*/
      GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.CUENTA=B.cuentacia
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;
COMMIT;
--------------------------------------------------------------------------
   /*
   T2. SE ACTUALIZA LA BASE FA_OCCCR_OCC CON ESTADOCOBRANZA Y TIPOCUENTA
   Usando la p_compania se actualiza la informacion de estadocobranza y el tipo de cuenta, asi como
   se procede con la identificacion de errores de fecha contra el ciclo correspondiente
   */
--------------------------------------------------------------------------
MERGE INTO
   (
   SELECT c.estadocobranza AS estadocobranzaE , C.TIPOCUENTA AS tipocuentaE,c.cuenta
   FROM FA_OCCCR_OCC c
   )A
   USING
   (
   SELECT estadocobranza,tipocuenta,cuentacompania from (
   SELECT
   c4.estadocobranza AS estadocobranza, c4.tipocuenta AS tipocuenta,c4.cuentacompania, row_number () over (partition by c4.cuentacompania order by fechacreacion desc) rn
   FROM  p_compania c4
   ) where rn=1
   )B
   ON
   (
   fn_decodifica_cuenta(A.cuenta)=B.cuentacompania
   )
   WHEN MATCHED THEN
   UPDATE SET estadocobranzaE=estadocobranza,tipocuentaE=tipocuenta;
COMMIT;

UPDATE FA_OCCCR_OCC a
SET a.clasificacion                              ='FECHA ERRONEA'
WHERE to_date(a.validodesde,'dd/mm/yyyy hh24:mi:ss')<>to_date((
   CASE
      WHEN sciclo='01'
      THEN '01/'||to_char(sysdate ,'MM/YYYY')||' 00:00'
      WHEN sciclo='03'
      THEN '16/'||to_char(sysdate ,'MM/YYYY')||' 00:00'
      WHEN sciclo='04'
      THEN '09/'||to_char(sysdate ,'MM/YYYY')||' 00:00'
      WHEN sciclo='05'
      THEN '23/'||to_char(sysdate ,'MM/YYYY')||' 00:00'
      end),'dd/mm/yyyy hh24:mi');
COMMIT;
--------------------------------------------------------------------------
   /*
   T3. SE ACTUALIZA LA BASE FA_OCCCR_OCC CON CLASIFICACION
   Con los campso de cantidad de equipos activos suspendidos se asigna la clasificacion de la tabla
   FA_OCCCR_OCC como 'posible error' si no tuviera ningun equipo o 'revisar' si es que almenos tuviera
   equipos suspendidos.
   */
--------------------------------------------------------------------------
UPDATE FA_OCCCR_OCC a
SET a.clasificacion                ='POSIBLE ERROR'
WHERE A.fueaplicado                ='N'
AND NVL(a.equipospostactivos,0)    =0
AND NVL(a.equipospostsuspendidos,0)=0;
UPDATE FA_OCCCR_OCC a
SET a.clasificacion                ='REVISAR'
WHERE A.fueaplicado                ='N'
AND NVL(a.equipospostactivos,0)    =0
AND NVL(a.equipospostsuspendidos,0)>0;
COMMIT;

UPDATE FA_OCCCR_OCC SET MONTONUM=TO_NUMBER(MONTO,'999999.99999999999');
COMMIT;

MERGE INTO FA_OCCCR_OCC A
USING ( SELECT numerocuentacompania
             , SUM(CASE WHEN UPPER(product) LIKE '%POST%'  or plantarifario in ('Pack SIM','Pack SIM Pre activado','Pack Sim 3G IN Trasp','Pack Sim 3G Smart Trasp') AND estadocontrato = 'Activo' THEN 1 ELSE 0 END) activos_post
             , SUM(CASE WHEN UPPER(product) LIKE '%POST%'  or plantarifario in ('Pack SIM','Pack SIM Pre activado','Pack Sim 3G IN Trasp','Pack Sim 3G Smart Trasp') AND estadocontrato = 'Suspendido' THEN 1 ELSE 0 END) suspendidos_post
             , SUM(CASE WHEN UPPER(product) LIKE '%PRE%' or plantarifario not in ('Pack SIM','Pack SIM Pre activado','Pack Sim 3G IN Trasp','Pack Sim 3G Smart Trasp') AND estadocontrato = 'Activo' THEN 1 ELSE 0 END) activos_pre
          FROM FOTOEQUIPOS
         WHERE numerocuentacompania IS NOT null
         GROUP BY numerocuentacompania
        ) B
ON (a.cuenta = B.numerocuentacompania )
WHEN MATCHED THEN UPDATE SET A.cant_activos_post = B.activos_post
                           , A.cant_suspendidos_post = B.suspendidos_post
                           , A.cant_activos_pre = B.activos_pre;
COMMIT;

MERGE INTO
   (
   SELECT c.tienepacksim AS motivoE ,c.CUENTA
   FROM FA_OCCCR_OCC c
   )A
   USING
   (
   select cuentacia,'SI' motivo from (
      SELECT a.numerocuentaresponsable cuentacia, COUNT( * ) motivo
            FROM fotoequipos a
            LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
            WHERE a.estadocontrato                           IN ('Activo','Suspendido')
            and plantarifario in ('Pack SIM','Pack SIM Pre activado','Pack Sim 3G IN Trasp','Pack Sim 3G Smart Trasp')
           /* AND b.g_osiptel NOT IN ('Prepago','IN Prepago')*/
            GROUP BY a.numerocuentaresponsable
      ) where motivo=1
   )B
   ON
   (
   A.CUENTA=B.cuentacia
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;
COMMIT;

END PROCESARREPORTECARGOREACT;

procedure PROCESARNEVERPAIDMAIL(SANHO VARCHAR2,SMES VARCHAR2) IS
BEGIN
-- PROPÓSITO:
-- Permite cargar y procesar la informacion de bases Never Paid de correo electronico para su analisis y validacion;
--
-- HISTORIAL DE MODIFICACION
-- Usuario                              Fecha               Comentario
-- ----------                           ---------           ----------------------
-- CCHAHUAS                   12/03/2015          Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

--------------------------------------------------------------------------
   /*
   T1. SE ACTUALIZAN LA TABLA DE NEVERPAID_PAGOS Y NEVERPAID_DESACTIVADOS
   Se genera una actualizacion sobre FA_NEVERPAID_PAGOS en el que se transforma el pago para poder calcularlo
   se debe eliminar los registros de FA_NEVERPAID_DESACTIVADOS repetido o antiguos
   */
--------------------------------------------------------------------------
UPDATE FA_NEVERPAID_PAGOS SET PAYMENTNUM=TO_NUMBER(TRIM(PAYMENT));

DELETE
FROM FA_NEVERPAID_DESACTIVADOS a
WHERE EXISTS
   (SELECT 1
   FROM
      (SELECT x.numerocuentaresponsable
      FROM FA_NEVERPAID_DESACTIVADOS x
      LEFT JOIN pm_planes y ON x.codigoplantarifariobscs=y.c_plan
      WHERE y.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      /*y.g_osiptel NOT IN ('Prepago','IN Prepago')*/
     and x.fechacargacontrato<add_months(to_date(SANHO||SMES,'yyyymm'),1)-180
      GROUP BY x.numerocuentaresponsable
      ) c
   WHERE a.numerocuentaresponsable=c.numerocuentaresponsable
   );
--------------------------------------------------------------------------
   /*
   T2. SE MARCAN LOS REGISTROS NUEVOS DE NEVER_PAID_DESACTIVADOS
   Se inicia la marcacion del orden de los contratos NEVERPAID_DESACTIVADOS para
   luego eliminar todos aquellos que no son los mas recientes.
   */
--------------------------------------------------------------------------
 /*  UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.ORDEN AS motivoE , c4.NUM AS motivo
   FROM FA_NEVERPAID_DESACTIVADOS c,
        (SELECT a.codigocontratobscs,
         a.fechacargacontrato,A.codigocontrato, ROW_NUMBER () OVER (PARTITION
         BY a.codigocontratobscs ORDER BY a.fechacargacontrato DESC,
         a.codigocontrato DESC) AS num
      FROM FA_NEVERPAID_DESACTIVADOS A
      ) c4
   WHERE c.codigocontratobscs=c4.codigocontratobscs
   AND c.fechacargacontrato  =c4.fechacargacontrato
   AND c.codigocontrato      =C4.CODIGOCONTRATO
   )
SET motivoE = motivo ;*/
/*validado 1,563*/
MERGE INTO
   (
    SELECT c.ORDEN AS motivoE,c.codigocontratobscs,c.fechacargacontrato,c.codigocontrato
   FROM FA_NEVERPAID_DESACTIVADOS c
   )A
   USING
   (
   SELECT a.codigocontratobscs,
         a.fechacargacontrato,A.codigocontrato, ROW_NUMBER () OVER (PARTITION
         BY a.codigocontratobscs ORDER BY a.fechacargacontrato DESC,
         a.codigocontrato DESC) AS MOTIVO
      FROM FA_NEVERPAID_DESACTIVADOS A
   )B
   ON
   (
   A.codigocontratobscs=B.codigocontratobscs
   AND A.fechacargacontrato  =B.fechacargacontrato
   AND A.codigocontrato      =B.CODIGOCONTRATO
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

DELETE FROM FA_NEVERPAID_DESACTIVADOS WHERE ORDEN<>1;
--------------------------------------------------------------------------
   /*
   T3. SE ELIMINAN REGISTROS DE FA_NEVERPAID_DESACTIVADOS
   Se identifican las cuentas responsables y contratos que son POSTPAGO y
   que se encuentren ACTIVOS o SUSPENDIDOS, finalmente se depura la
   informacion correspondiente al ciclo
   */
--------------------------------------------------------------------------
 DELETE
FROM FA_NEVERPAID_DESACTIVADOS a
WHERE EXISTS
   (SELECT 1
   FROM
      (SELECT x.numerocuentaresponsable
      FROM FA_NEVERPAID_DESACTIVADOS x
      LEFT JOIN pm_planes y ON x.codigoplantarifariobscs=y.c_plan
      WHERE y.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      /*y.g_osiptel NOT                            IN ('Prepago',         'IN Prepago')*/
      AND x.estadocontrato IN ('Activo', 'Suspendido')
      GROUP BY x.numerocuentaresponsable
      ) c
   WHERE a.numerocuentaresponsable=c.numerocuentaresponsable
   );

    DELETE
FROM FA_NEVERPAID_DESACTIVADOS a
WHERE EXISTS
   (SELECT 1
   FROM
      (SELECT x.codigocontratobscs
      FROM FA_NEVERPAID_DESACTIVADOS x
      LEFT JOIN pm_planes y ON x.codigoplantarifariobscs=y.c_plan
      WHERE y.product  in ('iDen Pre','IN Pre','Non PTT Prepago')
      /*y.g_osiptel                             IN ('Prepago',         'IN Prepago')*/
      GROUP BY x.codigocontratobscs
      ) c
   WHERE a.codigocontratobscs=c.codigocontratobscs
   );

  DELETE
FROM FA_NEVERPAID_DESACTIVADOS a
WHERE TO_CHAR(a.fechadesactivacioncontrato,'YYYYMM')<>SANHO
   ||SMES;
--------------------------------------------------------------------------
   /*
   T4. SE ELIMINAN LOS NEVERPAID_PAGOS QUE SON DESACTIVADOS
   Se filtra la informacion de que se encuentra NEVERPAID_PAGOS que se
   encuentra en FA_DESACTIVADOS y que la tengan fecha de activacion menor
   */
--------------------------------------------------------------------------
   DELETE
FROM FA_NEVERPAID_PAGOS a
WHERE EXISTS
   (SELECT 1
   FROM FA_NEVERPAID_DESACTIVADOS b
   WHERE a.numerocuentaresponsable=b.numerocuentaresponsable
   AND b.fechadesactivacioncontrato<a.fecha);
--------------------------------------------------------------------------
   /*
   T5. SE ELIMINA LA INFORMACION DE DEPOSITO GARANTIA
   Se identifica la informacion de NEVERPAID_DESACTIVADOS  que es de tipo
   Deposito de Garantia y que su pago es mayor a 0 para poder eliminarlo de los
   NEVERPAID_DESACTIVADOS
   */
--------------------------------------------------------------------------
DELETE
FROM FA_NEVERPAID_DESACTIVADOS a
WHERE EXISTS
   (SELECT 1
   FROM
      (SELECT NUMEROCUENTARESPONSABLE
      FROM FA_NEVERPAID_PAGOS where remark not like '%Dep. Gtía%'
      GROUP BY NUMEROCUENTARESPONSABLE
      HAVING SUM(PAYMENTNUM)>0
      ) b
   WHERE a.numerocuentaresponsable=b.numerocuentaresponsable
   ) ;
--------------------------------------------------------------------------
   /*
   T5. ACTUALIZACION SOBRE NEVERPAID_DESACTIVADOS PARA COMPLETAR
   Se marcan los registros de NEVERPAID_DESACTIVADOS de acuerdo a su tipo de base,
   posteriormente se incluye una marca de cuales pertenecen a un rechazado fisico y
   se incluyen informacion clasificatoria como tipo de venta,ubicacion geografica o informacion de la empresa
   */
--------------------------------------------------------------------------
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.indbasemail AS motivoE , C4.base AS motivo
   FROM FA_NEVERPAID_DESACTIVADOS c, fa_afiliadosmail_historico c4
   WHERE   fn_decodifica_cuenta(c.numerocuentaresponsable)=c4.cuenta and c4.base='1'
   )
SET motivoE=motivo;*/
/*validado 337*/
MERGE INTO
   (
   SELECT c.indbasemail AS motivoE ,c.numerocuentaresponsable
   FROM FA_NEVERPAID_DESACTIVADOS c
   )A
   USING
   (
   SELECT
   C4.base AS motivo,c4.cuenta,c4.base
   FROM fa_afiliadosmail_historico c4
   )B
   ON
   (
   fn_decodifica_cuenta(A.numerocuentaresponsable)=B.cuenta and B.base='1'
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE=motivo;

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.indbasemail2 AS motivoE , C4.base AS motivo
   FROM FA_NEVERPAID_DESACTIVADOS c, fa_afiliadosmail_historico c4
   WHERE   fn_decodifica_cuenta(c.numerocuentaresponsable)=c4.cuenta and c4.base='2'
   )
SET motivoE=motivo;*/
/*validado 16*/

   MERGE INTO
   (
    SELECT c.indbasemail2 AS motivoE,c.numerocuentaresponsable
   FROM FA_NEVERPAID_DESACTIVADOS c
   )A
   USING
   (
   SELECT
    C4.base AS motivo,c4.cuenta,c4.base
   FROM fa_afiliadosmail_historico c4
   )B
   ON
   (
    fn_decodifica_cuenta(A.numerocuentaresponsable)=B.cuenta and B.base='2'
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE=motivo;

  UPDATE FA_NEVERPAID_DESACTIVADOS a
SET a.indrechazadofisico='X'
WHERE EXISTS
   (SELECT 1
   FROM FA_BASEMOTIVADOSTOTAL b
   WHERE a.numerocuentaresponsable=b.cuenta
   and TO_DATE (b.mes, 'mon-yy', 'nls_date_language=spanish')>=add_months(to_date(Sanho||Smes,'yyyymm'),-4)
   and TO_DATE (b.mes, 'mon-yy', 'nls_date_language=spanish')<add_months(to_date(Sanho||Smes,'yyyymm'),1)
   );


   UPDATE FA_NEVERPAID_DESACTIVADOS a
SET a.INDRECHAZADOELECTRONICO='X'
WHERE EXISTS
   (SELECT 1
   FROM FA_MOTIVADOS_SEMANAL b
   WHERE (A.NUMEROCUENTARESPONSABLE=B.CUENTA OR FN_DECODIFICA_CUENTA(A.NUMEROCUENTARESPONSABLE)=B.CUENTA)
    );

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.canalventa AS canalventaE , C4.canalventa AS canalventa,c.consultor
      AS consultorE , C4.consultor AS consultor, c.dealer AS dealerE ,
      C4.dealer AS dealer, c.tipopersona AS tipopersonaE , C4.tipopersona AS
      tipopersona, c.tipodocumento AS tipodocumentoE , C4.tipodocumento AS
      tipodocumento, c.giro AS giroE , C4.giro AS giro, c.subgiro AS subgiroE ,
      C4.subgiro AS subgiro, c.region AS regionE , C4.region AS region,
      c.departamento AS departamentoE , C4.departamento AS departamento,
      c.provincia AS provinciaE , C4.provincia AS provincia, c.distrito AS
      distritoE , C4.distrito AS distrito, c.fechaingreso AS fechaingresoE ,
      C4.fechaingreso AS fechaingreso, c.CICLO AS cicloE , C4.CICLO AS ciclo
   FROM FA_NEVERPAID_DESACTIVADOS c, p_compania c4
   WHERE c.codigocompania=c4.codigocompania
   )
SET canalventaE              =canalventa,consultorE=consultor,dealerE=dealer,tipopersonaE=
   tipopersona,tipodocumentoE=tipodocumento, giroE=giro,subgiroE=subgiro,
   regionE                   =region,departamentoE=departamento,provinciaE=
   provincia,distritoE       =distrito,fechaingresoE=fechaIngreso,cicloE=ciclo;*/
   /*validado 1,563*/
   MERGE INTO
   (
   SELECT c.canalventa AS canalventaE ,c.consultor
      AS consultorE ,  c.dealer AS dealerE ,
       c.tipopersona AS tipopersonaE ,  c.tipodocumento AS tipodocumentoE ,  c.giro AS giroE , c.subgiro AS subgiroE ,
       c.region AS regionE ,
      c.departamento AS departamentoE ,
      c.provincia AS provinciaE ,  c.distrito AS
      distritoE ,  c.fechaingreso AS fechaingresoE ,
       c.CICLO AS cicloE , c.codigocompania
   FROM FA_NEVERPAID_DESACTIVADOS c
   )A
   USING
   (
   SELECT
    C4.canalventa AS canalventa, C4.consultor AS consultor, C4.dealer AS dealer, C4.tipopersona AS tipopersona,  C4.giro AS giro, C4.region AS region, C4.tipodocumento AS tipodocumento, C4.subgiro AS subgiro, C4.departamento AS departamento, C4.provincia AS provincia, C4.distrito AS distrito, C4.fechaingreso AS fechaingreso, C4.CICLO AS ciclo,c4.codigocompania
   FROM  p_compania c4
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET canalventaE              =canalventa,consultorE=consultor,dealerE=dealer,tipopersonaE=
   tipopersona,tipodocumentoE=tipodocumento, giroE=giro,subgiroE=subgiro,
   regionE                   =region,departamentoE=departamento,provinciaE=
   provincia,distritoE       =distrito,fechaingresoE=fechaIngreso,cicloE=ciclo;

--------------------------------------------------------------------------
   /*
   T5. GENERACION DE NEVERPAID_RESUMEN
   Se generan los nuevos Registros de NEVERPAID_RESUMEN en base
   a NEVERPAID_DESACTIVADOS, teniendo como cantidad la cantidad de companias distintas
   */
--------------------------------------------------------------------------

delete from FA_NEVERPAID_RESUMEN where to_char(periodo,'yyyymm')=sanho||smes;

   INSERT
INTO FA_NEVERPAID_RESUMEN
   (
      PERIODO, CANTIDADCOMPANIAS, CANTIDADCENTRODECOSTOS, CICLO, DISTRITO,
      PROVINCIA, REGION, TIPODOCUMENTO, TIPOPERSONA, CANALVENTA, CONSULTOR,
      CANTIDADCONTRATOS, INDBASEMAIL, INDBASEMAIL2, INDRECHAZADOELECTRONICO,
      INDRECHAZADOFISICO, DEPARTAMENTO, GIRO, SUBGIRO, DEALER
      --,CODIGOPLANTARIFARIOBSCS, PRODUCTO
   )
 SELECT to_date(sanho||smes,'yyyymm') periodo,COUNT(DISTINCT a.codigocompania) cantidadcompanias, COUNT(
   DISTINCT a.NUMEROCUENTARESPONSABLE) cantidadcentrodecostos, a.ciclo ,a.distrito,
   a.provincia,a.region,a.tipodocumento,a.tipopersona, a.canalventa,a.consultor
   , COUNT( a.codigocontratobscs) cantidadcontratos, a.INDBASEMAIL,
   a.INDBASEMAIL2, a.INDRECHAZADOELECTRONICO, a.INDRECHAZADOFISICO,
   a.departamento,a.giro, a.subgiro,a.dealer
   --,a.codigoplantarifariobscs,a.producto
FROM FA_NEVERPAID_DESACTIVADOS a
GROUP BY  a.ciclo, a.distrito,
   a.provincia,a.region,a.tipodocumento,a.tipopersona, a.canalventa,a.consultor
   , a.INDBASEMAIL, a.INDBASEMAIL2, a.INDRECHAZADOELECTRONICO,
   a.INDRECHAZADOFISICO,a.departamento,a.giro,a.subgiro,a.dealer,
   --a.codigoplantarifariobscs,a.producto,
   to_date(sanho||smes,'yyyymm');

--------------------------------------------------------------------------
   /*
   T5. GENERACION DE NEVERPAID_RESUMEN_CONTRATOS
   Se generan los nuevos Registros de NEVERPAID_RESUMEN_CONTRATOS en base
   a NEVERPAID_DESACTIVADOS, teniendo como cantidad la cantidad de contratos por cada plan y producto
   */
--------------------------------------------------------------------------

 INSERT
INTO FA_NEVERPAID_RESUMEN_CONTRATOS
   (
      PERIODO, CANTIDADCONTRATOS, CODIGOPLANTARIFARIOBSCS, PRODUCTO
   )
SELECT to_date(sanho
   ||smes,'yyyymm') periodo , COUNT( a.codigocontratobscs) cantidadcontratos,
   a.codigoplantarifariobscs,a.producto
FROM FA_NEVERPAID_DESACTIVADOS a
GROUP BY to_date(sanho
   ||smes,'yyyymm') , a.codigoplantarifariobscs,a.producto;

END PROCESARNEVERPAIDMAIL;

PROCEDURE PROCESARDEVNEGOCIACION IS

BEGIN
DELETE
FROM FA_DEVNEGOC_INCIDENTES a
WHERE EXISTS
   (SELECT 1 FROM FA_DEVNEGOC_PORTAL b WHERE a.codigoincidente=
      b.codigoincidente
   );

  /*
   UPDATE FA_DEVNEGOC_INCIDENTES
SET observacion              ='Error - Monto mayor a 30'
WHERE to_number(trunc(montoreclamadoincidente))>30
AND inboxasignado           IS NULL;
*/
 UPDATE FA_DEVNEGOC_INCIDENTES
SET observacion              ='Error - Monto mayor a 84'
WHERE to_number(trunc(montoreclamadoincidente))>84
AND inboxasignado           IS NULL;

UPDATE FA_DEVNEGOC_INCIDENTES
SET observacion              ='Error - Cuenta large'
WHERE codigocuentacompania not like '1.%'
AND inboxasignado           IS NULL;

UPDATE FA_DEVNEGOC_INCIDENTES
SET observacion              ='Error - Estado cobranza'
WHERE estadocobranza in ('Judicial','Pre-Judicial')
AND inboxasignado           IS NULL;


UPDATE FA_DEVNEGOC_INCIDENTES
SET observacion              ='Error - Diferentes días'
WHERE fechaingresoincidente<>fechacierreincidente
AND inboxasignado           IS NULL;

END PROCESARDEVNEGOCIACION;


PROCEDURE PROCESARREPORTERV(SANHO VARCHAR2,SMES VARCHAR2,SCICLO VARCHAR2)
IS
BEGIN
-- PROPÓSITO:
-- Carga la informacion del reporte de registro de ventas, para despues cruzarlo y exportarlo para su validacion
--
-- HISTORIAL DE MODIFICACION
-- Usuario                            Fecha                 Comentario
-- ----------                           ---------               ----------------------
-- CCHAHUAS                   12/03/2015          Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

--------------------------------------------------------------------------
   /*
   T1. ACTUALIZACION DE FA_REGISTROVENTA
   Se normaliza la cuenta de FA_REGISTROVENTA a una cuenta madre,
   adicionalmente se enriquecen los campos descriptivos cruzando la base de
   Registro Venta con la PCompania
   */
--------------------------------------------------------------------------
UPDATE fa_registroventa
SET code=FN_DECODIFICA_CUENTA(code)
   ||'.00.00.1000'
   ||SUBSTR(code,-2,2)
WHERE instr(code,'.',1,3)=0
AND instr(code,'.',1,2) <>0;

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE , c.ruccompania AS ruccompania,
      t.TIPOCUENTA AS tipocuentaE , c.tipocuenta AS tipocuenta, t.CANALVENTA AS
      canalventaE , c.canalventa AS canalventa, t.CONSULTOR AS consultorE ,
      c.consultor AS consultor, t.DEALER AS dealerE , c.dealer AS dealer,
      t.TIPOPERSONA AS tipopersonaE , c.tipopersona AS tipopersona,
      t.TIPODOCUMENTO AS tipodocumentoE , c.tipodocumento AS tipodocumento,
      t.SEGMENTO AS segmentoE , c.segmento AS segmento, t.TIPOCOMPANIA AS
      tipocompaniaE , c.tipocompania AS tipocompania, t.CODIGOCOMPANIA AS
      codigocompaniaE , c.codigocompania AS codigocompania,
      t.provincia as provinciaE,c.provincia as provincia,
      t.departamento as departamentoE,c.departamento as departamento
   FROM FA_REGISTROVENTA t, P_COMPANIA c
   WHERE FN_DECODIFICA_CUENTA(t.CODE)=c.CUENTACOMPANIA
   )
SET ruccompaniaE                =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE                   =consultor, dealerE=dealer, tipopersonaE=tipopersona,
   tipodocumentoE               =tipodocumento, segmentoE=segmento, tipocompaniaE=
   tipocompania ,codigocompaniaE=codigocompania,provinciaE=provincia,departamentoE=departamento;*/
   /*validado 0*/
   MERGE INTO
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE , t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPOPERSONA AS tipopersonaE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE ,  t.TIPOCOMPANIA AS
      tipocompaniaE ,  t.CODIGOCOMPANIA AS
      codigocompaniaE ,
      t.provincia as provinciaE,
      t.departamento as departamentoE,t.CODE
   FROM FA_REGISTROVENTA t
   )A
   USING
   (
   select * from (
   SELECT
    c.ruccompania AS ruccompania, c.tipocuenta AS tipocuenta, c.canalventa AS  canalventa, c.consultor AS consultor,  c.dealer AS dealer,
    c.tipopersona AS tipopersona, c.tipodocumento AS tipodocumento, c.segmento AS segmento, c.tipocompania AS tipocompania,
    c.codigocompania AS codigocompania, c.provincia as provincia, c.departamento as departamento,c.CUENTACOMPANIA,row_number () over (partition by c.cuentacompania order by c.fechacreacion) as rn
   FROM  P_COMPANIA c where c.cuentacompania is not null
   ) where rn=1
   )B
   ON
   (
   FN_DECODIFICA_CUENTA(A.CODE)=B.CUENTACOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET ruccompaniaE                =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE                   =consultor, dealerE=dealer, tipopersonaE=tipopersona,
   tipodocumentoE               =tipodocumento, segmentoE=segmento, tipocompaniaE=
   tipocompania ,codigocompaniaE=codigocompania,provinciaE=provincia,departamentoE=departamento;

   /*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE , c.ruccompania AS ruccompania,
      t.TIPOCUENTA AS tipocuentaE , c.tipocuenta AS tipocuenta, t.CANALVENTA AS
      canalventaE , c.canalventa AS canalventa, t.CONSULTOR AS consultorE ,
      c.consultor AS consultor, t.DEALER AS dealerE , c.dealer AS dealer,
      t.TIPOPERSONA AS tipopersonaE , c.tipopersona AS tipopersona,
      t.TIPODOCUMENTO AS tipodocumentoE , c.tipodocumento AS tipodocumento,
      t.SEGMENTO AS segmentoE , c.segmento AS segmento, t.TIPOCOMPANIA AS
      tipocompaniaE , c.tipocompania AS tipocompania, t.CODIGOCOMPANIA AS
      codigocompaniaE , c.codigocompania AS codigocompania,
      t.provincia as provinciaE,c.provincia as provincia,
      t.departamento as departamentoE,c.departamento as departamento
   FROM FA_REGISTROVENTA t, P_COMPANIA c
   WHERE t.company=c.razonsocial and t.codigocompania is null
   )
SET ruccompaniaE   =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE      =consultor, dealerE=dealer, tipopersonaE=tipopersona,
   tipodocumentoE  =tipodocumento, segmentoE=segmento, tipocompaniaE=tipocompania
   ,codigocompaniaE=codigocompania,provinciaE=provincia,departamentoE=departamento;*/
   /*validado 0*/
  MERGE INTO
   (
    SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE ,  t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPOPERSONA AS tipopersonaE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE ,  t.TIPOCOMPANIA AS
      tipocompaniaE ,  t.CODIGOCOMPANIA AS
      codigocompaniaE ,
      t.provincia as provinciaE,
      t.departamento as departamentoE,t.company
   FROM FA_REGISTROVENTA t where t.codigocompania is null
   )A
   USING
   (
   select ruccompania,tipocuenta,canalventa,consultor,dealer,tipopersona,segmento,tipodocumento,tipocompania,codigocompania,provincia,departamento,razonsocial from (
   SELECT
   c.ruccompania AS ruccompania, c.tipocuenta AS tipocuenta, c.canalventa AS canalventa, c.consultor AS consultor, c.dealer AS dealer, c.tipopersona AS tipopersona, c.segmento AS segmento, c.tipodocumento AS tipodocumento, c.tipocompania AS tipocompania, c.codigocompania AS codigocompania, c.provincia as provincia, c.departamento as departamento,c.razonsocial,row_number () over (partition by c.razonsocial order by c.codigocompania desc) rn
   FROM P_COMPANIA c,FA_REGISTROVENTA t
   where t.company=c.razonsocial
   and t.company is not null
   )
   where rn=1
   )B
   ON
   (
   A.company=B.razonsocial
   )
   WHEN MATCHED THEN
   UPDATE SET ruccompaniaE   =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE      =consultor, dealerE=dealer, tipopersonaE=tipopersona,
   tipodocumentoE  =tipodocumento, segmentoE=segmento, tipocompaniaE=tipocompania
   ,codigocompaniaE=codigocompania,provinciaE=provincia,departamentoE=departamento;
   /*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE , c.ruccompania AS ruccompania,
      t.TIPOCUENTA AS tipocuentaE , c.tipocuenta AS tipocuenta, t.CANALVENTA AS
      canalventaE , c.canalventa AS canalventa, t.CONSULTOR AS consultorE ,
      c.consultor AS consultor, t.DEALER AS dealerE , c.dealer AS dealer,
      t.TIPOPERSONA AS tipopersonaE , c.tipopersona AS tipopersona,
      t.TIPODOCUMENTO AS tipodocumentoE , c.tipodocumento AS tipodocumento,
      t.SEGMENTO AS segmentoE , c.segmento AS segmento, t.TIPOCOMPANIA AS
      tipocompaniaE , c.tipocompania AS tipocompania, t.CODIGOCOMPANIA AS
      codigocompaniaE , c.codigocompania AS codigocompania,
      t.provincia as provinciaE,c.provincia as provincia,
      t.departamento as departamentoE,c.departamento as departamento
   FROM FA_REGISTROVENTA t, P_COMPANIA c
   WHERE t.ruc=c.ruccompania and t.codigocompania is null
   )
SET ruccompaniaE   =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE      =consultor, dealerE=dealer, tipopersonaE=tipopersona,
   tipodocumentoE  =tipodocumento, segmentoE=segmento, tipocompaniaE=tipocompania
   ,codigocompaniaE=codigocompania,provinciaE=provincia,departamentoE=departamento;*/
   /*validado 0*/
   MERGE INTO
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE ,  t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPOPERSONA AS tipopersonaE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE ,  t.TIPOCOMPANIA AS
      tipocompaniaE ,  t.CODIGOCOMPANIA AS
      codigocompaniaE ,
      t.provincia as provinciaE,
      t.departamento as departamentoE, t.ruc
   FROM FA_REGISTROVENTA t where t.codigocompania is null
   )A
   USING
   (
   SELECT
   c.ruccompania AS ruccompania, c.tipocuenta AS tipocuenta, c.canalventa AS canalventa, c.consultor AS consultor, c.dealer AS dealer, c.tipopersona AS tipopersona, c.tipodocumento AS tipodocumento, c.segmento AS segmento, c.tipocompania AS tipocompania, c.codigocompania AS codigocompania, c.provincia as provincia, c.departamento as departamento
   FROM  P_COMPANIA c
   )B
   ON
   (
   A.ruc=B.ruccompania
   )
   WHEN MATCHED THEN
   UPDATE SET ruccompaniaE   =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE      =consultor, dealerE=dealer, tipopersonaE=tipopersona,
   tipodocumentoE  =tipodocumento, segmentoE=segmento, tipocompaniaE=tipocompania
   ,codigocompaniaE=codigocompania,provinciaE=provincia,departamentoE=departamento;

--------------------------------------------------------------------------
   /*
   T2. DEFINICION DE TIPO DOCUMENTO
   Se usa la el largo del documento para definir si es un RUC o un DNI
   */
--------------------------------------------------------------------------
  UPDATE FA_REGISTROVENTA
SET tipodocumento     ='RUC',RUCCOMPANIA=ruc
WHERE codigocompania IS NULL
AND LENGTH(RUC) =11;

UPDATE FA_REGISTROVENTA
SET tipodocumento='DNI'
WHERE tipodocumento IS NULL;
--------------------------------------------------------------------------
   /*
   T3. CALCULO DE METRICAS DE CANTIDAD DE EQUIPOS POR TIPO
   Se realiza el calculo de la cantidad de equipos por cada tipo de equipo o plan,
   los cuales son cruzados a su vez usando el codigo de compania y el numero
   de cuenta responsable
   */
--------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------Cruzados por codigocompania----------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------
 --Equipos totales
   /*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.EQTOTAL AS motivoE , c4.cantidad AS motivo
   FROM FA_REGISTROVENTA c, (SELECT a.CODIGOCOMPANIA , COUNT( * ) cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.CODIGOCOMPANIA=c4.codigocompania and  instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )
SET motivoE = motivo ;*/
/*validado 0*/
MERGE INTO
   (
     SELECT c.EQTOTAL AS motivoE,c.CODIGOCOMPANIA
   FROM FA_REGISTROVENTA c where instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.CODIGOCOMPANIA=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

--Equipos activos postpago
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.EQPOSTACTIVOS AS motivoE , c4.cantidad AS motivo
   FROM FA_REGISTROVENTA c, (SELECT a.CODIGOCOMPANIA , COUNT( * ) cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
        WHERE
      a.estadocontrato                           IN ('Activo')
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.codigocompania=c4.codigocompania and  instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )
SET motivoE = motivo ;*/
/*validado 0*/
MERGE INTO
   (
   SELECT c.EQPOSTACTIVOS AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA c where instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
        WHERE
      a.estadocontrato                           IN ('Activo')
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE = motivo ;

--Equipos prepago Activos
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.EQPREACTIVOS AS motivoE , c4.cantidad AS motivo
   FROM FA_REGISTROVENTA c, (SELECT a.CODIGOCOMPANIA , COUNT( * )
         cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
        WHERE
      a.estadocontrato IN ('Activo')
      AND b.product  in ('iDen Pre','IN Pre','Non PTT Prepago')
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.codigocompania=c4.codigocompania and  instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )
SET motivoE = motivo ;*/
/*validado 0*/
MERGE INTO
   (
   SELECT c.EQPREACTIVOS AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA c where instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * )
         MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
        WHERE
      a.estadocontrato IN ('Activo')
      AND b.product  in ('iDen Pre','IN Pre','Non PTT Prepago')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
    A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

--Equipos activos totales
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.EQACTIVOS AS motivoE , c4.cantidad AS motivo
   FROM FA_REGISTROVENTA c, (SELECT a.CODIGOCOMPANIA , COUNT( * )
         cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
        WHERE a.estadocontrato IN ('Activo')
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.codigocompania=c4.codigocompania and  instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )
SET motivoE = motivo ;*/
/*validado 0*/
MERGE INTO
   (
    SELECT c.EQACTIVOS AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA c where instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * )
         MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
        WHERE a.estadocontrato IN ('Activo')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

-- Equipos suspendidos totales
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.EQSUSPENDIDOS AS motivoE , c4.cantidad AS motivo
   FROM FA_REGISTROVENTA c, (SELECT a.CODIGOCOMPANIA , COUNT( * )
         cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
        WHERE a.estadocontrato                           IN ('Suspendido')
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.codigocompania=c4.codigocompania and  instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )
SET motivoE = motivo ;*/
/*validado 204*/
MERGE INTO
   (
   SELECT c.EQSUSPENDIDOS AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA c where instr(c.code,'.',1,3)=0
   AND c.code NOT LIKE '1.%'
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * )
         MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
        WHERE a.estadocontrato                           IN ('Suspendido')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE = motivo ;

-- Equipos activos/suspendidos banda ancha
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.EQBANDAANCHA AS motivoE , c4.cantidad AS motivo
   FROM FA_REGISTROVENTA c, (SELECT a.CODIGOCOMPANIA , COUNT( * ) cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product in ('Banda Ancha')
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.codigocompania=c4.codigocompania and  instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )
SET motivoE = motivo ;*/
/*validado 0*/
MERGE INTO
   (
    SELECT C.EQBANDAANCHA AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA c where  instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product in ('Banda Ancha')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE = motivo ;

-- Equipos activos/suspendidos prepago 3G
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.EQPRE3G AS motivoE , c4.cantidad AS motivo
   FROM FA_REGISTROVENTA c, (SELECT a.CODIGOCOMPANIA , COUNT( * ) cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato  IN ('Activo','Suspendido')
      AND b.product in ('Non PTT Prepago','IN Pre')
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.codigocompania=c4.codigocompania and  instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )
SET motivoE = motivo ;*/
/*validado 262*/
MERGE INTO
   (
    SELECT C.EQPRE3G AS motivoE,c.codigocompania
   FROM FA_REGISTROVENTA c where   instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato  IN ('Activo','Suspendido')
      AND b.product in ('Non PTT Prepago','IN Pre')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

-- Equipos activos/suspendidos postpago 3G
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.EQPOST3G AS motivoE , c4.cantidad AS motivo
   FROM FA_REGISTROVENTA c, (SELECT a.CODIGOCOMPANIA , COUNT( * ) cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato IN ('Activo','Suspendido')
      AND b.product in ('Non PTT Post','IN Post','HP PTT Post')
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.codigocompania=c4.codigocompania and  instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )
SET motivoE = motivo ;*/
/*validado 694*/
MERGE INTO
   (
   SELECT C.EQPOST3G AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA c where   instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato IN ('Activo','Suspendido')
      AND b.product in ('Non PTT Post','IN Post','HP PTT Post')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
    a.codigocompania=b.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE = motivo ;
-- Equipos activos/suspendidos prepago 2G
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.EQPREIDEN AS motivoE , c4.cantidad AS motivo
   FROM FA_REGISTROVENTA c, (SELECT a.CODIGOCOMPANIA , COUNT( * ) cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product='iDen Pre'
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.codigocompania=c4.codigocompania and  instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )
SET motivoE = motivo ;*/
/*89 validado*/
MERGE INTO
   (
   SELECT C.EQPREIDEN AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA c where   instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product='iDen Pre'
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE = motivo ;

-- Equipos activos/suspendidos postpago 2G
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.EQPOSTIDEN AS motivoE , c4.cantidad AS motivo
   FROM FA_REGISTROVENTA c, (SELECT a.CODIGOCOMPANIA , COUNT( * ) cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product='iDen Post'
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.codigocompania=c4.codigocompania and  instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )
SET motivoE = motivo ;*/
/*230 validado*/
MERGE INTO
   (
   SELECT c.EQPOSTIDEN AS motivoE , c.codigocompania
   FROM FA_REGISTROVENTA c where   instr(c.code,'.',1,3)=0
AND c.code NOT LIKE '1.%'
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product='iDen Post'
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

---------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------Cruzados por numerocuentaresponsable----------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------
 --Equipos totales
  /*UPDATE /*+BYPASS_UJVC*/ /*(SELECT c.EQTOTAL AS motivoE, c4.cantidad AS motivo
          FROM FA_REGISTROVENTA c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 GROUP BY a.numerocuentaresponsable
                ) c4
         WHERE c.code = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*537,914 validado*/
     MERGE INTO
   (
   SELECT c.EQTOTAL AS motivoE,c.code
          FROM FA_REGISTROVENTA c
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

--Equipos activos postpago
  /*UPDATE /*+BYPASS_UJVC*/ /*(SELECT c.EQPOSTACTIVOS AS motivoE,
               c4.cantidad     AS motivo
          FROM FA_REGISTROVENTA c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN ('Activo')
                   AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
                   GROUP BY a.numerocuentaresponsable
                ) c4
         WHERE c.code = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*174,861 validado*/
      MERGE INTO
   (
   SELECT c.EQPOSTACTIVOS AS motivoE,c.code
          FROM FA_REGISTROVENTA c
   )A
   USING

   (SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN ('Activo')
                   AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
                   GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

  --Equipos prepago Activos
  /*UPDATE /*+BYPASS_UJVC*//* (SELECT c.EQPREACTIVOS AS motivoE,
               c4.cantidad    AS motivo
          FROM FA_REGISTROVENTA c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN ('Activo')
                   AND b.product  in ('iDen Pre','IN Pre','Non PTT Prepago')
                   GROUP BY a.numerocuentaresponsable
                ) c4
         WHERE c.code = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*424,555 validado*/
     MERGE INTO
   (
   SELECT c.EQPREACTIVOS AS motivoE,c.code
          FROM FA_REGISTROVENTA c
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN ('Activo')
                   AND b.product  in ('iDen Pre','IN Pre','Non PTT Prepago')
                   GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

  --Equipos activos totales
  /*UPDATE /*+BYPASS_UJVC*//* (SELECT c.EQACTIVOS AS motivoE,
               c4.cantidad AS motivo
          FROM FA_REGISTROVENTA c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN ('Activo')
                 GROUP BY a.numerocuentaresponsable
                ) c4
         WHERE c.code = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*514,564 validado*/
     MERGE INTO
   (
   SELECT c.EQACTIVOS AS motivoE,c.code
          FROM FA_REGISTROVENTA c
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN ('Activo')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

  -- Equipos suspendidos totales
  /*UPDATE /*+BYPASS_UJVC*//* (SELECT c.EQSUSPENDIDOS AS motivoE,
               c4.cantidad     AS motivo
          FROM FA_REGISTROVENTA c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN ('Suspendido')
                 GROUP BY a.numerocuentaresponsable
                ) c4
         WHERE c.code = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*53,184 validado*/
     MERGE INTO
   (
   SELECT c.EQSUSPENDIDOS AS motivoE,c.code
          FROM FA_REGISTROVENTA c
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN ('Suspendido')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

-- Equipos activos/suspendidos banda ancha
  /*UPDATE /*+BYPASS_UJVC*//* (SELECT C.EQBANDAANCHA AS motivoE,
               c4.cantidad    AS motivo
          FROM FA_REGISTROVENTA c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in ('Banda Ancha')
                 GROUP BY a.numerocuentaresponsable) c4
         WHERE c.code = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*0 validado*/
     MERGE INTO
   (
   SELECT C.EQBANDAANCHA AS motivoE,c.code
          FROM FA_REGISTROVENTA c
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in ('Banda Ancha')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

 -- Equipos activos/suspendidos prepago 3G
  /*UPDATE /*+BYPASS_UJVC*/ /*(SELECT C.EQPRE3G AS motivoE, c4.cantidad AS motivo
          FROM FA_REGISTROVENTA c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in
                       ('Non PTT Prepago', 'IN Pre')
                 GROUP BY a.numerocuentaresponsable) c4
         WHERE c.code = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*416,354 validado*/
     MERGE INTO
   (
   SELECT C.EQPRE3G AS motivoE,c.code
          FROM FA_REGISTROVENTA c
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in
                       ('Non PTT Prepago', 'IN Pre')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

-- Equipos activos/suspendidos postpago 3G
  /*UPDATE /*+BYPASS_UJVC*/ /*(SELECT C.EQPOST3G  AS motivoE,
               c4.cantidad AS motivo
          FROM FA_REGISTROVENTA c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in
                       ('Non PTT Post',
                        'IN Post',
                        'HP PTT Post')
                 GROUP BY a.numerocuentaresponsable) c4
         WHERE c.code = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*215,159 validado*/
     MERGE INTO
   (
   SELECT C.EQPOST3G  AS motivoE,c.code
          FROM FA_REGISTROVENTA c
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in
                       ('Non PTT Post',
                        'IN Post',
                        'HP PTT Post')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

 -- Equipos activos/suspendidos prepago 2G
  /*UPDATE /*+BYPASS_UJVC*/ /*(SELECT C.EQPREIDEN AS motivoE,
               c4.cantidad AS motivo
          FROM FA_REGISTROVENTA c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product = 'iDen Pre'
                 GROUP BY a.numerocuentaresponsable) c4
         WHERE c.code = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*17,726 validado*/
     MERGE INTO
   (
   SELECT C.EQPREIDEN AS motivoE,c.code
          FROM FA_REGISTROVENTA c
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product = 'iDen Pre'
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

-- Equipos activos/suspendidos postpago 2G
  /*UPDATE /*+BYPASS_UJVC*//* (SELECT c.EQPOSTIDEN AS motivoE,
               c4.cantidad  AS motivo
          FROM FA_REGISTROVENTA c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product = 'iDen Post'
                 GROUP BY a.numerocuentaresponsable) c4
         WHERE c.code = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*0 validado*/
     MERGE INTO
   (
   SELECT c.EQPOSTIDEN AS motivoE,c.code
          FROM FA_REGISTROVENTA c
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product = 'iDen Post'
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE = motivo;

--------------------------------------------------------------------------
   /*
   T4. IDENTIFICACION Y CALCULO DE CLASIFICACION
   Se realiza la identificacion usando las cantidades calculada
   en el item anterior, adicionalmente se usa la cantidad de data
   services y los servicios adicionales
   */
--------------------------------------------------------------------------
UPDATE FA_REGISTROVENTA
SET clasificacion='Mixto'
WHERE (EQPOST3G IS NOT NULL
OR EQPRE3G      IS NOT NULL or EQBANDAANCHA is not null)
AND (EQPOSTIDEN IS NOT NULL
OR EQPREIDEN    IS NOT NULL );


UPDATE FA_REGISTROVENTA
SET clasificacion='iDen'
WHERE (EQPOST3G IS  NULL
and EQPRE3G      IS  NULL and EQBANDAANCHA is  null)
AND (EQPOSTIDEN IS NOT NULL
OR EQPREIDEN    IS NOT NULL );


UPDATE FA_REGISTROVENTA
SET clasificacion='3G'
WHERE (EQPOST3G IS NOT NULL
OR EQPRE3G      IS NOT NULL or EQBANDAANCHA is not null)
AND (EQPOSTIDEN IS  NULL
and EQPREIDEN    IS  NULL );

UPDATE FA_REGISTROVENTA a
   SET a.DATA_SERVICES2G = to_number(a.data_services) *
                                 NVL(a.eqpostiden, 0) /
                                 (NVL(a.eqpostiden, 0) + NVL(a.eqpost3g, 0) +
                                  NVL(a.eqbandaancha, 0))
 where a.eqpostiden is not null
    or a.eqpost3g is not null
    or a.eqbandaancha is not null;

UPDATE FA_REGISTROVENTA a
   SET a.DATA_SERVICES3G = to_number(a.data_services) *
                                 (NVL(a.eqpost3g, 0) +
                                  NVL(a.eqbandaancha, 0)) /
                                 (NVL(a.eqpostiden, 0) + NVL(a.eqpost3g, 0) +
                                  NVL(a.eqbandaancha, 0))
 where a.eqpostiden is not null
    or a.eqpost3g is not null
    or a.eqbandaancha is not null;

    UPDATE FA_REGISTROVENTA a
   SET a.DATA_SERVICES2G = to_number(a.data_services)
 where a.eqpostiden is  null
    and a.eqpost3g is  null
    and a.eqbandaancha is  null;

  UPDATE FA_REGISTROVENTA a
   SET a.add_charges2g = to_number(a.add_charges) *
                               (NVL(a.eqpostiden, 0) /
                                 (NVL(a.eqpostiden, 0) + NVL(a.eqpost3g, 0) +
                                  NVL(a.eqbandaancha, 0)))
 where a.eqpostiden is not null
    or a.eqpost3g is not null
    or a.eqbandaancha is not null;

    UPDATE FA_REGISTROVENTA a
   SET a.add_charges3g = to_number(a.add_charges) *
                                 (NVL(a.eqpost3g, 0) +
                                  NVL(a.eqbandaancha, 0)) /
                                 (NVL(a.eqpostiden, 0) + NVL(a.eqpost3g, 0) +
                                  NVL(a.eqbandaancha, 0))
 where a.eqpostiden is not null
    or a.eqpost3g is not null
    or a.eqbandaancha is not null;

UPDATE FA_REGISTROVENTA a
   SET a.add_charges2g = to_number(a.add_charges)
 where a.eqpostiden is  null
    and a.eqpost3g is  null
    and a.eqbandaancha is  null;
--------------------------------------------------------------------------
   /*
   T5. IDENTIFICACION DE TIPO ESPECIFICO DE DOCUMENTO RUC
   Usando el campo ruccompania se especifica si es un tipo ruc 10 o ruc 20
   */
--------------------------------------------------------------------------
UPDATE FA_REGISTROVENTA
SET tipodocumento=decode(tipodocumento,'DNI','DNI','RUC',DECODE(SUBSTR(RUCCOMPANIA,0,2),'20','RUC 20','RUC 10'));

UPDATE FA_REGISTROVENTA
SET company_type=tipopersona;

update FA_REGISTROVENTA set clasificacion='3G' where tipocompania='Prospecto'; commit;
--------------------------------------------------------------------------
   /*
   T6. CALCULO Y GENERACION DE REPORTERVRESUMEN
   Se calcula el resumen del reporte de RV para mostrarlo en la consola
   como un resumen teniendo como base las cantidades calculadas anteriormente
   */
--------------------------------------------------------------------------
delete from FA_REPORTERVRESUMEN where to_char(mes,'yyyymm')=SANHO||SMES and ciclo=SCICLO;

INSERT
INTO FA_REPORTERVRESUMEN
   (
      MES, SYSTEM_ACCESS, CDI_ACC, DATA_SERVICES, DATA_SERVICES2G,
      DATA_SERVICES3G, INSURANCE, DISPATCH, CDI_EXC, INTERCONNECT, ADD_CHARGES,
      ADD_CHARGES2G, ADD_CHARGES3G, NAT_LD, INAT_LD, ROAMING, FEATURES_OPTIONS,
      DISC_PROM, OCC, LATE_PAYMENT, SALES_VALUE, IGV, EQUIPMENT, OHINVAMT,
      OCC_REP_GN, CICLO,clasificacion,tipodocumento,cantidadrecibos,PROVINCIA,SEGMENTO,DEPARTAMENTO
   )
   select to_date(SANHO||SMES,'yyyymm') mes,
       sum(a.system_access) system_access,
       sum(a.cdi_acc) cdi_acc,
       sum(a.data_services) data_services,
       sum(a.data_services2G) data_services2G,
       sum(a.data_services3G) data_services3G,
       sum(a.insurance) insurance,
       sum(a.dispatch) dispatch,
       sum(a.cdi_exc) cdi_exc,
       sum(a.interconnect) interconnect,
       sum(a.add_charges) add_charges,
       sum(a.add_charges2G) add_charges2G,
       sum(a.add_charges3G) add_charges3G,
       sum(a.nat_ld) nat_ld,
       sum(a.inat_ld) inat_ld,
       sum(a.roaming) roaming,
       sum(a.features_options) features_options,
       sum(a.disc_prom) disc_prom,
       sum(a.occ) occ,
       sum(a.late_payment) late_payment,
       sum(a.sales_value) sales_value,
       sum(a.igv) igv,
       sum(a.equipment) equipment,
       sum(a.ohinvamt) ohinvamt,
       sum(a.occ_rep_gn) occ_rep_gn,SCICLO,clasificacion,tipodocumento,count(a.invoice_number),CASE
         WHEN a.PROVINCIA='LIMA'
         OR a.PROVINCIA  ='CALLAO'
         THEN 'LIMA'
         WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
         THEN 'PROVINCIA'
         ELSE 'N/A'
      END provincia,nvl(A.SEGMENTO,'N/A') SEGMENTO,NVL(A.DEPARTAMENTO,'N/A') DEPARTAMENTO
  from fa_registroventa a
  group by to_date(SANHO||SMES,'yyyymm'),SCICLO,clasificacion,tipodocumento,CASE
         WHEN a.PROVINCIA='LIMA'
         OR a.PROVINCIA  ='CALLAO'
         THEN 'LIMA'
         WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
         THEN 'PROVINCIA'
         ELSE 'N/A'
      END,A.SEGMENTO,nvl(A.SEGMENTO,'N/A'),NVL(A.DEPARTAMENTO,'N/A');
COMMIT;

END PROCESARREPORTERV;


PROCEDURE PROCESARREPORTEOCCBOLSA IS

BEGIN

/*
delete from fa_occbolsa_occ
where DESCRIPCION not LIKE '%Renta Básica de Bolsa%' ;
*/
delete from fa_occbolsa_occ
where NOT (LOWER(DESCRIPCION) LIKE '%renta b%'
           AND LOWER(DESCRIPCION)  LIKE'%sica de bolsa%');

/*and DESCRIPCION not LIKE '%Devolución Renta Básica Bolsa%' */
/*Se ha comentado  los cambio solicitados por Marily ya que por voto se decidio no incluir la glosa*/
PRC_FORMATEACUENTA('FA_OCCBOLSA_OCC','CUENTA');


/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.TIENEBOLSA AS motivoE , 'X' AS motivo
   FROM FA_OCCBOLSA_OCC c, (SELECT a.NUMEROCUENTARESPONSABLE
      FROM fotoequipos a
      --LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo',
         'Suspendido')
      AND upper(a.plantarifario) LIKE '%BOLSA%'
      GROUP BY a.NUMEROCUENTARESPONSABLE
      ) c4
   WHERE c.cuenta=c4.NUMEROCUENTARESPONSABLE
   )
SET motivoE = motivo ;*/
/*35 validado*/
MERGE INTO
   (
    SELECT c.TIENEBOLSA AS motivoE , 'X' AS motivo,c.cuenta
   FROM FA_OCCBOLSA_OCC c
   )A
   USING
   (
   SELECT a.NUMEROCUENTARESPONSABLE
      FROM fotoequipos a
      --LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo',
         'Suspendido')
      AND upper(a.plantarifario) LIKE '%BOLSA%'
      GROUP BY a.NUMEROCUENTARESPONSABLE
   )B
   ON
   (
   A.cuenta=B.NUMEROCUENTARESPONSABLE
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;


/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.GANADOPOR AS motivoE , c4.consultor AS motivo
   FROM FA_OCCBOLSA_OCC c, (SELECT a.cuentacompania,a.consultor
      FROM P_COMPANIA a
      GROUP BY a.cuentacompania,a.consultor
      ) c4
   WHERE Fn_Decodifica_Cuenta(c.cuenta)=c4.cuentacompania
   )
SET motivoE = motivo ;*/
/*36 validado */
MERGE INTO
   (
   SELECT c.GANADOPOR AS motivoE,c.cuenta
   FROM FA_OCCBOLSA_OCC c
   )A
   USING
   (
   SELECT a.cuentacompania,a.consultor AS MOTIVO
      FROM P_COMPANIA a
      GROUP BY a.cuentacompania,a.consultor
   )B
   ON
   (
   Fn_Decodifica_Cuenta(A.cuenta)=B.cuentacompania
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE = motivo ;

END PROCESARREPORTEOCCBOLSA;


Procedure IMPRESION_NEGATIVOS_PROCESAR Is
Begin

Prc_Formateacuenta('FA_BASENEGATIVOS','CUSTCODE');

/*UPDATE
/*+BYPASS_UJVC*//*
(
      Select A.ESTADO_COBRANZA As Estadocobranza ,A.TIPO_COMPANIA As tipocompania , A.CANT_EQUIP_ACTIVOS As Activos , A.Cant_Equip_Suspendidos As Suspendidos , B.Activos As Activosu , B.Suspendidos As Suspendidosu ,
      B.Estadocobranzacuenta As Estadocobranzau , D.Tipocompania As Tipocompaniau
      FROM FA_BASENEGATIVOS A ,
      (Select Numerocuentaresponsable,Estadocobranzacuenta,Sum(Activos) Activos ,Sum(Suspendidos)  Suspendidos From (
      select Fn_Decodifica_Cuenta(numerocuentaresponsable) Numerocuentaresponsable ,estadocobranzacuenta, case when estadocontrato='Activo' then 1 else 0 end Activos,
                      case when estadocontrato='Suspendido' then 1 else 0 end Suspendidos
      from fotoequipos )
      Group By Numerocuentaresponsable,Estadocobranzacuenta
      Order By Numerocuentaresponsable) B , P_Compania D
       where Fn_Decodifica_Cuenta(A.CUSTCODE)=B.Numerocuentaresponsable (+) and
          decode(INSTR(A.CUSTCODE,'.',1,2),0,A.CUSTCODE,SUBSTR(
         A.Custcode, 1,Instr(A.Custcode,'.',1,2)-1)) = D.Cuentacompania (+)
      )
SET activos=activosU ,suspendidos=suspendidosU , estadocobranza=estadocobranzaU , tipocompania=tipocompaniaU;*/
/*0 validado*/

/*MERGE INTO
   (
  select a.CANT_EQUIP_ACTIVOS As Activos,A.Cant_Equip_Suspendidos As Suspendidos,A.ESTADO_COBRANZA As Estadocobranza,A.TIPO_COMPANIA As tipocompania, A.CUSTCODE from FA_BASENEGATIVOS a
   )A
   USING
   (select * from (
     Select A.ESTADO_COBRANZA As Estadocobranza ,A.TIPO_COMPANIA As tipocompania , A.CANT_EQUIP_ACTIVOS As Activos , A.Cant_Equip_Suspendidos As Suspendidos , B.Activos As Activosu , B.Suspendidos As Suspendidosu ,
      B.ESTADOCOBRANZACUENTA AS ESTADOCOBRANZAU , D.TIPOCOMPANIA AS TIPOCOMPANIAU, B.NUMEROCUENTARESPONSABLE, D.CUENTACOMPANIA AS CUENTACOMPANIA,row_number () over (partition by B.NUMEROCUENTARESPONSABLE order by A.OHREFNUM desc) as rn
      FROM FA_BASENEGATIVOS A,
                  (Select Numerocuentaresponsable,Estadocobranzacuenta,Sum(Activos) Activos ,Sum(Suspendidos)  Suspendidos
                  From (
                                select Fn_Decodifica_Cuenta(numerocuentaresponsable) Numerocuentaresponsable ,estadocobranzacuenta, case when estadocontrato='Activo' then 1 else 0 end Activos,
                                            case when estadocontrato='Suspendido' then 1 else 0 end Suspendidos
                                from fotoequipos
                  )
                  Group By Numerocuentaresponsable,Estadocobranzacuenta
                  Order By Numerocuentaresponsable) B ,
                  P_Compania D
     where  Fn_Decodifica_Cuenta(A.CUSTCODE)=B.Numerocuentaresponsable (+) and
                DECODE(INSTR(A.CUSTCODE,'.',1,2),0,A.CUSTCODE,SUBSTR(A.Custcode, 1,Instr(A.Custcode,'.',1,2)-1)) = D.Cuentacompania (+)
  order by B.NUMEROCUENTARESPONSABLE,D.CUENTACOMPANIA
  ) where rn=1
   )B
   ON
   (
        Fn_Decodifica_Cuenta(A.CUSTCODE)=B.Numerocuentaresponsable (+) and
        decode(INSTR(A.CUSTCODE,'.',1,2),0,A.CUSTCODE,SUBSTR(
        A.Custcode, 1,Instr(A.Custcode,'.',1,2)-1)) = B.Cuentacompania (+)
   )
   WHEN MATCHED THEN
   UPDATE SET A.activos=activosU ,a.suspendidos=suspendidosU , a.estadocobranza=estadocobranzaU , a.tipocompania=tipocompaniaU;
*/

MERGE INTO FA_BASENEGATIVOS A
USING ( SELECT fn_decodifica_cuenta(numerocuentaresponsable) cuenta
             , MAX(estadocobranzacuenta)  estadocobranzacuenta
             , SUM(CASE WHEN UPPER(product) LIKE '%POST%' AND estadocontrato = 'Activo' THEN 1 ELSE 0 END) activos
             , SUM(CASE WHEN UPPER(product) LIKE '%POST%' AND estadocontrato = 'Suspendido' THEN 1 ELSE 0 END) suspendidos
             , SUM(CASE WHEN UPPER(product) LIKE '%POST%' AND estadocontrato = 'Desactivado' THEN 1 ELSE 0 END) desactivados
          FROM FOTOEQUIPOS
         WHERE estadocobranzacuenta IS NOT null
         GROUP BY fn_decodifica_cuenta(numerocuentaresponsable)
        ) B
ON (fn_decodifica_cuenta(A.CUSTCODE) = B.cuenta )
WHEN MATCHED THEN UPDATE SET A.estado_cobranza = b.estadocobranzacuenta
                           , A.cant_equip_activos = B.activos
                           , A.cant_equip_suspendidos = B.suspendidos
                           , A.cant_equip_desactivados = B.desactivados;

MERGE INTO FA_BASENEGATIVOS A
USING P_COMPANIA B
   ON ( DECODE(INSTR(A.CUSTCODE,'.',1,2),0,A.CUSTCODE,SUBSTR(A.Custcode, 1,Instr(A.Custcode,'.',1,2)-1)) = B.CUENTACOMPANIA )
WHEN MATCHED THEN UPDATE SET A.tipo_compania  = B.tipocompania;

COMMIT;

END IMPRESION_NEGATIVOS_PROCESAR;


Procedure Procesarreportesamr Is
Begin

 Prc_Formateacuenta('FA_BASEAMR','CODBSCS');

  /*UPDATE
  /*+BYPASS_UJVC*//*
  (
  Select A.Estado_Cobranza As Estadocobranza ,
    A.Tipo_Cliente         As Tipo_Cliente,
    A.Tipo_Cuenta          As Tipocuenta ,
    A.Tiene_Equipos        AS Tiene_Equipos ,
    CASE
      WHEN B.Numerocuentaresponsable IS NULL
      THEN 'NO'
      ELSE 'SI'
    END Tiene_Equiposu ,
    B.Estadocobranzacuenta AS Estadocobranzau ,
    D.Tipocuenta           AS TipocuentaU ,
    D.TIPODOCUMENTO        AS TIPODOCUMENTOU
  FROM Fa_Baseamr A ,
    (SELECT Fn_Decodifica_Cuenta(Numerocuentaresponsable) Numerocuentaresponsable,
      Estadocobranzacuenta
    FROM fotoequipos
    GROUP BY Numerocuentaresponsable,
      Estadocobranzacuenta
    ORDER BY numerocuentaresponsable
    ) B ,
    p_compania D
  WHERE Fn_Decodifica_Cuenta(A.Codbscs)=B.Numerocuentaresponsable (+)
  AND Fn_Decodifica_Cuenta(A.Codbscs)  = D.cuentacompania (+)
  )
SET estadocobranza=estadocobranzaU ,
  Tipocuenta      =Tipocuentau,
  Tipo_Cliente    =Tipodocumentou,
  Tiene_Equipos   =Tiene_EquiposU;*/



  MERGE INTO FA_BASEAMR X
  USING P_COMPANIA Y
     ON ( Fn_Decodifica_Cuenta(x.codbscs) = Y.cuentacompania )
   WHEN MATCHED THEN UPDATE SET X.Estado_Cobranza = Y.Estadocobranza
                           , X.Tipo_Cliente = Y.TIPODOCUMENTO
                           , X.Tipo_Cuenta = Y.Tipocuenta
                           , X.Tiene_Equipos = CASE WHEN equiposactivospostpago > 0 THEN 'SI' ELSE 'NO' END ;

  Update Fa_Baseamr
  Set Tipo_Cliente='DNI'
  where Tipo_Cliente is null;



End Procesarreportesamr;



procedure PROCESARNEVERPAIDACTIVOS IS
BEGIN
-- PROPÓSITO:
-- Se cargan las bases de Never Paid Activos, los cuales se incluyen para
--
-- HISTORIAL DE MODIFICACION
-- Usuario                              Fecha               Comentario
-- ----------                           ---------           ----------------------
-- CCHAHUAS                  12/03/2015          Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

--------------------------------------------------------------------------
   /*
   T1. ACTUALIZACION MONTO Y DEPURACION DE REGISTROS INCORRECTOS
   Se convierte a numero el monto de PAYMENTNUM para calculos y se comienza la
   limpieza de la informacion que tiene informacion incorrecta relacionada a fechas y ciclos.
   */
--------------------------------------------------------------------------
UPDATE FA_NEVERPAID_ACTIVOS_PAGOS SET PAYMENTNUM=TO_NUMBER(TRIM(PAYMENT));

DELETE FROM FA_NEVERPAID_ACTIVADOS
WHERE TO_CHAR(FECHAACTIVACIONCONTRATO,'MMYYYY')=TO_CHAR(sysdate,'MMYYYY')
AND CICLO='01';

DELETE FROM FA_NEVERPAID_ACTIVADOS
WHERE TO_CHAR(FECHAACTIVACIONCONTRATO,'MMYYYY')     =TO_CHAR(sysdate,'MMYYYY')
AND TO_NUMBER(TO_CHAR(FECHAACTIVACIONCONTRATO,'DD'))>15
AND CICLO='03';

DELETE FROM FA_NEVERPAID_ACTIVADOS
WHERE TO_CHAR(FECHAACTIVACIONCONTRATO,'MMYYYY')     =TO_CHAR(sysdate,'MMYYYY')
AND TO_NUMBER(TO_CHAR(FECHAACTIVACIONCONTRATO,'DD'))>8
AND CICLO ='04';

DELETE FROM FA_NEVERPAID_ACTIVADOS
WHERE TO_CHAR(FECHAACTIVACIONCONTRATO,'MMYYYY')=TO_CHAR(sysdate,'MMYYYY')
AND TO_NUMBER(TO_CHAR(FECHAACTIVACIONCONTRATO,'DD'))>22
AND CICLO ='05';

DELETE FROM FA_NEVERPAID_ACTIVADOS
WHERE ((TO_CHAR(FECHAACTIVACIONCONTRATO,'MMYYYY') =TO_CHAR(ADD_MONTHS(sysdate,-1),'MMYYYY')
AND TO_NUMBER(TO_CHAR(FECHAACTIVACIONCONTRATO,'DD'))>15)
OR TO_CHAR(FECHAACTIVACIONCONTRATO,'MMYYYY')=TO_CHAR(sysdate,'MMYYYY'))
AND CICLO ='03'
AND TO_NUMBER(TO_CHAR(SYSDATE,'DD'))<16;

DELETE FROM FA_NEVERPAID_ACTIVADOS
WHERE ((TO_CHAR(FECHAACTIVACIONCONTRATO,'MMYYYY') =TO_CHAR(ADD_MONTHS(sysdate,-1),'MMYYYY')
AND TO_NUMBER(TO_CHAR(FECHAACTIVACIONCONTRATO,'DD'))>8)
OR TO_CHAR(FECHAACTIVACIONCONTRATO,'MMYYYY')=TO_CHAR(sysdate,'MMYYYY'))
AND CICLO='04'
AND TO_NUMBER(TO_CHAR(SYSDATE,'DD'))<9;

DELETE FROM FA_NEVERPAID_ACTIVADOS
WHERE ((TO_CHAR(FECHAACTIVACIONCONTRATO,'MMYYYY') =TO_CHAR(ADD_MONTHS(sysdate,-1),'MMYYYY')
AND TO_NUMBER(TO_CHAR(FECHAACTIVACIONCONTRATO,'DD'))>22)
OR TO_CHAR(FECHAACTIVACIONCONTRATO,'MMYYYY')=TO_CHAR(sysdate,'MMYYYY'))
AND CICLO='04'
AND TO_NUMBER(TO_CHAR(SYSDATE,'DD'))<23;
--------------------------------------------------------------------------
   /*
   T2. ACTUALIZACION CAMPOS PAGONMESES
   Se calcula la cantidad de meses en los que ha recibido pago efectivo y
   se marca con antiguedad para PAGO2MESES, PAGO3MESES y PAGO4MESES
   */
--------------------------------------------------------------------------
 /*  UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.PAGO2MESES AS motivoE ,'X' AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, (SELECT NUMEROCUENTARESPONSABLE
      FROM FA_NEVERPAID_ACTIVOS_PAGOS
      WHERE FECHA>ADD_MONTHS(SYSDATE,-2)
      GROUP BY NUMEROCUENTARESPONSABLE
      HAVING SUM(PAYMENTNUM)>0
      ) c4
   WHERE C.NUMEROCUENTARESPONSABLE=C4.NUMEROCUENTARESPONSABLE
   )
SET motivoE=motivo;*/
/*0 VALIDADO*/
MERGE INTO
   (
   SELECT C.PAGO2MESES AS motivoE ,'X' AS motivo,C.NUMEROCUENTARESPONSABLE
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
   SELECT NUMEROCUENTARESPONSABLE
      FROM FA_NEVERPAID_ACTIVOS_PAGOS
      WHERE FECHA>ADD_MONTHS(SYSDATE,-2)
      GROUP BY NUMEROCUENTARESPONSABLE
      HAVING SUM(PAYMENTNUM)>0
   )B
   ON
   (
   A.NUMEROCUENTARESPONSABLE=B.NUMEROCUENTARESPONSABLE
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE=motivo;

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.PAGO3MESES AS motivoE ,'X' AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, (SELECT NUMEROCUENTARESPONSABLE
      FROM FA_NEVERPAID_ACTIVOS_PAGOS
      WHERE FECHA>ADD_MONTHS(SYSDATE,-3)
      GROUP BY NUMEROCUENTARESPONSABLE
      HAVING SUM(PAYMENTNUM)>0
      ) c4
   WHERE C.NUMEROCUENTARESPONSABLE=C4.NUMEROCUENTARESPONSABLE
   )
SET motivoE=motivo;*/
/*0 VALIDADO*/
MERGE INTO
   (
   SELECT C.PAGO3MESES AS motivoE ,'X' AS motivo,C.NUMEROCUENTARESPONSABLE
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
   SELECT NUMEROCUENTARESPONSABLE
      FROM FA_NEVERPAID_ACTIVOS_PAGOS
      WHERE FECHA>ADD_MONTHS(SYSDATE,-3)
      GROUP BY NUMEROCUENTARESPONSABLE
      HAVING SUM(PAYMENTNUM)>0
   )B
   ON
   (
   A.NUMEROCUENTARESPONSABLE=B.NUMEROCUENTARESPONSABLE
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE=motivo;



/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.PAGO4MESES AS motivoE ,'X' AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, (SELECT NUMEROCUENTARESPONSABLE
      FROM FA_NEVERPAID_ACTIVOS_PAGOS
      WHERE FECHA>ADD_MONTHS(SYSDATE,-4)
      GROUP BY NUMEROCUENTARESPONSABLE
      HAVING SUM(PAYMENTNUM)>0
      ) c4
   WHERE C.NUMEROCUENTARESPONSABLE=C4.NUMEROCUENTARESPONSABLE
   )
SET motivoE=motivo;*/
/*0 VALIDADO*/
MERGE INTO
   (
    SELECT C.PAGO4MESES AS motivoE ,'X' AS motivo,C.NUMEROCUENTARESPONSABLE
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
   SELECT NUMEROCUENTARESPONSABLE
      FROM FA_NEVERPAID_ACTIVOS_PAGOS
      WHERE FECHA>ADD_MONTHS(SYSDATE,-4)
      GROUP BY NUMEROCUENTARESPONSABLE
      HAVING SUM(PAYMENTNUM)>0
   )B
   ON
   (
   A.NUMEROCUENTARESPONSABLE=B.NUMEROCUENTARESPONSABLE
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE=motivo;

update FA_NEVERPAID_ACTIVADOS set PAGO4MESES='X' where FECHAACTIVACIONCONTRATO>ADD_MONTHS(SYSDATE,-4);
update FA_NEVERPAID_ACTIVADOS set PAGO3MESES='X' where FECHAACTIVACIONCONTRATO>ADD_MONTHS(SYSDATE,-3);
update FA_NEVERPAID_ACTIVADOS set PAGO2MESES='X' where FECHAACTIVACIONCONTRATO>ADD_MONTHS(SYSDATE,-2);
--------------------------------------------------------------------------
   /*
   T3. ACTUALIZACION CAMPOS INDBASEMAIL POR BASE
   Se identifica los Neverpaid Activados de acuerdo al tipo de base
   al que pertenecen
   */
--------------------------------------------------------------------------
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.indbasemail AS motivoE , C4.base AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, fa_afiliadosmail_historico c4
   WHERE   fn_decodifica_cuenta(c.numerocuentaresponsable)=c4.cuenta and c4.base='1'
   )
SET motivoE=motivo;*/
/*40,891 VALIDADO*/
MERGE INTO
   (
   SELECT c.indbasemail AS motivoE  ,C.numerocuentaresponsable
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
   SELECT
   C4.base AS motivo,C4.cuenta,C4.base
   FROM fa_afiliadosmail_historico c4
   )B
   ON
   (
   fn_decodifica_cuenta(A.numerocuentaresponsable)=B.cuenta and B.base='1'
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE=motivo;

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.indbasemail2 AS motivoE , C4.base AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, fa_afiliadosmail_historico c4
   WHERE   fn_decodifica_cuenta(c.numerocuentaresponsable)=c4.cuenta and c4.base='2'
   )
SET motivoE=motivo;*/
/*7,564 VALIDADO*/
MERGE INTO
   (
    SELECT c.indbasemail2 AS motivoE ,C.numerocuentaresponsable
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
   select
    C4.base AS motivo ,C4.cuenta,C4.base
   from fa_afiliadosmail_historico c4
   )B
   ON
   (
   fn_decodifica_cuenta(A.numerocuentaresponsable)=B.cuenta and B.base='2'
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE=motivo;

--------------------------------------------------------------------------
   /*
   T4. ACTUALIZACION INDRECHAZADOFISICO
   Se identifican y marcan los indrechazadofisico si aparece en
   la basemotivados de la base de impresion
   */
--------------------------------------------------------------------------
  UPDATE FA_NEVERPAID_ACTIVADOS a
SET a.indrechazadofisico='X'
WHERE EXISTS
   (SELECT 1
   FROM FA_BASEMOTIVADOSTOTAL b
   WHERE a.numerocuentaresponsable=b.cuenta
   and TO_DATE (b.mes, 'mon-yy', 'nls_date_language=spanish')>=add_months(SYSDATE,-4)
   and TO_DATE (b.mes, 'mon-yy', 'nls_date_language=spanish')<add_months(SYSDATE,1)
   );

   UPDATE FA_NEVERPAID_ACTIVADOS a
  SET a.INDRECHAZADOELECTRONICO='X'
  WHERE EXISTS
   (SELECT 1
   FROM FA_MOTIVADOS_SEMANAL b
   WHERE (A.NUMEROCUENTARESPONSABLE=B.CUENTA OR FN_DECODIFICA_CUENTA(A.NUMEROCUENTARESPONSABLE)=B.CUENTA)
   );
--------------------------------------------------------------------------
   /*
   T5. ACTUALIZACION DE CAMPOS CLASIFICATORIOS
   Se identifican los campos que permiten clasificar la base
   Never Paid Activados usando la tabla de companias
   */
--------------------------------------------------------------------------
  /*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.canalventa AS canalventaE , C4.canalventa AS canalventa,c.consultor
      AS consultorE , C4.consultor AS consultor, c.dealer AS dealerE ,
      C4.dealer AS dealer, c.tipopersona AS tipopersonaE , C4.tipopersona AS
      tipopersona, c.tipodocumento AS tipodocumentoE , C4.tipodocumento AS
      tipodocumento, c.giro AS giroE , C4.giro AS giro, c.subgiro AS subgiroE ,
      C4.subgiro AS subgiro, c.region AS regionE , C4.region AS region,
      c.departamento AS departamentoE , C4.departamento AS departamento,
      c.provincia AS provinciaE , C4.provincia AS provincia, c.distrito AS
      distritoE , C4.distrito AS distrito, c.fechaingreso AS fechaingresoE ,
      C4.fechaingreso AS fechaingreso, c.CICLO AS cicloE , C4.CICLO AS ciclo,
      C.ESTADOCOBRANZA AS estadocobranzaE, C4.ESTADOCOBRANZA AS estadocobranza,
      C.TIPOCOMPANIA AS tipocompaniaE,C4.TIPOCOMPANIA AS tipocompania
   FROM FA_NEVERPAID_ACTIVADOS c, p_compania c4
   WHERE c.codigocompania=c4.codigocompania
   )
SET canalventaE              =canalventa,consultorE=consultor,dealerE=dealer,tipopersonaE=
   tipopersona,tipodocumentoE=tipodocumento, giroE=giro,subgiroE=subgiro,
   regionE                   =region,departamentoE=departamento,provinciaE=
   provincia,distritoE       =distrito,fechaingresoE=fechaIngreso,cicloE=ciclo,
   estadocobranzaE           =estadocobranza, tipocompaniaE=tipocompania;*/
   /*94,850 validado*/
   MERGE INTO
   (
     SELECT c.canalventa AS canalventaE , c.consultor
      AS consultorE ,  c.dealer AS dealerE ,
       c.tipopersona AS tipopersonaE , c.tipodocumento AS tipodocumentoE ,  c.giro AS giroE ,  c.subgiro AS subgiroE ,
       c.region AS regionE ,
      c.departamento AS departamentoE ,
      c.provincia AS provinciaE ,  c.distrito AS
      distritoE ,  c.fechaingreso AS fechaingresoE ,
       c.CICLO AS cicloE ,
      C.ESTADOCOBRANZA AS estadocobranzaE,
      C.TIPOCOMPANIA AS tipocompaniaE,c.codigocompania
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
   SELECT
   C4.canalventa AS canalventa, C4.consultor AS consultor, C4.dealer AS dealer,  C4.tipopersona AS tipopersona, C4.tipodocumento AS tipodocumento, C4.giro AS giro, C4.subgiro AS subgiro,  C4.region AS region, C4.departamento AS departamento, C4.provincia AS provincia, C4.distrito AS distrito, C4.fechaingreso AS fechaingreso, C4.CICLO AS ciclo, C4.ESTADOCOBRANZA AS estadocobranza, C4.TIPOCOMPANIA AS tipocompania,c4.codigocompania
   FROM  p_compania c4
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET canalventaE              =canalventa,consultorE=consultor,dealerE=dealer,tipopersonaE=
   tipopersona,tipodocumentoE=tipodocumento, giroE=giro,subgiroE=subgiro,
   regionE                   =region,departamentoE=departamento,provinciaE=
   provincia,distritoE       =distrito,fechaingresoE=fechaIngreso,cicloE=ciclo,
   estadocobranzaE           =estadocobranza, tipocompaniaE=tipocompania;

--------------------------------------------------------------------------
   /*
   T6. CONTEO DE INCIDENTES DE RECLAMO DE NEVERPAID
   Se identifican y se contabilizan los registros de Never Paid de tipo reclamo
   simple y reclamo delivery y se ingresan en la cantidad de reclamos y reclamos
   delivery de FA_NEVERPAID_ACTIVADOS y con ambas metricas se calcula
   la cantidad de reclamos efectiva que es el [RECLAMO - RECLAMO DELIVERY]
   */
--------------------------------------------------------------------------
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.CANTIDADRECLAMOS AS motivoE , c4.CANTIDAD AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, (SELECT COUNT( DISTINCT COD_INCIDENTE) CANTIDAD,
         CODIGOCOMPANIA
      FROM FA_NEVERPAID_ACTIVOS_RECLAMOS
      GROUP BY CODIGOCOMPANIA
      ) c4
   WHERe C.CODIGOCOMPANIA=C4.CODIGOCOMPANIA   )
SET motivoE=motivo;*/
/*2,294 validado*/
MERGE INTO
   (
    SELECT c.CANTIDADRECLAMOS AS motivoE ,c.CODIGOCOMPANIA
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
   SELECT COUNT( DISTINCT COD_INCIDENTE) MOTIVO,
         CODIGOCOMPANIA
      FROM FA_NEVERPAID_ACTIVOS_RECLAMOS
      GROUP BY CODIGOCOMPANIA
   )B
   ON
   (
    A.CODIGOCOMPANIA=B.CODIGOCOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE=motivo;

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.CANTIDADRECLAMOSDELIVERY AS motivoE , c4.CANTIDAD AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, (SELECT COUNT( DISTINCT COD_INCIDENTE) CANTIDAD,
         CODIGOCOMPANIA
      FROM FA_NEVERPAID_ACTIVOS_RECLAMOS WHERE INBOX='FACT.DELIVERY'
      GROUP BY CODIGOCOMPANIA
      ) c4
   WHERe C.CODIGOCOMPANIA=C4.CODIGOCOMPANIA   )
SET motivoE=motivo;*/
/*133 validado*/
MERGE INTO
   (
    SELECT C.CANTIDADRECLAMOSDELIVERY AS motivoE,c.CODIGOCOMPANIA
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
    SELECT COUNT( DISTINCT COD_INCIDENTE) MOTIVO,
         CODIGOCOMPANIA
      FROM FA_NEVERPAID_ACTIVOS_RECLAMOS WHERE INBOX='FACT.DELIVERY'
      GROUP BY CODIGOCOMPANIA
   )B
   ON
   (
    A.CODIGOCOMPANIA=B.CODIGOCOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE=motivo;

update FA_NEVERPAID_ACTIVADOS set CANTIDADRECLAMOSSERVICIOS=nvl(cantidadreclamos,0)-nvl(CANTIDADRECLAMOSDELIVERY,0);
--------------------------------------------------------------------------
   /*
   T6. CONTEO DE INCIDENTES DE RECLAMO DE NEVERPAID
   Se identifican y se contabilizan los registros de Never Paid de tipo reclamo
   simple y reclamo delivery y se ingresan en la cantidad de reclamos y reclamos
   delivery de FA_NEVERPAID_ACTIVADOS y con ambas metricas se calcula
   la cantidad de reclamos efectiva que es el [RECLAMO - RECLAMO DELIVERY]
   */
--------------------------------------------------------------------------
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.CANTIDADBANDANCHA AS motivoE , c4.cantidad AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, (SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Activo'
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      and b.product='Banda Ancha'
      GROUP BY a.NUMEROCUENTARESPONSABLE
      ) c4
   WHERE C.NUMEROCUENTARESPONSABLE=C4.NUMEROCUENTARESPONSABLE
   )
SET motivoE = motivo ;*/
/*0 validado*/
MERGE INTO
   (
     SELECT C.CANTIDADBANDANCHA AS motivoE,c.NUMEROCUENTARESPONSABLE
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
    SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Activo'
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      and b.product='Banda Ancha'
      GROUP BY a.NUMEROCUENTARESPONSABLE
   )B
   ON
   (
    A.NUMEROCUENTARESPONSABLE=B.NUMEROCUENTARESPONSABLE
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.CANTIDADNONPTTPOST AS motivoE , c4.cantidad AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, (SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Activo'
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      and b.product='Non PTT Post'
      GROUP BY a.NUMEROCUENTARESPONSABLE
      ) c4
   WHERE C.NUMEROCUENTARESPONSABLE=C4.NUMEROCUENTARESPONSABLE
   )
SET motivoE = motivo ;*/
/*25,076 validado*/
MERGE INTO
   (
    SELECT C.CANTIDADNONPTTPOST AS motivoE ,c.NUMEROCUENTARESPONSABLE
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
   SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Activo'
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      and b.product='Non PTT Post'
      GROUP BY a.NUMEROCUENTARESPONSABLE
   )B
   ON
   (
    A.NUMEROCUENTARESPONSABLE=B.NUMEROCUENTARESPONSABLE
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.CANTIDADINPOST AS motivoE , c4.cantidad AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, (SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Activo'
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      and b.product='IN Post'
      GROUP BY a.NUMEROCUENTARESPONSABLE
      ) c4
   WHERE C.NUMEROCUENTARESPONSABLE=C4.NUMEROCUENTARESPONSABLE
   )
SET motivoE = motivo ;*/
/*420 validado*/
MERGE INTO
   (
    SELECT C.CANTIDADINPOST AS motivoE ,c.NUMEROCUENTARESPONSABLE
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
    SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Activo'
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      and b.product='IN Post'
      GROUP BY a.NUMEROCUENTARESPONSABLE
   )B
   ON
   (
    A.NUMEROCUENTARESPONSABLE=B.NUMEROCUENTARESPONSABLE
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.CANTIDADIDENPOST AS motivoE , c4.cantidad AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, (SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Activo'
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      and b.product='iDen Post'
      GROUP BY a.NUMEROCUENTARESPONSABLE
      ) c4
   WHERE C.NUMEROCUENTARESPONSABLE=C4.NUMEROCUENTARESPONSABLE
   )
SET motivoE = motivo ;*/
/*677 validado*/
MERGE INTO
   (
    SELECT C.CANTIDADIDENPOST AS motivoE ,c.NUMEROCUENTARESPONSABLE
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
    SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Activo'
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      and b.product='iDen Post'
      GROUP BY a.NUMEROCUENTARESPONSABLE
   )B
   ON
   (
    A.NUMEROCUENTARESPONSABLE=B.NUMEROCUENTARESPONSABLE
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.CANTIDADHPTTPOST AS motivoE , c4.cantidad AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, (SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Activo'
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      and b.product='HP PTT Post'
      GROUP BY a.NUMEROCUENTARESPONSABLE
      ) c4
   WHERE C.NUMEROCUENTARESPONSABLE=C4.NUMEROCUENTARESPONSABLE
   )
SET motivoE = motivo ;*/
/*5 validado*/
MERGE INTO
   (
   SELECT C.CANTIDADHPTTPOST AS motivoE ,c.NUMEROCUENTARESPONSABLE
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
   SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Activo'
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      and b.product='HP PTT Post'
      GROUP BY a.NUMEROCUENTARESPONSABLE
   )B
   ON
   (
     A.NUMEROCUENTARESPONSABLE=B.NUMEROCUENTARESPONSABLE
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.CANTIDADPOSTSUSPENDIDOS AS motivoE , c4.cantidad AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, (SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Suspendido'
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      GROUP BY a.NUMEROCUENTARESPONSABLE
      ) c4
   WHERE C.NUMEROCUENTARESPONSABLE=C4.NUMEROCUENTARESPONSABLE
   )
SET motivoE = motivo ;*/
/*5,964 validado*/
MERGE INTO
   (
    SELECT C.CANTIDADPOSTSUSPENDIDOS AS motivoE ,c.NUMEROCUENTARESPONSABLE
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
    SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Suspendido'
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      GROUP BY a.NUMEROCUENTARESPONSABLE
   )B
   ON
   (
    A.NUMEROCUENTARESPONSABLE=B.NUMEROCUENTARESPONSABLE
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.CANTIDADPREPAGO AS motivoE , c4.cantidad AS motivo
   FROM FA_NEVERPAID_ACTIVADOS c, (SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Activo'
       and a.tipoplan='Full Prepago'
      GROUP BY a.NUMEROCUENTARESPONSABLE
      ) c4
   WHERE C.NUMEROCUENTARESPONSABLE=C4.NUMEROCUENTARESPONSABLE
   )
SET motivoE = motivo ;*/
/*35,029 validado*/
MERGE INTO
   (
    SELECT C.CANTIDADPREPAGO AS motivoE ,c.NUMEROCUENTARESPONSABLE
   FROM FA_NEVERPAID_ACTIVADOS c
   )A
   USING
   (
    SELECT a.NUMEROCUENTARESPONSABLE, COUNT( * )
         MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                          ='Activo'
       and a.tipoplan='Full Prepago'
      GROUP BY a.NUMEROCUENTARESPONSABLE
   )B
   ON
   (
    A.NUMEROCUENTARESPONSABLE=B.NUMEROCUENTARESPONSABLE
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

--------------------------------------------------------------------------
   /*
   T6. SUMARIZACION Y FORMATEO
   Se calcula el monto de deuda final en base al aged y se formatea
   el codigo compania a cuenta flat, adicionalmente se le incluye el
   codigo de compania para su identificacion mas rapida
   */
--------------------------------------------------------------------------
UPDATE FA_NEVERPAID_ACTIVOS_AGED SET TOTAL=AMOUNT_AS_OF_0+AMOUNT_AS_OF_30+AMOUNT_AS_OF_60+AMOUNT_AS_OF_90+AMOUNT_OVER_90;

 PRC_FORMATEACUENTA(  'FA_NEVERPAID_ACTIVOS_AGED','CODE'  );

 /*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.CODIGOCOMPANIA AS motivoE , c4.CODIGOCOMPANIA AS motivo
   FROM FA_NEVERPAID_ACTIVOS_AGED c, P_COMPANIA c4
   WHERE FN_DECODIFICA_CUENTA(C.CODE)=C4.CUENTACOMPANIA
   )
SET motivoE = motivo ;*/
/*487,316 validado*/
MERGE INTO
   (
     SELECT C.CODIGOCOMPANIA AS motivoE ,c.CODE
   FROM FA_NEVERPAID_ACTIVOS_AGED c
   )A
   USING
   (
   SELECT
   c4.CODIGOCOMPANIA AS motivo,c4.CUENTACOMPANIA
   FROM  P_COMPANIA c4
   )B
   ON
   (
    FN_DECODIFICA_CUENTA(A.CODE)=B.CUENTACOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

END PROCESARNEVERPAIDACTIVOS;


Procedure PROCESARSALDOSAFAVOR Is
Begin

 Prc_Formateacuenta('FA_BASEAGED','CODBSCS');
 Prc_Formateacuenta('FA_BASE_ENOTRIA','CODBSCS');

 Update Fa_Base_Enotria
SET Codbscs=REGEXP_REPLACE(Codbscs, '[^0-9.]+', '');

 /* UPDATE
  /*+BYPASS_UJVC*//*
  (
  Select
    A.Compania    As Compania,
    A.Tipo_Cuenta   As Tipocuenta ,
    A.Ciclo As Ciclo ,
    A.Codbscs As Codbscs ,
    A.Aged As Aged,
    A.Descripcionfinal As Descfinal,
    B.razonsocial as razonsocialU,
    B.Tipocuenta           As Tipocuentau ,
    B.Ciclo        As Ciclou,
    B.Cuentacompania As Cuentacompaniau,
    C.Monto_Total As Agedu,
    Case
      When C.Monto_Total Is Not Null And C.Monto_Total<0 Then
        'Devolución saldo a favor Inc. '||A.Nroincidente else 'ESPECIAL' end Descfinalu
  From Fa_Incidentes_Portal A
  Left Join  P_Compania B
  On (A.Codigocompania=B.Codigocompania )
  Left Join  Fa_Baseaged C
  on (B.Cuentacompania  = Fn_Decodifica_Cuenta(C.codbscs))
  )
Set Compania = razonsocialU ,
  Tipocuenta      =Tipocuentau,
  Ciclo    = Ciclou,
  Codbscs   = Cuentacompaniau,
  Aged = Agedu ,
  Descfinal = descfinalU ;*/
  /*36*/-->/*34*/--CORREGIDO
  MERGE INTO
   (
   select A.Compania    As Compania, A.Tipo_Cuenta   As Tipocuenta , A.Ciclo As Ciclo ,A.Codbscs As Codbscs , A.Aged As Aged,A.Descripcionfinal As Descfinal, a.Codigocompania from Fa_Incidentes_Portal A
   )A
   USING
   (
   select compania,tipocuenta,ciclo,codbscs,aged,descfinal,razonsocialU,Tipocuentau,Ciclou,Cuentacompaniau,Codigocompania,Agedu,Case
      When Agedu Is Not Null And Agedu<0 Then
        'Devolución saldo a favor Inc. '||Nroincidente else 'ESPECIAL' end Descfinalu
from
(
Select
    A.Compania    As Compania,
    A.Tipo_Cuenta   As Tipocuenta ,
    A.Ciclo As Ciclo ,
    A.Codbscs As Codbscs ,
    A.Aged As Aged,
    A.Descripcionfinal As Descfinal,
    B.razonsocial as razonsocialU,
    B.Tipocuenta           As Tipocuentau ,
    B.Ciclo        As Ciclou,
    B.Cuentacompania As Cuentacompaniau,
      b.Codigocompania,
    A.Nroincidente,
    SUM(C.Monto_Total) As Agedu
  From Fa_Incidentes_Portal A
  Left Join  P_Compania B
  On (A.Codigocompania=B.Codigocompania )
  Left Join  Fa_Baseaged C
  on (B.Cuentacompania  = Fn_Decodifica_Cuenta(C.codbscs))
  group by A.Compania,A.Tipo_Cuenta,
  A.Ciclo, A.Codbscs,
  A.Aged, A.Descripcionfinal,
  B.razonsocial, B.Tipocuenta,
  B.Ciclo, B.Cuentacompania,
  b.Codigocompania, A.Nroincidente
    )
   )B
   ON
   (
   A.Codigocompania=B.Codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET Compania = razonsocialU ,
  Tipocuenta      =Tipocuentau,
  Ciclo    = Ciclou,
  Codbscs   = Cuentacompaniau,
  Aged = Agedu ,
  Descfinal = descfinalU ;

  /*UPDATE
  /*+BYPASS_UJVC*//*
  (
  Select
    A.Aged As Aged,
    A.Intereses2 As Intereses,
    A.total3 as total,
    B.Monto_Total As Agedu
  From FA_BASE_ENOTRIA A
  Left Join  Fa_Baseaged B
  On (A.codbscs=B.codbscs ) where  A.aged is null
  )
Set Aged = Agedu ,
    Intereses      = abs(Agedu) - abs(total);*/
    /*671*/-->/*0*/--CORREGIDO
    MERGE INTO
   (   Select  Aged As Aged,  Intereses2 As Intereses,  total3 as total, codbscs
  From FA_BASE_ENOTRIA where aged is null
   )A
   USING
   (
   SELECT    SUM(Monto_Total) As Agedu,codbscs
   FROM   Fa_Baseaged
   group by codbscs
   )B
   ON
   (
    A.codbscs=B.codbscs
   )
   WHEN MATCHED THEN
   UPDATE SET Aged = Agedu ,    Intereses      = abs(Agedu) - abs(total);

  /*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT A.Aged AS Aged, A.Intereses2 AS Intereses, A.total3 AS total,
      B.Monto_Total AS Agedu
   FROM FA_BASE_ENOTRIA A
   LEFT JOIN
      (SELECT fn_decodifica_cuenta(codbscs) codbscs,SUM(monto_total)
         monto_total FROM Fa_Baseaged GROUP BY fn_decodifica_cuenta(codbscs)
      ) B ON (A.codbscs          =B.codbscs )
   WHERE instr(a.CODBSCS,'.',1,3)=0
   AND a.CODBSCS NOT LIKE '1.%' and A.aged is null
   )
SET Aged = Agedu , Intereses = ABS(ABS(Agedu) - ABS(total));*/
/*11*/-->/*0*/ --CORREGIDO
MERGE INTO
   (   SELECT Aged AS Aged, Intereses2 AS Intereses, total3 AS total,codbscs
   FROM FA_BASE_ENOTRIA  WHERE instr(CODBSCS,'.',1,3)=0   AND CODBSCS NOT LIKE '1.%'
   )A
   USING
   (   SELECT fn_decodifica_cuenta(codbscs) codbscs,SUM(monto_total)
         AGEDU FROM Fa_Baseaged GROUP BY fn_decodifica_cuenta(codbscs)
   )B
   ON
   (   A.codbscs          =B.codbscs
   )
   WHEN MATCHED THEN
   UPDATE SET Aged = Agedu , Intereses = ABS(ABS(Agedu) - ABS(total));

End PROCESARSALDOSAFAVOR;


 PROCEDURE PROCESARREPORTEPAGOS(SANHO VARCHAR2,SMES VARCHAR2) IS
 BEGIN
 -- PROPÓSITO:
-- Se carga el input de reporte de pagos en una tabla para formatearla y filtrarla en
--
-- HISTORIAL DE MODIFICACION
-- Usuario                           Fecha               Comentario
-- ----------                          ---------             ----------------------
-- CCHAHUAS                  09/03/2015       Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

--------------------------------------------------------------------------
   /*
   T1. SE ACTUALIZAN CAMPOS DESCRIPTIVOS DENTRO DEL REPORTE PAGOS
   Se actualizan los campos descriptivos de la tabla Reporte de Pago
    tomando como fuente la tabla Compania.
   */
--------------------------------------------------------------------------
 /*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE , c.ruccompania AS ruccompania,
      t.TIPOCUENTA AS tipocuentaE , c.tipocuenta AS tipocuenta, t.CANALVENTA AS
      canalventaE , c.canalventa AS canalventa, t.CONSULTOR AS consultorE ,
      c.consultor AS consultor, t.DEALER AS dealerE , c.dealer AS dealer,
      t.TIPODOCUMENTO AS tipodocumentoE , c.tipodocumento AS tipodocumento,
      t.SEGMENTO AS segmentoE , c.segmento AS segmento, t.CODIGOCOMPANIA AS
      codigocompaniaE , c.codigocompania AS codigocompania, t.provincia AS
      provinciaE,c.provincia AS provincia, t.departamento AS departamentoE,
      c.departamento AS departamento
   FROM FA_REPORTEPAGOS t, P_COMPANIA c
   WHERE FN_DECODIFICA_CUENTA(t.CUENTA)=c.CUENTACOMPANIA
   )
SET ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,codigocompaniaE=codigocompania,provinciaE=provincia
   ,departamentoE=departamento;*/
   /*670,401 validado*/
   MERGE INTO
   (
     SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE ,  t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE ,  t.CODIGOCOMPANIA AS
      codigocompaniaE ,  t.provincia AS
      provinciaE, t.departamento AS departamentoE,t.CUENTA

   FROM FA_REPORTEPAGOS t
   )A
   USING
   (
   SELECT
   c.ruccompania AS ruccompania, c.tipocuenta AS tipocuenta, c.canalventa AS canalventa, c.consultor AS consultor,c.dealer AS dealer, c.tipodocumento AS tipodocumento, c.segmento AS segmento, c.codigocompania AS codigocompania, c.provincia AS provincia, c.departamento AS departamento,c.CUENTACOMPANIA
   FROM P_COMPANIA c
   )B
   ON
   (
   FN_DECODIFICA_CUENTA(A.CUENTA)=B.CUENTACOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,codigocompaniaE=codigocompania,provinciaE=provincia
   ,departamentoE=departamento;

 /*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE , c.ruccompania AS ruccompania,
      t.TIPOCUENTA AS tipocuentaE , c.tipocuenta AS tipocuenta, t.CANALVENTA AS
      canalventaE , c.canalventa AS canalventa, t.CONSULTOR AS consultorE ,
      c.consultor AS consultor, t.DEALER AS dealerE , c.dealer AS dealer,
      t.TIPODOCUMENTO AS tipodocumentoE , c.tipodocumento AS tipodocumento,
      t.SEGMENTO AS segmentoE , c.segmento AS segmento, t.CODIGOCOMPANIA AS
      codigocompaniaE , c.codigocompania AS codigocompania, t.provincia AS
      provinciaE,c.provincia AS provincia, t.departamento AS departamentoE,
      c.departamento AS departamento
   FROM FA_REPORTEPAGOS t, P_COMPANIA c
   WHERE T.RAZONSOCIAL=c.razonsocial and t.codigocompania is null
   )
SET ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,codigocompaniaE=codigocompania,provinciaE=provincia
   ,departamentoE=departamento;*/
   /*3*/-->/*3*/ --CORREGIDO
 MERGE INTO
   (
     SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE ,  t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE ,  t.CODIGOCOMPANIA AS
      codigocompaniaE ,  t.provincia AS
      provinciaE, t.departamento AS departamentoE,t.RAZONSOCIAL
   FROM FA_REPORTEPAGOS t where t.codigocompania is null
   )A
   USING(
   SELECT * FROM
   (
   SELECT C.RUCCOMPANIA AS RUCCOMPANIA, C.TIPOCUENTA AS TIPOCUENTA, C.CANALVENTA AS CANALVENTA, C.CONSULTOR AS CONSULTOR, C.DEALER AS DEALER, C.TIPODOCUMENTO AS TIPODOCUMENTO, C.SEGMENTO AS SEGMENTO, C.CODIGOCOMPANIA AS CODIGOCOMPANIA, C.PROVINCIA AS PROVINCIA, C.DEPARTAMENTO AS DEPARTAMENTO,C.RAZONSOCIAL,ROW_NUMBER() OVER(PARTITION BY C.RAZONSOCIAL ORDER BY FECHACREACION DESC) AS RN
   FROM P_COMPANIA c) WHERE RN=1
   )B
   ON
   (
    A.RAZONSOCIAL=B.razonsocial
   )
   WHEN MATCHED THEN
   UPDATE SET ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,codigocompaniaE=codigocompania,provinciaE=provincia
   ,departamentoE=departamento;

/* UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE , c.ruccompania AS ruccompania,
      t.TIPOCUENTA AS tipocuentaE , c.tipocuenta AS tipocuenta, t.CANALVENTA AS
      canalventaE , c.canalventa AS canalventa, t.CONSULTOR AS consultorE ,
      c.consultor AS consultor, t.DEALER AS dealerE , c.dealer AS dealer,
      t.TIPODOCUMENTO AS tipodocumentoE , c.tipodocumento AS tipodocumento,
      t.SEGMENTO AS segmentoE , c.segmento AS segmento, t.CODIGOCOMPANIA AS
      codigocompaniaE , c.codigocompania AS codigocompania, t.provincia AS
      provinciaE,c.provincia AS provincia, t.departamento AS departamentoE,
      c.departamento AS departamento
   FROM FA_REPORTEPAGOS t, P_COMPANIA c
   WHERE T.DNI_RUC=C.RUCCOMPANIA and t.codigocompania is null
   )
SET ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,codigocompaniaE=codigocompania,provinciaE=provincia
   ,departamentoE=departamento;*/
   /*1*/-->/*1*/  --CORREGIDO *aqui no hubo cambio
   MERGE INTO
   (   SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE , t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE , t.CODIGOCOMPANIA AS
      codigocompaniaE ,  t.provincia AS
      provinciaE, t.departamento AS departamentoE,t.DNI_RUC
   FROM FA_REPORTEPAGOS t where  t.codigocompania is null
   )A
   USING
   (   SELECT    c.ruccompania AS ruccompania, c.tipocuenta AS tipocuenta, c.canalventa AS canalventa,  c.consultor AS consultor, c.dealer AS dealer,  c.tipodocumento AS tipodocumento,  c.segmento AS segmento, c.codigocompania AS codigocompania, c.provincia AS provincia, c.departamento AS departamento
   FROM P_COMPANIA c
   )B
   ON
   (    A.DNI_RUC=B.RUCCOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET  ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,codigocompaniaE=codigocompania,provinciaE=provincia
   ,departamentoE=departamento;
--------------------------------------------------------------------------
   /*
   T2. SE ACTUALIZAN CAMPOS CANTIDAD DE UNIDADES
   Se realiza un conteo de las unidades segun tipo o plan para
   registrarlas en los campos de cantidades
   */
--------------------------------------------------------------------------
   /*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.CANTIDAD3G AS motivoE , c4.cantidad AS motivo
   FROM FA_REPORTEPAGOS c, (SELECT a.CODIGOCOMPANIA , COUNT( * ) cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product in ('Non PTT Post','IN Post','HP PTT Post','Banda Ancha','Non PTT Prepago','IN Pre')
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.codigocompania=c4.codigocompania and  instr(c.cuenta,'.',1,3)=0
  AND c.cuenta NOT LIKE '1.%'
     )
  SET motivoE = motivo ;*/
  /*185 validado*/
  MERGE INTO
   (
    SELECT C.CANTIDAD3G AS motivoE ,c.codigocompania,c.cuenta
   FROM FA_REPORTEPAGOS c
   )A
   USING
   (
    SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product in ('Non PTT Post','IN Post','HP PTT Post','Banda Ancha','Non PTT Prepago','IN Pre')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
    A.codigocompania=B.codigocompania and  instr(A.cuenta,'.',1,3)=0
  AND A.cuenta NOT LIKE '1.%'
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.CANTIDAD2G AS motivoE , c4.cantidad AS motivo
   FROM FA_REPORTEPAGOS c, (SELECT a.CODIGOCOMPANIA , COUNT( * ) cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product in ('iDen Post','iDen Pre')
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.codigocompania=c4.codigocompania and  instr(c.cuenta,'.',1,3)=0
AND c.cuenta NOT LIKE '1.%'
   )
SET motivoE = motivo ;*/
/*83 validado*/
MERGE INTO
   (
     SELECT C.CANTIDAD2G AS motivoE ,c.codigocompania,c.cuenta
   FROM FA_REPORTEPAGOS c
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product in ('iDen Post','iDen Pre')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
    A.codigocompania=B.codigocompania and  instr(A.cuenta,'.',1,3)=0
AND A.cuenta NOT LIKE '1.%'
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

  /*UPDATE /*+BYPASS_UJVC*//* (SELECT C.CANTIDAD3G  AS motivoE,
               c4.cantidad AS motivo
          FROM FA_REPORTEPAGOS c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in
                       ('Non PTT Post','IN Post','HP PTT Post','Banda Ancha','Non PTT Prepago','IN Pre')
                 GROUP BY a.numerocuentaresponsable) c4
         WHERE c.cuenta = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*654,312 validado*/
     MERGE INTO
   (
   SELECT C.CANTIDAD3G  AS motivoE,c.cuenta
          FROM FA_REPORTEPAGOS c
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in
                       ('Non PTT Post','IN Post','HP PTT Post','Banda Ancha','Non PTT Prepago','IN Pre')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.cuenta = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

  /*UPDATE /*+BYPASS_UJVC*//* (SELECT c.CANTIDAD2G AS motivoE,
               c4.cantidad  AS motivo
          FROM FA_REPORTEPAGOS c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in ('iDen Post','iDen Pre')
                 GROUP BY a.numerocuentaresponsable) c4
         WHERE c.cuenta = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*30,598 validado*/
     MERGE INTO
   (
    SELECT c.CANTIDAD2G AS motivoE,c.cuenta
          FROM FA_REPORTEPAGOS c
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in ('iDen Post','iDen Pre')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
    A.cuenta = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

--------------------------------------------------------------------------
   /*
   T3. SE ACTUALIZAN DENOMINACIONES SEGUN GLOSA
   Se usan las glosas para actualizar la denominacion segun la
   glosa o username que se inserto por el input
   */
--------------------------------------------------------------------------
   UPDATE FA_REPORTEPAGOS
SET DENOMINACION='DOCUMENTOS SERIE 005'
WHERE USERNAME  ='CRM_FCFM'
AND REMARK LIKE '%005-%'
AND DENOMINACION IS NULL;

UPDATE FA_REPORTEPAGOS
SET DENOMINACION='DOCUMENTOS SERIE 279 - AMR'
WHERE USERNAME  ='CRM_FCFM'
AND REMARK LIKE '%279-%'
AND DENOMINACION IS NULL;

UPDATE FA_REPORTEPAGOS
SET DENOMINACION  ='AMR'
WHERE USERNAME    ='AMR'
AND DENOMINACION IS NULL;

UPDATE FA_REPORTEPAGOS
SET DENOMINACION  ='DEUDA CASTIGADA'
WHERE (TRX_TYPE   IN ('AO','WR'))
AND DENOMINACION IS NULL;

UPDATE FA_REPORTEPAGOS
SET DENOMINACION  ='CHEQUE DEVUELTO'
WHERE USERNAME    ='CRM_FCCD'
AND DENOMINACION IS NULL;

UPDATE FA_REPORTEPAGOS
SET DENOMINACION='SEPARACION DEUDA OLD'
WHERE UPPER(REMARK) LIKE '%SEPARAC%'
AND DENOMINACION IS NULL;

UPDATE FA_REPORTEPAGOS a
SET a.DENOMINACION='ID DEVOLUCIONES'
WHERE UPPER(a.REMARK) LIKE '%ID DEV%'
AND a.DENOMINACION IS NULL;

UPDATE FA_REPORTEPAGOS a
SET a.DENOMINACION  ='ABONOS REGISTRADOS'
WHERE (a.USERNAME   IN ('PIH','PAGOSBV','PAGOSMF','PAGOSEC' , 'PAGOSLN')
OR UPPER(A.USERNAME) LIKE 'PAGO%')
AND DENOMINACION IS NULL;

UPDATE FA_REPORTEPAGOS
SET DENOMINACION  ='RR.HH.'
WHERE USERNAME    ='RRHH'
AND DENOMINACION IS NULL;

UPDATE FA_REPORTEPAGOS
SET DENOMINACION='DEVOLUCION SALDO A FAVOR'
WHERE (UPPER(REMARK) LIKE '%COMPENSAT%'
OR UPPER(REMARK) LIKE '%A FAVOR%') and upper(remark) NOT LIKE '%TRANS%'
AND DENOMINACION IS NULL;

UPDATE FA_REPORTEPAGOS
SET DENOMINACION='AJUSTE DEUDA MENOR'
WHERE UPPER(REMARK) LIKE '%DEUDA MENOR COB%'
AND DENOMINACION IS NULL;

UPDATE FA_REPORTEPAGOS A
SET A.DENOMINACION='AJUSTES MANUALES'
WHERE TRX_TYPE   IN ('ACE','FC','RC')
AND A.DENOMINACION IS NULL;

UPDATE FA_REPORTEPAGOS A
SET A.DENOMINACION='OTROS'
WHERE A.DENOMINACION IS NULL;

UPDATE FA_REPORTEPAGOS
SET clasificacion='Mixto'
WHERE (CANTIDAD3G IS not NULL)
AND (CANTIDAD2G is not null );

UPDATE FA_REPORTEPAGOS
SET clasificacion='iDen'
WHERE (CANTIDAD3G IS  NULL)
AND (CANTIDAD2G is not null );

UPDATE FA_REPORTEPAGOS
SET clasificacion='3G'
WHERE (CANTIDAD3G IS NOT NULL)
AND (CANTIDAD2G is null );

UPDATE FA_REPORTEPAGOS
SET subdenominacion='Nota de Crédito S-005'
WHERE denominacion ='DOCUMENTOS SERIE 005'
AND upper(remark) LIKE 'N/C%';

UPDATE FA_REPORTEPAGOS
SET subdenominacion='Nota de Débito S-005'
WHERE denominacion ='DOCUMENTOS SERIE 005'
AND upper(remark) LIKE 'N/D%';

UPDATE FA_REPORTEPAGOS
SET subdenominacion='Factura S-005'
WHERE denominacion ='DOCUMENTOS SERIE 005'
AND upper(remark) LIKE 'FAC%';

UPDATE FA_REPORTEPAGOS
SET subdenominacion='Boleta de Venta S-005'
WHERE denominacion ='DOCUMENTOS SERIE 005'
AND upper(remark) LIKE 'BOL%';

UPDATE FA_REPORTEPAGOS
SET subdenominacion='Intereses Compensatorios'
WHERE denominacion ='DEVOLUCION SALDO A FAVOR'
AND upper(remark) LIKE '%INTER%';

UPDATE FA_REPORTEPAGOS
SET subdenominacion='Devolución Saldo a Favor'
WHERE denominacion ='DEVOLUCION SALDO A FAVOR'
AND (upper(remark) LIKE '%A FAVOR%' and upper(remark)NOT LIKE '%TRANS%') ;

UPDATE FA_REPORTEPAGOS a
SET a.subdenominacion='Montos Descontados Temporalmente'
WHERE a.denominacion ='AMR'
AND a.MONTO          <0;

UPDATE FA_REPORTEPAGOS a
SET a.subdenominacion='Montos Extornados al EECC'
WHERE a.denominacion ='AMR'
AND a.MONTO          >0;

UPDATE FA_REPORTEPAGOS a
SET a.subdenominacion='Balanceo IX + <Blank>'
WHERE a.denominacion ='DEUDA CASTIGADA'
AND (a.remark       IS NULL
OR upper(a.remark) LIKE '%BALANCEO IX%');

UPDATE FA_REPORTEPAGOS a
SET a.subdenominacion='Castigo Cobranza Judicial'
WHERE a.denominacion ='DEUDA CASTIGADA'
AND ( upper(a.remark) LIKE '%CASTIGO%');

UPDATE FA_REPORTEPAGOS a
SET a.subdenominacion='AMERICATEL'
WHERE a.denominacion ='SEPARACION DEUDA OLD'
AND upper(a.remark) LIKE '%AMERICATEL%';

UPDATE FA_REPORTEPAGOS a
SET a.subdenominacion='IDT'
WHERE a.denominacion ='SEPARACION DEUDA OLD'
AND upper(a.remark) LIKE '%IDT%';

UPDATE FA_REPORTEPAGOS a
SET a.subdenominacion='CONVERGIA'
WHERE a.denominacion ='SEPARACION DEUDA OLD'
AND upper(a.remark) LIKE '%CONVERGIA%';

UPDATE FA_REPORTEPAGOS a
SET a.subdenominacion='desde Nota de Crédito'
WHERE a.denominacion ='ID DEVOLUCIONES'
AND upper(a.remark) LIKE '%N/C%';

UPDATE FA_REPORTEPAGOS a
SET a.subdenominacion='desde Nota de Crédito'
WHERE a.denominacion ='ID DEVOLUCIONES'
AND upper(a.remark) LIKE '%N/C%';
UPDATE FA_REPORTEPAGOS a
SET a.subdenominacion='desde Depósito en Garantía'
WHERE a.denominacion ='ID DEVOLUCIONES'
and a.subdenominacion is null;

UPDATE FA_REPORTEPAGOS a
SET a.subdenominacion='Abonos'
WHERE a.denominacion ='ABONOS REGISTRADOS'
AND a.MONTO          >0;

UPDATE FA_REPORTEPAGOS a
SET a.subdenominacion='Extornos'
WHERE a.denominacion ='ABONOS REGISTRADOS'
AND a.MONTO          <0;
--------------------------------------------------------------------------
   /*
   T4. SE ACTUALIZAN EL TIPO DOCUMENTO
   Se actualiza la informacion del tipo de documento de acuerdo
   a si pertenece a Ruc 20 o Ruc 10
   */
--------------------------------------------------------------------------
UPDATE fa_reportepagos SET tipodocumento=decode(tipodocumento,'DNI','DNI','RUC',DECODE(SUBSTR(RUCCOMPANIA,0,2),'20','RUC 20','RUC 10'));
COMMIT;
--------------------------------------------------------------------------
   /*
   T5. SE GENERA RESUMEN DE REPORTE DE PAGOS
   Se realiza un resumen a nivel de registros de cuentas para
   mostrarse en la consola de procesos
   */
--------------------------------------------------------------------------
delete from FA_REPORTEPAGOS_RESUMEN where to_char(mes,'yyyymm')=(SANHO||SMES);

INSERT
INTO FA_REPORTEPAGOS_RESUMEN
   (
      MES, CICLO,MONTO, CLASIFICACION, DENOMINACION, TIPODOCUMENTO, CANTIDADPAGOS,
      PROVINCIA, SEGMENTO, DEPARTAMENTO,SUBDENOMINACION
   )
SELECT to_date(SANHO||SMES,'yyyymm') mes,A.CICLO, SUM(monto) MONTO,NVL(clasificacion,'N/A') clasificacion,denominacion,tipodocumento,COUNT(1) CANTIDADPAGOS,
   CASE
      WHEN a.PROVINCIA='LIMA'
      OR a.PROVINCIA  ='CALLAO'
      THEN 'LIMA'
      WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
      THEN 'PROVINCIA'
      ELSE 'N/A'
   END provincia,NVL(A.SEGMENTO,'N/A') SEGMENTO,NVL(A.DEPARTAMENTO,'N/A')
   DEPARTAMENTO,a.SUBDENOMINACION
FROM FA_REPORTEPAGOS a
GROUP BY to_date(SANHO||SMES,'yyyymm'),NVL(clasificacion,'N/A'),denominacion,tipodocumento,
   CASE
      WHEN a.PROVINCIA='LIMA'
      OR a.PROVINCIA  ='CALLAO'
      THEN 'LIMA'
      WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
      THEN 'PROVINCIA'
      ELSE 'N/A'
   END,A.SEGMENTO,NVL(A.SEGMENTO,'N/A'),NVL(A.DEPARTAMENTO,'N/A') ,a.SUBDENOMINACION,A.CICLO;


END PROCESARREPORTEPAGOS;

PROCEDURE GENERARDEPURADOSYANOMALIAS (
      paramperiodo VARCHAR2) IS

-- PROPÓSITO:
-- Realizar el primer cruce de los inputs de deuda empleados,  además de
-- generar una base de depurados y otra de anomalías que servirán para posteriores cruces
--
-- HISTORIAL DE MODIFICACION
-- Usuario                              Fecha               Comentario
-- ----------                           ---------           ----------------------
-- vortega                              07/10/2014          Creacion
-- vortega                              15/02/2014          Revisión dle flujo y documentacion

BEGIN

 --------------------------------------------------------------------------
   /*
   T1. ELIMINACION DE LA INFORMACION DE FA_ANOMALIAS_T1, FA_PADRONEMP_DEP Y FA_PADRONEMP_DEP2
   DEL PERIODO EN PROCESO
   */
 --------------------------------------------------------------------------
DELETE FROM FA_ANOMALIAS_T1 where FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');
DELETE FROM FA_PADRONEMP_DEP where FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');
DELETE FROM FA_PADRONEMP_DEP2 where FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');


 --------------------------------------------------------------------------
   /*
   T2. INSERCION EN FA_ANOMALIAS_T1
   Se inserta en la tabla FA_ANOMALIAS_T1 data de la tabla FA_PADRON_EMPLEADOS_RRHH
   donde la fecha de proceso sea la del periodo actual
   */
 --------------------------------------------------------------------------
INSERT
INTO FA_ANOMALIAS_T1
  (
    NRO,
    TIPODOCUMENTO,
    NUMERODOCUMENTO,
    APELLIDOPATERNO,
    APELLIDOMATERNO,
    NOMBRES,
    NOMBRECOMPLETO_T1,
    CONDICION,
    MODALIDAD,
    MES,
    CENTROCOSTO,
    NOMBRECOMPLETO_T2,
    FECHAPROC
  )

SELECT NRO,
  TIPODOCUMENTO,
  NUMERODOCUMENTO,
  APELLIDOPATERNO,
  APELLIDOMATERNO,
  NOMBRES,
  NOMBRECOMPLETO_T1,
  CONDICION,
  MODALIDAD,
  MES,
  CENTROCOSTO,
  NOMBRECOMPLETO_T2,
  FECHAPROC
FROM FA_PADRON_EMPLEADOS_RRHH
WHERE  FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--2198

 --------------------------------------------------------------------------
   /*
   T3. DEPURACION DE LA TABLA FA_ANOMALIAS_T1 E INSERCIÓN EN FA_PADRONEMP_DEP
   1.-Se inserta en FA_PADRONEMP_DEP aquellos registros de la FA_ANOMALIAS_T1 que crucen por alguna modalidad
   2.-Se actualiza la tabla FA_PADRONEMP_DEP el campo de tipocruce segun la modalidad en que el registro haya cruzado
   3.-Se elimina el registro de la tabla FA_ANOMALIAS_T1
   */
 --------------------------------------------------------------------------
----PRIMERA INCIDENCIA: CRUCE POR DNI
INSERT
INTO FA_PADRONEMP_DEP
  (
    NRO,
    TIPODOCUMENTO,
    NUMERODOCUMENTO,
    APELLIDOPATERNO,
    APELLIDOMATERNO,
    NOMBRES,
    NOMBRECOMPLETO_T1,
    CONDICION,
    MODALIDAD,
    MES,
    CENTROCOSTO,
    NOMBRECOMPLETO_T2,
    TIPOCRUCE,
    FECHAPROC
  )
SELECT * from FA_ANOMALIAS_T1 a
where  exists(SELECT 1 FROM FOTOEQUIPOS
WHERE ruccompania= a.numerodocumento
and (ESTADOCONTRATO='Activo' or ESTADOCONTRATO='Suspendido')
AND NUMEROCUENTACOMPANIA IS NOT NULL)
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--2153

UPDATE FA_PADRONEMP_DEP SET TIPOCRUCE='CRUCE POR DNI' WHERE TIPOCRUCE IS NULL AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--2153

DELETE from FA_ANOMALIAS_T1 a
where  exists(SELECT 1 FROM FOTOEQUIPOS
WHERE ruccompania= a.numerodocumento
and (ESTADOCONTRATO='Activo' or ESTADOCONTRATO='Suspendido')
AND NUMEROCUENTACOMPANIA IS NOT NULL)
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--2153

----SEGUNDA INCIDENCIA: FALTA DE CEROS A LA IZQ
INSERT INTO FA_PADRONEMP_DEP
(
    NRO,
    TIPODOCUMENTO,
    NUMERODOCUMENTO,
    APELLIDOPATERNO,
    APELLIDOMATERNO,
    NOMBRES,
    NOMBRECOMPLETO_T1,
    CONDICION,
    MODALIDAD,
    MES,
    CENTROCOSTO,
    NOMBRECOMPLETO_T2,
    TIPOCRUCE,
    FECHAPROC
  )
select * from FA_ANOMALIAS_T1 a
where exists(SELECT 1 FROM FOTOEQUIPOS
WHERE LPAD(TRIM(ruccompania),10,'0')=LPAD(TRIM(a.numerodocumento),10,'0')
and (ESTADOCONTRATO='Activo' or ESTADOCONTRATO='Suspendido')
AND NUMEROCUENTACOMPANIA IS NOT NULL)
AND  FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--4

UPDATE FA_PADRONEMP_DEP SET TIPOCRUCE='FALTA DE CEROS A LA IZQ.' WHERE TIPOCRUCE IS NULL AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--4

--BORRAR LOS REGISTROS DE TABLA ANOMALIAS
DELETE from FA_ANOMALIAS_T1 a
where exists(SELECT 1 FROM FOTOEQUIPOS
WHERE LPAD(TRIM(ruccompania),10,'0')=LPAD(TRIM(a.numerodocumento),10,'0')
and (ESTADOCONTRATO='Activo' or ESTADOCONTRATO='Suspendido')
AND NUMEROCUENTACOMPANIA IS NOT NULL)
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--4

----TERCERA INCIDENCIA: CRUCE POR NOMBRE TIPO 1
INSERT INTO FA_PADRONEMP_DEP
(
    NRO,
    TIPODOCUMENTO,
    NUMERODOCUMENTO,
    APELLIDOPATERNO,
    APELLIDOMATERNO,
    NOMBRES,
    NOMBRECOMPLETO_T1,
    CONDICION,
    MODALIDAD,
    MES,
    CENTROCOSTO,
    NOMBRECOMPLETO_T2,
    TIPOCRUCE,
    FECHAPROC
  )
select * from FA_ANOMALIAS_T1 a
where exists(SELECT 1 FROM FOTOEQUIPOS
WHERE TRIM(compania)=TRIM(a.nombrecompleto_t1)
and (ESTADOCONTRATO='Activo' or ESTADOCONTRATO='Suspendido')
AND NUMEROCUENTACOMPANIA IS NOT NULL)
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--8
--ACTUALIZAR EN TABLADEPURADA
UPDATE FA_PADRONEMP_DEP SET TIPOCRUCE='CRUCE POR NOMBRE TIPO 1' WHERE TIPOCRUCE IS NULL AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--8
--BORRAR LOS REGISTROS DE TABLA ANOMALIAS
DELETE from FA_ANOMALIAS_T1 a
where exists(SELECT 1 FROM FOTOEQUIPOS
WHERE TRIM(compania)=TRIM(a.nombrecompleto_t1)
and (ESTADOCONTRATO='Activo' or ESTADOCONTRATO='Suspendido')
AND NUMEROCUENTACOMPANIA IS NOT NULL)
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--8

----CUARTA INCIDENCIA: CRUCE POR NOMBRE TIPO 2
INSERT INTO FA_PADRONEMP_DEP
(
    NRO,
    TIPODOCUMENTO,
    NUMERODOCUMENTO,
    APELLIDOPATERNO,
    APELLIDOMATERNO,
    NOMBRES,
    NOMBRECOMPLETO_T1,
    CONDICION,
    MODALIDAD,
    MES,
    CENTROCOSTO,
    NOMBRECOMPLETO_T2,
    TIPOCRUCE,
    FECHAPROC
  )
select * from FA_ANOMALIAS_T1 a
where exists(SELECT 1 FROM FOTOEQUIPOS
WHERE TRIM(compania)=TRIM(a.nombrecompleto_t2)
and (ESTADOCONTRATO='Activo' or ESTADOCONTRATO='Suspendido')
AND NUMEROCUENTACOMPANIA IS NOT NULL)
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--3

--ACTUALIZAR EN TABLADEPURADA
UPDATE FA_PADRONEMP_DEP SET TIPOCRUCE='CRUCE POR NOMBRE TIPO 2' WHERE TIPOCRUCE IS NULL AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--3
--BORRAR LOS REGISTROS DE TABLA ANOMALIAS
DELETE from FA_ANOMALIAS_T1 a
where exists(SELECT 1 FROM FOTOEQUIPOS
WHERE TRIM(compania)=TRIM(a.nombrecompleto_t2)
and (ESTADOCONTRATO='Activo' or ESTADOCONTRATO='Suspendido')
AND NUMEROCUENTACOMPANIA IS NOT NULL)
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--3

----QUINTA INCIDENCIA: TIPO 1 CON TILDES
INSERT INTO FA_PADRONEMP_DEP
(
    NRO,
    TIPODOCUMENTO,
    NUMERODOCUMENTO,
    APELLIDOPATERNO,
    APELLIDOMATERNO,
    NOMBRES,
    NOMBRECOMPLETO_T1,
    CONDICION,
    MODALIDAD,
    MES,
    CENTROCOSTO,
    NOMBRECOMPLETO_T2,
    TIPOCRUCE,
    FECHAPROC
  )
select * from FA_ANOMALIAS_T1 a
where exists(SELECT 1 FROM FOTOEQUIPOS
WHERE TRIM(compania)=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t1),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U')
and (ESTADOCONTRATO='Activo' or ESTADOCONTRATO='Suspendido')
AND NUMEROCUENTACOMPANIA IS NOT NULL)
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--3

--ACTUALIZAR EN TABLADEPURADA
UPDATE FA_PADRONEMP_DEP SET TIPOCRUCE='CRUCE POR NOMBRE TIPO 1 C/TILDE' WHERE TIPOCRUCE IS NULL AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--3
--BORRAR LOS REGISTROS DE TABLA ANOMALIAS
DELETE from FA_ANOMALIAS_T1 a
where exists(SELECT 1 FROM FOTOEQUIPOS
WHERE TRIM(compania)=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t1),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U')
and (ESTADOCONTRATO='Activo' or ESTADOCONTRATO='Suspendido')
AND NUMEROCUENTACOMPANIA IS NOT NULL)
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--3

--SEXTA INCIDENCIA: TIPO 2 CON TILDES
INSERT INTO FA_PADRONEMP_DEP
(
    NRO,
    TIPODOCUMENTO,
    NUMERODOCUMENTO,
    APELLIDOPATERNO,
    APELLIDOMATERNO,
    NOMBRES,
    NOMBRECOMPLETO_T1,
    CONDICION,
    MODALIDAD,
    MES,
    CENTROCOSTO,
    NOMBRECOMPLETO_T2,
    TIPOCRUCE,
    FECHAPROC
  )
select * from FA_ANOMALIAS_T1 a
where exists(SELECT 1 FROM FOTOEQUIPOS
WHERE TRIM(compania)=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t2),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U')
and (ESTADOCONTRATO='Activo' or ESTADOCONTRATO='Suspendido')
AND NUMEROCUENTACOMPANIA IS NOT NULL)
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--3

--ACTUALIZAR EN TABLADEPURADA
UPDATE FA_PADRONEMP_DEP SET TIPOCRUCE='CRUCE POR NOMBRE TIPO 2 C/TILDE' WHERE TIPOCRUCE IS NULL AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--3
--BORRAR LOS REGISTROS DE TABLA ANOMALIAS
DELETE from FA_ANOMALIAS_T1 a
where exists(SELECT 1 FROM FOTOEQUIPOS
WHERE TRIM(compania)=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t2),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U')
and (ESTADOCONTRATO='Activo' or ESTADOCONTRATO='Suspendido')
AND NUMEROCUENTACOMPANIA IS NOT NULL)
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');--3
COMMIT;

 --------------------------------------------------------------------------
   /*
   T4. ACTUALIZACION DE TABLA FA_ANOMALIAS_T1
   Se actualiza el campo tipoanomalia con los diferentes tipos
   */
 --------------------------------------------------------------------------
--UPDATES DE FA_ANOMALIAS_T1
UPDATE FA_ANOMALIAS_T1 a SET TIPOANOMALIA =TIPOANOMALIA ||'/DESACTIVADO'
WHERE exists( SELECT 1 FROM FOTOEQUIPOS B
WHERE (LPAD(TRIM(B.ruccompania),10,'0')=LPAD(TRIM(a.numerodocumento),10,'0')
OR  TRIM(compania)=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t1),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U')
OR  TRIM(compania)=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t2),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U') )
and (ESTADOCONTRATO='Desactivado'))
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');

UPDATE FA_ANOMALIAS_T1 a SET TIPOANOMALIA =TIPOANOMALIA ||'/NUMEROCUENTACOMPANIA NULO'
WHERE exists( SELECT 1 FROM FOTOEQUIPOS B
WHERE (LPAD(TRIM(B.ruccompania),10,'0')=LPAD(TRIM(a.numerodocumento),10,'0')
OR  TRIM(compania)=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t1),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U')
OR  TRIM(compania)=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t2),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U'))
and (NUMEROCUENTACOMPANIA IS NULL))
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');

UPDATE FA_ANOMALIAS_T1 a SET TIPOANOMALIA=TIPOANOMALIA ||'/DNI P_COMPANIA'
WHERE exists( SELECT 1 FROM P_COMPANIA B
WHERE TRIM(B.ruccompania)= TRIM(a.numerodocumento))
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');

UPDATE FA_ANOMALIAS_T1 a SET TIPOANOMALIA=TIPOANOMALIA ||'/NO DNI P_COMPANIA'
WHERE NOT exists( SELECT 1 FROM P_COMPANIA B
WHERE TRIM(B.ruccompania)= TRIM(a.numerodocumento))
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');

UPDATE FA_ANOMALIAS_T1 a SET TIPOANOMALIA=TIPOANOMALIA ||'/NOMBRE T1 P_COMPANIA'
WHERE exists( SELECT 1 FROM P_COMPANIA B
WHERE  TRIM(B.RAZONSOCIAL)=TRIM(a.nombrecompleto_t1)  );

UPDATE FA_ANOMALIAS_T1 a SET TIPOANOMALIA=TIPOANOMALIA ||'/NOMBRE T2 P_COMPANIA'
WHERE exists( SELECT 1 FROM P_COMPANIA B
WHERE  TRIM(B.RAZONSOCIAL)=TRIM(a.nombrecompleto_t2)  )
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');

UPDATE FA_ANOMALIAS_T1 a SET TIPOANOMALIA=TIPOANOMALIA ||'/NOMBRE T1 TILDES P_COMPANIA'
WHERE exists( SELECT 1 FROM P_COMPANIA B
WHERE  TRIM(B.RAZONSOCIAL)=
REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t1),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U'))
AND NOT EXISTS (SELECT 1 FROM P_COMPANIA B WHERE TRIM(B.RAZONSOCIAL)=TRIM(a.nombrecompleto_t1))
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');

UPDATE FA_ANOMALIAS_T1 a SET TIPOANOMALIA=TIPOANOMALIA ||'/NOMBRE T2 TILDES P_COMPANIA'
WHERE exists( SELECT 1 FROM P_COMPANIA B
WHERE  TRIM(B.RAZONSOCIAL)=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t2),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U'))
AND NOT EXISTS(SELECT 1 FROM P_COMPANIA B WHERE TRIM(B.RAZONSOCIAL)=TRIM(a.nombrecompleto_t2))
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');

UPDATE FA_ANOMALIAS_T1 a SET TIPOANOMALIA=TIPOANOMALIA ||'/NO NOMBRE P_COMPANIA'
WHERE NOT exists( SELECT 1 FROM P_COMPANIA B
WHERE  TRIM(B.RAZONSOCIAL)=
REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t1),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U'))
AND NOT EXISTS(SELECT 1 FROM P_COMPANIA B WHERE TRIM(B.RAZONSOCIAL)=TRIM(a.nombrecompleto_t1))
AND NOT exists( SELECT 1 FROM P_COMPANIA B
WHERE  TRIM(B.RAZONSOCIAL)=
REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t2),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U'))
AND NOT EXISTS(SELECT 1 FROM P_COMPANIA B WHERE TRIM(B.RAZONSOCIAL)=TRIM(a.nombrecompleto_t2))
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');

COMMIT;


 --------------------------------------------------------------------------
   /*
   T5. ACTUALIZACION DE TABLA FA_PADRONEMP_DEP
   Se actualiza el campo ruccompania
   */
 --------------------------------------------------------------------------
----UPDATES EN FA_PADRONEMP_DEP
/*update /*+BYPASS_UJVC*//*
(select a.ruccompania as rucE ,b.ruccompania as ruc
from fa_padronemp_dep a,(select distinct ruccompania from fotoequipos) b
where LPAD(TRIM(b.ruccompania),10,'0')=LPAD(TRIM(a.numerodocumento),10,'0')
and a.ruccompania is null AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY'))
set rucE=ruc;*/
/*fecha=201601   update=0 merge=0 validado*/
 MERGE INTO
   (
   select a.ruccompania as rucE,a.numerodocumento
from fa_padronemp_dep a where  a.ruccompania is null AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')
   )A
   USING
   (
   select distinct ruccompania AS RUC,ruccompania from fotoequipos
   )B
   ON
   (
   LPAD(TRIM(b.ruccompania),10,'0')=LPAD(TRIM(a.numerodocumento),10,'0')

   )
   WHEN MATCHED THEN
   UPDATE SET rucE=ruc;

/*update /*+BYPASS_UJVC*//*
(select a.ruccompania as rucE ,b.ruccompania as ruc
from fa_padronemp_dep a ,(select distinct ruccompania,compania, count(1) from fotoequipos group by ruccompania,compania) b
where ( TRIM(B.compania)=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t1),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U')
or TRIM(B.compania)=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t2),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U') )
and a.ruccompania is null AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY'))
set rucE=ruc;*/
/*fecha=201601 update=0 merge=0 validado*/
MERGE INTO
   (
    SELECT A.RUCCOMPANIA AS RUCE,a.nombrecompleto_t1 ,a.nombrecompleto_t2
from fa_padronemp_dep a where  a.ruccompania is null AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')
   )A
   USING
   (
    select distinct ruccompania AS RUC,compania, count(1) from fotoequipos group by ruccompania,compania
   )B
   ON
   (
   (TRIM(B.compania)=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t1),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U')
or TRIM(B.compania)=REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(TRIM(a.nombrecompleto_t2),'Á','A'),'É','E'),'Í','I'),'Ó','O'),'Ú','U'))
   )
   WHEN MATCHED THEN
   UPDATE SET rucE=ruc;

COMMIT;

 --------------------------------------------------------------------------
   /*
   T6. INSERCION EN TABLA FA_PADRONEMP_DEP2
   Se ingresa registros del cruce entre FA_PADRONEMP_DEP Y FOTOEQUIPOS
   por ruccompania
   */
 --------------------------------------------------------------------------
INSERT INTO FA_PADRONEMP_DEP2
(
    RUCCOMPANIA,
    NUMEROCUENTARESPONSABLE,
    NUMEROCUENTACOMPANIA,
    FECHAPROC)
(SELECT DISTINCT A.RUCCOMPANIA,B.NUMEROCUENTARESPONSABLE,B.NUMEROCUENTACOMPANIA,A.FECHAPROC
FROM FA_PADRONEMP_DEP A, FOTOEQUIPOS B
WHERE A.RUCCOMPANIA=B.RUCCOMPANIA
AND FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY'));

COMMIT;

 --------------------------------------------------------------------------
   /*
   T7. ACTUALIZACION EN TABLA FA_PADRONEMP_DEP2
   Se actualiza el campo codbscs de la tabla FA_PADRONEMP_DEP2
   */
 --------------------------------------------------------------------------

/*update /*+BYPASS_UJVC*//*
(select a.CODBSCS as rucE ,b.CODBSCS as ruc
from fa_padronemp_dep2 a ,fa_baseaged_detail b
where TRIM(a.NUMEROCUENTARESPONSABLE)=TRIM(b.codcuenta)
and a.codbscs is null
AND A.FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')
AND B.FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY'))
set rucE=ruc;*/
/*fecha=201601 update=0 merge=0 validado*/
MERGE INTO
   (
   select a.CODBSCS as rucE ,a.NUMEROCUENTARESPONSABLE
from fa_padronemp_dep2 a  where  a.codbscs is null
AND A.FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')
   )A
   USING
   (
   SELECT
   b.CODBSCS as ruc,b.codcuenta
   FROM  fa_baseaged_detail b where B.FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')
   )B
   ON
   (
    TRIM(a.NUMEROCUENTARESPONSABLE)=TRIM(b.codcuenta)

   )
   WHEN MATCHED THEN
   UPDATE SET rucE=ruc;

COMMIT;

/*update /*+BYPASS_UJVC*//*
(select a.CODBSCS as rucE ,b.CODBSCS as ruc
from fa_padronemp_dep2 a ,fa_baseaged_detail b
where FN_DECODIFICA_CUENTA(TRIM(a.NUMEROCUENTARESPONSABLE))=TRIM(b.codcuenta)
and a.codbscs is null
AND A.FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')
AND B.FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY'))
set rucE=ruc;*/
/*fecha=201601 update=0 merge=0 validado*/
MERGE INTO
   (
    select a.CODBSCS as rucE,a.NUMEROCUENTARESPONSABLE
    from fa_padronemp_dep2 a  where  a.codbscs is null
    AND A.FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')
   )A
   USING
   (
   SELECT
   b.CODBSCS as ruc,b.codcuenta
   FROM fa_baseaged_detail b where  B.FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')
   )B
   ON
   (
    FN_DECODIFICA_CUENTA(TRIM(a.NUMEROCUENTARESPONSABLE))=TRIM(b.codcuenta)


   )
   WHEN MATCHED THEN
   UPDATE SET rucE=ruc;

COMMIT;

END GENERARDEPURADOSYANOMALIAS;

PROCEDURE  PROCESADEUDAEMPLEADOP2 (
      paramperiodo VARCHAR2) IS
-- PROPÓSITO:
--
--
-- HISTORIAL DE MODIFICACION
-- Usuario                              Fecha               Comentario
-- ----------                           ---------           ----------------------
-- cchahuas                              07/10/2014          Creacion
-- vortega                              10/03/2015          Revisión del flujo y documentación

BEGIN

 --------------------------------------------------------------------------
   /*
   T1. ELIMINACION DE REGISTROS PARA REPROCESO DE FA_ANOMALIAS_TFIN,FA_PADRONEMPAGED_DEP,
   FA_PADRONEMPAGED_DEPFIN,FA_PADRONEMPAGED_DEPFIN2

   */
 --------------------------------------------------------------------------
DELETE FROM FA_ANOMALIAS_TFIN where FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');
DELETE FROM FA_PADRONEMPAGED_DEP where FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');
DELETE FROM FA_PADRONEMPAGED_DEPFIN where FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');
DELETE FROM FA_PADRONEMPAGED_DEPFIN2 where FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');

 --------------------------------------------------------------------------
   /*
   T2. ACTUALIZACION DE CAMPO MONTOMASTOTAL DE TABLA FA_BASEAGED_DETAIL

   */
 --------------------------------------------------------------------------
UPDATE FA_BASEAGED_DETAIL SET MONTOMASTOTAL=DECODE(SIGN(MONTO0+MONTO30+MONTO60+MONTO90+MONTOMAS90),-1,0,MONTO0+MONTO30+MONTO60+MONTO90+MONTOMAS90) where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');
COMMIT;

 --------------------------------------------------------------------------
   /*
   T3. INSERCION DE EMPLEADOS EN FA_PADRONEMPAGED_DEPFIN
   Se incluyen el resultado del cruce del padron cruzado contra el Aged en todos
   sus variedades de cruces efectivos
   */
 --------------------------------------------------------------------------

INSERT INTO FA_PADRONEMPAGED_DEPFIN (NRO,tipodocumento,numerodocumento,nombrecompleto_t1,condicion,modalidad,centrocosto,nombrecompleto_t2,ruccompania,numerocuentaresponsable,numerocuentacompania,codbscs,NCOMPANIA,MONTOMASTOTAL,fechaproc)
(select x.NRO,x.tipodocumento,x.numerodocumento,x.nombrecompleto_t1,x.condicion,x.modalidad,x.centrocosto,x.nombrecompleto_t2,x.ruccompania,x.numerocuentaresponsable,x.numerocuentacompania,y.codbscs,y.NCOMPANIA as nombre,y.MONTOMASTOTAL,y.fechaproc
FROM (select a.NRO,a.tipodocumento,a.numerodocumento,a.nombrecompleto_t1,a.condicion,a.modalidad,a.centrocosto,a.nombrecompleto_t2,a.ruccompania,b.numerocuentaresponsable,b.numerocuentacompania,b.codbscs from FA_PADRONEMP_DEP a left join FA_PADRONEMP_DEP2 b on a.ruccompania=b.ruccompania where a.fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY') and b.fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) x
left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) y
on x.CODBSCS=y.CODBSCS
where y.CODBSCS is not null);
COMMIT;

INSERT INTO FA_PADRONEMPAGED_DEPFIN (NRO,tipodocumento,numerodocumento,nombrecompleto_t1,condicion,modalidad,centrocosto,nombrecompleto_t2,ruccompania,numerocuentaresponsable,numerocuentacompania,codbscs,NCOMPANIA,MONTOMASTOTAL,fechaproc)
(select m.NRO,m.tipodocumento,m.numerodocumento,m.nombrecompleto_t1,m.condicion,m.modalidad,m.centrocosto,m.nombrecompleto_t2,m.ruccompania,m.numerocuentaresponsable,m.numerocuentacompania,n.codbscs,n.NCOMPANIA as nombre,n.MONTOMASTOTAL,n.fechaproc
from (select x.NRO,x.tipodocumento,x.numerodocumento,x.nombrecompleto_t1,x.condicion,x.modalidad,x.centrocosto,x.nombrecompleto_t2,x.ruccompania,x.numerocuentaresponsable,x.numerocuentacompania,x.codbscs,y.NCOMPANIA as nombre,y.MONTOMASTOTAL,y.fechaproc
FROM (select a.NRO,a.tipodocumento,a.numerodocumento,a.nombrecompleto_t1,a.condicion,a.modalidad,a.centrocosto,a.nombrecompleto_t2,a.ruccompania,b.numerocuentaresponsable,b.numerocuentacompania,b.codbscs from FA_PADRONEMP_DEP a left join FA_PADRONEMP_DEP2 b on a.ruccompania=b.ruccompania where a.fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY') and b.fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) x
left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) y
on x.CODBSCS=y.CODBSCS
where y.CODBSCS is null) m left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) n on m.numerocuentacompania=n.codcuenta where n.codcuenta is not null);
COMMIT;

INSERT INTO FA_PADRONEMPAGED_DEPFIN (NRO,tipodocumento,numerodocumento,nombrecompleto_t1,condicion,modalidad,centrocosto,nombrecompleto_t2,ruccompania,numerocuentaresponsable,numerocuentacompania,codbscs,NCOMPANIA,MONTOMASTOTAL,fechaproc)
(select p.NRO,p.tipodocumento,p.numerodocumento,p.nombrecompleto_t1,p.condicion,p.modalidad,p.centrocosto,p.nombrecompleto_t2,p.ruccompania,p.numerocuentaresponsable,p.numerocuentacompania,q.codbscs,q.NCOMPANIA as nombre,q.MONTOMASTOTAL,q.fechaproc
from (select m.NRO,m.tipodocumento,m.numerodocumento,m.nombrecompleto_t1,m.condicion,m.modalidad,m.centrocosto,m.nombrecompleto_t2,m.ruccompania,m.numerocuentaresponsable,m.numerocuentacompania,n.codbscs,n.NCOMPANIA as nombre,n.MONTOMASTOTAL,n.fechaproc
from (select x.NRO,x.tipodocumento,x.numerodocumento,x.nombrecompleto_t1,x.condicion,x.modalidad,x.centrocosto,x.nombrecompleto_t2,x.ruccompania,x.numerocuentaresponsable,x.numerocuentacompania,x.codbscs,y.NCOMPANIA as nombre,y.MONTOMASTOTAL,y.fechaproc
FROM (select a.NRO,a.tipodocumento,a.numerodocumento,a.nombrecompleto_t1,a.condicion,a.modalidad,a.centrocosto,a.nombrecompleto_t2,a.ruccompania,b.numerocuentaresponsable,b.numerocuentacompania,b.codbscs from FA_PADRONEMP_DEP a left join FA_PADRONEMP_DEP2 b on a.ruccompania=b.ruccompania where a.fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY') and b.fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) x
left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) y
on x.CODBSCS=y.CODBSCS
where y.CODBSCS is null) m left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) n on m.numerocuentacompania=n.codcuenta where n.codcuenta is null) p left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) q on p.numerocuentacompania=q.codcuenta||'0' where q.codcuenta is not null);
COMMIT;

INSERT INTO FA_PADRONEMPAGED_DEPFIN (NRO,tipodocumento,numerodocumento,nombrecompleto_t1,condicion,modalidad,centrocosto,nombrecompleto_t2,ruccompania,numerocuentaresponsable,numerocuentacompania,codbscs,NCOMPANIA,MONTOMASTOTAL,fechaproc)
(select r.NRO,r.tipodocumento,r.numerodocumento,r.nombrecompleto_t1,r.condicion,r.modalidad,r.centrocosto,r.nombrecompleto_t2,r.ruccompania,r.numerocuentaresponsable,r.numerocuentacompania,s.codbscs,s.NCOMPANIA as nombre,s.MONTOMASTOTAL,s.fechaproc
from(select p.NRO,p.tipodocumento,p.numerodocumento,p.nombrecompleto_t1,p.condicion,p.modalidad,p.centrocosto,p.nombrecompleto_t2,p.ruccompania,p.numerocuentaresponsable,p.numerocuentacompania,q.codbscs,q.NCOMPANIA as nombre,q.MONTOMASTOTAL,q.fechaproc
from (select m.NRO,m.tipodocumento,m.numerodocumento,m.nombrecompleto_t1,m.condicion,m.modalidad,m.centrocosto,m.nombrecompleto_t2,m.ruccompania,m.numerocuentaresponsable,m.numerocuentacompania,n.codbscs,n.NCOMPANIA as nombre,n.MONTOMASTOTAL,n.fechaproc
from (select x.NRO,x.tipodocumento,x.numerodocumento,x.nombrecompleto_t1,x.condicion,x.modalidad,x.centrocosto,x.nombrecompleto_t2,x.ruccompania,x.numerocuentaresponsable,x.numerocuentacompania,x.codbscs,y.NCOMPANIA as nombre,y.MONTOMASTOTAL,y.fechaproc
FROM (select a.NRO,a.tipodocumento,a.numerodocumento,a.nombrecompleto_t1,a.condicion,a.modalidad,a.centrocosto,a.nombrecompleto_t2,a.ruccompania,b.numerocuentaresponsable,b.numerocuentacompania,b.codbscs from FA_PADRONEMP_DEP a left join FA_PADRONEMP_DEP2 b on a.ruccompania=b.ruccompania where a.fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY') and b.fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) x
left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) y
on x.CODBSCS=y.CODBSCS
where y.CODBSCS is null) m left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) n on m.numerocuentacompania=n.codcuenta where n.codcuenta is null) p left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) q on p.numerocuentacompania=q.codcuenta||'0' where q.codcuenta is null) r left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) s on r.numerocuentacompania=s.codcuenta||'00' where s.codcuenta is not null);
COMMIT;

INSERT INTO FA_PADRONEMPAGED_DEPFIN (NRO,tipodocumento,numerodocumento,nombrecompleto_t1,condicion,modalidad,centrocosto,nombrecompleto_t2,ruccompania,numerocuentaresponsable,numerocuentacompania,codbscs,NCOMPANIA,MONTOMASTOTAL,fechaproc)
(select t.NRO,t.tipodocumento,t.numerodocumento,t.nombrecompleto_t1,t.condicion,t.modalidad,t.centrocosto,t.nombrecompleto_t2,t.ruccompania,t.numerocuentaresponsable,t.numerocuentacompania,u.codbscs,u.NCOMPANIA as nombre,u.MONTOMASTOTAL,u.fechaproc
from(select r.NRO,r.tipodocumento,r.numerodocumento,r.nombrecompleto_t1,r.condicion,r.modalidad,r.centrocosto,r.nombrecompleto_t2,r.ruccompania,r.numerocuentaresponsable,r.numerocuentacompania,s.codbscs,s.NCOMPANIA as nombre,s.MONTOMASTOTAL,s.fechaproc
from(select p.NRO,p.tipodocumento,p.numerodocumento,p.nombrecompleto_t1,p.condicion,p.modalidad,p.centrocosto,p.nombrecompleto_t2,p.ruccompania,p.numerocuentaresponsable,p.numerocuentacompania,q.codbscs,q.NCOMPANIA as nombre,q.MONTOMASTOTAL,q.fechaproc
from (select m.NRO,m.tipodocumento,m.numerodocumento,m.nombrecompleto_t1,m.condicion,m.modalidad,m.centrocosto,m.nombrecompleto_t2,m.ruccompania,m.numerocuentaresponsable,m.numerocuentacompania,n.codbscs,n.NCOMPANIA as nombre,n.MONTOMASTOTAL,n.fechaproc
from (select x.NRO,x.tipodocumento,x.numerodocumento,x.nombrecompleto_t1,x.condicion,x.modalidad,x.centrocosto,x.nombrecompleto_t2,x.ruccompania,x.numerocuentaresponsable,x.numerocuentacompania,x.codbscs,y.NCOMPANIA as nombre,y.MONTOMASTOTAL,y.fechaproc
FROM (select a.NRO,a.tipodocumento,a.numerodocumento,a.nombrecompleto_t1,a.condicion,a.modalidad,a.centrocosto,a.nombrecompleto_t2,a.ruccompania,b.numerocuentaresponsable,b.numerocuentacompania,b.codbscs from FA_PADRONEMP_DEP a left join FA_PADRONEMP_DEP2 b on a.ruccompania=b.ruccompania where a.fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY') and b.fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) x
left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) y
on x.CODBSCS=y.CODBSCS
where y.CODBSCS is null) m left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) n on m.numerocuentacompania=n.codcuenta where n.codcuenta is null) p left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) q on p.numerocuentacompania=q.codcuenta||'0' where q.codcuenta is null) r left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) s on r.numerocuentacompania=s.codcuenta||'00' where s.codcuenta is null) t left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) u on t.numerocuentacompania=u.codcuenta||'000' where u.codcuenta is NOT null);
COMMIT;

INSERT INTO FA_ANOMALIAS_TFIN
(select t.NRO,t.tipodocumento,t.numerodocumento,t.nombrecompleto_t1,t.condicion,t.modalidad,t.centrocosto,t.nombrecompleto_t2,t.ruccompania,t.numerocuentaresponsable,t.numerocuentacompania,'Motivo: no aparece en el Aged del mes usando la cuenta compania' motivo,TO_CHAR(SYSDATE,'Mon-YYYY')
from(select r.NRO,r.tipodocumento,r.numerodocumento,r.nombrecompleto_t1,r.condicion,r.modalidad,r.centrocosto,r.nombrecompleto_t2,r.ruccompania,r.numerocuentaresponsable,r.numerocuentacompania,s.codbscs,s.NCOMPANIA as nombre,s.MONTOMASTOTAL
from(select p.NRO,p.tipodocumento,p.numerodocumento,p.nombrecompleto_t1,p.condicion,p.modalidad,p.centrocosto,p.nombrecompleto_t2,p.ruccompania,p.numerocuentaresponsable,p.numerocuentacompania,q.codbscs,q.NCOMPANIA as nombre,q.MONTOMASTOTAL
from (select m.NRO,m.tipodocumento,m.numerodocumento,m.nombrecompleto_t1,m.condicion,m.modalidad,m.centrocosto,m.nombrecompleto_t2,m.ruccompania,m.numerocuentaresponsable,m.numerocuentacompania,n.codbscs,n.NCOMPANIA as nombre,n.MONTOMASTOTAL
from (select x.NRO,x.tipodocumento,x.numerodocumento,x.nombrecompleto_t1,x.condicion,x.modalidad,x.centrocosto,x.nombrecompleto_t2,x.ruccompania,x.numerocuentaresponsable,x.numerocuentacompania,x.codbscs,y.NCOMPANIA as nombre,y.MONTOMASTOTAL
FROM (select a.NRO,a.tipodocumento,a.numerodocumento,a.nombrecompleto_t1,a.condicion,a.modalidad,a.centrocosto,a.nombrecompleto_t2,a.ruccompania,b.numerocuentaresponsable,b.numerocuentacompania,b.codbscs from FA_PADRONEMP_DEP a left join FA_PADRONEMP_DEP2 b on a.ruccompania=b.ruccompania where a.fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY') and b.fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) x
left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) y
on x.CODBSCS=y.CODBSCS
where y.CODBSCS is null) m left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) n on m.numerocuentacompania=n.codcuenta where n.codcuenta is null) p left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) q on p.numerocuentacompania=q.codcuenta||'0' where q.codcuenta is null) r left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) s on r.numerocuentacompania=s.codcuenta||'00' where s.codcuenta is null) t left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) u on t.numerocuentacompania=u.codcuenta||'000' where u.codcuenta is null);
COMMIT;

 --------------------------------------------------------------------------
   /*
   T4. ACTUALIZACION DE LA DATA DE FA_PADRONEMPAGED_DEPFIN2 (DATA EN PROCESO)
   Se borran los datos de la tabla FA_PADRONEMPAGED_DEPFIN2
   Se insertan solo los registros pertenecientes al periodo procesado
   */
 --------------------------------------------------------------------------

DELETE FROM FA_PADRONEMPAGED_DEPFIN2;

INSERT INTO FA_PADRONEMPAGED_DEPFIN2
(select * from FA_PADRONEMPAGED_DEPFIN
where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY'));
------

INSERT INTO FA_PADRONEMPAGED_DEP (NRO,tipodocumento,numerodocumento,nombrecompleto_t1,condicion,modalidad,centrocosto,nombrecompleto_t2,ruccompania,numerocuentaresponsable,numerocuentacompania,codbscs,NCOMPANIA,MONTOMASTOTAL,fechaproc,mark)
(select a.NRO,a.tipodocumento,a.numerodocumento,a.nombrecompleto_t1,a.condicion,a.modalidad,a.centrocosto,a.nombrecompleto_t2,a.ruccompania,a.numerocuentaresponsable,a.numerocuentacompania,a.codbscs,a.NCOMPANIA,DECODE(NVL(b.MONTOMASTOTAL,-1),-1,a.MONTOMASTOTAL,b.MONTOMASTOTAL) MONTOMASTOTAL,a.fechaproc,DECODE(NVL(b.MONTOMASTOTAL,-1),-1,'-','X') modi from FA_PADRONEMPAGED_DEPFIN a left join (select * from FA_BASEAGED_DETAIL where fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY')) b on a.numerocuentaresponsable=b.codcuenta);-- where b.montomastotal is not null);
COMMIT;

DELETE FROM FA_PADRONEMPAGED_DEPFIN where FECHAPROC=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY');
COMMIT;

INSERT INTO FA_PADRONEMPAGED_DEPFIN (NRO,tipodocumento,numerodocumento,nombrecompleto_t1,condicion,modalidad,centrocosto,nombrecompleto_t2,ruccompania,numerocuentaresponsable,numerocuentacompania,codbscs,NCOMPANIA,MONTOMASTOTAL,fechaproc)
(select distinct c.NRO,TIPODOCUMENTO,c.numerodocumento,c.nombrecompleto_t1,c.condicion,c.modalidad,c.centrocosto,c.nombrecompleto_t2,c.ruccompania,decode(c.MARK,'X',c.numerocuentaresponsable,c.numerocuentacompania) numerocuentaresponsable,c.numerocuentacompania,c.codbscs,c.NCOMPANIA,c.MONTOMASTOTAL,c.fechaproc from FA_PADRONEMPAGED_DEP c where c.fechaproc=TO_CHAR(to_date(paramperiodo,'yyyymm'),'Mon-YYYY'));

 --------------------------------------------------------------------------
   /*
   T5. INSERCION A LA TABLA RESUMEN
   Insert al resumen de la tabla FA_PADRONEMPAGED_DEPFIN2 que almacena solo lo procesado
   */
 --------------------------------------------------------------------------


INSERT
INTO FA_DEUDAEMPLEADOS_RESUMEN
  (
    CENTROCOSTO,    CONDICION,    TIPODOCUMENTO,    MES,    CANTIDAD,    MONTO
  )
 (select a.centrocosto, a.condicion, a.tipodocumento,to_date(a.fechaproc,'mm-YYYY'), count(1), sum(a.montomastotal)
from fa_padronempaged_depfin2 a
group by a.centrocosto, a.condicion, a.tipodocumento,  to_date(a.fechaproc,'mm-YYYY'));

COMMIT;
END PROCESADEUDAEMPLEADOP2;

--------------------------------------------------------------------------------------------------------------------------------------

PROCEDURE  PROCESAMIENTOBASEIMPRESION_P1 (speriodo VARCHAR2,sciclo VARCHAR2)
IS
BEGIN
-- PROPÓSITO:
-- Actualizacion de campos de las tablas de impresion del mes y motivados del mes ;
/*
PREVIO=Se ha cargado el archivo completo, la base de motivados y la base de retenciones
*/
-- HISTORIAL DE MODIFICACION
-- Usuario                            Fecha            Comentario
-- ----------                         ---------        ----------------------
-- VORTEGA                           13/03/2015       Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

-------------------------------------------------------------------------------
   /*
   T1. ACTUALIZACION DE CAMPOS CICLO Y MES DE TABLA FA_BASEIMPRESION_BASEMES
    Se definen los ciclos y meses de la tabla de impresion del mes de acuerdo a los parametros enviados
   */
-------------------------------------------------------------------------------

  update FA_BASEIMPRESION_BASEMES set ciclo=sciclo /* where ciclo is null*/;
  commit;
  update FA_BASEIMPRESION_BASEMES set mes=to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH') /*where mes is null*/;
  commit;
-------------------------------------------------------------------------------
   /*
   T2. ACTUALIZACION DE CAMPO ESRETENCION DE TABLA FA_BASEIMPRESION_BASEMES
   Se coloca la marca si es retencion extraido de la tabla de retenciones
   */
-------------------------------------------------------------------------------

  UPDATE FA_BASEIMPRESION_BASEMES a
  SET a.esretencion='X'
  WHERE EXISTS
     (SELECT 1 FROM TEMP_RETENCIONES b WHERE trim(a.recibo)=trim(b.codigo)
     );
-------------------------------------------------------------------------------
   /*
   T3. ACTUALIZACION DE CAMPOS CICLO Y MES DE TABLA fa_baseimpresion_motivadosmes
   Se definen los ciclos y meses de la tabla de motivados del mes de acuerdo a los parametros enviados
   */
-------------------------------------------------------------------------------

  UPDATE fa_baseimpresion_motivadosmes SET ciclo=sciclo /*WHERE ciclo IS NULL*/;
  COMMIT;
  UPDATE fa_baseimpresion_motivadosmes SET mes=to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH') /*WHERE mes IS NULL*/;
  COMMIT;
END PROCESAMIENTOBASEIMPRESION_P1;


PROCEDURE  PROCESAMIENTOBASEIMPRESION_P2 (speriodo VARCHAR2,sciclo VARCHAR2)
IS
BEGIN
-- PROPÓSITO:
--

-- HISTORIAL DE MODIFICACION
-- Usuario                            Fecha            Comentario
-- ----------                         ---------        ----------------------
-- VORTEGA                           13/03/2015       Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

-------------------------------------------------------------------------------
   /*
   T1.
    Se limpia la tbla para el reproceso. Se ingresan en la base impresion los
    registros correspondientes a la base impresion del mes
   */
-------------------------------------------------------------------------------

DELETE FROM fa_baseimpresiontotal WHERE mes=to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH') AND CICLO=SCICLO;
INSERT
INTO FA_BASEIMPRESIONTOTAL (CUENTA, RECIBO, RAZONSOCIAL, DIRECCION, DISTRITO, PROVINCIA, DEPARTAMENTO,IMPORTE, ESTADO, REFERENCIA, MES, CICLO, MOTIVO, ESMOTIVADO, TIENE3G,
    CANTIDAD3G, TIENE2G, CANTIDAD2G, SEGMENTO, CANTIDADNEXTELPLUS, CONSULTOR,DEALER, CANALVENTA,  TIPOCUENTA, TIPOPERSONA, TIPODOCUMENTO,ESRETENCION, CODIGOCOMPANIA)
SELECT CUENTA, RECIBO, RAZONSOCIAL, DIRECCION, DISTRITO, PROVINCIA,DEPARTAMENTO, IMPORTE, ESTADO, REFERENCIA, MES, CICLO, DetalleMOTIVO, ESMOTIVADO,TIENE3G, CANTIDAD3G, TIENE2G, CANTIDAD2G,
                SEGMENTO, CANTIDADNEXTELPLUS,CONSULTOR, DEALER, CANALVENTA, TIPOCUENTA, TIPOPERSONA, TIPODOCUMENTO,ESRETENCION, CODIGOCOMPANIA FROM FA_BASEIMPRESION_BASEMES;
COMMIT;
-------------------------------------------------------------------------------
    /*
   T2.
    Se ingresan en la tabla de motivados totales con la informacion de base impresion de motivados del mes
   */
-------------------------------------------------------------------------------
DELETE FROM FA_BASEMOTIVADOSTOTAL WHERE mes=to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH') AND CICLO=SCICLO;

INSERT INTO FA_BASEMOTIVADOSTOTAL (CUENTA, RECIBO, MOTIVO, MES, CICLO, CANALVENTA, CONSULTOR, ESTADO,DISTRITO,DEPARTAMENTO)
   SELECT CUENTA, RECIBO, MOTIVO, MES, CICLO, CANALVENTA, CONSULTOR, ESTADO,DISTRITO,DEPARTAMENTO FROM FA_BASEIMPRESION_MOTIVADOSMES;
COMMIT;
-------------------------------------------------------------------------------
    /*
    T3.-
    Se inicia la limpieza de Resumen Stats Rechazados, tabla que sirve para las metricas de la consola de procesos
    */
-------------------------------------------------------------------------------

delete from FA_RESUMEN_STATSRECHAZADOS where mes=to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH');
commit;
-------------------------------------------------------------------------------
    /*
    T4.-
    Se carga la informacion de resumen de rechazados de base de impresion, tomando en cuenta solo las metricas de estado Antiguo y Nuevo (se decartan los negativos)
    */
-------------------------------------------------------------------------------

INSERT
INTO FA_RESUMEN_STATSRECHAZADOS
   (
      ESTADO, MES, CANALVENTA, TIPODOCUMENTO, ESMOTIVADO, CANTIDAD
   )
SELECT ESTADO,MES,CANALVENTA,TIPODOCUMENTO,ESMOTIVADO,COUNT(*) CANTIDAD
FROM
   (SELECT ESTADO,MES,
      CASE
         WHEN CANALVENTA IN ('Retail','Showroom', 'Venta Directa','Venta Indirecta')
         THEN CANALVENTA
         ELSE 'Otros'
      END CANALVENTA ,
      CASE
         WHEN TIPODOCUMENTO IS NULL OR TIPODOCUMENTO    ='-'
         THEN 'DNI'
      ELSE TIPODOCUMENTO
      END TIPODOCUMENTO, ESMOTIVADO
   FROM FA_BASEIMPRESIONTOTAL
   WHERE ESTADO IN ('LIMA ANTIGUO', 'LIMA NUEVO', 'PROV ANTIGUO', 'PROV NUEVO') AND mes=to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH'))
   GROUP BY ESTADO, MES, CANALVENTA ,TIPODOCUMENTO,ESMOTIVADO;
commit;

update FA_BASEIMPRESIONTOTAL set PERIODO=SPERIODO where PERIODO is null;


merge into
(
select periodo,ciclo,codigocompania,ruccompania from FA_BASEIMPRESIONTOTAL where periodo='201607' and CICLO='5'
)a
using
(
select codigocompania,ruccompania from P_COMPANIA
)B
on (a.CODIGOCOMPANIA=B.CODIGOCOMPANIA)
when matched then
update set a.RUCCOMPANIA=B.RUCCOMPANIA;

update FA_BASEIMPRESIONTOTAL set TIPODOC_2='DNI' where TIPODOCUMENTO='DNI' and PERIODO=SPERIODO and CICLO=sciclo;
update FA_BASEIMPRESIONTOTAL set TIPODOC_2='RUC10' where OBTENER_TIPODOC_2(RUCCOMPANIA)='RUC10' and TIPODOCUMENTO='RUC' and PERIODO=SPERIODO and CICLO=SCICLO;
update FA_BASEIMPRESIONTOTAL set TIPODOC_2='RUC20' where OBTENER_TIPODOC_2(RUCCOMPANIA)='RUC20' and TIPODOCUMENTO='RUC' and PERIODO=SPERIODO and CICLO=sciclo;

commit;

END PROCESAMIENTOBASEIMPRESION_P2;

PROCEDURE  PROCESAMIENTOBASEIMPRESION_P3 (speriodo VARCHAR2,sciclo VARCHAR2)
IS
BEGIN
-- PROPÓSITO:
--

-- HISTORIAL DE MODIFICACION
-- Usuario                            Fecha            Comentario
-- ----------                         ---------        ----------------------
-- VORTEGA                           13/03/2015       Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------


-----------------------------------------------------------------------------
    /*
    T1.-
    Se enriquecen los campos de la base de impresion total con la informacion cargada,
    solamente los registros de lima y provincias
    */
-------------------------------------------------------------------------------
/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT c.IDCONSULTORVENTA AS motivoE , C4.COLUMN2 AS motivo,  c.NOMBRECONSULTORVENTA AS motivoEE , C4.COLUMN3 AS motivo2
   FROM FA_BASEIMPRESIONTOTAL c, TEMPCRUCELUCIA c4
   WHERE c.codigocompania=c4.column4
   AND c.mes             = to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH')
   AND c.estado         IN ('LIMA NUEVO','PROV NUEVO')
   AND c.CANALVENTA      ='Showroom'
   )
SET motivoE = motivo,motivoEE=motivo2;*/
/*PEND PRUEB*/-->/*PEND PRUEB*/ --CORREGIDO
MERGE INTO
   (SELECT c.IDCONSULTORVENTA AS motivoE ,   c.NOMBRECONSULTORVENTA AS motivoEE ,c.codigocompania
   FROM FA_BASEIMPRESIONTOTAL c where  c.mes= to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH')
   AND c.estado IN ('LIMA NUEVO','PROV NUEVO')
   AND c.CANALVENTA      ='Showroom'
   )A
   USING
   (SELECT C4.COLUMN2 AS motivo,  C4.COLUMN3 AS motivo2,c4.column4
   FROM TEMPCRUCELUCIA c4
   )B
   ON
   ( a.codigocompania=B.column4
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo,motivoEE=motivo2;
-----------------------------------------------------------------------------
    /*
    T2.-
    Se limpia la informacion de rechazados de consultor de venta
    */
-----------------------------------------------------------------------------
delete from FA_RESUMEN_RECHAZADOSCVENTA where mes=to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH');
commit;
-----------------------------------------------------------------------------
    /*
    T3.-
    Se genera un resumen a nivel de canal de venta solo filtrando lima o provincias de tipo nuevo
    */
-----------------------------------------------------------------------------
INSERT
INTO FA_RESUMEN_RECHAZADOSCVENTA
   (  GROSS, RECHAZADOS, CONSULTOR, DEALER, IDCONSULTORVENTA,NOMBRECONSULTORVENTA, MES, CANALVENTA, MOTIVO
   )
SELECT SUM(GROSS) GROSS, SUM(RECHAZADOS) RECHAZADOS ,B.CONSULTOR,B.DEALER,
   B.IDCONSULTORVENTA , B.NOMBRECONSULTORVENTA , B.MES, B.CANALVENTA , UPPER(
   B.MOTIVO) MOTIVO
FROM
   (SELECT COUNT(NVL(a.RECIBO,0)) GROSS, a.MOTIVO, A.MES, a.CICLO, a.CANALVENTA
      ,CONSULTOR ,DEALER, SUM(DECODE(a.esmotivado,'X',1,0)) RECHAZADOS ,
      IDCONSULTORVENTA ,NOMBRECONSULTORVENTA
   FROM
      (SELECT a.RECIBO, a.MOTIVO, A.MES, a.CICLO, a.CANALVENTA,
         CASE
            WHEN A.CONSULTOR IS NULL
            THEN 'DESCONOCIDO'
            ELSE A.CONSULTOR
         END CONSULTOR,
         CASE
            WHEN A.DEALER IS NULL
            THEN 'DESCONOCIDO'
            ELSE A.DEALER
         END DEALER,
         CASE
            WHEN A.idconsultorventa IS NULL
            THEN 'DESCONOCIDO'
            ELSE A.idconsultorventa
         END IDCONSULTORVENTA ,
         CASE
            WHEN A.nombreconsultorventa IS NULL
            THEN 'DESCONOCIDO'
            ELSE A.nombreconsultorventa
         END NOMBRECONSULTORVENTA , A.ESTADO, a.DISTRITO, a.DEPARTAMENTO,
         a.esmotivado
      FROM FA_BASEIMPRESIONTOTAL A
      WHERE A.estado IN ('LIMA NUEVO','PROV NUEVO')
      AND mes         =to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH')
      ) A
   GROUP BY a.MOTIVO, A.MES, a.CICLO, a.CANALVENTA, A.idconsultorventa ,
      A.nombreconsultorventa, A.CONSULTOR, A.ESTADO, a.DISTRITO, a.DEPARTAMENTO
      , a.dealer
   ) B
GROUP BY B.CONSULTOR,B.DEALER,B.idconsultorventa , B.nombreconsultorventa ,
   B.MES,B.CANALVENTA,UPPER(B.MOTIVO)
ORDER BY CONSULTOR , to_date(MES,'mon-yy', 'nls_date_language=spanish' );
commit;

END PROCESAMIENTOBASEIMPRESION_P3;


/*
PROCEDURE BASE_HP_XT_INSERTAR_BASE_MAIL(param1 varchar2,param2 varchar2,param3 varchar2,param4 varchar2,param5 varchar2,param6 varchar2,param7 varchar2,param8 varchar2,param9 varchar2,pperiodo varchar2,pciclo varchar2) AS
BEGIN
INSERT INTO FA_HPEXTREME_ELECTRONICA VALUES (param1 ,param2 ,param3 ,param4 ,param5 ,param6 ,param7 ,param8 ,param9 ,pperiodo ,pciclo);
COMMIT;
END BASE_HP_XT_INSERTAR_BASE_MAIL;

PROCEDURE BASE_HP_XT_VACIAR_BASE_MAIL(pperiodo varchar2,pciclo varchar2)  AS
BEGIN
DELETE FROM FA_HPEXTREME_ELECTRONICA where periodo=pperiodo and ciclo=pciclo;
COMMIT;
END BASE_HP_XT_VACIAR_BASE_MAIL;

PROCEDURE BASE_HP_XT_VACIAR_BASE_AFP (pperiodo varchar2, pciclo varchar2) AS
BEGIN
DELETE FROM FA_HPEXTREME_FISICA WHERE periodo = pperiodo and ciclo = pciclo;
COMMIT;
END BASE_HP_XT_VACIAR_BASE_AFP;

PROCEDURE BASE_HP_XT_INSERTAR_BASE_AFP (param1 varchar2, param2 varchar2, param3 varchar2, param4 varchar2, param5 varchar2, param6 varchar2, param7 varchar2, param8 varchar2, param9 varchar2, param10 varchar2, param11 varchar2, param12 varchar2, pperiodo varchar2, pciclo varchar2) AS
BEGIN
INSERT INTO FA_HPEXTREME_FISICA VALUES (param1, param2,param3,param4,param5,param6,param7,param8,param9,param10,param11,param12,pperiodo,pciclo);
COMMIT;
END BASE_HP_XT_INSERTAR_BASE_AFP;
*/

PROCEDURE control_group_trafico  ( V_FECHA IN DATE)
   IS
BEGIN

-- MODIFICATION HISTORY
-- Person       Date        Comments
-- ----------   ----------  -------------------------------------------
-- NVEGA        27/01/2016  Se agrega el control group de Roaming

--TELEFONÍA SALIENTE Y ENTRANTE

--ELIMINAR INDICES
     BEGIN
        EXECUTE IMMEDIATE 'DROP INDEX idx_FA_CG_TELEFONIA_cont';
        EXCEPTION
            WHEN OTHERS THEN
                    DBMS_OUTPUT.put_line( 'ÍNDICE NO EXISTE' );
    END;

     BEGIN
        EXECUTE IMMEDIATE 'DROP INDEX idx_FA_CG_TELEFONIA_per_cont';
        EXCEPTION
            WHEN OTHERS THEN
                    DBMS_OUTPUT.put_line( 'ÍNDICE NO EXISTE' );
    END;

DELETE FROM FA_CONTROL_GROUP_T_TELEFONIA
WHERE PERIODO_FACTURACION
        = DECODE(CICLOFACTURACIONCONTRATO ,
          '01', TO_CHAR(V_FECHA,'yyyymm'),
          '03', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='16' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
          '04', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='09' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
          '05', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='23' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END);
COMMIT;

EXECUTE IMMEDIATE 'ALTER TABLE ods_gpf.FA_CONTROL_GROUP_T_TELEFONIA NOLOGGING';

--TELEFONÍA SALIENTE Y ENTRANTE
INSERT INTO FA_CONTROL_GROUP_T_TELEFONIA
SELECT  a.servedmsisdn telefono
        , codigocontratobscs
        , CICLOFACTURACIONCONTRATO
        --PERIODO FACT
        , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', SUBSTR(FECHA,1,6),
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END) PERIODO_FACTURACION
        --DIA INICIAL
         , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', TO_DATE(SUBSTR(FECHA,1,6)||'01','YYYYMMDD'),
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_DATE(SUBSTR(FECHA,1,6)||'16','YYYYMMDD') ELSE TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),-1),'yyyymm')||'16','YYYYMMDD') END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_DATE(SUBSTR(FECHA,1,6)||'09','YYYYMMDD') ELSE TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),-1),'yyyymm')||'09','YYYYMMDD') END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_DATE(SUBSTR(FECHA,1,6)||'23','YYYYMMDD') ELSE TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),-1),'yyyymm')||'23','YYYYMMDD') END) FECHA_INICIAL
        --DIA FINAL
         , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', ADD_MONTHS(TO_DATE(SUBSTR(FECHA,1,6)||'01','YYYYMMDD'),1)-1,
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm')||'15','YYYYMMDD') ELSE TO_DATE(SUBSTR(FECHA,1,6)||'15','YYYYMMDD') END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm')||'08','YYYYMMDD') ELSE TO_DATE(SUBSTR(FECHA,1,6)||'08','YYYYMMDD') END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm')||'22','YYYYMMDD') ELSE TO_DATE(SUBSTR(FECHA,1,6)||'22','YYYYMMDD') END) FECHA_FINAL
        , ROUND(sum(seg_sal)/60,0) TEL_MIN_SAL
        , ROUND(sum(seg_ent)/60,0) TEL_MIN_ENT
        , V_FECHA FECHA_TRAFICO
from (SELECT * FROM temp_trafico_tel3g WHERE FECHA >= TO_CHAR(V_FECHA-65,'YYYYMMDD') ) a
join (SELECT * FROM
            ( SELECT a.*, RANK() OVER (PARTITION BY TELEFONO ORDER BY FECHACARGACONTRATO DESC) RN FROM fotoequipos a)
      WHERE RN = 1 AND PRODUCT in ('Non PTT Post','HP PTT Post','Banda Ancha','IN Post')) b
on substr(a.servedmsisdn,-9) = substr(b.telefono,-9)
where   DECODE(CICLOFACTURACIONCONTRATO ,
          '01', SUBSTR(FECHA,1,6),
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END)
        = DECODE(CICLOFACTURACIONCONTRATO ,
          '01', TO_CHAR(V_FECHA,'yyyymm'),
          '03', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='16' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
          '04', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='09' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
          '05', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='23' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END)
group by  a.servedmsisdn, codigocontratobscs,
         CICLOFACTURACIONCONTRATO
        --PERIODO FACT
        , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', SUBSTR(FECHA,1,6),
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END)
        --DIA INICIAL
         , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', TO_DATE(SUBSTR(FECHA,1,6)||'01','YYYYMMDD'),
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_DATE(SUBSTR(FECHA,1,6)||'16','YYYYMMDD') ELSE TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),-1),'yyyymm')||'16','YYYYMMDD') END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_DATE(SUBSTR(FECHA,1,6)||'09','YYYYMMDD') ELSE TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),-1),'yyyymm')||'09','YYYYMMDD') END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_DATE(SUBSTR(FECHA,1,6)||'23','YYYYMMDD') ELSE TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),-1),'yyyymm')||'23','YYYYMMDD') END)
        --DIA FINAL
          , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', ADD_MONTHS(TO_DATE(SUBSTR(FECHA,1,6)||'01','YYYYMMDD'),1)-1,
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm')||'15','YYYYMMDD') ELSE TO_DATE(SUBSTR(FECHA,1,6)||'15','YYYYMMDD') END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm')||'08','YYYYMMDD') ELSE TO_DATE(SUBSTR(FECHA,1,6)||'08','YYYYMMDD') END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm')||'22','YYYYMMDD') ELSE TO_DATE(SUBSTR(FECHA,1,6)||'22','YYYYMMDD') END) ;
COMMIT;

--CREACIÓN DE INDICES
     BEGIN
        EXECUTE IMMEDIATE 'CREATE INDEX idx_FA_CG_TELEFONIA_cont ON FA_CONTROL_GROUP_T_TELEFONIA ( codigocontratobscs ) TABLESPACE  ods_gpf_index';
        EXCEPTION
            WHEN OTHERS THEN
                    DBMS_OUTPUT.put_line( 'ÍNDICE YA EXISTE' );
      END;

      BEGIN
        EXECUTE IMMEDIATE 'CREATE INDEX idx_FA_CG_TELEFONIA_per_cont ON FA_CONTROL_GROUP_T_TELEFONIA ( periodo_facturacion, codigocontratobscs ) TABLESPACE  ods_gpf_index';
        EXCEPTION
            WHEN OTHERS THEN
                    DBMS_OUTPUT.put_line( 'ÍNDICE YA EXISTE' );
      END;

--ESTADÍSTICAS
    DBMS_STATS.GATHER_TABLE_STATS (OWNNAME => 'ODS_GPF',TABNAME=>'FA_CONTROL_GROUP_T_TELEFONIA',DEGREE=>4,ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, GRANULARITY =>'ALL',CASCADE => TRUE);

-- DATOS

--ELIMINAR INDICES
     BEGIN
        EXECUTE IMMEDIATE 'DROP INDEX idx_FA_CG_DATOS_cont';
        EXCEPTION
            WHEN OTHERS THEN
                    DBMS_OUTPUT.put_line( 'ÍNDICE NO EXISTE' );
    END;

     BEGIN
        EXECUTE IMMEDIATE 'DROP INDEX idx_FA_CG_DATOS_per_cont';
        EXCEPTION
            WHEN OTHERS THEN
                    DBMS_OUTPUT.put_line( 'ÍNDICE NO EXISTE' );
    END;

DELETE FROM FA_CONTROL_GROUP_T_DATOS
WHERE PERIODO_FACTURACION
        = DECODE(CICLOFACTURACIONCONTRATO ,
          '01', TO_CHAR(V_FECHA,'yyyymm'),
          '03', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='16' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
          '04', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='09' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
          '05', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='23' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END);
COMMIT;

EXECUTE IMMEDIATE 'ALTER TABLE ods_gpf.FA_CONTROL_GROUP_T_DATOS NOLOGGING';

/*INSERT INTO FA_CONTROL_GROUP_T_DATOS
select    a.servedmsisdn telefono
        , codigocontratobscs
        , ciclofacturacioncontrato
        --PERIODO FACT
        , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', a.periodo,
          '03', CASE WHEN TO_CHAR(dia,'09')>='16' THEN TO_CHAR(ADD_MONTHS(TO_DATE(a.periodo||TO_CHAR(dia,'09'),'YYYYMMDD'),1),'yyyymm') ELSE a.periodo END,
          '04', CASE WHEN TO_CHAR(dia,'09')>='09' THEN TO_CHAR(ADD_MONTHS(TO_DATE(a.periodo||TO_CHAR(dia,'09'),'YYYYMMDD'),1),'yyyymm') ELSE a.periodo END,
          '05', CASE WHEN TO_CHAR(dia,'09')>='23' THEN TO_CHAR(ADD_MONTHS(TO_DATE(a.periodo||TO_CHAR(dia,'09'),'YYYYMMDD'),1),'yyyymm') ELSE a.periodo END)  PERIODO_FACTURACION
        --DIA INICIAL
         , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', TO_DATE(a.periodo||'01','YYYYMMDD'),
          '03', CASE WHEN TO_CHAR(dia,'09')>='16' THEN TO_DATE(a.periodo||'16','YYYYMMDD') ELSE ADD_MONTHS(TO_DATE(a.periodo||'16','YYYYMMDD'),-1) END,
          '04', CASE WHEN TO_CHAR(dia,'09')>='09' THEN TO_DATE(a.periodo||'09','YYYYMMDD') ELSE ADD_MONTHS(TO_DATE(a.periodo||'09','YYYYMMDD'),-1) END,
          '05', CASE WHEN TO_CHAR(dia,'09')>='23' THEN TO_DATE(a.periodo||'23','YYYYMMDD') ELSE ADD_MONTHS(TO_DATE(a.periodo||'23','YYYYMMDD'),-1) END) FECHA_INICIAL
        --DIA FINAL
         , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', ADD_MONTHS(TO_DATE(a.periodo||'01','YYYYMMDD'),1)-1,
          '03', CASE WHEN TO_CHAR(dia,'09')>='16' THEN ADD_MONTHS(TO_DATE(a.periodo||'16','YYYYMMDD'),1) ELSE TO_DATE(a.periodo||'15','YYYYMMDD') END,
          '04', CASE WHEN TO_CHAR(dia,'09')>='09' THEN ADD_MONTHS(TO_DATE(a.periodo||'16','YYYYMMDD'),1) ELSE TO_DATE(a.periodo||'08','YYYYMMDD') END,
          '05', CASE WHEN TO_CHAR(dia,'09')>='23' THEN ADD_MONTHS(TO_DATE(a.periodo||'16','YYYYMMDD'),1) ELSE TO_DATE(a.periodo||'22','YYYYMMDD') END)  FECHA_FINAL

       , ROUND(sum(DOWN+UP)/(1024*1024),2) DATOS_GB
       , V_FECHA FECHA_TRAFICO
from (SELECT * FROM temp_trafico_internet WHERE PERIODO >= TO_CHAR(V_FECHA-65,'YYYYMM')) a
join (SELECT * FROM
            ( SELECT a.*, RANK() OVER (PARTITION BY TELEFONO ORDER BY FECHACARGACONTRATO DESC) RN FROM fotoequipos a)
      WHERE RN = 1 AND PRODUCT in ('Non PTT Post','HP PTT Post','Banda Ancha','IN Post')) b
on substr(a.servedmsisdn,-9) = substr(b.telefono,-9)
where   DECODE(CICLOFACTURACIONCONTRATO ,
          '01', a.periodo,
          '03', CASE WHEN TO_CHAR(dia,'09')>='16' THEN TO_CHAR(ADD_MONTHS(TO_DATE(a.periodo||TO_CHAR(dia,'09'),'YYYYMMDD'),1),'yyyymm') ELSE a.periodo END,
          '04', CASE WHEN TO_CHAR(dia,'09')>='09' THEN TO_CHAR(ADD_MONTHS(TO_DATE(a.periodo||TO_CHAR(dia,'09'),'YYYYMMDD'),1),'yyyymm') ELSE a.periodo END,
          '05', CASE WHEN TO_CHAR(dia,'09')>='23' THEN TO_CHAR(ADD_MONTHS(TO_DATE(a.periodo||TO_CHAR(dia,'09'),'YYYYMMDD'),1),'yyyymm') ELSE a.periodo END)
        = DECODE(CICLOFACTURACIONCONTRATO ,
          '01', TO_CHAR(V_FECHA,'yyyymm'),
          '03', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='16' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
          '04', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='09' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
          '05', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='23' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END)
group by a.servedmsisdn, codigocontratobscs,
     ciclofacturacioncontrato,
    telefono, codigocontratobscs
        , CICLOFACTURACIONCONTRATO
        --PERIODO FACT
        , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', a.periodo,
          '03', CASE WHEN TO_CHAR(dia,'09')>='16' THEN TO_CHAR(ADD_MONTHS(TO_DATE(a.periodo||TO_CHAR(dia,'09'),'YYYYMMDD'),1),'yyyymm') ELSE a.periodo END,
          '04', CASE WHEN TO_CHAR(dia,'09')>='09' THEN TO_CHAR(ADD_MONTHS(TO_DATE(a.periodo||TO_CHAR(dia,'09'),'YYYYMMDD'),1),'yyyymm') ELSE a.periodo END,
          '05', CASE WHEN TO_CHAR(dia,'09')>='23' THEN TO_CHAR(ADD_MONTHS(TO_DATE(a.periodo||TO_CHAR(dia,'09'),'YYYYMMDD'),1),'yyyymm') ELSE a.periodo END)
        --DIA INICIAL
         , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', TO_DATE(a.periodo||'01','YYYYMMDD'),
          '03', CASE WHEN TO_CHAR(dia,'09')>='16' THEN TO_DATE(a.periodo||'16','YYYYMMDD') ELSE ADD_MONTHS(TO_DATE(a.periodo||'16','YYYYMMDD'),-1) END,
          '04', CASE WHEN TO_CHAR(dia,'09')>='09' THEN TO_DATE(a.periodo||'09','YYYYMMDD') ELSE ADD_MONTHS(TO_DATE(a.periodo||'09','YYYYMMDD'),-1) END,
          '05', CASE WHEN TO_CHAR(dia,'09')>='23' THEN TO_DATE(a.periodo||'23','YYYYMMDD') ELSE ADD_MONTHS(TO_DATE(a.periodo||'23','YYYYMMDD'),-1) END)
        --DIA FINAL
         , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', ADD_MONTHS(TO_DATE(a.periodo||'01','YYYYMMDD'),1)-1,
          '03', CASE WHEN TO_CHAR(dia,'09')>='16' THEN ADD_MONTHS(TO_DATE(a.periodo||'16','YYYYMMDD'),1) ELSE TO_DATE(a.periodo||'15','YYYYMMDD') END,
          '04', CASE WHEN TO_CHAR(dia,'09')>='09' THEN ADD_MONTHS(TO_DATE(a.periodo||'16','YYYYMMDD'),1) ELSE TO_DATE(a.periodo||'08','YYYYMMDD') END,
          '05', CASE WHEN TO_CHAR(dia,'09')>='23' THEN ADD_MONTHS(TO_DATE(a.periodo||'16','YYYYMMDD'),1) ELSE TO_DATE(a.periodo||'22','YYYYMMDD') END) ;*/
COMMIT;

--CREACIÓN DE INDICES
     BEGIN
        EXECUTE IMMEDIATE 'CREATE INDEX idx_FA_CG_DATOS_cont ON FA_CONTROL_GROUP_T_DATOS ( codigocontratobscs ) TABLESPACE  ods_gpf_index';
        EXCEPTION
            WHEN OTHERS THEN
                    DBMS_OUTPUT.put_line( 'ÍNDICE YA EXISTE' );
      END;

      BEGIN
        EXECUTE IMMEDIATE 'CREATE INDEX idx_FA_CG_DATOS_per_cont ON FA_CONTROL_GROUP_T_DATOS ( periodo_facturacion, codigocontratobscs ) TABLESPACE  ods_gpf_index';
        EXCEPTION
            WHEN OTHERS THEN
                    DBMS_OUTPUT.put_line( 'ÍNDICE YA EXISTE' );
      END;

--ESTADÍSTICAS
    DBMS_STATS.GATHER_TABLE_STATS (OWNNAME => 'ODS_GPF',TABNAME=>'FA_CONTROL_GROUP_T_DATOS',DEGREE=>4,ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, GRANULARITY =>'ALL',CASCADE => TRUE);

-- ROAMING

--ELIMINAR INDICES
     BEGIN
        EXECUTE IMMEDIATE 'DROP INDEX IDX_FA_CG_ROAMING_CONT';
        EXCEPTION
            WHEN OTHERS THEN
                    DBMS_OUTPUT.put_line( 'ÍNDICE NO EXISTE' );
    END;

     BEGIN
        EXECUTE IMMEDIATE 'DROP INDEX IDX_FA_CG_ROAMING_PER_CONT';
        EXCEPTION
            WHEN OTHERS THEN
                    DBMS_OUTPUT.put_line( 'ÍNDICE NO EXISTE' );
    END;

DELETE FROM FA_CONTROL_GROUP_T_ROAMING
WHERE PERIODO_FACTURACION
        = DECODE(CICLOFACTURACIONCONTRATO ,
          '01', TO_CHAR(V_FECHA,'yyyymm'),
          '03', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='16' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
          '04', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='09' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
          '05', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='23' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END);
COMMIT;
EXECUTE IMMEDIATE 'ALTER TABLE ods_gpf.FA_CONTROL_GROUP_T_ROAMING NOLOGGING';

INSERT /*+APPEND*/ INTO FA_CONTROL_GROUP_T_ROAMING
SELECT  a.telefono
        , codigocontratobscs
        , CICLOFACTURACIONCONTRATO
        --PERIODO FACT
        , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', SUBSTR(FECHA,1,6),
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END) PERIODO_FACTURACION
        --DIA INICIAL
         , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', TO_DATE(SUBSTR(FECHA,1,6)||'01','YYYYMMDD'),
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_DATE(SUBSTR(FECHA,1,6)||'16','YYYYMMDD') ELSE TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),-1),'yyyymm')||'16','YYYYMMDD') END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_DATE(SUBSTR(FECHA,1,6)||'09','YYYYMMDD') ELSE TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),-1),'yyyymm')||'09','YYYYMMDD') END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_DATE(SUBSTR(FECHA,1,6)||'23','YYYYMMDD') ELSE TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),-1),'yyyymm')||'23','YYYYMMDD') END) FECHA_INICIAL
        --DIA FINAL
         , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', ADD_MONTHS(TO_DATE(SUBSTR(FECHA,1,6)||'01','YYYYMMDD'),1)-1,
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm')||'15','YYYYMMDD') ELSE TO_DATE(SUBSTR(FECHA,1,6)||'15','YYYYMMDD') END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm')||'08','YYYYMMDD') ELSE TO_DATE(SUBSTR(FECHA,1,6)||'08','YYYYMMDD') END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm')||'22','YYYYMMDD') ELSE TO_DATE(SUBSTR(FECHA,1,6)||'22','YYYYMMDD') END) FECHA_FINAL
        , ROUND(sum(decode(tariff_info_sncode,'VOZ',duration_volume,0))/60,0) ROA_MIN
        , ROUND(sum(decode(tariff_info_sncode,'GPRS',data_volume,0))/(1024*1024),0) ROA_MB
        , ROUND(sum(decode(tariff_info_sncode,'SMS',1,0)),0) ROA_SMS
        , round(sum(rated_flat_amount),2) ROA_MONTO
        , V_FECHA FECHA_TRAFICO
from (SELECT substr(s_p_number_address,-9) telefono, to_char(initial_start_date_2,'yyyymmdd') fecha,
            duration_volume, data_volume, rated_flat_amount, tariff_info_sncode
        FROM roam_detalle_udr
        WHERE to_char(initial_start_date_2,'yyyymmdd') >= TO_CHAR(V_FECHA-65,'YYYYMMDD') and
            tariff_info_sncode in ('VOZ','GPRS','SMS') ) a
join (SELECT * FROM
            ( SELECT a.*, RANK() OVER (PARTITION BY TELEFONO ORDER BY FECHACARGACONTRATO DESC) RN FROM fotoequipos a)
      WHERE RN = 1 AND PRODUCT in ('Non PTT Post','HP PTT Post','Banda Ancha','IN Post')) b
on substr(a.telefono,-9) = substr(b.telefono,-9)
where   DECODE(CICLOFACTURACIONCONTRATO ,
          '01', SUBSTR(FECHA,1,6),
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END)
        = DECODE(CICLOFACTURACIONCONTRATO ,
          '01', TO_CHAR(V_FECHA,'yyyymm'),
          '03', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='16' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
          '04', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='09' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
          '05', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='23' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END)
group by  a.telefono, codigocontratobscs,
         CICLOFACTURACIONCONTRATO
        --PERIODO FACT
        , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', SUBSTR(FECHA,1,6),
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm') ELSE SUBSTR(FECHA,1,6) END)
        --DIA INICIAL
         , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', TO_DATE(SUBSTR(FECHA,1,6)||'01','YYYYMMDD'),
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_DATE(SUBSTR(FECHA,1,6)||'16','YYYYMMDD') ELSE TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),-1),'yyyymm')||'16','YYYYMMDD') END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_DATE(SUBSTR(FECHA,1,6)||'09','YYYYMMDD') ELSE TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),-1),'yyyymm')||'09','YYYYMMDD') END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_DATE(SUBSTR(FECHA,1,6)||'23','YYYYMMDD') ELSE TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),-1),'yyyymm')||'23','YYYYMMDD') END)
        --DIA FINAL
          , DECODE(CICLOFACTURACIONCONTRATO ,
          '01', ADD_MONTHS(TO_DATE(SUBSTR(FECHA,1,6)||'01','YYYYMMDD'),1)-1,
          '03', CASE WHEN SUBSTR(FECHA,7,2)>='16' THEN TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm')||'15','YYYYMMDD') ELSE TO_DATE(SUBSTR(FECHA,1,6)||'15','YYYYMMDD') END,
          '04', CASE WHEN SUBSTR(FECHA,7,2)>='09' THEN TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm')||'08','YYYYMMDD') ELSE TO_DATE(SUBSTR(FECHA,1,6)||'08','YYYYMMDD') END,
          '05', CASE WHEN SUBSTR(FECHA,7,2)>='23' THEN TO_DATE(TO_CHAR(ADD_MONTHS(TO_DATE(FECHA,'YYYYMMDD'),1),'yyyymm')||'22','YYYYMMDD') ELSE TO_DATE(SUBSTR(FECHA,1,6)||'22','YYYYMMDD') END) ;
COMMIT;

--CREACIÓN DE INDICES
     BEGIN
        EXECUTE IMMEDIATE 'CREATE INDEX IDX_FA_CG_ROAMING_CONT ON FA_CONTROL_GROUP_T_ROAMING ( codigocontratobscs ) TABLESPACE  ods_gpf_index';
        EXCEPTION
            WHEN OTHERS THEN
                    DBMS_OUTPUT.put_line('ÍNDICE YA EXISTE');
      END;

      BEGIN
        EXECUTE IMMEDIATE 'CREATE INDEX IDX_FA_CG_ROAMING_PER_CONT ON FA_CONTROL_GROUP_T_ROAMING ( periodo_facturacion, codigocontratobscs ) TABLESPACE  ods_gpf_index';
        EXCEPTION
            WHEN OTHERS THEN
                    DBMS_OUTPUT.put_line( 'ÍNDICE YA EXISTE' );
      END;

--ESTADÍSTICAS
    DBMS_STATS.GATHER_TABLE_STATS (OWNNAME => 'ODS_GPF',TABNAME=>'FA_CONTROL_GROUP_T_ROAMING',DEGREE=>4,ESTIMATE_PERCENT => DBMS_STATS.AUTO_SAMPLE_SIZE, GRANULARITY =>'ALL',CASCADE => TRUE);

--COPIAR AL PODS
DELETE FROM fa_control_group_t_datos@PODS_LM WHERE TRUNC(fecha_trafico) = TRUNC(V_FECHA);
DELETE FROM fa_control_group_t_telefonia@PODS_LM WHERE TRUNC(fecha_trafico) = TRUNC(V_FECHA);
DELETE FROM fa_control_group_t_roaming@PODS_LM WHERE TRUNC(fecha_trafico) = TRUNC(V_FECHA);

INSERT /*+APPEND*/ INTO fa_control_group_t_datos@PODS_LM
SELECT * FROM fa_control_group_t_datos WHERE TRUNC(fecha_trafico) = TRUNC(V_FECHA);
INSERT /*+APPEND*/ INTO fa_control_group_t_telefonia@PODS_LM
SELECT * FROM fa_control_group_t_telefonia WHERE TRUNC(fecha_trafico) = TRUNC(V_FECHA);
INSERT /*+APPEND*/ INTO fa_control_group_t_roaming@PODS_LM
SELECT * FROM fa_control_group_t_roaming WHERE TRUNC(fecha_trafico) = TRUNC(V_FECHA);
COMMIT;


END control_group_trafico;

PROCEDURE SGI_OBTENER_DETALLE(pcursor  OUT t_cursor, i_campo varchar2, i_valor varchar2, i_periodo varchar2, f_periodo varchar2, i_tabla varchar2) AS
v_consulta varchar2(1000);
v_valor varchar(100);
v_where varchar(500);
BEGIN

if i_valor = 'TODOS' then
v_valor := '%' ;
else
v_valor := i_valor;
end if;

if instr(i_valor,',') = 0 then
-- = v_valor
v_where := ' LIKE ''%' || v_valor || '%'' ';
else
-- in ('','','')
v_where := ' IN (''' || REPLACE(UPPER(v_valor),',',''',''') || ''') ';
end if;

if i_tabla = 'OP' then

v_consulta := 'SELECT a.cliente, a.account_number, a.ruc, a.nporderid, ' ||
                    'a.fecha_creacion, a.estado, a.npordencompra, a.enviado_por, '||
                    'a.fecha_llegada, a.recepcionado_por, a.fecha_salida, '||
                    'a.nro_facturas, a.monto_facturas '||
                'FROM fa_sgi_ordenpedido a '||
                'WHERE UPPER(' || i_campo || ') ' || v_where ||
                ' AND TO_CHAR(fecha_llegada,''YYYYMM'') >= ''' || i_periodo || '''' ||
                ' AND TO_CHAR(fecha_llegada,''YYYYMM'') <= ''' || f_periodo || '''' ||
                ' ORDER BY fecha_creacion DESC' ;

elsif i_tabla = 'L' then

v_consulta := 'SELECT a.numero_liquidacion, a.cliente, a.account_number, ' ||
                   'a.fecha_liquidacion, a.estado_liquidacion, a.fecha_ini, ' ||
                   'a.fecha_fin, a.nro_facturas, a.user_fact, a.npcreatedby, '||
                   'a.monto_facturas, TO_CHAR(a.fecha_cierre_calculado,''DD/MM/YYYY''), '||
                   'TO_CHAR(NVL(a.fecha_ingreso_calculado, a.fecha_cierre_calculado),''DD/MM/YYYY'') fecha_ingreso_calculado ' ||
              'FROM fa_sgi_liquidacion a ' ||
              'WHERE UPPER(' || i_campo || ') ' || v_where ||
              ' AND TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),''YYYYMM'') >= ''' || i_periodo || '''' ||
              ' AND TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),''YYYYMM'') <= ''' || f_periodo || '''' ||
              ' ORDER BY fecha_liquidacion DESC';
end if;

OPEN pcursor FOR v_consulta;

END SGI_OBTENER_DETALLE;

PROCEDURE SGI_OBTENER_PERIODOS(pcursor  OUT t_cursor) IS
BEGIN

OPEN PCURSOR FOR
SELECT DISTINCT PERIODO FROM (
    select TO_CHAR(fecha_llegada,'YYYYMM') PERIODO from fa_sgi_ordenpedido
    UNION ALL
    SELECT TO_CHAR(fecha_liquidacion,'YYYYMM') FROM fa_sgi_liquidacion )
ORDER BY PERIODO DESC;

END SGI_OBTENER_PERIODOS;

PROCEDURE SGI_OBTENER_CLIENTES(pcursor  OUT t_cursor) IS
BEGIN
OPEN PCURSOR FOR
SELECT distinct tipo || '-' || account_number || ' : ' || cliente FROM (
    select 'O' tipo ,UPPER(cliente)cliente, account_number from fa_sgi_ordenpedido
    UNION ALL
    SELECT 'L'  ,UPPER(cliente)cliente, account_number FROM fa_sgi_liquidacion )
ORDER BY  tipo || '-' || account_number || ' : ' || cliente;

END SGI_OBTENER_CLIENTES;

PROCEDURE SGI_OBTENER_ENTRANTES(pcursor  OUT t_cursor, i_periodo varchar2, f_periodo varchar2) IS
BEGIN

OPEN PCURSOR FOR
--considera todas las ordenes y liquidciones que llegaron al inbox de facturación
--, tanto las antendidas como las que están en espera

--ENTRANTES
SELECT NVL(T_LIQUIDACION.FECHA,T_ORDEN.FECHA) FECHA
        --ORDEN
        ,T_ORDEN.total op_total
        ,T_ORDEN.facturas op_facturas
        ,T_ORDEN.promedio_en_inbox_horas op_promedio_en_inbox_horas
        ,T_ORDEN.minimo_en_inbox_horas op_minimo_en_inbox_horas
        ,T_ORDEN.maximo_en_inbox_horas op_maximo_en_inbox_horas
        --LIQUIDACION
        ,T_LIQUIDACION.total l_total
        ,T_LIQUIDACION.facturas l_facturas
        --MONTOFACTURAS
        ,T_ORDEN.monto_facturas op_monto_facturas
        ,T_LIQUIDACION.monto_facturas l_monto_facturas
        ,T_LIQUIDACION.PROMEDIO_DIAS
        ,T_LIQUIDACION.MIN_DIAS
        ,T_LIQUIDACION.MAX_DIAS
FROM
(    SELECT * FROM
    (select    TO_CHAR(fecha_llegada,'DD/MM/YYYY') FECHA
            , COUNT(1) total
            , SUM(nro_facturas) facturas
            , SUM(monto_facturas) monto_facturas
            , ROUND(AVG(time_diff(fecha_llegada,NVL(fecha_salida,sysdate))/(60*60)),2) PROMEDIO_EN_INBOX_HORAS
            , ROUND(MIN(time_diff(fecha_llegada,NVL(fecha_salida,sysdate))/(60*60)),2) MINIMO_EN_INBOX_HORAS
            , ROUND(MAX(time_diff(fecha_llegada,NVL(fecha_salida,sysdate))/(60*60)),2) MAXIMO_EN_INBOX_HORAS
    from fa_sgi_ordenpedido
    WHERE (estado = 'FACTURACION' OR fecha_salida is not null)
        and TO_CHAR(fecha_llegada,'YYYYMM') >= i_periodo
        and TO_CHAR(fecha_llegada,'YYYYMM') <= f_periodo
    group by TO_CHAR(fecha_llegada,'DD/MM/YYYY')
    UNION ALL
    select   'Total'
            , COUNT(1) total
            , SUM(nro_facturas) facturas
            , SUM(monto_facturas) monto_facturas
            , ROUND(AVG(time_diff(fecha_llegada,NVL(fecha_salida,sysdate))/(60*60)),2) PROMEDIO_EN_INBOX_HORAS
            , ROUND(MIN(time_diff(fecha_llegada,NVL(fecha_salida,sysdate))/(60*60)),2) MINIMO_EN_INBOX_HORAS
            , ROUND(MAX(time_diff(fecha_llegada,NVL(fecha_salida,sysdate))/(60*60)),2) MAXIMO_EN_INBOX_HORAS
    from fa_sgi_ordenpedido
    WHERE (estado = 'FACTURACION' OR fecha_salida is not null) --estado = 'FACTURACION'
        and TO_CHAR(fecha_llegada,'YYYYMM') >= i_periodo
        and TO_CHAR(fecha_llegada,'YYYYMM') <= f_periodo )
) T_ORDEN

    FULL OUTER JOIN
(SELECT * FROM
    (select    TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),'DD/MM/YYYY') FECHA
            , COUNT(1) total
            , SUM(nro_facturas) facturas
            , SUM(monto_facturas) monto_facturas
            , AVG(DECODE(estado_liquidacion,'CERRADO',fecha_cierre_calculado,sysdate) - NVL(fecha_ingreso_calculado, fecha_cierre_calculado)) PROMEDIO_DIAS
            , MIN(DECODE(estado_liquidacion,'CERRADO',fecha_cierre_calculado,sysdate) - NVL(fecha_ingreso_calculado, fecha_cierre_calculado)) MIN_DIAS
            , MAX(DECODE(estado_liquidacion,'CERRADO',fecha_cierre_calculado,sysdate) - NVL(fecha_ingreso_calculado, fecha_cierre_calculado)) MAX_DIAS
    from fa_sgi_liquidacion
    WHERE estado_liquidacion in ('FACTURACION', 'CERRADO')
        and TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),'YYYYMM') >= i_periodo
        and TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),'YYYYMM') <= f_periodo
    group by TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),'DD/MM/YYYY')
    UNION ALL
    select   'Total'
            , COUNT(1) ordenes
            , SUM(nro_facturas) facturas
            , SUM(monto_facturas) monto_facturas
            , AVG(DECODE(estado_liquidacion,'CERRADO',fecha_cierre_calculado,sysdate) - NVL(fecha_ingreso_calculado, fecha_cierre_calculado)) PROMEDIO_DIAS
            , MIN(DECODE(estado_liquidacion,'CERRADO',fecha_cierre_calculado,sysdate) - NVL(fecha_ingreso_calculado, fecha_cierre_calculado)) MIN_DIAS
            , MAX(DECODE(estado_liquidacion,'CERRADO',fecha_cierre_calculado,sysdate) - NVL(fecha_ingreso_calculado, fecha_cierre_calculado)) MAX_DIAS
    from fa_sgi_liquidacion
    WHERE estado_liquidacion in ('FACTURACION', 'CERRADO')
        and TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),'YYYYMM') >= i_periodo
        and TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),'YYYYMM') <= f_periodo )
) T_LIQUIDACION
ON T_ORDEN.FECHA = T_LIQUIDACION.FECHA
ORDER BY  DECODE(NVL(T_LIQUIDACION.FECHA,T_ORDEN.FECHA),'Total',2,1)
        , SUBSTR(NVL(T_LIQUIDACION.FECHA,T_ORDEN.FECHA),4,2)
        , SUBSTR(NVL(T_LIQUIDACION.FECHA,T_ORDEN.FECHA),1,2);

END SGI_OBTENER_ENTRANTES;

PROCEDURE SGI_OBTENER_ATENDIDOS(pcursor  OUT t_cursor, i_periodo varchar2, f_periodo varchar2) IS
BEGIN

OPEN PCURSOR FOR
--ATENDIDAS
SELECT NVL(T_LIQUIDACION.FECHA,T_ORDEN.FECHA) FECHA
        --ORDEN
        ,T_ORDEN.total op_total
        ,T_ORDEN.facturas op_facturas
        ,T_ORDEN.promedio_en_inbox_horas op_promedio_en_inbox_horas
        ,T_ORDEN.minimo_en_inbox_horas op_minimo_en_inbox_horas
        ,T_ORDEN.maximo_en_inbox_horas op_maximo_en_inbox_horas
        --LIQUIDACION
        ,T_LIQUIDACION.total l_total
        ,T_LIQUIDACION.facturas l_facturas
        --MONTO FACTURAS
        ,T_ORDEN.monto_facturas
        ,T_LIQUIDACION.monto_facturas
        ,T_LIQUIDACION.PROMEDIO_DIAS
        ,T_LIQUIDACION.MIN_DIAS
        ,T_LIQUIDACION.MAX_DIAS
FROM
(    SELECT * FROM
    (select   TO_CHAR(fecha_salida,'DD/MM/YYYY') FECHA
            , COUNT(1) total
            , SUM(nro_facturas) facturas
            , SUM(monto_facturas) monto_facturas
            , ROUND(AVG(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) PROMEDIO_EN_INBOX_HORAS
            , ROUND(MIN(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) MINIMO_EN_INBOX_HORAS
            , ROUND(MAX(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) MAXIMO_EN_INBOX_HORAS
    from fa_sgi_ordenpedido
    WHERE fecha_salida is not null
         and TO_CHAR(fecha_salida,'YYYYMM') >= i_periodo
         and TO_CHAR(fecha_salida,'YYYYMM') <= f_periodo
    group by TO_CHAR(fecha_salida,'DD/MM/YYYY')
    UNION ALL
    select   'Total'
            , COUNT(1) total
            , SUM(nro_facturas) facturas
            , SUM(monto_facturas) monto_facturas
            , ROUND(AVG(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) PROMEDIO_EN_INBOX_HORAS
            , ROUND(MIN(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) MINIMO_EN_INBOX_HORAS
            , ROUND(MAX(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) MAXIMO_EN_INBOX_HORAS
    from fa_sgi_ordenpedido
    WHERE fecha_salida is not null
        and TO_CHAR(fecha_salida,'YYYYMM') >= i_periodo
        and TO_CHAR(fecha_salida,'YYYYMM') <= f_periodo )
) T_ORDEN

    FULL OUTER JOIN

(SELECT * FROM
    (select    TO_CHAR(fecha_cierre_calculado,'DD/MM/YYYY') FECHA
            , COUNT(1) total
            , SUM(nro_facturas) facturas
            , SUM(monto_facturas) monto_facturas
            , AVG(fecha_cierre_calculado - NVL(fecha_ingreso_calculado, fecha_cierre_calculado)) PROMEDIO_DIAS
            , MIN(fecha_cierre_calculado - NVL(fecha_ingreso_calculado, fecha_cierre_calculado)) MIN_DIAS
            , MAX(fecha_cierre_calculado - NVL(fecha_ingreso_calculado, fecha_cierre_calculado)) MAX_DIAS
    from fa_sgi_liquidacion
    WHERE estado_liquidacion = 'CERRADO'
        and TO_CHAR(fecha_cierre_calculado,'YYYYMM') >= i_periodo
        and TO_CHAR(fecha_cierre_calculado,'YYYYMM') <= f_periodo
    group by TO_CHAR(fecha_cierre_calculado,'DD/MM/YYYY')
    UNION ALL
    select   'Total'
            , COUNT(1) ordenes
            , SUM(nro_facturas) facturas
            , SUM(monto_facturas) monto_facturas
            , AVG(fecha_cierre_calculado - NVL(fecha_ingreso_calculado, fecha_cierre_calculado)) PROMEDIO_DIAS
            , MIN(fecha_cierre_calculado - NVL(fecha_ingreso_calculado, fecha_cierre_calculado)) MIN_DIAS
            , MAX(fecha_cierre_calculado - NVL(fecha_ingreso_calculado, fecha_cierre_calculado)) MAX_DIAS
    from fa_sgi_liquidacion
    WHERE estado_liquidacion = 'CERRADO'
        and TO_CHAR(fecha_cierre_calculado,'YYYYMM') >= i_periodo
        and TO_CHAR(fecha_cierre_calculado,'YYYYMM') <= f_periodo )
) T_LIQUIDACION
ON T_ORDEN.FECHA = T_LIQUIDACION.FECHA
ORDER BY  DECODE(NVL(T_LIQUIDACION.FECHA,T_ORDEN.FECHA),'Total',2,1)
        , SUBSTR(NVL(T_LIQUIDACION.FECHA,T_ORDEN.FECHA),4,2)
        , SUBSTR(NVL(T_LIQUIDACION.FECHA,T_ORDEN.FECHA),1,2);

END SGI_OBTENER_ATENDIDOS;

PROCEDURE SGI_OBTENER_ESTADOS_OP(pcursor  OUT t_cursor, i_periodo varchar2, f_periodo varchar2) IS
BEGIN

OPEN PCURSOR FOR
SELECT * FROM
(select    TO_CHAR(fecha_llegada,'DD/MM/YYYY') FECHA
        , count(1) ORDENES
        --CANTIDAD DE ORDENES
        , SUM(DECODE (ESTADO, 'ATENCION', 1, 0)) ESTADO_ATENCION
        , SUM(DECODE (ESTADO, 'FACTURACION', 1, 0)) ESTADO_FACTURACION
        , SUM(DECODE (ESTADO, 'CANALES_CONSUMO', 1, 0)) ESTADO_CANALES_CONSUMO
        --CANTIDAD DE FACTURAS
        , SUM(DECODE (ESTADO, 'DELIVERY', 1, 0)) ESTADO_DELIVERY
        , SUM(DECODE (ESTADO, 'DELIVERY', nro_facturas, 0)) FACTURAS_DELIVERY
        , SUM(DECODE (ESTADO, 'CERRADO', 1, 0)) ESTADO_CERRADO
        , SUM(DECODE (ESTADO, 'CERRADO', nro_facturas, 0)) FACTURAS_CERRADO
        , SUM(DECODE (ESTADO, 'ANULADO', 1, 0)) ESTADO_ANULADO
        , SUM(DECODE (ESTADO, 'ANULADO', nro_facturas, 0)) FACTURAS_ANULADO
from fa_sgi_ordenpedido
WHERE   TO_CHAR(fecha_llegada,'YYYYMM') >= i_periodo
    and TO_CHAR(fecha_llegada,'YYYYMM') <= f_periodo
group by TO_CHAR(fecha_llegada,'DD/MM/YYYY')
UNION ALL
select    'Total'
        , count(1) ORDENES
        , SUM(DECODE (ESTADO, 'ATENCION', 1, 0)) ESTADO_ATENCION
        , SUM(DECODE (ESTADO, 'FACTURACION', 1, 0)) ESTADO_FACTURACION
        , SUM(DECODE (ESTADO, 'CANALES_CONSUMO', 1, 0)) ESTADO_CANALES_CONSUMO
        --CANTIDAD DE FACTURAS
        , SUM(DECODE (ESTADO, 'DELIVERY', 1, 0)) ESTADO_DELIVERY
        , SUM(DECODE (ESTADO, 'DELIVERY', nro_facturas, 0)) FACTURAS_DELIVERY
        , SUM(DECODE (ESTADO, 'CERRADO', 1, 0)) ESTADO_CERRADO
        , SUM(DECODE (ESTADO, 'CERRADO', nro_facturas, 0)) FACTURAS_CERRADO
        , SUM(DECODE (ESTADO, 'ANULADO', 1, 0)) ESTADO_ANULADO
        , SUM(DECODE (ESTADO, 'ANULADO', nro_facturas, 0)) FACTURAS_ANULADO
from fa_sgi_ordenpedido
WHERE  TO_CHAR(fecha_llegada,'YYYYMM') >= i_periodo
    and TO_CHAR(fecha_llegada,'YYYYMM') <= f_periodo
)
ORDER BY DECODE(FECHA,'Total',2,1)
        , SUBSTR(FECHA,4,2)
        , SUBSTR(FECHA,1,2);

END SGI_OBTENER_ESTADOS_OP;

PROCEDURE SGI_OBTENER_ESTADOS_L(pcursor  OUT t_cursor, i_periodo varchar2, f_periodo varchar2) IS
BEGIN

OPEN PCURSOR FOR
SELECT * FROM
(select    TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),'DD/MM/YYYY') FECHA
        , count(1) CANTIDAD
        , SUM(DECODE (ESTADO_LIQUIDACION, 'CERRADO', 1, 0)) ESTADO_CERRADO
        , SUM(DECODE (ESTADO_LIQUIDACION, 'CERRADO', nro_facturas, 0)) FACTURAS_CERRADO
        , SUM(DECODE (ESTADO_LIQUIDACION, 'EN PROCESO', 1, 0)) ESTADO_EN_PROCESO
        , SUM(DECODE (ESTADO_LIQUIDACION, 'EN PROCESO', nro_facturas, 0)) FACTURAS_EN_PROCESO
        , SUM(DECODE (ESTADO_LIQUIDACION, 'ANULADO', 1, 0)) ESTADO_ANULADO
        , SUM(DECODE (ESTADO_LIQUIDACION, 'ANULADO', nro_facturas, 0)) FACTURAS_ANULADO
        , SUM(DECODE (ESTADO_LIQUIDACION, 'FACTURACION', 1, 0)) ESTADO_FACTURACION
from fa_sgi_liquidacion
WHERE  TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),'YYYYMM') >= i_periodo
  and  TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),'YYYYMM') <= f_periodo
group by TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),'DD/MM/YYYY')
UNION ALL
select    'Total'
        , count(1) CANTIDAD
        , SUM(DECODE (ESTADO_LIQUIDACION, 'CERRADO', 1, 0)) ESTADO_CERRADO
        , SUM(DECODE (ESTADO_LIQUIDACION, 'CERRADO', nro_facturas, 0)) FACTURAS_CERRADO
        , SUM(DECODE (ESTADO_LIQUIDACION, 'EN PROCESO', 1, 0)) ESTADO_EN_PROCESO
        , SUM(DECODE (ESTADO_LIQUIDACION, 'EN PROCESO', nro_facturas, 0)) FACTURAS_EN_PROCESO
        , SUM(DECODE (ESTADO_LIQUIDACION, 'ANULADO', 1, 0)) ESTADO_ANULADO
        , SUM(DECODE (ESTADO_LIQUIDACION, 'ANULADO', nro_facturas, 0)) FACTURAS_ANULADO
        , SUM(DECODE (ESTADO_LIQUIDACION, 'FACTURACION', 1, 0)) ESTADO_FACTURACION
from fa_sgi_liquidacion
WHERE  TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),'YYYYMM') >= i_periodo
  and  TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),'YYYYMM') <= f_periodo
)
ORDER BY DECODE(FECHA,'Total',2,1)
        , SUBSTR(FECHA,4,2)
        , SUBSTR(FECHA,1,2);

END SGI_OBTENER_ESTADOS_L;

PROCEDURE SGI_OBTENER_RES_CLI_ENT
(pcursor  OUT t_cursor, i_campo varchar2, i_valor varchar2, i_tabla varchar2, i_periodo varchar2, f_periodo varchar2) AS

v_consulta varchar2(10000);
v_valor varchar(100);
v_where varchar(500);
BEGIN

if i_valor = 'TODOS' then
v_valor := '%' ;
else
v_valor := i_valor;
end if;


if instr(i_valor,',') = 0 then
-- = v_valor
v_where := ' LIKE ''%' || v_valor || '%'' ';
else
-- in ('','','')
v_where := ' IN (''' || REPLACE(UPPER(v_valor),',',''',''') || ''') ';
end if;

if i_tabla = 'OP' then
v_consulta := 'SELECT T_ORDEN.FECHA FECHA'
            ||'        ,T_ORDEN.total op_total'
            ||'        ,T_ORDEN.facturas op_facturas'
            ||'        ,T_ORDEN.promedio_en_inbox_horas op_promedio_en_inbox_horas'
            ||'        ,T_ORDEN.minimo_en_inbox_horas op_minimo_en_inbox_horas'
            ||'        ,T_ORDEN.maximo_en_inbox_horas op_maximo_en_inbox_horas'
            ||'        ,T_ORDEN.monto_facturas  '
            ||'        ,T_ORDEN.cliente  '
            ||'        ,T_ORDEN.account_number  '
            ||' FROM'
            ||' (    SELECT * FROM'
            ||'    (select   TO_CHAR(fecha_llegada,''DD/MM/YYYY'') FECHA, cliente, account_number'
            ||'            , COUNT(1) total'
            ||'            , SUM(nro_facturas) facturas'
            ||'            , SUM(monto_facturas) monto_facturas'
            ||'            , ROUND(AVG(time_diff(fecha_llegada,NVL(fecha_salida,sysdate))/(60*60)),2) PROMEDIO_EN_INBOX_HORAS'
            ||'            , ROUND(MIN(time_diff(fecha_llegada,NVL(fecha_salida,sysdate))/(60*60)),2) MINIMO_EN_INBOX_HORAS'
            ||'            , ROUND(MAX(time_diff(fecha_llegada,NVL(fecha_salida,sysdate))/(60*60)),2) MAXIMO_EN_INBOX_HORAS'
            ||'    from fa_sgi_ordenpedido'
            ||'    WHERE (estado = ''FACTURACION'' OR fecha_salida is not null)'
            ||'        and UPPER(' || i_campo || ') '|| v_where
            ||'        and TO_CHAR(fecha_llegada,''YYYYMM'') >= ''' ||i_periodo ||''''
            ||'        and TO_CHAR(fecha_llegada,''YYYYMM'') <= ''' ||f_periodo ||''''
            ||'    group by TO_CHAR(fecha_llegada,''DD/MM/YYYY''), cliente, account_number'
            ||'    UNION ALL'
            ||'    select   ''Total'', cliente, account_number'
            ||'            , COUNT(1) total'
            ||'            , NVL(SUM(nro_facturas),0) facturas'
            ||'            , NVL(SUM(monto_facturas),0) monto_facturas'
            ||'            , NVL(ROUND(AVG(time_diff(fecha_llegada,NVL(fecha_salida,sysdate))/(60*60)),2),0) PROMEDIO_EN_INBOX_HORAS'
            ||'            , NVL(ROUND(MIN(time_diff(fecha_llegada,NVL(fecha_salida,sysdate))/(60*60)),2),0) MINIMO_EN_INBOX_HORAS'
            ||'            , NVL(ROUND(MAX(time_diff(fecha_llegada,NVL(fecha_salida,sysdate))/(60*60)),2),0) MAXIMO_EN_INBOX_HORAS'
            ||'    from fa_sgi_ordenpedido'
            ||'    WHERE (estado = ''FACTURACION'' OR fecha_salida is not null)'
            ||'        and UPPER(' || i_campo || ') '|| v_where
            ||'        and TO_CHAR(fecha_llegada,''YYYYMM'') >= '''|| i_periodo ||''''
            ||'        and TO_CHAR(fecha_llegada,''YYYYMM'') <= '''|| f_periodo ||''''
            ||'    GROUP BY cliente, account_number)'
            ||') T_ORDEN'
            ||' ORDER BY cliente, account_number, DECODE(T_ORDEN.FECHA,''Total'',2,1),SUBSTR(T_ORDEN.FECHA,4,2),SUBSTR(T_ORDEN.FECHA,1,2) ';

elsif i_tabla = 'L' then

v_consulta :=   ' SELECT FECHA,TOTAL,FACTURAS, NULL A1, NULL A2, NULL A3, monto_facturas, cliente, account_number FROM '
               ||' (select    TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),''DD/MM/YYYY'') FECHA, cliente, account_number'
               ||'         , COUNT(1) total'
               ||'         , SUM(nro_facturas) facturas'
               ||'         , SUM(monto_facturas) monto_facturas'
               ||' from fa_sgi_liquidacion'
               ||' WHERE estado_liquidacion in (''FACTURACION'',''CERRADO'')'
               ||'        and UPPER(' || i_campo || ') '|| v_where
               ||'     and TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),''YYYYMM'') >= '''|| i_periodo || ''''
               ||'     and TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),''YYYYMM'') <= '''|| f_periodo || ''''
               ||' group by TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),''DD/MM/YYYY''), cliente, account_number'
               ||' UNION ALL'
               ||' select   ''Total'', cliente, account_number'
               ||'         , COUNT(1) ordenes'
               ||'         , SUM(nro_facturas) facturas'
               ||'         , SUM(monto_facturas) monto_facturas'
               ||' from fa_sgi_liquidacion'
               ||' WHERE estado_liquidacion in (''FACTURACION'',''CERRADO'')'
               ||'        and UPPER(' || i_campo || ') '|| v_where
               ||'     and TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),''YYYYMM'') >= '''|| i_periodo || ''''
               ||'     and TO_CHAR(NVL(fecha_ingreso_calculado, fecha_cierre_calculado),''YYYYMM'') <= '''|| f_periodo || ''''
               ||' GROUP BY cliente, account_number) T_LIQUIDACION ORDER BY cliente, account_number, DECODE(T_LIQUIDACION.FECHA,''Total'',2,1),SUBSTR(T_LIQUIDACION.FECHA,4,2),SUBSTR(T_LIQUIDACION.FECHA,1,2)' ;
end if;

OPEN pcursor FOR v_consulta;

END SGI_OBTENER_RES_CLI_ENT;

PROCEDURE SGI_OBTENER_RES_CLI_ATEN
(pcursor  OUT t_cursor, i_campo varchar2, i_valor varchar2, i_tabla varchar2, i_periodo varchar2, f_periodo varchar2) AS
v_consulta varchar2(10000);
v_valor varchar(100);
v_where varchar(500);
BEGIN

if i_valor = 'TODOS' then
v_valor := '%' ;
else
v_valor := i_valor;
end if;

if instr(i_valor,',') = 0 then
-- = v_valor
v_where := ' LIKE ''%' || v_valor || '%'' ';
else
-- in ('','','')
v_where := ' IN (''' || REPLACE(UPPER(v_valor),',',''',''') || ''') ';
end if;

if i_tabla = 'OP' then
v_consulta := 'SELECT T_ORDEN.FECHA FECHA'
            ||'        ,T_ORDEN.total op_total'
            ||'        ,T_ORDEN.facturas op_facturas'
            ||'        ,T_ORDEN.promedio_en_inbox_horas op_promedio_en_inbox_horas'
            ||'        ,T_ORDEN.minimo_en_inbox_horas op_minimo_en_inbox_horas'
            ||'        ,T_ORDEN.maximo_en_inbox_horas op_maximo_en_inbox_horas'
            ||'        ,T_ORDEN.monto_facturas'
            ||'        ,T_ORDEN.cliente'
            ||'        ,T_ORDEN.account_number'
            ||' FROM'
            ||' (    SELECT * FROM'
            ||'    (select    TO_CHAR(fecha_salida,''DD/MM/YYYY'') FECHA, cliente, account_number'
            ||'            , COUNT(1) total'
            ||'            , SUM(nro_facturas) facturas'
            ||'            , SUM(monto_facturas) monto_facturas'
            ||'            , ROUND(AVG(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) PROMEDIO_EN_INBOX_HORAS'
            ||'            , ROUND(MIN(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) MINIMO_EN_INBOX_HORAS'
            ||'            , ROUND(MAX(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) MAXIMO_EN_INBOX_HORAS'
            ||'    from fa_sgi_ordenpedido'
            ||'    WHERE fecha_salida is not null'
            ||'        and UPPER(' || i_campo || ') ' || v_where
            ||'        and TO_CHAR(fecha_llegada,''YYYYMM'') >= ''' ||i_periodo ||''''
            ||'        and TO_CHAR(fecha_llegada,''YYYYMM'') <= ''' ||f_periodo ||''''
            ||'    group by TO_CHAR(fecha_salida,''DD/MM/YYYY''), cliente, account_number'
            ||'    UNION ALL'
            ||'    select   ''Total'', cliente, account_number'
            ||'            , COUNT(1) total'
            ||'            , SUM(nro_facturas) facturas'
            ||'            , SUM(monto_facturas) monto_facturas'
            ||'            , ROUND(AVG(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) PROMEDIO_EN_INBOX_HORAS'
            ||'            , ROUND(MIN(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) MINIMO_EN_INBOX_HORAS'
            ||'            , ROUND(MAX(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) MAXIMO_EN_INBOX_HORAS'
            ||'    from fa_sgi_ordenpedido'
            ||'    WHERE fecha_salida is not null'
            ||'        and UPPER(' || i_campo || ') ' || v_where
            ||'        and TO_CHAR(fecha_llegada,''YYYYMM'') >= '''|| i_periodo || ''''
            ||'        and TO_CHAR(fecha_llegada,''YYYYMM'') <= '''|| f_periodo || ''''
            ||'  GROUP BY cliente, account_number)'
            ||') T_ORDEN'
            ||' ORDER BY  cliente, account_number, DECODE(T_ORDEN.FECHA,''Total'',2,1),SUBSTR(T_ORDEN.FECHA,4,2),SUBSTR(T_ORDEN.FECHA,1,2) ';

elsif i_tabla = 'L' then

v_consulta :=   ' SELECT FECHA,TOTAL,FACTURAS, NULL A1, NULL A2, NULL A3, monto_facturas, cliente, account_number FROM '
               ||' (select    TO_CHAR(fecha_cierre_calculado,''DD/MM/YYYY'') FECHA , cliente, account_number'
               ||'         , COUNT(1) total'
               ||'         , SUM(nro_facturas) facturas'
               ||'         , SUM(monto_facturas) monto_facturas'
               ||' from fa_sgi_liquidacion'
               ||' WHERE estado_liquidacion = ''CERRADO'''
               ||'        and UPPER(' || i_campo || ') ' || v_where
               ||'     and TO_CHAR(fecha_cierre_calculado,''YYYYMM'') >= '|| i_periodo
               ||'     and TO_CHAR(fecha_cierre_calculado,''YYYYMM'') <= '|| f_periodo
               ||' group by TO_CHAR(fecha_cierre_calculado,''DD/MM/YYYY''), cliente, account_number'
               ||' UNION ALL'
               ||' select   ''Total'', cliente, account_number'
               ||'         , COUNT(1) ordenes'
               ||'         , SUM(nro_facturas) facturas'
               ||'         , SUM(monto_facturas) monto_facturas'
               ||' from fa_sgi_liquidacion'
               ||' WHERE estado_liquidacion = ''CERRADO'''
               ||'        and UPPER(' || i_campo || ') ' || v_where
               ||'     and TO_CHAR(fecha_cierre_calculado,''YYYYMM'') >= '''|| i_periodo ||''''
               ||'     and TO_CHAR(fecha_cierre_calculado,''YYYYMM'') <= '''|| f_periodo ||''''
               ||' GROUP BY cliente, account_number)T_LIQUIDACION ORDER BY  cliente, account_number, DECODE(T_LIQUIDACION.FECHA,''Total'',2,1),SUBSTR(T_LIQUIDACION.FECHA,4,2),SUBSTR(T_LIQUIDACION.FECHA,1,2)' ;
end if;

OPEN pcursor FOR v_consulta;

END SGI_OBTENER_RES_CLI_ATEN;

PROCEDURE procesarreclamosdelivery_HPEXT(
      periodo VARCHAR2)
IS
-- PROPÓSITO:
--
--
-- HISTORIAL DE MODIFICACION
-- Usuario                   Fecha           Comentario
-- ----------                ---------       ----------------------
-- CCHAHUAS                   22/07/2015      Adaptacion de logica para calculo de reclamos delivery
-- --------------------------------------------------------------------------

-------------------------------------------------------------------------------
   /*
   T1. SE ALMACENA EN CURSOR LOS COD_INCIDENTE Y UN CONTADOR
   Se genera una vista de fa_reclamosdelivery_incidentes con cada uno de los cod_incidentes
   y un contador. Solo se guardarán en el cursor aquellos cod_incidentes con más de 1 incidencia.
   */
-------------------------------------------------------------------------------
   CURSOR delivery
   IS
      SELECT cod_incidente, COUNT (*)
      FROM fa_reclamosdelivery_incidentes
      GROUP BY cod_incidente
      HAVING COUNT (*) > 1;
   c_linea delivery%ROWTYPE;
BEGIN
--------------------------------------------------------------------------
   /*
   T2. ACTUALIZACION DEL CAMPO INDREINGRESO DE LA TABLA FA_RECLAMOSDELIVERY_INCIDENTES
   Se asigna al campo indreingreso "Original" si es que existe solo un registro
   con el codigo de incidente en la misma tabla.
   */
--------------------------------------------------------------------------
   UPDATE fa_reclamosdelivery_incidentes a
   SET a.indreingreso = 'Original'
   WHERE (SELECT COUNT (1)
      FROM fa_reclamosdelivery_incidentes b
      WHERE b.cod_incidente = a.cod_incidente) = 1;

--------------------------------------------------------------------------
   /*
   T3. ACTUALIZACION DEL CAMPO INDREINGRESO DE LA TABLA FA_RECLAMOSDELIVERY_INCIDENTES
   Se recorre cada registro del cursor anteriormente guardado para cruzarlos con
   la tabla FA_RECLAMOSDELIVERY_INCIDENTES con el mismo cod_incidente para setear el campo
   indreingreso como 'Original' o 'Reingreso'
   */
--------------------------------------------------------------------------
   OPEN delivery;
   LOOP
      FETCH delivery INTO c_linea;
      EXIT
   WHEN delivery%NOTFOUND;
      UPDATE fa_reclamosdelivery_incidentes a
      SET a.indreingreso         = 'Original'
      WHERE a.cod_incidente      = c_linea.cod_incidente
      AND a.fecha_reci_incidente =
         (SELECT fecha_reci_incidente
         FROM
            (SELECT fecha_reci_incidente
            FROM fa_reclamosdelivery_incidentes
            WHERE cod_incidente = c_linea.cod_incidente
            ORDER BY TO_DATE (fecha_reci_incidente, 'DD-MON-YY') ASC
            )
         WHERE ROWNUM < 2
         );
      UPDATE fa_reclamosdelivery_incidentes
      SET indreingreso    = 'Reingreso'
      WHERE cod_incidente = c_linea.cod_incidente
      AND indreingreso   IS NULL;
   END LOOP;
   CLOSE delivery;
   --------------------------------------------------------------------------
   /*
   T4. ASIGNACION DEL CAMPO MESFACTURACION DE LA TABLA FA_RECLAMOSDELIVERY_INCIDENTES
   Se asigna mesfacturacion dependiendo del ciclo y la fecha
   de ingreso (puede ser el mismo mes o el mes anterior)
   */
--------------------------------------------------------------------------
   UPDATE fa_reclamosdelivery_incidentes
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '12'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
         ELSE TO_CHAR ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), 'YYYYMM')
      END)
   WHERE ciclo = '04';
   UPDATE fa_reclamosdelivery_incidentes
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '19'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
         ELSE TO_CHAR ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), 'YYYYMM')
      END)
   WHERE ciclo = '03';
   UPDATE fa_reclamosdelivery_incidentes
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '26'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
         ELSE TO_CHAR ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), 'YYYYMM')
      END)
   WHERE ciclo = '05';
   UPDATE fa_reclamosdelivery_incidentes
   SET mesfacturacion = (
      CASE
         WHEN TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'DD') <
            '04'
         THEN TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -2), 'YYYYMM')
         ELSE TO_CHAR ( ADD_MONTHS ( TO_DATE ( '01'
            || TO_CHAR ( TO_DATE (fechaingresosinhora, 'DD/MM/YYYY'), 'MMYYYY')
            , 'DDMMYYYY'), -1), 'YYYYMM')
      END)
   WHERE ciclo = '01';

--------------------------------------------------------------------------
   /*
   T5. ASIGNACION DEL CAMPO PROVINCIA2 DE LA TABLA fa_reclamosdelivery_incidentes
   Se asigna provincia2 dependiendo si el campo provincia es 'LIMA' o 'CALLAO' o no
   */
--------------------------------------------------------------------------

   UPDATE fa_reclamosdelivery_incidentes
   SET provincia2   = 'LIMA'
   WHERE provincia IN ('LIMA', 'CALLAO');
   UPDATE fa_reclamosdelivery_incidentes
   SET provincia2       = 'PROVINCIA'
   WHERE provincia NOT IN ('LIMA', 'CALLAO');

--------------------------------------------------------------------------
   /*
   T6. LIMPIEZA DE FA_RECLAMOSDELIVERY_RESUMEN_XT PARA REPROCESO
   Se elimina los registro cuyo mesfacturacion sea igual al periodo en proceso
   */
--------------------------------------------------------------------------
   DELETE FROM FA_RECLAMOSDELIVERY_XTR_RESUME WHERE mesfacturacion = periodo;


--------------------------------------------------------------------------
   /*
   T7. INGRESO DE REGISTROS DEL PERIODO EN PROCESO A FA_RECLAMOSDELIVERY_RESUMEN
   Se inserta en FA_RECLAMOSDELIVERY_RESUMEN una vista de la baase de impresion total y
   de fa_reclamosdelivery_incidentes del mes
   */
--------------------------------------------------------------------------
   INSERT
   INTO FA_RECLAMOSDELIVERY_XTR_RESUME
      (
         cantidadreclamos, region, mesfacturacion, ciclo,tipocuenta,tipopersona,tipodocumento,cantidadrecibos,cantidadenviados
      )
   SELECT d.cantidad,'LIMA',TO_CHAR ( TO_DATE (c.mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM') MES,c.ciclo,c.tipocuenta,c.tipopersona,
   c.tipodocumento,c.cantidad recibos,u.cantidad cantidadenviados
FROM
   (SELECT COUNT (recibo) cantidad, mes, ciclo,tipopersona,tipocuenta,
      tipodocumento
   FROM FA_BASEIMPRESIONTOTAL_EXTREME
   WHERE estado IN ('LIMA NUEVO', 'LIMA ANTIGUO','LIMA NEGATIVOS') and  TO_CHAR ( TO_DATE (mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')=periodo
   GROUP BY mes, ciclo,tipopersona,tipocuenta,tipodocumento
   ) c
LEFT JOIN
   (SELECT COUNT (a.cod_incidente) cantidad, a.provincia2 region,
      a.mesfacturacion, a.ciclo,b.tipocuenta,b.tipopersona,DECODE(LENGTH(
      b.ruccompania),8,'DNI',11,'RUC','-') tipodocumento FROM
      (select * from(select t.*,ROW_NUMBER() OVER (PARTITION BY t.COD_INCIDENTE ORDER BY t.FECHA_RECI_INCIDENTE) FILA from fa_reclamosdelivery_incidentes t) where fila=1) A
   LEFT JOIN P_COMPANIA B ON A.CUENTA=b.cuentacompania
   WHERE a.indreingreso              = 'Original'
   AND a.provincia2                  ='LIMA'
   AND a.mesfacturacion              = periodo
   GROUP BY a.provincia2, a.mesfacturacion, a.ciclo,b.tipocuenta,b.tipopersona,
      DECODE(LENGTH(b.ruccompania),8,'DNI',11,'RUC','-')
   ) d ON d.mesfacturacion = TO_CHAR ( TO_DATE (c.mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')
AND d.ciclo = (c.ciclo)
AND c.tipopersona  =d.tipopersona
AND c.tipodocumento=d.tipodocumento
AND c.tipocuenta   =d.tipocuenta
left join (SELECT COUNT (recibo) cantidad, mes, ciclo,tipopersona,tipocuenta,
      tipodocumento
   FROM FA_BASEIMPRESIONTOTAL_EXTREME
   WHERE estado IN ('LIMA NUEVO', 'LIMA ANTIGUO','LIMA NEGATIVOS') and  TO_CHAR ( TO_DATE (mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')=periodo and esretencion is null
   GROUP BY mes, ciclo,tipopersona,tipocuenta,tipodocumento
   ) u

ON u.mes = c.mes

AND u.ciclo = c.ciclo
AND c.tipopersona  =u.tipopersona
AND c.tipodocumento=u.tipodocumento
AND c.tipocuenta   =u.tipocuenta;

    INSERT
   INTO FA_RECLAMOSDELIVERY_XTR_RESUME
      (
         cantidadreclamos, region, mesfacturacion, ciclo,tipocuenta,tipopersona,tipodocumento,cantidadrecibos,cantidadenviados
      )
   SELECT d.cantidad,'PROVINCIA',TO_CHAR ( TO_DATE (c.mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM') MES,c.ciclo,c.tipocuenta,c.tipopersona,
   c.tipodocumento,c.cantidad recibos,u.cantidad retenidos
FROM
   (SELECT COUNT (recibo) cantidad, mes, ciclo,tipopersona,tipocuenta,
      tipodocumento
   FROM FA_BASEIMPRESIONTOTAL_EXTREME
   WHERE estado  IN ('PROV NUEVO', 'PROV ANTIGUO','PROV NEGATIVOS') and  TO_CHAR ( TO_DATE (mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')=periodo
   GROUP BY mes, ciclo,tipopersona,tipocuenta,tipodocumento
   ) c
LEFT JOIN
   (SELECT COUNT (a.cod_incidente) cantidad, a.provincia2 region,
      a.mesfacturacion, a.ciclo,b.tipocuenta,b.tipopersona,DECODE(LENGTH(
      b.ruccompania),8,'DNI',11,'RUC','-') tipodocumento FROM
      (select * from(select t.*,ROW_NUMBER() OVER (PARTITION BY t.COD_INCIDENTE ORDER BY t.FECHA_RECI_INCIDENTE) FILA from fa_reclamosdelivery_incidentes t) where fila=1) A
   LEFT JOIN P_COMPANIA B ON A.CUENTA=b.cuentacompania
   WHERE a.indreingreso              = 'Original'
   AND a.provincia2                  ='PROVINCIA'
   AND a.mesfacturacion              = periodo
   GROUP BY a.provincia2, a.mesfacturacion, a.ciclo,b.tipocuenta,b.tipopersona,
      DECODE(LENGTH(b.ruccompania),8,'DNI',11,'RUC','-')
   ) d ON d.mesfacturacion = TO_CHAR ( TO_DATE (c.mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')

AND d.ciclo = (c.ciclo)
AND c.tipopersona  =d.tipopersona
AND c.tipodocumento=d.tipodocumento
AND c.tipocuenta   =d.tipocuenta
LEFT JOIN  (SELECT COUNT (recibo) cantidad, mes, ciclo,tipopersona,tipocuenta,
      tipodocumento
   FROM FA_BASEIMPRESIONTOTAL_EXTREME
   WHERE estado  IN ('PROV NUEVO', 'PROV ANTIGUO','PROV NEGATIVOS') and  TO_CHAR ( TO_DATE (mes, 'MON-YY',
   'NLS_DATE_LANGUAGE=SPANISH'), 'YYYYMM')=periodo and esretencion is null
   GROUP BY mes, ciclo,tipopersona,tipocuenta,tipodocumento
   ) U ON u.mes = c.mes

AND u.ciclo = c.ciclo
AND c.tipopersona  =u.tipopersona
AND c.tipodocumento=u.tipodocumento
AND c.tipocuenta   =u.tipocuenta;

-------------------------------------------------------------------------------
   /*
   T8. SE LIMPIA REGISTROS DE FA_RECLAMOSDELIVERY_INCIDENTES FUERA DE PERIODO DE PROCESO
   Se eliminan los registros de la tabla fa_reclamosdelivery_incidentes con el mesfacturacion
   diferente al periodo en proceso.
   */
-------------------------------------------------------------------------------
   DELETE FROM fa_reclamosdelivery_incidentes WHERE mesfacturacion <> periodo;
   COMMIT;
END procesarreclamosdelivery_HPEXT;

PROCEDURE SGI_OBTENER_RES_ANUAL(pcursor  OUT t_cursor, i_año varchar2) IS
BEGIN

OPEN PCURSOR FOR
--ATENDIDAS
SELECT NVL(T_LIQUIDACION.PERIODO,T_ORDEN.PERIODO) PERIODO
        --ORDEN
        ,T_ORDEN.total op_total
        ,T_ORDEN.facturas op_facturas
        ,T_ORDEN.promedio_en_inbox_horas op_promedio_en_inbox_horas
        ,T_ORDEN.minimo_en_inbox_horas op_minimo_en_inbox_horas
        ,T_ORDEN.maximo_en_inbox_horas op_maximo_en_inbox_horas
        --LIQUIDACION
        ,T_LIQUIDACION.total l_total
        ,T_LIQUIDACION.facturas l_facturas
        --MONTO FACTURAS
        ,T_ORDEN.monto_facturas monto_facturas_OP
        ,T_LIQUIDACION.monto_facturas  monto_facturas_LIQ
FROM
(    SELECT * FROM
    (select   TO_CHAR(fecha_salida,'YYYYMM') PERIODO
            , COUNT(1) total
            , SUM(nro_facturas) facturas
            , SUM(monto_facturas) monto_facturas
            , ROUND(AVG(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) PROMEDIO_EN_INBOX_HORAS
            , ROUND(MIN(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) MINIMO_EN_INBOX_HORAS
            , ROUND(MAX(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) MAXIMO_EN_INBOX_HORAS
    from fa_sgi_ordenpedido
    WHERE fecha_salida is not null
        and TO_CHAR(fecha_llegada,'YYYY') = i_año
    group by TO_CHAR(fecha_salida,'YYYYMM')
    UNION ALL
    select   'Total'
            , COUNT(1) total
            , SUM(nro_facturas) facturas
            , SUM(monto_facturas) monto_facturas
            , ROUND(AVG(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) PROMEDIO_EN_INBOX_HORAS
            , ROUND(MIN(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) MINIMO_EN_INBOX_HORAS
            , ROUND(MAX(time_diff(fecha_llegada,fecha_salida)/(60*60)),2) MAXIMO_EN_INBOX_HORAS
    from fa_sgi_ordenpedido
    WHERE fecha_salida is not null
        and TO_CHAR(fecha_llegada,'YYYY') = i_año )
) T_ORDEN

    FULL OUTER JOIN

(SELECT * FROM
    (select    TO_CHAR(fecha_cierre_calculado,'YYYYMM') PERIODO
            , COUNT(1) total
            , SUM(nro_facturas) facturas
            , SUM(monto_facturas) monto_facturas
    from fa_sgi_liquidacion
    WHERE estado_liquidacion = 'CERRADO'
        and TO_CHAR(fecha_cierre_calculado,'YYYY') =  i_año
    group by TO_CHAR(fecha_cierre_calculado,'YYYYMM')
    UNION ALL
    select   'Total'
            , COUNT(1) ordenes
            , SUM(nro_facturas) facturas
            , SUM(monto_facturas) monto_facturas
    from fa_sgi_liquidacion
    WHERE estado_liquidacion = 'CERRADO'
        and TO_CHAR(fecha_cierre_calculado,'YYYY') =  i_año )
) T_LIQUIDACION
ON T_ORDEN.PERIODO = T_LIQUIDACION.PERIODO
ORDER BY  DECODE(NVL(T_LIQUIDACION.PERIODO,T_ORDEN.PERIODO),'Total',2,1),NVL(T_LIQUIDACION.PERIODO,T_ORDEN.PERIODO) ;

END SGI_OBTENER_RES_ANUAL;


PROCEDURE SGI_LIQ_IDENTIFICAR_FECHAS(C_FECHA VARCHAR2) IS
V_FECHA DATE := TO_DATE(C_FECHA, 'YYYYMMDD');
V_PERIODO1 VARCHAR2(6):= TO_CHAR(V_FECHA,'YYYYMM');
V_PERIODO2 VARCHAR2(6):= TO_CHAR(ADD_MONTHS(V_FECHA,-1),'YYYYMM');

BEGIN
--ELIMINAR LIQUIDACIONES
DELETE FROM fa_sgi_liquidacion_estados
      WHERE TRUNC(fecha_reporte) >= TRUNC(V_FECHA);

--AÑADIR LIQUIDACIONES EN FACTURACION
INSERT INTO fa_sgi_liquidacion_estados
 SELECT numero_liquidacion, fecha_liquidacion, fecha_reporte, estado_liquidacion
 FROM fa_sgi_liquidacion
 WHERE TO_CHAR(fecha_liquidacion, 'YYYYMM') IN (V_PERIODO1,V_PERIODO2)
 AND estado_liquidacion = 'FACTURACION'
 AND numero_liquidacion not in (SELECT numero_liquidacion
                                  FROM fa_sgi_liquidacion_estados
                                 WHERE   estado_liquidacion = 'FACTURACION');

--ACTUALIZAR FECHA FACTURACION
 /*UPDATE /*+BYPASS_UJVC*//*
(SELECT a.fecha_reporte, b.fecha_ingreso_calculado
  FROM fa_sgi_liquidacion_estados a
  JOIN fa_sgi_liquidacion b
    ON a.numero_liquidacion = b.numero_liquidacion
 WHERE TO_CHAR(b.fecha_liquidacion,'YYYYMM') IN (V_PERIODO1,V_PERIODO2)
   AND a.estado_liquidacion = 'FACTURACION') X
 SET fecha_ingreso_calculado = fecha_reporte ;*/
 /*fecha1=201501 fecha2=201601 update=52 merge=52 validado*/
 MERGE INTO
   (
      SELECT
    B.FECHA_INGRESO_CALCULADO AS FECHA_INGRESO_CALCULADO,B.NUMERO_LIQUIDACION
    FROM fa_sgi_liquidacion b  where TO_CHAR(b.fecha_liquidacion,'YYYYMM') IN (V_PERIODO1,V_PERIODO2)
   )A
   USING
   (

  SELECT A.FECHA_REPORTE,A.NUMERO_LIQUIDACION
  FROM fa_sgi_liquidacion_estados a  WHERE a.estado_liquidacion = 'FACTURACION'
   )B
   ON
   (
    a.numero_liquidacion = b.numero_liquidacion
   )
   WHEN MATCHED THEN
   UPDATE SET fecha_ingreso_calculado = fecha_reporte ;

--AÑADIR LIQUIDACIONES CERRADAS
INSERT INTO fa_sgi_liquidacion_estados
 SELECT numero_liquidacion, fecha_liquidacion, fecha_reporte, estado_liquidacion
 FROM fa_sgi_liquidacion
 WHERE TO_CHAR(fecha_liquidacion, 'YYYYMM') IN (V_PERIODO1,V_PERIODO2)
 AND estado_liquidacion = 'CERRADO'
 AND numero_liquidacion not in (select numero_liquidacion
                                 from fa_sgi_liquidacion_estados
                                where estado_liquidacion = 'CERRADO');

--ACTUALIZAR FECHA CIERRE
 /*UPDATE /*+BYPASS_UJVC*//*
(SELECT a.fecha_reporte, b.fecha_cierre_calculado
  FROM fa_sgi_liquidacion_estados a
  JOIN fa_sgi_liquidacion b
    ON a.numero_liquidacion = b.numero_liquidacion
 WHERE TO_CHAR(b.fecha_liquidacion,'YYYYMM') IN (V_PERIODO1,V_PERIODO2)
   AND a.estado_liquidacion = 'CERRADO') X
 SET fecha_cierre_calculado = fecha_reporte ;*/
 /*fecha1=201501 fecha2=201601 update=162 merge=162 validado*/
 MERGE INTO
   (
   SELECT
   B.FECHA_CIERRE_CALCULADO,B.NUMERO_LIQUIDACION
   FROM FA_SGI_LIQUIDACION B WHERE TO_CHAR(B.FECHA_LIQUIDACION,'YYYYMM') IN (V_PERIODO1,V_PERIODO2)
   )A
   USING
   (

   SELECT A.FECHA_REPORTE,A.NUMERO_LIQUIDACION
  FROM fa_sgi_liquidacion_estados a WHERE a.estado_liquidacion = 'CERRADO'
   )B
   ON
   (
    a.numero_liquidacion = b.numero_liquidacion
   )
   WHEN MATCHED THEN
   UPDATE SET fecha_cierre_calculado = fecha_reporte ;

COMMIT;

End Sgi_Liq_Identificar_Fechas;
-------------------------------------------------------------------------------------------------------------DESCOMENTAR CON DBLINK A DWH [CCHAHUAS]
Procedure PREPROCESAMIENTODETALLECUENTAS (OPCION VARCHAR2) IS
Begin
IF (OPCION =  '1') THEN
 UPDATE FA_DETALLECUENTAS SET CUENTACOMPANIA=RPAD(CUENTACOMPANIA,10,'0') WHERE SUBSTR(CUENTACOMPANIA,0,1)='1';
 commit;
END IF;
 commit;
End PREPROCESAMIENTODETALLECUENTAS;

-------------------------------------------------------------------------------------------------------------DESCOMENTAR CON DBLINK A DWH [CCHAHUAS]
Procedure PROCESAMIENTODETALLECUENTAS (OPCION VARCHAR2) IS
Begin

MERGE INTO
(
SELECT
c4.nombrecompania AS motivo,
c4.ciclofacturacion AS fecha,
c4.provincia AS motivo2,
c4.departamento AS fecha2,
c4.region AS motivo3,
C4.NUMERODOCUMENTO AS FECHA3,
C4.CANTIDADEQUIPOSPOSTACTIV AS FECHA4,
c4.cantidadequipossuspendidos AS motivo5,
c4.tipodocumento AS motivo4,
c4.cuentacompania
FROM FA_DETALLECUENTAS  c4
)A
USING
(
select * From (
SELECT c.razonsocial AS motivoE, c4.nombrecompania AS motivo,
    c.ciclo AS fechaE, c4.ciclofacturacion AS fecha,
    c.provincia AS motivoE2, c4.provincia AS motivo2,
    c.departamento AS fechaE2, c4.departamento AS fecha2,
    c.region AS motivoE3, c4.region AS motivo3,
    c.ruccompania AS fechaE3, c4.numerodocumento AS fecha3,
    c.tipodocumento AS motivoE4, c4.tipodocumento AS motivo4,
    C.Equiposactivospostpago As Fechae4, C4.Cantidadequipospostactiv As Fecha4,
    C.SUSPENSIONES AS MOTIVOE5, C4.CANTIDADEQUIPOSSUSPENDIDOS AS MOTIVO5,c.cuenta,ROW_NUMBER() OVER ( PARTITION BY C.cuenta ORDER BY C.equiposactivospostpago DESC) as rn
   FROM FA_DETALLECUENTAS c4, (select distinct numerocuentaresponsable as cuenta,b.codigocompania,b.razonsocial,b.ciclo,b.provincia,b.departamento,b.region,b.ruccompania,b.tipodocumento,b.equiposactivospostpago,b.suspensiones from fotoequipos a left join p_compania b on a.codigocompania=b.codigocompania) c
   WHERE c.cuenta  = c4.cuentacompania
        And C4.Nombrecompania Is Null
        And C4.Ciclofacturacion Is Null
        ) where rn=1
)B
ON
(A.cuentacompania  = B.cuenta
)
WHEN MATCHED THEN
UPDATE SET A.MOTIVO = B.MOTIVOE,   A.FECHA = B.FECHAE,
   A.MOTIVO2 =  B.MOTIVOE2,   A.FECHA2 =  B.FECHAE2,
   A.MOTIVO3 =  B.MOTIVOE3,   A.FECHA3 =  B.FECHAE3,
   A.MOTIVO4 =  B.MOTIVOE4,   A.FECHA4 =  B.FECHAE4,
   A.Motivo5 =  B.Motivoe5;


/*
IF (OPCION =  '1') THEN

   MERGE INTO
   (
                select
                c4.nombrecompania AS motivo,
  c4.ciclofacturacion AS fecha,
  c4.provincia AS motivo2,
                c4.departamento AS fecha2,
  c4.region AS motivo3,
  c4.numerodocumento AS fecha3,
   c4.tipodocumento AS motivo4,
                c4.cantidadequipospostactiv AS fecha4,
   c4.cantidadequipossuspendidos AS motivo5,
                c4.cantidadequiposdesactivados AS fecha5,
   c4.cuentacompania
                from  FA_DETALLECUENTAS c4
        WHERE  c4.nombrecompania IS NULL
        AND c4.ciclofacturacion IS NULL
   )A
   USING
   (
   SELECT c.compania AS motivoE, c4.nombrecompania AS motivo,
    c.ciclo AS fechaE, c4.ciclofacturacion AS fecha,
    c.provincia AS motivoE2, c4.provincia AS motivo2,
    c.departamento AS fechaE2, c4.departamento AS fecha2,
    c.region AS motivoE3, c4.region AS motivo3,
    c.ruccompania AS fechaE3, c4.numerodocumento AS fecha3,
    c.tipodocumento AS motivoE4, c4.tipodocumento AS motivo4,
    c.cantidadequiposposactiv AS fechaE4, c4.cantidadequipospostactiv AS fecha4,
    c.cantidadequipossuspendidos AS motivoE5, c4.cantidadequipossuspendidos AS motivo5,
    c.cantidadequiposdesactivados AS fechaE5, c4.cantidadequiposdesactivados AS fecha5,c.CODIGOCUENTACOMPANIA
   FROM FA_DETALLECUENTAS c4,
  (select n.codigocuentacompania,n.codigocompania,n.compania,n.ciclofacturacion ciclo,n.provincia,n.departamento,n.region,n.ruccompania,
CASE WHEN LENGTH(n.ruccompania)<>11 THEN 'DNI' WHEN LENGTH(n.ruccompania)=11 AND (n.ruccompania LIKE '10%' OR n.ruccompania LIKE '20%' OR n.ruccompania LIKE '15%' OR n.ruccompania LIKE '17%' ) THEN 'RUC' END tipodocumento,
o.cantidadequiposposactiv,o.cantidadequipossuspendidos,o.cantidadequiposdesactivados from
(select * from dmartsys.compania@dmart_lm where codigocuentacompania is not null) n
left join
(
select codigocompania,SUM(DECODE(potencial,'SI',DECODE(estadocontrato,'Activo',1,0),0)) cantidadequiposposactiv,SUM(DECODE(potencial,'SI',DECODE(estadocontrato,'Suspendido',1,0),0)) cantidadequipossuspendidos,SUM(DECODE(potencial,'SI',DECODE(estadocontrato,'Desactivado',1,0),0)) cantidadequiposdesactivados from (
select x.*,y.product,decode(product,'Non PTT Post','SI','Banda Ancha','SI','IN Post','SI','iDen Post','SI','HP PTT Post','SI','NO') potencial from (
select a.codigocompania,a.codigocontratobscs,a.estadocontrato,a.plantarifariocontrato,b.codigoplantarifariobscs,b.plantarifario,b.tipoplan from (
select codigocompania,codigocontratobscs,estadocontrato,plantarifariocontrato from (
select codigocontrato,codigocompania,codigocontratobscs,estadocontrato,plantarifariocontrato,row_number() over (PARTITION BY codigocontratobscs order by codigocontrato desc) rn from dmartsys.contrato@dmart_lm
  ) where rn=1 ) a
  left join
  (select codigoplantarifario,codigoplantarifariobscs,plantarifario,tipoplan,estadoplan from dmartsys.plantarifario@dmart_lm where registroactual='1' order by codigoplantarifario) b
  on a.plantarifariocontrato=b.codigoplantarifario
  ) x
  left join
  (select c_plan,t_plan,product from pm_planes) y
  on x.codigoplantarifariobscs=y.c_plan
  ) group by codigocompania
  ) o
  on n.codigocompania=o.codigocompania
    ) c
)B
   ON
   (
    fn_decodifica_cuenta(B.codigocuentacompania)  = fn_decodifica_cuenta(A.cuentacompania)
   )
   WHEN MATCHED THEN
   UPDATE SET motivo = motivoE,
   fecha = fechaE,
   motivo2 = motivoE2,
   fecha2 = fechaE2,
   motivo3 = motivoE3,
   fecha3 = fechaE3,
   motivo4 = motivoE4,
   fecha4 = fechaE4,
   motivo5 = motivoE5,
   fecha5 = fechaE5;
   commit;
END IF;*/
commit;
End PROCESAMIENTODETALLECUENTAS;


PROCEDURE  PROCESAMIENTOBASEENOTRIA (speriodo VARCHAR2,sciclo VARCHAR2,sfvencimiento VARCHAR2,sfcorte VARCHAR2,sduracion VARCHAR2)
IS
BEGIN
-- PROPÓSITO:
-- Generacion de base mail diarios ;
-- HISTORIAL DE MODIFICACION
-- Usuario                            Fecha            Comentario
-- ----------                         ---------        ----------------------
-- CCHAHUAS                 03/02/2016     Creacion de Flujo
-- --------------------------------------------------------------------------
DELETE FROM FA_BASEENOTRIA_BASETOTAL where ciclo=sciclo and periodo=speriodo;
commit;

INSERT INTO FA_BASEENOTRIA_BASETOTAL (MAIL, ARCHIVO,    RAZONSOCIAL,    NOMBRECONTACTO, CODCUENTA,  TIPODOCUMENTO,
                          COMPANHIAACTIVA,    CICLO,  BASE,   FECHAVENCIMIENTO,   ESTADO, FECHAEMISION,   RANGO,PERIODO)
select  a.mail,b.archivo,a.razonsocial, CASE when length(a.nombrecontacto)<=10 THEN a.razonsocial ELSE a.nombrecontacto END as nombrecontacto,
            b.codcuenta,OBTENER_TIPODOC_2(a.ruccompania),a.companhiaactiva,a.ciclo,a.base,
            sfvencimiento as fechavencimiento,
            decode(NVL(c.estado,'-'),'-','LIMA ANTIGUO',c.estado) as estado,
            sfcorte as fechaemision,
            sduracion as Rango,
            speriodo
from
    -- Base de Recibos - Extreme Digital
    (select * from FA_HPEXTREME_ELECTRONICA where periodo=speriodo and ciclo=sciclo and archivo is not null) b,
    -- Base Afiliada Activa al d-1
    (select * from fa_afiliadosmail_diario where companhiaactiva='Activa' --and periodo=speriodo and ciclo_foto='01'
    ) a,
    -- Base Total de Recibos
    (select * from fa_bgh_hpextreme_base where periodo=speriodo and '0'|| ciclo = sciclo) c
where FN_DECODIFICA_CUENTA(B.CODCUENTA) = a.NUMEROCUENTARESPONSABLE
  and SUBSTR(b.recibo,-9)=SUBSTR(c.recibo,-9);
/*select  a.mail,b.archivo,a.razonsocial, CASE when length(a.nombrecontacto)<=10 THEN a.razonsocial ELSE a.nombrecontacto END as nombrecontacto,
            b.codcuenta,OBTENER_TIPODOC_2(a.ruccompania),a.companhiaactiva,a.ciclo,a.base,
            sfvencimiento as fechavencimiento,
            decode(NVL(c.estado,'-'),'-','LIMA ANTIGUO',c.estado) as estado,
            sfcorte as fechaemision,
            sduracion as Rango,
            speriodo
from
    (select * from fa_afiliadosmail_ciclo where periodo=speriodo and ciclo_foto=sciclo and companhiaactiva='Activa') a,
    (select * from FA_HPEXTREME_ELECTRONICA where periodo=speriodo and ciclo=sciclo and archivo is not null) b,
    (select * from fa_bgh_hpextreme_base where periodo=speriodo and '0'||ciclo=sciclo) c
where
    a.NUMEROCUENTARESPONSABLE = FN_DECODIFICA_CUENTA(B.CODCUENTA) and b.codcuenta=c.cuenta;
*/
COMMIT;

END PROCESAMIENTOBASEENOTRIA;

Procedure Bc_Genbaseinar(Pcursor  OUT T_cursor)
AS
BEGIN
-- PROPÓSITO:
-- Generacion de la base inar personas;
-- HISTORIAL DE MODIFICACION
-- Usuario                            Fecha            Comentario
-- ----------                         ---------        ----------------------
-- DPERALTA                            25/04/2016     Creacion
-- --------------------------------------------------------------------------

OPEN PCURSOR FOR
Select A.Periodo, A.Codigocuenta,  To_Char(A.Fechaactivacion,'dd/mm/yy'), To_Char(A.Fechaingresocliente,'dd/mm/yy'), A.Codigocompania,
         A.Ruccompania, A.Razonsocial, A.Contrato, A.Nextel, A.Modeloequipo,a.gama_equipo, a.c_plan,
       A.N_Plan, A.T_Plan, A.Tipo_Renta, A.Tech, A.Product, A.Estadoinar, A.Vendedor, /*A.Zona,*/
       A.Tipodoc, A.Giro_Negoc, A.Cantactivados,/*A.Cantsuspendidos, *//*A.Tipocuenta,*/ A.Rentabasica,
       A.Dealer, A.Imei, A.Imei_Bscs, A.Ciclo, A.Region, A.Departamento, A.Provincia, A.Distrito,
       a.solucion,a.typecustomer, a.destypecustomer, a.typebusiness, a.destypebusiness, a.kam,
       a.division_territorio, a.cadena_dealer, a.jerarquia_distrito,a.canal_venta, a.tienda,
       a.tipo_tienda, a.socio_negocio, /*a.gerencia_canal,*/ a.gerencia_territorio, a.receptor,
       A.Modalidad_Origen, A.Fecha_Portabilidad From Tnp_Inar_Personas_Ods A
       WHERE to_char(a.fecha,'yyyymm')>=to_char(SYSDATE,'yyyymm') and fecha<=SYSDATE ORDER BY fechaactivacion desc;
END BC_GENBASEINAR;

PROCEDURE PROCESARINCIDENTESDIARIOSPEQ is
begin
UPDATE FA_INCIDENTEDIARIO_PAGEQ A
SET A.especificacionfacturacion=(   SELECT B.ESPECIFICACIONFACTURACION
                                    FROM FA_INCIDENTEDIARIO_ESPECIF_PEQ B
                                    WHERE a.especificacion=B.ESPECIFICACION)
WHERE A.especificacionfacturacion IS NULL AND (A.INBOXASIGNADO in ('FACT.EQUIPOS','FACT.PAGOS') or a.inboxorigen in ('FACT.EQUIPOS','FACT.PAGOS')) AND to_char(fechaproceso,'yyyymmdd') = to_char(sysdate,'yyyymmdd');

UPDATE FA_INCIDENTEDIARIO_PAGEQ
SET especificacionfacturacion='AMR'
WHERE   (INBOXASIGNADO in ('FACT.EQUIPOS','FACT.PAGOS') OR inboxorigen in ('FACT.EQUIPOS','FACT.PAGOS') or inboxdestino in ('FACT.EQUIPOS','FACT.PAGOS'))
        AND tipoincidente='RECLAMO' AND especificacionfacturacion IS NULL AND to_char(fechaproceso,'yyyymmdd') = to_char(sysdate,'yyyymmdd');

UPDATE FA_INCIDENTEDIARIO_PAGEQ
SET especificacionfacturacion='OTROS'
WHERE especificacionfacturacion IS NULL AND (INBOXASIGNADO in ('FACT.EQUIPOS','FACT.PAGOS') OR inboxorigen in ('FACT.EQUIPOS','FACT.PAGOS') or inboxdestino in ('FACT.EQUIPOS','FACT.PAGOS')) AND to_char(fechaproceso,'yyyymmdd') = to_char(sysdate,'yyyymmdd');

UPDATE FA_INCIDENTEDIARIO_PAGEQ a
SET a.secuencia='Último'
WHERE exists (  SELECT 1
                FROM (  SELECT COD_INCIDENTE,FECHARECIBIDO
                        FROM (
                                SELECT COD_INCIDENTE,FECHARECIBIDO,row_number() over ( partition BY COD_INCIDENTE order by FECHARECIBIDO DESC) AS num
                                FROM FA_INCIDENTEDIARIO_PAGEQ
                                ORDER BY COD_INCIDENTE ASC)
                        WHERE NUM=1) b
                WHERE a.cod_incidente=b.cod_incidente AND b.fecharecibido=a.fecharecibido)
    AND a.inboxasignado in ('FACT.EQUIPOS','FACT.PAGOS') AND to_char(fechaproceso,'yyyymmdd') = to_char(sysdate,'yyyymmdd');

UPDATE FA_INCIDENTEDIARIO_PAGEQ a
SET a.secuencia='Anterior'
WHERE a.secuencia is null AND a.inboxasignado in ('FACT.EQUIPOS','FACT.PAGOS') AND to_char(fechaproceso,'yyyymmdd') = to_char(sysdate,'yyyymmdd');

UPDATE FA_INCIDENTEDIARIO_PAGEQ a
SET a.vigencia='Antiguo'
WHERE sysdate-to_date(substr(fecharecibido,1,8),'ddmmyyyy')>90 AND a.inboxasignado in ('FACT.EQUIPOS','FACT.PAGOS') AND to_char(fechaproceso,'yyyymmdd') = to_char(sysdate,'yyyymmdd');

UPDATE FA_INCIDENTEDIARIO_PAGEQ a
SET a.vigencia='Vigente'
WHERE a.inboxasignado in ('FACT.EQUIPOS','FACT.PAGOS') AND a.vigencia is null AND to_char(fechaproceso,'yyyymmdd') = to_char(sysdate,'yyyymmdd');

UPDATE FA_INCIDENTEDIARIO_PAGEQ a
SET a.secuencia2='Último'
WHERE EXISTS (  SELECT 1
                FROM (  SELECT COD_INCIDENTE,FECHARECIBIDO
                        FROM (  SELECT COD_INCIDENTE,FECHARECIBIDO,row_number() over ( partition BY COD_INCIDENTE order by FECHARECIBIDO DESC) AS num
                                FROM FA_INCIDENTEDIARIO_PAGEQ
                                ORDER BY COD_INCIDENTE ASC)
                        WHERE NUM=1) b
                WHERE a.cod_incidente=b.cod_incidente AND b.fecharecibido  =a.fecharecibido)
    AND (a.inboxasignado in ('FACT.EQUIPOS','FACT.PAGOS') OR a.inboxorigen in ('FACT.EQUIPOS','FACT.PAGOS')) AND to_char(fechaproceso,'yyyymmdd') = to_char(sysdate,'yyyymmdd');

UPDATE FA_INCIDENTEDIARIO_PAGEQ a
SET a.secuencia2='Anterior'
WHERE a.secuencia2 is null AND (a.inboxasignado in ('FACT.EQUIPOS','FACT.PAGOS') OR a.inboxorigen in ('FACT.EQUIPOS','FACT.PAGOS')) AND to_char(fechaproceso,'yyyymmdd') = to_char(sysdate,'yyyymmdd');
commit;
-------------------------------------
DELETE FROM FA_INCIDENTEDIARIO_PAGEQ_RES
WHERE fecha=trunc(sysdate);

DELETE FROM FA_INCIDENTEDIARIO_PAGEQ_RES
WHERE fecha=trunc(sysdate-1) AND inboxorigen is not null ;

DELETE FROM FA_INCIDENTEDIARIO_PAGEQ_RES
WHERE fecha=trunc(sysdate-1) AND inboxdestino is not null ;

INSERT INTO FA_INCIDENTEDIARIO_PAGEQ_RES
    (   CANTIDAD, CICLO, ESTADOINCIDENTE, TEMAINCIDENTE, ESPECIFICACION,
        ESPECIFICACIONFACTURACION, SECUENCIA, VIGENCIA, INBOXASIGNADO, TIPOCUENTA,
        FECHA, FECHAMASANTIGUA)
SELECT  count(distinct COD_INCIDENTE) cantidad, CICLO, ESTADOINCIDENTE,
        TEMAINCIDENTE, ESPECIFICACION, ESPECIFICACIONFACTURACION, SECUENCIA,
        VIGENCIA,INBOXASIGNADO,TIPOCUENTA, TRUNC(SYSDATE) FECHA, min(to_date(substr(fecharecibido,1,8),'ddmmyyyy')) FECHAMINIMA
FROM FA_INCIDENTEDIARIO_PAGEQ
WHERE INBOXASIGNADO in ('FACT.EQUIPOS','FACT.PAGOS') AND to_char(fechaproceso,'yyyymmdd') = to_char(sysdate,'yyyymmdd')
GROUP BY    CICLO, ESTADOINCIDENTE, TEMAINCIDENTE, ESPECIFICACION, ESPECIFICACIONFACTURACION,
            SECUENCIA, VIGENCIA, INBOXASIGNADO, TIPOCUENTA, TRUNC(SYSDATE);

INSERT INTO FA_INCIDENTEDIARIO_PAGEQ_RES
    (   ATENDIDOS, CICLO, ESTADOINCIDENTE, TEMAINCIDENTE, ESPECIFICACION,
        ESPECIFICACIONFACTURACION, SECUENCIA, VIGENCIA, INBOXASIGNADO, TIPOCUENTA,
        FECHA, FECHAMASANTIGUA, INBOXORIGEN)
SELECT  count(distinct COD_INCIDENTE) cantidad, CICLO, ESTADOINCIDENTE,
        TEMAINCIDENTE, ESPECIFICACION, ESPECIFICACIONFACTURACION, SECUENCIA2,
        VIGENCIA, INBOXASIGNADO, TIPOCUENTA, TRUNC(SYSDATE)-1 FECHA, min(to_date(substr(fecharecibido,1,8),'ddmmyyyy')) FECHAMINIMA,INBOXORIGEN
FROM FA_INCIDENTEDIARIO_PAGEQ
WHERE INBOXORIGEN in ('FACT.EQUIPOS','FACT.PAGOS') AND to_char(fechaproceso,'yyyymmdd') = to_char(sysdate,'yyyymmdd')
GROUP BY    CICLO, ESTADOINCIDENTE, TEMAINCIDENTE, ESPECIFICACION, ESPECIFICACIONFACTURACION,
            SECUENCIA2, VIGENCIA, INBOXASIGNADO, TIPOCUENTA, TRUNC(SYSDATE)-1, INBOXORIGEN;

INSERT INTO FA_INCIDENTEDIARIO_PAGEQ_RES
    (   ENTRANTES, CICLO, ESTADOINCIDENTE, TEMAINCIDENTE, ESPECIFICACION,
        ESPECIFICACIONFACTURACION, SECUENCIA, VIGENCIA, INBOXASIGNADO, TIPOCUENTA,
        FECHA,FECHAMASANTIGUA,INBOXDESTINO)
SELECT  count(distinct COD_INCIDENTE) cantidad, CICLO, ESTADOINCIDENTE,
        TEMAINCIDENTE, ESPECIFICACION, ESPECIFICACIONFACTURACION, SECUENCIA2,
        VIGENCIA, INBOXASIGNADO, TIPOCUENTA,TRUNC(SYSDATE)-1 FECHA,min(to_date(substr(fecharecibido,1,8),'ddmmyyyy')) FECHAMINIMA,INBOXDESTINO
FROM FA_INCIDENTEDIARIO_PAGEQ
WHERE INBOXDESTINO in ('FACT.EQUIPOS','FACT.PAGOS') and trunc(to_date(substr(fecharecibido,1,8),'ddmmyyyy'))=trunc(sysdate)-1 AND to_char(fechaproceso,'yyyymmdd') = to_char(sysdate,'yyyymmdd')
GROUP BY    CICLO, ESTADOINCIDENTE, TEMAINCIDENTE, ESPECIFICACION, ESPECIFICACIONFACTURACION,
            SECUENCIA2, VIGENCIA, INBOXASIGNADO, TIPOCUENTA, TRUNC(SYSDATE)-1, INBOXDESTINO;
commit;
end PROCESARINCIDENTESDIARIOSPEQ;

PROCEDURE PROCESARREPORTEAFILIADOSCONCIL IS
/*------------------------------------------------------------------------------
Proposito      : Genera Base preliminar para reportes de conciliación.
Pre-requisitos : Foto de Equipos
--------------------------------------------------------------------------------*/
BEGIN
      UPDATE ods_gpf.fa_base_hp_v3 SET tipodocumento=obtener_tipodoc_2(numerodocumento)
      WHERE periodo=TO_CHAR(SYSDATE,'yyyymm');
    COMMIT;

    DELETE FROM ods_gpf.fa_mdl_afiliados_mes_det_b01
      WHERE periodo=TO_CHAR(SYSDATE,'yyyymm');
    COMMIT;

    --------------------------------------------------------------
    --INSERCION DE DETALLE DE BASE AFILIADOS BASE 01
    --------------------------------------------------------------
    INSERT INTO ods_gpf.fa_mdl_afiliados_mes_det_b01(codigocompania,periodo,base,tiponotificacion,tipopersona, tipodocumento,activ,desactiv,ciclo)
    SELECT codigocompania, periodo,DECODE(NVL(tiponotificacion,'-'),'Recibo Electrónico',DECODE(NVL(tipodocumento,'-'),'DNI','01','02'),'02') base,
           TIPONOTIFICACION, TIPOPERSONA, TIPODOCUMENTO, ACTIV, DESACTIV, CICLO
        FROM (SELECT A.PERIODO, A.TIPONOTIFICACION, B.TIPODOCUMENTO, B.TIPOPERSONA, A.CODIGOCOMPANIA, DECODE(C.POTACT,0,'NO','SI') ACTIV,
                     DECODE(c.PotDesact,0,'NO','SI') desactiv, b.ciclo
                  FROM (SELECT *
                            FROM fa_base_hp_v3
                           WHERE codigocompania<>'AZCARATE'
                             AND PERIODO=TO_CHAR(SYSDATE,'yyyymm')) A, P_COMPANIA B,
                       (SELECT periodo,codigocompania,
                                SUM(DECODE(POTENCIAL,'SI',DECODE(ESTADOCONTRATO,'Activo',1,'Suspendido',1,0),0)) POTACT,
                               SUM(DECODE(potencial,'SI',DECODE(estadocontrato,'Desactivado',1,0),0)) PotDesact
                            FROM (SELECT  a.*,b.product,CASE WHEN UPPER(b.product) LIKE '%POST%' THEN 'SI' ELSE 'NO' END potencial
                                      FROM fotoequipos a,pm_planes b
                          WHERE a.codigoplantarifariobscs=b.c_plan(+)
                             AND a.periodo=TO_CHAR(SYSDATE,'yyyymm'))
                GROUP BY PERIODO,CODIGOCOMPANIA)C
        WHERE NVL(A.CODIGOCOMPANIA,0)=NVL(TO_CHAR(C.CODIGOCOMPANIA(+)),'0')
           AND NVL(a.codigocompania,'0')=NVL(to_char(b.codigocompania(+)),'0')
           AND a.periodo=c.periodo)
      WHERE DECODE(NVL(tiponotificacion,'-'),'Recibo Electrónico',DECODE(NVL(tipodocumento,'-'),'DNI','01','02'),'02')='01'
      GROUP BY codigocompania, periodo,DECODE(NVL(tiponotificacion,'-'),'Recibo Electrónico',DECODE(NVL(tipodocumento,'-'),'DNI','01','02'),'02'),
               tiponotificacion, tipopersona, tipodocumento, activ, desactiv, ciclo;
    COMMIT;

    --------------------------------------------------------------
    --INSERCION DE DETALLE DE BASE AFILIADOS BASE 02
    --------------------------------------------------------------
    DELETE FROM fa_mdl_afiliados_mes_det_b02 WHERE periodo=TO_CHAR(SYSDATE,'yyyymm');
    COMMIT;

    INSERT INTO fa_mdl_afiliados_mes_det_b02(codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo)
    SELECT codigocompania,periodo,DECODE(NVL(tiponotificacion,'-'),'Recibo Electrónico',DECODE(NVL(tipodocumento,'-'),'DNI','01','02'),'02') base,
           tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo
        FROM (SELECT a.periodo,a.tiponotificacion,b.tipodocumento,b.tipopersona,a.codigocompania,DECODE(c.PotAct,0,'NO','SI') activ,
                     DECODE(C.POTDESACT,0,'NO','SI') DESACTIV,B.CICLO
                  FROM (SELECT  *
                            FROM fa_base_hp_v3
                           WHERE codigocompania<>'AZCARATE'
                             AND PERIODO=TO_CHAR(SYSDATE,'yyyymm')) a,p_compania b,
                       (SELECT  periodo,codigocompania,
                                SUM(DECODE(potencial,'SI',DECODE(estadocontrato,'Activo',1,'Suspendido',1,0),0)) PotAct,
                                SUM(DECODE(potencial,'SI',DECODE(estadocontrato,'Desactivado',1,0),0)) PotDesact
                            FROM (SELECT  a.*,b.product,CASE WHEN UPPER(b.product) LIKE '%POST%' THEN 'SI' ELSE 'NO' END potencial
                                      FROM fotoequipos a,pm_planes b
                    WHERE a.codigoplantarifariobscs=b.c_plan
                       AND a.periodo=TO_CHAR(SYSDATE,'yyyymm'))
                GROUP BY PERIODO,CODIGOCOMPANIA)C
        WHERE NVL(a.codigocompania,'0')=NVL(to_char(b.codigocompania(+)),'0')
           AND NVL(a.codigocompania,0)=NVL(to_char(c.codigocompania(+)),0)
           AND a.periodo=c.periodo)
      WHERE DECODE(NVL(tiponotificacion,'-'),'Recibo Electrónico',DECODE(NVL(tipodocumento,'-'),'DNI','01','02'),'02')='02'
      GROUP BY codigocompania,periodo,DECODE(NVL(tiponotificacion,'-'),'Recibo Electrónico',DECODE(NVL(tipodocumento,'-'),'DNI','01','02'),'02'),
           tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo;
    COMMIT;

    ----------------------------------------
    --INSERCION DE DETALLE DE NUEVOS
    ----------------------------------------
    DELETE FROM fa_mdl_afiliados_mes_det_nvo WHERE periodo=TO_CHAR(SYSDATE,'yyyymm');
    COMMIT;
    DELETE FROM fa_mdl_afiliados_mes_det_rem WHERE periodo=TO_CHAR(SYSDATE,'yyyymm');
    COMMIT;
    DELETE FROM fa_mdl_afiliados_mes_det_deac WHERE periodo=TO_CHAR(SYSDATE,'yyyymm');
    COMMIT;

    -----------------------------------------------------------------------------------------------------------------------------------------------
    -------------------------------------------------------------------BASE 01---------------------------------------------------------------------
    -----------------------------------------------------------------------------------------------------------------------------------------------
    -------------------------------------------------------------DATA VERDE [ACTIV]----------------------------------------------------------------
    INSERT INTO fa_mdl_afiliados_mes_det_nvo (codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,grafica,ciclo)
    SELECT a.codigocompania,TO_CHAR(SYSDATE,'yyyymm'),b.base,b.tiponotificacion,b.tipopersona,b.tipodocumento,b.activ,b.desactiv,'Superior',b.ciclo
        FROM (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='SI'
           MINUS
              SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='SI') a,
              (SELECT codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo
                   FROM fa_mdl_afiliados_mes_det_b01
                 WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                    AND activ='SI') b
      WHERE a.codigocompania=b.codigocompania(+);
      COMMIT;

    -------------------------------------------------------------DATA ROJO [ACTIV]----------------------------------------------------------------
    INSERT INTO fa_mdl_afiliados_mes_det_deac (codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,grafica,ciclo)
    SELECT a.codigocompania,TO_CHAR(SYSDATE,'yyyymm'),b.base,b.tiponotificacion,b.tipopersona,b.tipodocumento,b.activ,b.desactiv,'Superior',b.ciclo
        FROM (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='SI'
           MINUS
              SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='SI') a,
             (SELECT codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='SI') b
      WHERE a.codigocompania=b.codigocompania(+);
    COMMIT;

    -------------------------------------------------------------DATA CELESTE [ACTIV]----------------------------------------------------------------
    INSERT INTO fa_mdl_afiliados_mes_det_rem (codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,grafica,ciclo)
    SELECT a.codigocompania,TO_CHAR(SYSDATE,'yyyymm'),b.base,b.tiponotificacion,b.tipopersona,b.tipodocumento,b.activ,b.desactiv,'Superior',b.ciclo
        FROM (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='SI'
           INTERSECT
              SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='SI') a,
             (SELECT codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='SI') b
      WHERE a.codigocompania=b.codigocompania(+);
    COMMIT;

    -------------------------------------------------------------DATA VERDE [DESACTIV]----------------------------------------------------------------
    INSERT INTO fa_mdl_afiliados_mes_det_nvo (codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,grafica,ciclo)
    SELECT a.codigocompania,TO_CHAR(SYSDATE,'yyyymm'),b.base,b.tiponotificacion,b.tipopersona,b.tipodocumento,b.activ,b.desactiv,'Inferior',b.ciclo
        FROM (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='NO'
           MINUS
              SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='NO') a,
             (SELECT codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='NO') b
      WHERE a.codigocompania=b.codigocompania(+);
    COMMIT;

    -------------------------------------------------------------DATA ROJA [DESACTIV]----------------------------------------------------------------
    INSERT INTO fa_mdl_afiliados_mes_det_deac (codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,grafica,ciclo)
    SELECT a.codigocompania,TO_CHAR(SYSDATE,'yyyymm'),b.base,b.tiponotificacion,b.tipopersona,b.tipodocumento,b.activ,b.desactiv,'Inferior',b.ciclo
        FROM (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='NO'
           MINUS
              SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='NO') a,
             (SELECT codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='NO') b
      WHERE a.codigocompania=b.codigocompania(+);
    COMMIT;

    -------------------------------------------------------------DATA CELESTE [DESACTIV]----------------------------------------------------------------
    INSERT INTO fa_mdl_afiliados_mes_det_rem (codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,grafica,ciclo)
    SELECT a.codigocompania,TO_CHAR(SYSDATE,'yyyymm'),b.base,b.tiponotificacion,b.tipopersona,b.tipodocumento,b.activ,b.desactiv,'Inferior',b.ciclo
        FROM (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='NO'
           INTERSECT
              SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='NO') a,
             (SELECT codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo
                  FROM fa_mdl_afiliados_mes_det_b01
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='NO') b
      WHERE a.codigocompania=b.codigocompania;
    COMMIT;
    -----------------------------------------------------------------------------------------------------------------------------------------------
    -------------------------------------------------------------------BASE 02---------------------------------------------------------------------
    -----------------------------------------------------------------------------------------------------------------------------------------------
    -------------------------------------------------------------DATA VERDE [ACTIV]----------------------------------------------------------------
    INSERT INTO fa_mdl_afiliados_mes_det_nvo (codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,grafica,ciclo)
    SELECT a.codigocompania,TO_CHAR(SYSDATE,'yyyymm'),b.base,b.tiponotificacion,b.tipopersona,b.tipodocumento,b.activ,b.desactiv,'Superior',b.ciclo
        FROM (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='SI'
           MINUS
              SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='SI') a,
             (SELECT codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='SI') b
      WHERE a.codigocompania=b.codigocompania(+);
    COMMIT;

    -------------------------------------------------------------DATA ROJO [ACTIV]----------------------------------------------------------------
    INSERT INTO fa_mdl_afiliados_mes_det_deac (codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,grafica,ciclo)
    SELECT a.codigocompania,TO_CHAR(SYSDATE,'yyyymm'),b.base,b.tiponotificacion,b.tipopersona,b.tipodocumento,b.activ,b.desactiv,'Superior',b.ciclo
        FROM (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='SI'
           MINUS
              SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='SI') a,
             (SELECT codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='SI') b
      WHERE a.codigocompania=b.codigocompania(+);
    COMMIT;

     -------------------------------------------------------------DATA CELESTE [ACTIV]----------------------------------------------------------------
    INSERT INTO fa_mdl_afiliados_mes_det_rem (codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,grafica,ciclo)
    SELECT a.codigocompania,TO_CHAR(SYSDATE,'yyyymm'),b.base,b.tiponotificacion,b.tipopersona,b.tipodocumento,b.activ,b.desactiv,'Superior',b.ciclo
        FROM (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                AND activ='SI'
           INTERSECT
              SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='SI') a,
             (SELECT codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='SI') b
      WHERE a.codigocompania=b.codigocompania(+);
    COMMIT;
    -------------------------------------------------------------DATA VERDE [DESACTIV]----------------------------------------------------------------
    INSERT INTO fa_mdl_afiliados_mes_det_nvo (codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,grafica,ciclo)
    SELECT a.codigocompania,TO_CHAR(SYSDATE,'yyyymm'),b.base,b.tiponotificacion,b.tipopersona,b.tipodocumento,b.activ,b.desactiv,'Inferior',b.ciclo
        FROM (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='NO'
           MINUS
              SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='NO') a,
             (SELECT codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='NO') b
      WHERE a.codigocompania=b.codigocompania(+);
    COMMIT;

     -------------------------------------------------------------DATA ROJA [DESACTIV]----------------------------------------------------------------
    INSERT INTO fa_mdl_afiliados_mes_det_deac (codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,grafica,ciclo)
    SELECT a.codigocompania,TO_CHAR(SYSDATE,'yyyymm'),b.base,b.tiponotificacion,b.tipopersona,b.tipodocumento,b.activ,b.desactiv,'Inferior',b.ciclo
        FROM (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='NO'
           MINUS
              SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                    AND activ='NO') a,
             (SELECT codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='NO') b
      WHERE a.codigocompania=b.codigocompania(+);
    COMMIT;


    -------------------------------------------------------------DATA CELESTE [DESACTIV]----------------------------------------------------------------
    INSERT INTO fa_mdl_afiliados_mes_det_rem (codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,grafica,ciclo)
    SELECT a.codigocompania,TO_CHAR(SYSDATE,'yyyymm'),b.base,b.tiponotificacion,b.tipopersona,b.tipodocumento,b.activ,b.desactiv,'Inferior',b.ciclo
        FROM (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b02
               WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                  AND activ='NO'
           INTERSECT
              SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(TRUNC(add_months(SYSDATE,-1),'MM') ,'yyyymm')
                   AND activ='NO') a,
             (SELECT codigocompania,periodo,base,tiponotificacion,tipopersona,tipodocumento,activ,desactiv,ciclo
                  FROM fa_mdl_afiliados_mes_det_b02
                WHERE periodo=TO_CHAR(SYSDATE,'yyyymm')
                   AND activ='NO') b
       WHERE a.codigocompania=b.codigocompania(+);
    COMMIT;
END PROCESARREPORTEAFILIADOSCONCIL;

PROCEDURE IMPRESION_NEGATIVOS_OBTENER (pcursor1  OUT t_cursor, pcursor2  OUT t_cursor, pcursor3  OUT t_cursor) IS
BEGIN

OPEN pcursor1 FOR
SELECT custcode
     , ohrefnum
     , company
     , address
     , distrito
     , provincia
     , dpto
     , referencia
     , TO_NUMBER(NVL(total_factura,'0'),'999999999.9999')
     , TO_NUMBER(NVL(total_estado_cta,'0'), '999999999.9999')
     , estado_cobranza
     , TO_NUMBER(NVL(cant_equip_activos,'0'))
     , TO_NUMBER(NVL(cant_equip_suspendidos,'0'))
     , TO_NUMBER(NVL(cant_equip_desactivados,'0'))
     , tipo_compania
  FROM FA_BASENEGATIVOS a
 WHERE (TO_NUMBER(total_factura,'999999999.9999') >= 5
   AND TO_NUMBER(total_estado_cta,'999999999.9999') >= 5)
   AND LENGTH(TRIM(NVL(company,''))) > 1
   AND LENGTH(TRIM(NVL(address,''))) > 1
   AND LENGTH(TRIM(NVL(distrito,''))) > 1
   AND tipo_compania <> 'Empleado'
   AND (cant_equip_activos) > 0
   AND tipo_compania IS NOT NULL
   AND REGEXP_COUNT(TRIM(REPLACE(NVL(address,''),'.','')), ' ', 1, 'i') > 0
   AND ( REGEXP_COUNT(NVL(address,''), '1', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '2', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '3', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '4', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '5', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '6', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '7', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '8', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '9', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '0', 1, 'i') >= 3
            OR (UPPER(NVL(address,'')) LIKE '%MZ%' AND UPPER(NVL(address,'')) LIKE '%LT%'));

OPEN pcursor2 FOR
SELECT custcode
     , ohrefnum
     , company
     , address
     , distrito
     , provincia
     , dpto
     , referencia
     , TO_NUMBER(NVL(total_factura,'0'),'999999999.9999')
     , TO_NUMBER(NVL(total_estado_cta,'0'), '999999999.9999')
     , estado_cobranza
     , TO_NUMBER(NVL(cant_equip_activos,'0'))
     , TO_NUMBER(NVL(cant_equip_suspendidos,'0'))
     , TO_NUMBER(NVL(cant_equip_desactivados,'0'))
     , tipo_compania
  FROM FA_BASENEGATIVOS a
 WHERE TO_NUMBER(total_factura,'999999999.9999') < 5;

OPEN pcursor3 FOR
SELECT custcode
     , ohrefnum
     , company
     , address
     , distrito
     , provincia
     , dpto
     , referencia
     , TO_NUMBER(NVL(total_factura,'0'),'999999999.9999')
     , TO_NUMBER(NVL(total_estado_cta,'0'), '999999999.9999')
     , estado_cobranza
     , TO_NUMBER(NVL(cant_equip_activos,'0'))
     , TO_NUMBER(NVL(cant_equip_suspendidos,'0'))
     , TO_NUMBER(NVL(cant_equip_desactivados,'0'))
     , tipo_compania
  FROM FA_BASENEGATIVOS a
 WHERE (TO_NUMBER(total_factura,'999999999.9999') >= 5
   AND TO_NUMBER(total_estado_cta,'999999999.9999') >= 5 )
MINUS
SELECT custcode
     , ohrefnum
     , company
     , address
     , distrito
     , provincia
     , dpto
     , referencia
     , TO_NUMBER(NVL(total_factura,'0'),'999999999.9999')
     , TO_NUMBER(NVL(total_estado_cta,'0'), '999999999.9999')
     , estado_cobranza
     , TO_NUMBER(NVL(cant_equip_activos,'0'))
     , TO_NUMBER(NVL(cant_equip_suspendidos,'0'))
     , TO_NUMBER(NVL(cant_equip_desactivados,'0'))
     , tipo_compania
  FROM FA_BASENEGATIVOS a
 WHERE (TO_NUMBER(total_factura,'999999999.9999') >= 5
   AND TO_NUMBER(total_estado_cta,'999999999.9999') >= 5)
   AND LENGTH(TRIM(NVL(company,''))) > 1
   AND LENGTH(TRIM(NVL(address,''))) > 1
   AND LENGTH(TRIM(NVL(distrito,''))) > 1
   AND tipo_compania <> 'Empleado'
   AND (cant_equip_activos + cant_equip_suspendidos) > 0
   AND tipo_compania IS NOT NULL
   AND REGEXP_COUNT(TRIM(REPLACE(NVL(address,''),'.','')), ' ', 1, 'i') > 0
   AND ( REGEXP_COUNT(NVL(address,''), '1', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '2', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '3', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '4', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '5', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '6', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '7', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '8', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '9', 1, 'i')
            +REGEXP_COUNT(NVL(address,''), '0', 1, 'i') >= 3
            OR (UPPER(NVL(address,'')) LIKE '%MZ%' AND UPPER(NVL(address,'')) LIKE '%LT%'));


END IMPRESION_NEGATIVOS_OBTENER;

PROCEDURE PROCESARBASENOAFILMAIL_DIARIO IS
BEGIN

DELETE FROM FA_MOTIVADOSMAIL_HISTORICO WHERE TRUNC(FECHA)=TRUNC(SYSDATE-1);
DELETE FROM FA_DESAFILIADOSMAIL_HISTORICO WHERE TRUNC(FECHA)=TRUNC(SYSDATE-1);
DELETE FROM FA_NOAFILIADOSMAIL_DIARIO;
commit;

 INSERT INTO fa_noafiliadosmail_diario
    (
    codigocompania, numerocuentaresponsable, tipodocumento, ruccompania, razonsocial,
    cuentacompania, provincia, departamento, mail, ciclo, canalventa, fechaingreso,
    ESTADO, BASE, TIPOPERSONA, ESTADO2, DISTRITO, RIESGOFINANCIERO, INDICECREDITICIO,
    estadodecobranza, consultor, dealer, nombrecontacto,fechaproceso
    )
WITH HPENCARGADORECIBOELECTRONICO AS
        (SELECT *
        FROM fa_base_hp
        WHERE (cargo = 'ENCARGADO-RECIBO ELECTRONICO' OR tiponotificacion='Recibo Electrónico')
        ),
        PERSONAS AS
        (SELECT * FROM p_compania WHERE tipodocumento <> 'RUC'
        ),
        AFILIADOSHASTAMESPASADO AS
        (SELECT codigocompaniahistorico
        FROM fa_afiliadosmail_historico
        WHERE fecha < TRUNC(SYSDATE-1,'MM')
        OR fecha   IS NULL
        GROUP BY codigocompaniahistorico
        ),
        DATOSPOSTPAGOMASNUEVO as
        (SELECT DECODE(canalventacontrato, NULL, canalventa, canalventacontrato) canal, codigocompania,
        NVL(consultorcontrato, identificadorconsultor) consultor, NVL(dealercontrato, identificadordealer) dealer
        FROM
            (SELECT a.canalventa,a.canalventacontrato,a.consultorcontrato,
            a.identificadorconsultor,a.dealercontrato,a.identificadordealer,
            a.codigocompania,row_number() over ( PARTITION BY a.codigocompania ORDER BY
            a.codigocompania ASC, a.fechaactivacioncontrato DESC) ar
            FROM fotoequipos a
            LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
            WHERE b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
            AND a.estadocontrato IN ('Activo','Suspendido')
            ORDER BY codigocompania
            )
        WHERE ar=1
        )
    SELECT b.codigocompania, b.cuentacompania, b.tipodocumento, b.ruccompania,
    b.razonsocial, b.cuentacompania, b.provincia, b.departamento, a.mail,
    b.ciclo, c1.canal, b.fechaingreso, DECODE (c.base, NULL, 'NUEVO', 'ANTIGUO')
    estado, '1', b.tipopersona, DECODE (D1.codigocompaniahistorico , NULL,
    'NUEVO', 'ANTIGUO'), B.DISTRITO, B.RIESGOFINANCIERO, B.INDICE,
    b.estadocobranza,c1.consultor, c1.dealer,a.nombrecontacto,to_char(sysdate,'dd/mm/yyyy')
    FROM hpencargadoreciboelectronico a, personas b, fa_afiliadosmail_historico c, afiliadoshastamespasado D1,datospostpagomasnuevo c1
    WHERE a.codigocompanianum = b.codigocompania(+)
    AND a.codigocompanianum   = c.codigocompaniahistorico(+)
    AND a.codigocompanianum   = D1.codigocompaniahistorico(+)
    and b.codigocompania      =c1.codigocompania(+)
    AND( EXISTS
        (SELECT 1 FROM fa_motivados_semanal v WHERE UPPER (v.mail) = a.mail and a.codigocompania=v.cuenta)
    or exists
        (SELECT 1 FROM fa_basedesafiliados_sd v WHERE UPPER (v.mail) = a.mail and a.codigocompania=v.cuenta))
    GROUP BY b.codigocompania, b.cuentacompania, b.tipodocumento, b.ruccompania, b.razonsocial,
    b.cuentacompania, b.provincia, b.departamento, a.mail, b.ciclo, c1.canal, b.fechaingreso,
    DECODE (C.BASE, NULL, 'NUEVO', 'ANTIGUO') ,B.TIPOPERSONA, DECODE (D1.CODIGOCOMPANIAHISTORICO, NULL, 'NUEVO', 'ANTIGUO'),
    B.DISTRITO, B.RIESGOFINANCIERO, B.INDICE, B.ESTADOCOBRANZA, C1.CONSULTOR, C1.DEALER, A.NOMBRECONTACTO,to_char(sysdate,'dd/mm/yyyy');


 INSERT INTO fa_noafiliadosmail_diario
    (
      codigocompania, numerocuentaresponsable, tipodocumento, ruccompania, razonsocial,
      cuentacompania, provincia, departamento, mail, ciclo, canalventa, fechaingreso,
      CARGO, ESTADO, BASE, TIPOPERSONA, ESTADO2, DISTRITO, RIESGOFINANCIERO, INDICECREDITICIO,
      estadoDEcobranza, consultor ,dealer,nombrecontacto,fechaproceso
    )
    WITH afiliadoshastamespasado AS
        (SELECT CODIGOCOMPANIAHISTORICO
        FROM fa_afiliadosmail_historico
        WHERE fecha < TRUNC(sysdate-1,'MM') OR fecha IS NULL
        GROUP BY codigocompaniahistorico
        )
    SELECT b.codigocompania, b.cuentacompania, b.tipodocumento, b.ruccompania,
    b.razonsocial, b.cuentacompania, b.provincia, b.departamento, a.mail,
    b.ciclo, b.canalventa, b.fechaingreso, a.cargo, DECODE (c.base, NULL, 'NUEVO', 'ANTIGUO') estado,
    '2', b.tipopersona, DECODE(D1.codigocompaniahistorico, NULL, 'NUEVO', 'ANTIGUO'),
    B.DISTRITO, B.RIESGOFINANCIERO, B.INDICE, B.ESTADOCOBRANZA,B.CONSULTOR,B.DEALER,
    a.nombrecontacto,to_char(sysdate,'dd/mm/yyyy')
    FROM fa_base_hp a, p_compania b, fa_afiliadosmail_historico c, afiliadoshastamespasado D1
    WHERE a.codigocompaniaNUM = b.codigocompania(+)
    AND a.codigocompaniaNUM   = c.codigocompaniahistorico(+)
    and a.codigocompanianum   = d1.codigocompaniahistorico(+)
    AND ( EXISTS
        (select 1 from fa_motivados_semanal v where v.mail = a.mail)
    or  EXISTS
        (SELECT 1 FROM fa_basedesafiliados_sd v WHERE UPPER (v.mail) = a.mail))
    AND (
        (
        (a.cargo = 'ENCARGADO-RECIBO ELECTRONICO' OR a.cargo = 'ENCARGADO-RECIBO ELECT. Y FISICO' OR a.tiponotificacion = 'Recibo Electrónico' OR a.tiponotificacion = 'Recibo Electrónico y Físico')
        AND b.tipodocumento   = 'RUC')
        OR (a.cargo          = 'ENCARGADO-RECIBO ELECT. Y FISICO' OR a.tiponotificacion = 'Recibo Electrónico y Físico')
        )
    GROUP BY b.codigocompania, b.cuentacompania, b.tipodocumento, b.ruccompania, b.razonsocial,
    b.cuentacompania, b.provincia, b.departamento, a.mail, b.ciclo, b.canalventa, b.fechaingreso,
    A.CARGO, DECODE (C.BASE, NULL, 'NUEVO', 'ANTIGUO'), B.TIPOPERSONA, DECODE ( D1.CODIGOCOMPANIAHISTORICO, NULL, 'NUEVO', 'ANTIGUO'),
    b.distrito, b.riesgofinanciero, b.indice, b.estadocobranza,b.consultor,b.dealer,a.nombrecontacto;

    MERGE INTO
   (
   SELECT C.COMPANHIAACTIVA AS MOTIVOE, 'Activa' AS MOTIVO,C.CODIGOCOMPANIA
    FROM fa_noafiliadosmail_diario c
   )A
   USING
   (
   SELECT a.codigocompania FROM fotoequipos a, pm_planes_promocion b
         WHERE a.codigoplantarifariobscs = b.c_plan
         AND a.estadocontrato IN ('Activo','Suspendido')
         GROUP BY a.codigocompania
   )B
   ON
   (
   A.codigocompania = B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

    COMMIT;

    MERGE INTO
   (
   SELECT C4.FECHAnoAFILIACION AS FECHA,C4.CODIGOCOMPANIA
    FROM fa_noafiliadosmail_diario c4 where c4.fechanoafiliacion IS  NULL
   )A
   USING
   (
   SELECT fechaE,codigocompania FROM (
   SELECT
    c.fechaingreso AS fechaE,c.codigocompania,row_number () over (partition by c.codigocompania order by c.fechaingreso desc) rn
   FROM fa_base_hp c where c.fechaingreso IS NOT NULL
   )
   WHERE RN=1
   )B
   ON
   (
    B.codigocompania = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET fecha = fechaE;
---------------------
 MERGE INTO
   (
   SELECT  C4.GRUPO AS MOTIVO, C4.SUBGRUPO AS RAZON,  C4.FECHANOAFILIACION AS FECHA,C4.CODIGOCOMPANIA
    FROM fa_noafiliadosmail_diario c4 where c4.fechanoafiliacion IS NOT NULL
   )A
   USING
   (
   SELECT
   c.grupo AS motivoE, c.subgrupo AS razonE, c.fechaafiliacion AS fechaE,c.codigocompaniahistorico
   FROM fa_afiliadosmail_historico c where
         c.grupo IS NOT NULL
        AND c.subgrupo IS NOT NULL
        AND c.fechaafiliacion IS NOT NULL
   )B
   ON
   (
   B.codigocompaniahistorico = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivo = motivoE,razon = razonE, fecha = fechaE;

   --------------------------------------------------------------------------
   /*
   T12. ACTUALIZAN BASE MAIL CON INFORMACION DE FA_AFILIADOSMAIL_HISTORICO
   Se actualizan la informacion de fa_afiliadosmail_diario tomando los campos
   grupo, fechaafiliacion
   */
   --------------------------------------------------------------------------
  --Revision: Cuantificar que cantidad afiliados cruzan con no afiliados
   MERGE INTO
   (
   SELECT  C4.GRUPO AS MOTIVO, C4.SUBGRUPO AS RAZON,
   c4.fechanoafiliacion AS fecha,c4.consultor as consultor,
   C4.DEALER AS DEALER,C4.CODIGOCOMPANIA
   FROM fa_noafiliadosmail_diario c4 where (c4.consultor= 'Sin Consultor' OR c4.consultor IS NULL) AND c4.dealer IS NULL
   )A
   USING
   (
   SELECT
   c.grupo AS motivoE,c.subgrupo AS razonE, c.fechaafiliacion AS fechaE, c.consultor as consultorE, c.dealer as dealerE,c.codigocompaniahistorico
   FROM fa_afiliadosmail_historico c where (c.consultor  <>  'Sin Consultor' OR c.consultor IS NOT NULL)
        AND c.dealer IS NOT NULL
        AND c.grupo IS NOT NULL
        AND c.subgrupo IS NOT NULL
        AND c.fechaafiliacion IS NOT NULL
   )B
   ON
   (
   B.codigocompaniahistorico = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET consultor=consultorE,dealer=dealerE;

   --------------------------------------------------------------------------
   /*
   T13. ACTUALIZAN BASE MAIL CON INFORMACION DE FA_RESUMENBASEMAIL_INCIDENTE
   Se actualizan la informacion de fa_afiliadosmail_diario tomando los campos
   grupo, fechaingresoincidente
   */
   --------------------------------------------------------------------------
   MERGE INTO
   (
   SELECT  C4.GRUPO AS MOTIVO, C4.SUBGRUPO AS RAZON,  C4.FECHANOAFILIACION AS FECHA, C4.CODIGOCOMPANIA
   FROM fa_noafiliadosmail_diario c4 where  c4.grupo IS NULL
        AND c4.subgrupo IS NULL
   )A
   USING
   (
   SELECT
   c.grupo AS motivoE, c.subgrupo AS razonE, c.fechaingresoincidente AS fechaE,c.codigocompania
   FROM  fa_resumenbasemail_incidente c
   )B
   ON
   (
   B.codigocompania  = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivo = motivoE,razon = razonE, fecha = fechaE;


   --------------------------------------------------------------------------
   /*
   T14. ACTUALIZAN BASE MAIL LAS FECHAS DE AFILIACION VACIAS
   Se actualizan la informacion de fa_afiliadosmail_diario identificando las fechas
   de afiliacion y grupos vacios
   */
   --------------------------------------------------------------------------
   UPDATE fa_noafiliadosmail_diario
   SET fechanoafiliacion = fechaingreso, grupo = 'Como Cliente'
   WHERE grupo IS NULL;

   --------------------------------------------------------------------------
   /*
   T15. DEPURACION DE DUPLICADOS EN BASE 1 PRESENTES EN BASE 2
   Se depura la informacion duplicada dentro de la base 1 que ya han sido identificados
   en la base 2
   */
   --------------------------------------------------------------------------
   DELETE FROM fa_noafiliadosmail_diario a
   WHERE a.base = '2'
   AND EXISTS
        (SELECT 1
        FROM FA_noAFILIADOSMAIL_DIARIO B
        WHERE b.codigocompania = a.codigocompania
        AND b.base = '1'
        );
   --------------------------------------------------------------------------
   /*
   T16. ACTUALIZACION FALTANTE DESDE LA FOTOEQUIPOS
   Se actualizan el codigocompania, ciclofacturacion y cantidad de equipos
   extrayendolo de la foto de equipos
   */
   --------------------------------------------------------------------------
   MERGE INTO
   (
   SELECT C.CANTIDADEQUIPOS AS MOTIVOE,C.CODIGOCOMPANIA
    FROM fa_noafiliadosmail_diario c
   )A
   USING
   (
   SELECT a.codigocompania, COUNT (*) motivo
         FROM fotoequipos a, pm_planes b
         WHERE a.codigoplantarifariobscs = b.c_plan(+)
         AND a.estadocontrato IN ('Activo', 'Suspendido')
         AND b.product NOT IN ('iDen Pre','IN Pre','Non PTT Prepago')
         GROUP BY a.codigocompania
   )B
   ON
   (
   A.codigocompania = B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

   MERGE INTO
   (
   SELECT C.CICLO AS MOTIVOE,C.CODIGOCOMPANIA
   FROM fa_noafiliadosmail_diario c where c.ciclo IS NULL
   )A
   USING
   (
   SELECT
    c4.ciclofacturacioncontrato AS motivo,c4.codigocompania
   FROM fotoequipos c4
   group by c4.ciclofacturacioncontrato,c4.codigocompania
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE=motivo;

     MERGE INTO
   (
   SELECT C.CANTIDAD3G AS CANTIDAD3GE,C.CODIGOCOMPANIA
    FROM fa_noafiliadosmail_diario c
   )A
   USING
   (
   SELECT x.codigocompania, COUNT (1) cantidad3G
    FROM fotoequipos x, pm_planes z
    WHERE x.codigoplantarifariobscs = z.c_plan(+)
        AND ( z.grupo LIKE '%3G%' OR z.grupo = 'Internet Nextel')
        AND z.product NOT IN ('iDen Pre','IN Pre','Non PTT Prepago')
        AND x.estadocontrato IN ('Activo', 'Suspendido')
        GROUP BY x.codigocompania
   )B
   ON
   (
   A.codigocompania = B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET cantidad3GE = cantidad3G;

    MERGE INTO
   (
     SELECT  C4.TIPOCOMPANIA AS MOTIVO,C4.CODIGOCOMPANIA
        FROM fa_noafiliadosmail_diario c4
   )A
   USING
   (
   SELECT
   c.tipocompania AS motivoE,c.codigocompania
   FROM p_compania c
   )B
   ON
   (
   B.codigocompania  = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivo = motivoE;
   --------------------------------------------------------------------------
   /*
   T17. ACTUALIZACION DE RESULTADOS DE DOMINIOS MAS COMUNES
   Se verifican mediante una funcion de correlacion la conicidencia de dominios de correo
   */
   --------------------------------------------------------------------------
  --Revision: no deberia actualizarse este campo en la tabla no afiliados
    UPDATE fa_noafiliadosmail_diario a
    SET a.resultado1=func_corr(SUBSTR(a.mail,instr(a.mail,'@')+1),'GMAIL.COM');
    UPDATE fa_noafiliadosmail_diario a
    SET a.resultado2=func_corr(SUBSTR(a.mail,instr(a.mail,'@')+1),'HOTMAIL.COM');
   --Revision: se elimino la jerarquia de consultores, se empezara a usar la jerarquia de TNP

    UPDATE fa_noafiliadosmail_diario
    SET clasificacion= 'Tiendas Propias'
    WHERE grupo= 'CAP';
    COMMIT;

    UPDATE fa_noafiliadosmail_diario
    SET clasificacion = 'CAL Tercerizado'
    WHERE grupo = 'CAL Tercerizado';
    COMMIT;

    UPDATE fa_noafiliadosmail_diario
    SET clasificacion = 'CAL Inhouse'
    WHERE grupo = 'CAL Inhouse';
    COMMIT;

    UPDATE fa_noafiliadosmail_diario
    SET clasificacion = 'Web'
    WHERE GRUPO = 'Web';
    COMMIT;

    UPDATE fa_noafiliadosmail_diario
    SET clasificacion= 'NO CLASIFICADO'
    WHERE clasificacion IS NULL ;
    COMMIT;

    UPDATE fa_noafiliadosmail_diario
    SET territorio= 'NO CLASIFICADO'
    WHERE territorio IS NULL ;
    COMMIT;
   --------------------------------------------------------------------------
   /*
   T23. DEPURACION DE FA_PROSPECTOSMAIL_DIARIO DE BASE MAIL
   se identifican los fa_prospectosmail_diario dentro de la fa_afiliadosmail_diario
   para eliminarlos para evitar redundancia
   */
   --------------------------------------------------------------------------
    DELETE from fa_noafiliadosmail_diario Y
    WHERE EXISTS
        (SELECT 1 FROM
                (SELECT a.ruccompania
                FROM p_compania a, fotoequipos b
                WHERE a.ruccompania=b.ruccompania(+) AND a.tipocompania='Prospecto') x
    WHERE x.ruccompania=y.ruccompania)
    AND y.ruccompania IS NOT NULL;
    COMMIT;

   --------------------------------------------------------------------------
   /*
   T24. CORRECCION DE DOMINIOS
   se identifican los dominios erroneos dentro de la tabla de validacion de correo
   */
   --------------------------------------------------------------------------
    MERGE INTO
   (select mail,correccionmail AS mailc from FA_noAFILIADOSMAIL_DIARIO)A
   USING
   (SELECT b.correccion,b.error
    FROM FA_CORRECCION_MAIL B
   )B
   ON
   (
   SUBSTR(A.mail,INSTR(A.mail,'@')+1) = B.error
   )
   WHEN MATCHED THEN
   UPDATE SET  a.mailc= REPLACE(a.mail, SUBSTR(a.mail,INSTR(a.mail,'@')+1), b.correccion);

    COMMIT;

MERGE INTO
   (
   SELECT C4.FECHANOAFILIACION AS FECHAAFIL,C4.CONSULTOR AS CONSULTOR,C4.GRUPO AS GRUPO,  C4.SUBGRUPO AS SUBGRUPO,C4.CODIGOCOMPANIA
    FROM fa_noafiliadosmail_diario c4
   )A
   USING
   (select * from(
    select c.fechaingresoincidente as fechaafile,c.identificadorusuariovantive as consultore,c.grupo as grupoe, c.subgrupo as subgrupoe,c.codigocompania,row_number () over (partition by c.codigocompania order by c.fechaingresoincidente desc) rn
    FROM FA_RESUMENBASEMAIL_INCIDENTE c) where rn=1
   )B
   ON
   (
   B.codigocompania = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET fechaafil=fechaafilE,consultor=consultorE,grupo=grupoE,subgrupo=subgrupoE;
commit;
--Revision Agregar un paso de actualizacion de fecha proceso a la tabla fa_noafiliadosmail_diario
    MERGE INTO
    (
    select mail,tiponoafiliacion,numerocuentaresponsable from fa_noafiliadosmail_diario
    )a
    using
    (
    select distinct(mail) from fa_motivados_semanal
    )B
    on( upper (b.mail) = a.mail

    )
    WHEN MATCHED THEN
    update set tiponoafiliacion='Motivado';

    MERGE INTO
    (
    select mail,tiponoafiliacion,numerocuentaresponsable from fa_noafiliadosmail_diario
    )a
    using
    (
    SELECT distinct (mail) FROM fa_basedesafiliados_sd
    )B
    ON( UPPER (B.MAIL) = A.MAIL
    )
    WHEN MATCHED THEN
    UPDATE SET TIPONOAFILIACION='Desafiliado';


   --------------------------------------------------------------------------
   /*
   T25. INSERCION Y ACTUALIZACION DE REGISTROS HISTORICOS DE AFILIADOSMAIL_HISTORICO
   se ingresan SOLO los nuevos afiliados de la base mail para guardarlos dentro
   del historico de afiliadomail,adicionalmente se actualizan los datos de los clasificados
   */
   --------------------------------------------------------------------------
   --Revision: Agregar filtro de Motivado o Desafiliado
    INSERT INTO FA_DESAFILIADOSMAIL_HISTORICO
        (cuenta, base, fecha, grupo, fechadesafiliacion, canalventa, codigocompaniahistorico,
        consultor, dealer, territorio, clasificacion, provincia, departamento,tipocompania,subgrupo
        )
        SELECT numerocuentaresponsable, base, SYSDATE - 1, grupo, fechanoafiliacion, canalventa,
        CODIGOCOMPANIA,CONSULTOR,DEALER,TERRITORIO,CLASIFICACION,'NO CLASIFICADO' PROVINCIA,'NO CLASIFICADO' DEPARTAMENTO,TIPOCOMPANIA,SUBGRUPO
        FROM FA_NOAFILIADOSMAIL_DIARIO
        WHERE estado = 'NUEVO'
        AND COMPANHIAACTIVA='Activa'
        and tiponoafiliacion='Desafiliado'
        GROUP BY numerocuentaresponsable, base, SYSDATE - 1, grupo, fechanoafiliacion, canalventa,
        CODIGOCOMPANIA, CONSULTOR, DEALER, TERRITORIO, CLASIFICACION, PROVINCIA, DEPARTAMENTO,TIPOCOMPANIA,SUBGRUPO;
        COMMIT;

       ---------------------------------------------------------------------
    MERGE INTO
   (
   SELECT C4.PROVINCIA AS CONSULTOR,C4.DEPARTAMENTO AS DEALER,C4.CODIGOCOMPANIAHISTORICO
    FROM fa_desafiliadosmail_historico c4 where (c4.provincia IS NULL OR c4.provincia = 'NO CLASIFICADO')
    AND (c4.departamento IS NULL OR c4.departamento = 'NO CLASIFICADO')
   )A
   USING
   (
   SELECT
   c.provincia as consultorE, c.departamento as dealerE,c.codigocompania
   FROM p_compania c
   )B
   ON
   (
   B.codigocompania = A.codigocompaniahistorico
   )
   WHEN MATCHED THEN
   UPDATE SET  consultor=consultorE,dealer=dealerE;

    COMMIT;
------------------------------------------------------------------------------

    INSERT INTO FA_MOTIVADOSMAIL_HISTORICO
        (cuenta, base, fecha, grupo, FECHAMOTIVACION, canalventa, codigocompaniahistorico,
        consultor, dealer, territorio, clasificacion, provincia, departamento,tipocompania,subgrupo
        )
        SELECT numerocuentaresponsable, base, SYSDATE - 1, grupo, fechanoafiliacion, canalventa,
        CODIGOCOMPANIA,CONSULTOR,DEALER,TERRITORIO,CLASIFICACION,'NO CLASIFICADO' PROVINCIA,'NO CLASIFICADO' DEPARTAMENTO,TIPOCOMPANIA,SUBGRUPO
        FROM fa_noafiliadosmail_diario
        WHERE estado = 'NUEVO'
        AND COMPANHIAACTIVA='Activa'
        and tiponoafiliacion='Motivado'
        GROUP BY numerocuentaresponsable, base, SYSDATE - 1, grupo, fechanoafiliacion, canalventa,
        CODIGOCOMPANIA, CONSULTOR, DEALER, TERRITORIO, CLASIFICACION, PROVINCIA, DEPARTAMENTO,TIPOCOMPANIA,SUBGRUPO;
        COMMIT;

    ---------------------------------------------------------------------
    MERGE INTO
   (
   SELECT C4.PROVINCIA AS CONSULTOR,C4.DEPARTAMENTO AS DEALER,C4.CODIGOCOMPANIAHISTORICO
    FROM fa_motivadosmail_historico c4 where (c4.provincia IS NULL OR c4.provincia = 'NO CLASIFICADO')
    AND (c4.departamento IS NULL OR c4.departamento = 'NO CLASIFICADO')
   )A
   USING
   (
   SELECT
   c.provincia as consultorE, c.departamento as dealerE,c.codigocompania
   FROM P_COMPANIA C
   )B
   ON
   (
   B.codigocompania = A.codigocompaniahistorico
   )
   WHEN MATCHED THEN
   UPDATE SET  consultor=consultorE,dealer=dealerE;

    COMMIT;
END PROCESARBASENOAFILMAIL_DIARIO;

PROCEDURE PROCESARREPORTEMAILBIENVENIDA IS
BEGIN

    DELETE FA_AFILIADOSMAIL_BIENVENIDA where ruccompania='235695';
    COMMIT;

    DELETE FROM FA_AFILIADOSMAIL_BIENVENIDA A WHERE fechaafiliacion < (
    SELECT max(fechaafiliacion) FROM FA_AFILIADOSMAIL_BIENVENIDA B
    WHERE A.codigocompania = B.codigocompania);
    COMMIT;

    update FA_AFILIADOSMAIL_BIENVENIDA set resultado='Afiliado' where estadoenvio in ('Enviado','Le¿do','Leído');
    update FA_AFILIADOSMAIL_BIENVENIDA set resultado='Rechazado' where estadoenvio in ('#N/A','Rebote','Error');
    COMMIT;

    delete  from FA_AFILIADOSMAIL_BIENVENIDA where estadoenvio is null;
    delete  from FA_AFILIADOSMAIL_BIENVENIDA where fechaafiliacion is null;
    COMMIT;

    DELETE FROM FA_AFILIADOSMAIL_BIENVENIDA A WHERE ROWID > (
    SELECT min(rowid) FROM FA_AFILIADOSMAIL_BIENVENIDA B
    WHERE A.codigocompania = B.codigocompania);
    commit;

END PROCESARREPORTEMAILBIENVENIDA;

PROCEDURE PROCESARREPORTERV_v2(SANHO VARCHAR2,SMES VARCHAR2,SCICLO VARCHAR2)
IS
BEGIN
-- PROPÓSITO:
-- Carga la informacion del reporte de registro de ventas, para despues cruzarlo y exportarlo para su validacion
--
-- HISTORIAL DE MODIFICACION
-- Usuario                            Fecha                 Comentario
-- ----------                           ---------               ----------------------
-- CCHAHUAS                   12/03/2015          Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

--------------------------------------------------------------------------
   /*
   T1. ACTUALIZACION DE FA_REGISTROVENTA
   Se normaliza la cuenta de FA_REGISTROVENTA a una cuenta madre,
   adicionalmente se enriquecen los campos descriptivos cruzando la base de
   Registro Venta con la PCompania
   */
--------------------------------------------------------------------------
    UPDATE fa_registroventa_historico
    SET code=FN_DECODIFICA_CUENTA(code)
       ||'.00.00.1000'
       ||SUBSTR(code,-2,2)
    WHERE instr(code,'.',1,3)=0
    AND instr(code,'.',1,2) <>0
    AND periodo=SANHO||SMES and ciclo=SCICLO;

   MERGE INTO
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE , t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPOPERSONA AS tipopersonaE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE ,  t.TIPOCOMPANIA AS
      tipocompaniaE ,  t.CODIGOCOMPANIA AS
      codigocompaniaE ,
      t.provincia as provinciaE,
      t.departamento as departamentoE,t.CODE
   FROM FA_REGISTROVENTA_HISTORICO t
   WHERE t.periodo=SANHO||SMES and t.ciclo=SCICLO
   )A
   USING
   (
   select * from (
   SELECT
    c.ruccompania AS ruccompania, c.tipocuenta AS tipocuenta, c.canalventa AS  canalventa, c.consultor AS consultor,  c.dealer AS dealer,
    c.tipopersona AS tipopersona, c.tipodocumento AS tipodocumento, c.segmento AS segmento, c.tipocompania AS tipocompania,
    c.codigocompania AS codigocompania, c.provincia as provincia, c.departamento as departamento,c.CUENTACOMPANIA,row_number () over (partition by c.cuentacompania order by c.fechacreacion) as rn
   FROM  P_COMPANIA c where c.cuentacompania is not null
   ) where rn=1
   )B
   ON
   (
   FN_DECODIFICA_CUENTA(A.CODE)=B.CUENTACOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET ruccompaniaE=ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE=consultor, dealerE=dealer, tipopersonaE=tipopersona,
   tipodocumentoE=tipodocumento, segmentoE=segmento, tipocompaniaE=
   tipocompania ,codigocompaniaE=codigocompania,provinciaE=provincia,departamentoE=departamento;

  MERGE INTO
   (
    SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE ,  t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPOPERSONA AS tipopersonaE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE ,  t.TIPOCOMPANIA AS
      tipocompaniaE ,  t.CODIGOCOMPANIA AS
      codigocompaniaE ,
      t.provincia as provinciaE,
      t.departamento as departamentoE,t.company
   FROM FA_REGISTROVENTA_HISTORICO t where t.codigocompania is null
   AND t.periodo=SANHO||SMES and t.ciclo=SCICLO
   )A
   USING
   (
   select ruccompania,tipocuenta,canalventa,consultor,dealer,tipopersona,segmento,tipodocumento,tipocompania,codigocompania,provincia,departamento,razonsocial from (
   SELECT
   c.ruccompania AS ruccompania, c.tipocuenta AS tipocuenta, c.canalventa AS canalventa, c.consultor AS consultor, c.dealer AS dealer, c.tipopersona AS tipopersona, c.segmento AS segmento, c.tipodocumento AS tipodocumento, c.tipocompania AS tipocompania, c.codigocompania AS codigocompania, c.provincia as provincia, c.departamento as departamento,c.razonsocial,row_number () over (partition by c.razonsocial order by c.codigocompania desc) rn
   FROM P_COMPANIA c,FA_REGISTROVENTA_HISTORICO t
   where t.company=c.razonsocial
   and t.company is not null
   AND t.periodo=SANHO||SMES and t.ciclo=SCICLO
   )
   where rn=1
   )B
   ON
   (
   A.company=B.razonsocial
   )
   WHEN MATCHED THEN
   UPDATE SET ruccompaniaE   =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE      =consultor, dealerE=dealer, tipopersonaE=tipopersona,
   tipodocumentoE  =tipodocumento, segmentoE=segmento, tipocompaniaE=tipocompania
   ,codigocompaniaE=codigocompania,provinciaE=provincia,departamentoE=departamento;

   MERGE INTO
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE ,  t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPOPERSONA AS tipopersonaE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE ,  t.TIPOCOMPANIA AS
      tipocompaniaE ,  t.CODIGOCOMPANIA AS
      codigocompaniaE ,
      t.provincia as provinciaE,
      t.departamento as departamentoE, t.ruc
   FROM FA_REGISTROVENTA_HISTORICO t where t.codigocompania is null
   AND t.periodo=SANHO||SMES and t.ciclo=SCICLO
   )A
   USING
   (
   SELECT
   c.ruccompania AS ruccompania, c.tipocuenta AS tipocuenta, c.canalventa AS canalventa, c.consultor AS consultor, c.dealer AS dealer, c.tipopersona AS tipopersona, c.tipodocumento AS tipodocumento, c.segmento AS segmento, c.tipocompania AS tipocompania, c.codigocompania AS codigocompania, c.provincia as provincia, c.departamento as departamento
   FROM  P_COMPANIA c
   )B
   ON
   (
   A.ruc=B.ruccompania
   )
   WHEN MATCHED THEN
   UPDATE SET ruccompaniaE   =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE      =consultor, dealerE=dealer, tipopersonaE=tipopersona,
   tipodocumentoE  =tipodocumento, segmentoE=segmento, tipocompaniaE=tipocompania
   ,codigocompaniaE=codigocompania,provinciaE=provincia,departamentoE=departamento;

--------------------------------------------------------------------------
   /*
   T2. DEFINICION DE TIPO DOCUMENTO
   Se usa la el largo del documento para definir si es un RUC o un DNI
   */
--------------------------------------------------------------------------
  UPDATE FA_REGISTROVENTA_HISTORICO
SET tipodocumento     ='RUC',RUCCOMPANIA=ruc
WHERE codigocompania IS NULL
AND LENGTH(RUC) =11
AND periodo=SANHO||SMES and ciclo=SCICLO;

UPDATE FA_REGISTROVENTA_HISTORICO
SET tipodocumento='DNI'
WHERE tipodocumento IS NULL
AND periodo=SANHO||SMES and ciclo=SCICLO;
--------------------------------------------------------------------------
   /*
   T3. CALCULO DE METRICAS DE CANTIDAD DE EQUIPOS POR TIPO
   Se realiza el calculo de la cantidad de equipos por cada tipo de equipo o plan,
   los cuales son cruzados a su vez usando el codigo de compania y el numero
   de cuenta responsable
   */
--------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------Cruzados por codigocompania----------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------
 --Equipos totales
    MERGE INTO
   (
     SELECT c.EQTOTAL AS motivoE,c.CODIGOCOMPANIA
   FROM FA_REGISTROVENTA_HISTORICO c where instr(c.code,'.',1,3)=0
    AND c.code NOT LIKE '1.%'
    AND c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM (select * from p_fotoequipos_ciclo where periodo=SANHO||SMES and ciclo_foto=SCICLO) a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.CODIGOCOMPANIA=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

    --Equipos activos postpago

    MERGE INTO
   (
   SELECT c.EQPOSTACTIVOS AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA_HISTORICO c where instr(c.code,'.',1,3)=0
    AND c.code NOT LIKE '1.%'
    AND c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM (select * from p_fotoequipos_ciclo where periodo=SANHO||SMES and ciclo_foto=SCICLO) a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
        WHERE
      a.estadocontrato                           IN ('Activo')
      AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE = motivo ;

--Equipos prepago Activos

    MERGE INTO
   (
   SELECT c.EQPREACTIVOS AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA_HISTORICO c where instr(c.code,'.',1,3)=0
    AND c.code NOT LIKE '1.%'
    AND c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * )
         MOTIVO
      FROM (select * from p_fotoequipos_ciclo where periodo=SANHO||SMES and ciclo_foto=SCICLO) a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
        WHERE
      a.estadocontrato IN ('Activo')
      AND b.product  in ('iDen Pre','IN Pre','Non PTT Prepago')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
    A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

--Equipos activos totales

    MERGE INTO
   (
    SELECT c.EQACTIVOS AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA_HISTORICO c where instr(c.code,'.',1,3)=0
    AND c.code NOT LIKE '1.%'
    AND c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * )
         MOTIVO
      FROM (select * from p_fotoequipos_ciclo where periodo=SANHO||SMES and ciclo_foto=SCICLO) a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
        WHERE a.estadocontrato IN ('Activo')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

-- Equipos suspendidos totales

    MERGE INTO
   (
   SELECT c.EQSUSPENDIDOS AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA_HISTORICO c where instr(c.code,'.',1,3)=0
   AND c.code NOT LIKE '1.%'
   AND c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * )
         MOTIVO
      FROM (select * from p_fotoequipos_ciclo where periodo=SANHO||SMES and ciclo_foto=SCICLO) a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
        WHERE a.estadocontrato                           IN ('Suspendido')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE = motivo ;

-- Equipos activos/suspendidos banda ancha

    MERGE INTO
   (
    SELECT C.EQBANDAANCHA AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA_HISTORICO c where  instr(c.code,'.',1,3)=0
    AND c.code NOT LIKE '1.%'
    AND c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM (select * from p_fotoequipos_ciclo where periodo=SANHO||SMES and ciclo_foto=SCICLO) a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product in ('Banda Ancha')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE = motivo ;

-- Equipos activos/suspendidos prepago 3G

    MERGE INTO
   (
    SELECT C.EQPRE3G AS motivoE,c.codigocompania
   FROM FA_REGISTROVENTA_HISTORICO c where   instr(c.code,'.',1,3)=0
    AND c.code NOT LIKE '1.%'
    AND c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato  IN ('Activo','Suspendido')
      AND b.product in ('Non PTT Prepago','IN Pre')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

-- Equipos activos/suspendidos postpago 3G

    MERGE INTO
   (
   SELECT C.EQPOST3G AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA_HISTORICO c where   instr(c.code,'.',1,3)=0
    AND c.code NOT LIKE '1.%'
    AND c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato IN ('Activo','Suspendido')
      AND b.product in ('Non PTT Post','IN Post','HP PTT Post')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
    a.codigocompania=b.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE = motivo ;
-- Equipos activos/suspendidos prepago 2G

    MERGE INTO
   (
   SELECT C.EQPREIDEN AS motivoE ,c.codigocompania
   FROM FA_REGISTROVENTA_HISTORICO c where   instr(c.code,'.',1,3)=0
    AND c.code NOT LIKE '1.%'
    AND c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product='iDen Pre'
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE = motivo ;

-- Equipos activos/suspendidos postpago 2G

    MERGE INTO
   (
   SELECT c.EQPOSTIDEN AS motivoE , c.codigocompania
   FROM FA_REGISTROVENTA_HISTORICO c where   instr(c.code,'.',1,3)=0
    AND c.code NOT LIKE '1.%'
    AND c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product='iDen Post'
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

---------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------Cruzados por numerocuentaresponsable----------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------
 --Equipos totales
     MERGE INTO
   (
   SELECT c.EQTOTAL AS motivoE,c.code
          FROM FA_REGISTROVENTA_HISTORICO c
          WHERE c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

--Equipos activos postpago
    MERGE INTO
   (
   SELECT c.EQPOSTACTIVOS AS motivoE,c.code
          FROM FA_REGISTROVENTA_HISTORICO c
          WHERE c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING

   (SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN ('Activo')
                   AND b.product not in ('iDen Pre','IN Pre','Non PTT Prepago')
                   GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

  --Equipos prepago Activos
    MERGE INTO
   (
   SELECT c.EQPREACTIVOS AS motivoE,c.code
          FROM FA_REGISTROVENTA_HISTORICO c
          WHERE c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN ('Activo')
                   AND b.product  in ('iDen Pre','IN Pre','Non PTT Prepago')
                   GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

  --Equipos activos totales
     MERGE INTO
   (
   SELECT c.EQACTIVOS AS motivoE,c.code
          FROM FA_REGISTROVENTA_HISTORICO c
          WHERE c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN ('Activo')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

  -- Equipos suspendidos totales
    MERGE INTO
   (
   SELECT c.EQSUSPENDIDOS AS motivoE,c.code
          FROM FA_REGISTROVENTA_HISTORICO c
          WHERE c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN ('Suspendido')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

-- Equipos activos/suspendidos banda ancha
    MERGE INTO
   (
   SELECT C.EQBANDAANCHA AS motivoE,c.code
          FROM FA_REGISTROVENTA_HISTORICO c
          WHERE c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in ('Banda Ancha')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

 -- Equipos activos/suspendidos prepago 3G
    MERGE INTO
   (
   SELECT C.EQPRE3G AS motivoE,c.code
          FROM FA_REGISTROVENTA_HISTORICO c
          WHERE c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in
                       ('Non PTT Prepago', 'IN Pre')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

-- Equipos activos/suspendidos postpago 3G
   MERGE INTO
   (
   SELECT C.EQPOST3G  AS motivoE,c.code
          FROM FA_REGISTROVENTA_HISTORICO c
          WHERE c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in
                       ('Non PTT Post',
                        'IN Post',
                        'HP PTT Post')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

 -- Equipos activos/suspendidos prepago 2G
    MERGE INTO
   (
   SELECT C.EQPREIDEN AS motivoE,c.code
          FROM FA_REGISTROVENTA_HISTORICO c
          WHERE c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product = 'iDen Pre'
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

-- Equipos activos/suspendidos postpago 2G
    MERGE INTO
   (
   SELECT c.EQPOSTIDEN AS motivoE,c.code
          FROM FA_REGISTROVENTA_HISTORICO c
          WHERE c.periodo=SANHO||SMES and c.ciclo=SCICLO
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product = 'iDen Post'
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.code = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoE = motivo;

--------------------------------------------------------------------------
   /*
   T4. IDENTIFICACION Y CALCULO DE CLASIFICACION
   Se realiza la identificacion usando las cantidades calculada
   en el item anterior, adicionalmente se usa la cantidad de data
   services y los servicios adicionales
   */
--------------------------------------------------------------------------
UPDATE FA_REGISTROVENTA_HISTORICO
SET clasificacion='Mixto'
WHERE (EQPOST3G IS NOT NULL
OR EQPRE3G      IS NOT NULL or EQBANDAANCHA is not null)
AND (EQPOSTIDEN IS NOT NULL
OR EQPREIDEN    IS NOT NULL )
AND (periodo=SANHO||SMES and ciclo=SCICLO);


UPDATE FA_REGISTROVENTA_HISTORICO
SET clasificacion='iDen'
WHERE (EQPOST3G IS  NULL
and EQPRE3G      IS  NULL and EQBANDAANCHA is  null)
AND (EQPOSTIDEN IS NOT NULL
OR EQPREIDEN    IS NOT NULL )
AND (periodo=SANHO||SMES and ciclo=SCICLO);


UPDATE FA_REGISTROVENTA_HISTORICO
SET clasificacion='3G'
WHERE (EQPOST3G IS NOT NULL
OR EQPRE3G      IS NOT NULL or EQBANDAANCHA is not null)
AND (EQPOSTIDEN IS  NULL
and EQPREIDEN    IS  NULL )
AND (periodo=SANHO||SMES and ciclo=SCICLO);

UPDATE FA_REGISTROVENTA_HISTORICO a
   SET a.DATA_SERVICES2G = to_number(a.data_services) *
                                 NVL(a.eqpostiden, 0) /
                                 (NVL(a.eqpostiden, 0) + NVL(a.eqpost3g, 0) +
                                  NVL(a.eqbandaancha, 0))
 where a.eqpostiden <> 0
    or a.eqpost3g <> 0
    or a.eqbandaancha <> 0
    AND (a.periodo=SANHO||SMES and a.ciclo=SCICLO);

UPDATE FA_REGISTROVENTA_HISTORICO a
   SET a.DATA_SERVICES3G = to_number(a.data_services) *
                                 (NVL(a.eqpost3g, 0) +
                                  NVL(a.eqbandaancha, 0)) /
                                 (NVL(a.eqpostiden, 0) + NVL(a.eqpost3g, 0) +
                                  NVL(a.eqbandaancha, 0))
 where a.eqpostiden <> 0
    or a.eqpost3g <> 0
    or a.eqbandaancha <> 0
    AND (a.periodo=SANHO||SMES and a.ciclo=SCICLO);

    UPDATE FA_REGISTROVENTA_HISTORICO a
   SET a.DATA_SERVICES2G = to_number(a.data_services)
 where a.eqpostiden is  null
    and a.eqpost3g is  null
    and a.eqbandaancha is  null
    AND (a.periodo=SANHO||SMES and a.ciclo=SCICLO);

  UPDATE FA_REGISTROVENTA_HISTORICO a
   SET a.add_charges2g = to_number(a.add_charges) *
                               (NVL(a.eqpostiden, 0) /
                                 (NVL(a.eqpostiden, 0) + NVL(a.eqpost3g, 0) +
                                  NVL(a.eqbandaancha, 0)))
 where a.eqpostiden <> 0
    or a.eqpost3g <> 0
    or a.eqbandaancha <> 0
    AND (a.periodo=SANHO||SMES and a.ciclo=SCICLO);

    UPDATE FA_REGISTROVENTA_HISTORICO a
   SET a.add_charges3g = to_number(a.add_charges) *
                                 (NVL(a.eqpost3g, 0) +
                                  NVL(a.eqbandaancha, 0)) /
                                 (NVL(a.eqpostiden, 0) + NVL(a.eqpost3g, 0) +
                                  NVL(a.eqbandaancha, 0))
 where a.eqpostiden <> 0
    or a.eqpost3g <> 0
    or a.eqbandaancha <> 0
    AND (a.periodo=SANHO||SMES and a.ciclo=SCICLO);

UPDATE FA_REGISTROVENTA_HISTORICO a
   SET a.add_charges2g = to_number(a.add_charges)
 where a.eqpostiden is  null
    and a.eqpost3g is  null
    and a.eqbandaancha is  null
    AND (a.periodo=SANHO||SMES and a.ciclo=SCICLO);
--------------------------------------------------------------------------
   /*
   T5. IDENTIFICACION DE TIPO ESPECIFICO DE DOCUMENTO RUC
   Usando el campo ruccompania se especifica si es un tipo ruc 10 o ruc 20
   */
--------------------------------------------------------------------------
UPDATE FA_REGISTROVENTA_HISTORICO
SET tipodocumento=decode(tipodocumento,'DNI','DNI','RUC',DECODE(SUBSTR(RUCCOMPANIA,0,2),'20','RUC 20','RUC 10'))
WHERE periodo=SANHO||SMES and ciclo=SCICLO;

UPDATE FA_REGISTROVENTA_HISTORICO
SET company_type=tipopersona
WHERE periodo=SANHO||SMES and ciclo=SCICLO;

update FA_REGISTROVENTA_HISTORICO set clasificacion='3G' where tipocompania='Prospecto' AND periodo=SANHO||SMES and ciclo=SCICLO; commit;

-- Para filtrar las cuentas No Comerciales, Bancos, etc
merge into (select * from FA_REGISTROVENTA_HISTORICO where periodo=SANHO||SMES and ciclo=SCICLO) a
using fa_cuentas_excluir b
on (a.code = b.cuenta)
when matched then update
set a.tipo_cuenta = 'EXCLUIR';
commit;

--------------------------------------------------------------------------
   /*
   T6. CALCULO Y GENERACION DE REPORTERVRESUMEN
   Se calcula el resumen del reporte de RV para mostrarlo en la consola
   como un resumen teniendo como base las cantidades calculadas anteriormente
   */
--------------------------------------------------------------------------
delete from FA_REPORTERVRESUMEN where to_char(mes,'yyyymm')=SANHO||SMES and ciclo=SCICLO;

INSERT
INTO FA_REPORTERVRESUMEN
   (
      MES, SYSTEM_ACCESS, CDI_ACC, DATA_SERVICES, DATA_SERVICES2G,
      DATA_SERVICES3G, INSURANCE, DISPATCH, CDI_EXC, INTERCONNECT, ADD_CHARGES,
      ADD_CHARGES2G, ADD_CHARGES3G, NAT_LD, INAT_LD, ROAMING, FEATURES_OPTIONS,
      DISC_PROM, OCC, LATE_PAYMENT, SALES_VALUE, IGV, EQUIPMENT, OHINVAMT,
      OCC_REP_GN, CICLO,clasificacion,tipodocumento,cantidadrecibos,PROVINCIA,SEGMENTO,DEPARTAMENTO,
      TIPO_CUENTA -- Para filtrar las cuentas No Comerciales, Bancos, etc
   )
   select to_date(SANHO||SMES,'yyyymm') mes,
       sum(a.system_access) system_access,
       sum(a.cdi_acc) cdi_acc,
       sum(a.data_services) data_services,
       sum(a.data_services2G) data_services2G,
       sum(a.data_services3G) data_services3G,
       sum(a.insurance) insurance,
       sum(a.dispatch) dispatch,
       sum(a.cdi_exc) cdi_exc,
       sum(a.interconnect) interconnect,
       sum(a.add_charges) add_charges,
       sum(a.add_charges2G) add_charges2G,
       sum(a.add_charges3G) add_charges3G,
       sum(a.nat_ld) nat_ld,
       sum(a.inat_ld) inat_ld,
       sum(a.roaming) roaming,
       sum(a.features_options) features_options,
       sum(a.disc_prom) disc_prom,
       sum(a.occ) occ,
       sum(a.late_payment) late_payment,
       sum(a.sales_value) sales_value,
       sum(a.igv) igv,
       sum(a.equipment) equipment,
       sum(a.ohinvamt) ohinvamt,
       sum(a.occ_rep_gn) occ_rep_gn,SCICLO,clasificacion,tipodocumento,count(a.invoice_number),CASE
         WHEN a.PROVINCIA='LIMA'
         OR a.PROVINCIA  ='CALLAO'
         THEN 'LIMA'
         WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
         THEN 'PROVINCIA'
         ELSE 'N/A'
      END provincia,nvl(A.SEGMENTO,'N/A') SEGMENTO,NVL(A.DEPARTAMENTO,'N/A') DEPARTAMENTO,
      a.TIPO_CUENTA -- Para filtrar las cuentas No Comerciales, Bancos, etc
  from FA_REGISTROVENTA_HISTORICO a
  WHERE a.periodo=SANHO||SMES and a.ciclo=SCICLO
  group by to_date(SANHO||SMES,'yyyymm'),SCICLO,clasificacion,tipodocumento,CASE
         WHEN a.PROVINCIA='LIMA'
         OR a.PROVINCIA  ='CALLAO'
         THEN 'LIMA'
         WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
         THEN 'PROVINCIA'
         ELSE 'N/A'
      END,A.SEGMENTO,nvl(A.SEGMENTO,'N/A'),NVL(A.DEPARTAMENTO,'N/A'), a.tipo_cuenta;
COMMIT;

END PROCESARREPORTERV_v2;

PROCEDURE PROCESARREPORTEPAGOS_v2(SANHO VARCHAR2,SMES VARCHAR2) IS
 BEGIN
 -- PROPÓSITO:
-- Se carga el input de reporte de pagos en una tabla para formatearla y filtrarla en
--
-- HISTORIAL DE MODIFICACION
-- Usuario                           Fecha               Comentario
-- ----------                          ---------             ----------------------
-- CCHAHUAS                  09/03/2015       Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------

--------------------------------------------------------------------------
   /*
   T1. SE ACTUALIZAN CAMPOS DESCRIPTIVOS DENTRO DEL REPORTE PAGOS
   Se actualizan los campos descriptivos de la tabla Reporte de Pago
    tomando como fuente la tabla Compania.
   */
--------------------------------------------------------------------------
 /*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE , c.ruccompania AS ruccompania,
      t.TIPOCUENTA AS tipocuentaE , c.tipocuenta AS tipocuenta, t.CANALVENTA AS
      canalventaE , c.canalventa AS canalventa, t.CONSULTOR AS consultorE ,
      c.consultor AS consultor, t.DEALER AS dealerE , c.dealer AS dealer,
      t.TIPODOCUMENTO AS tipodocumentoE , c.tipodocumento AS tipodocumento,
      t.SEGMENTO AS segmentoE , c.segmento AS segmento, t.CODIGOCOMPANIA AS
      codigocompaniaE , c.codigocompania AS codigocompania, t.provincia AS
      provinciaE,c.provincia AS provincia, t.departamento AS departamentoE,
      c.departamento AS departamento
   FROM FA_REPORTEPAGOS t, P_COMPANIA c
   WHERE FN_DECODIFICA_CUENTA(t.CUENTA)=c.CUENTACOMPANIA
   )
SET ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,codigocompaniaE=codigocompania,provinciaE=provincia
   ,departamentoE=departamento;*/
   /*670,401 validado*/
   MERGE INTO
   (
     SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE ,  t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE ,  t.CODIGOCOMPANIA AS
      codigocompaniaE ,  t.provincia AS
      provinciaE, t.departamento AS departamentoE,t.CUENTA
   FROM FA_REPORTEPAGOS_HISTORICO t
   WHERE t.periodo2=SANHO||SMES
   )A
   USING
   (
   SELECT
   c.ruccompania AS ruccompania, c.tipocuenta AS tipocuenta, c.canalventa AS canalventa, c.consultor AS consultor,c.dealer AS dealer, c.tipodocumento AS tipodocumento, c.segmento AS segmento, c.codigocompania AS codigocompania, c.provincia AS provincia, c.departamento AS departamento,c.CUENTACOMPANIA
   FROM P_COMPANIA c
   )B
   ON
   (
   FN_DECODIFICA_CUENTA(A.CUENTA)=B.CUENTACOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,codigocompaniaE=codigocompania,provinciaE=provincia
   ,departamentoE=departamento;

 /*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE , c.ruccompania AS ruccompania,
      t.TIPOCUENTA AS tipocuentaE , c.tipocuenta AS tipocuenta, t.CANALVENTA AS
      canalventaE , c.canalventa AS canalventa, t.CONSULTOR AS consultorE ,
      c.consultor AS consultor, t.DEALER AS dealerE , c.dealer AS dealer,
      t.TIPODOCUMENTO AS tipodocumentoE , c.tipodocumento AS tipodocumento,
      t.SEGMENTO AS segmentoE , c.segmento AS segmento, t.CODIGOCOMPANIA AS
      codigocompaniaE , c.codigocompania AS codigocompania, t.provincia AS
      provinciaE,c.provincia AS provincia, t.departamento AS departamentoE,
      c.departamento AS departamento
   FROM FA_REPORTEPAGOS t, P_COMPANIA c
   WHERE T.RAZONSOCIAL=c.razonsocial and t.codigocompania is null
   )
SET ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,codigocompaniaE=codigocompania,provinciaE=provincia
   ,departamentoE=departamento;*/
   /*3*/-->/*3*/ --CORREGIDO
 MERGE INTO
   (
     SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE ,  t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE ,  t.CODIGOCOMPANIA AS
      codigocompaniaE ,  t.provincia AS
      provinciaE, t.departamento AS departamentoE,t.RAZONSOCIAL
   FROM FA_REPORTEPAGOS_HISTORICO t
   WHERE t.periodo2=SANHO||SMES and t.codigocompania is null
   )A
   USING(
   SELECT * FROM
   (
   SELECT C.RUCCOMPANIA AS RUCCOMPANIA, C.TIPOCUENTA AS TIPOCUENTA, C.CANALVENTA AS CANALVENTA, C.CONSULTOR AS CONSULTOR, C.DEALER AS DEALER, C.TIPODOCUMENTO AS TIPODOCUMENTO, C.SEGMENTO AS SEGMENTO, C.CODIGOCOMPANIA AS CODIGOCOMPANIA, C.PROVINCIA AS PROVINCIA, C.DEPARTAMENTO AS DEPARTAMENTO,C.RAZONSOCIAL,ROW_NUMBER() OVER(PARTITION BY C.RAZONSOCIAL ORDER BY FECHACREACION DESC) AS RN
   FROM P_COMPANIA c) WHERE RN=1
   )B
   ON
   (
    A.RAZONSOCIAL=B.razonsocial
   )
   WHEN MATCHED THEN
   UPDATE SET ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,codigocompaniaE=codigocompania,provinciaE=provincia
   ,departamentoE=departamento;

/* UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT t.RUCCOMPANIA AS ruccompaniaE , c.ruccompania AS ruccompania,
      t.TIPOCUENTA AS tipocuentaE , c.tipocuenta AS tipocuenta, t.CANALVENTA AS
      canalventaE , c.canalventa AS canalventa, t.CONSULTOR AS consultorE ,
      c.consultor AS consultor, t.DEALER AS dealerE , c.dealer AS dealer,
      t.TIPODOCUMENTO AS tipodocumentoE , c.tipodocumento AS tipodocumento,
      t.SEGMENTO AS segmentoE , c.segmento AS segmento, t.CODIGOCOMPANIA AS
      codigocompaniaE , c.codigocompania AS codigocompania, t.provincia AS
      provinciaE,c.provincia AS provincia, t.departamento AS departamentoE,
      c.departamento AS departamento
   FROM FA_REPORTEPAGOS t, P_COMPANIA c
   WHERE T.DNI_RUC=C.RUCCOMPANIA and t.codigocompania is null
   )
SET ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,codigocompaniaE=codigocompania,provinciaE=provincia
   ,departamentoE=departamento;*/
   /*1*/-->/*1*/  --CORREGIDO *aqui no hubo cambio
   MERGE INTO
   (   SELECT t.RUCCOMPANIA AS ruccompaniaE ,
      t.TIPOCUENTA AS tipocuentaE ,  t.CANALVENTA AS
      canalventaE , t.CONSULTOR AS consultorE ,
       t.DEALER AS dealerE ,
      t.TIPODOCUMENTO AS tipodocumentoE ,
      t.SEGMENTO AS segmentoE , t.CODIGOCOMPANIA AS
      codigocompaniaE ,  t.provincia AS
      provinciaE, t.departamento AS departamentoE,t.DNI_RUC
   FROM FA_REPORTEPAGOS_HISTORICO t
   WHERE t.periodo2=SANHO||SMES and  t.codigocompania is null
   )A
   USING
   (   SELECT    c.ruccompania AS ruccompania, c.tipocuenta AS tipocuenta, c.canalventa AS canalventa,  c.consultor AS consultor, c.dealer AS dealer,  c.tipodocumento AS tipodocumento,  c.segmento AS segmento, c.codigocompania AS codigocompania, c.provincia AS provincia, c.departamento AS departamento
   FROM P_COMPANIA c
   )B
   ON
   (    A.DNI_RUC=B.RUCCOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET  ruccompaniaE =ruccompania, tipocuentaE=tipocuenta, canalventaE=canalventa,
   consultorE    =consultor, dealerE=dealer, tipodocumentoE =tipodocumento,
   segmentoE     =segmento ,codigocompaniaE=codigocompania,provinciaE=provincia
   ,departamentoE=departamento;
--------------------------------------------------------------------------
   /*
   T2. SE ACTUALIZAN CAMPOS CANTIDAD DE UNIDADES
   Se realiza un conteo de las unidades segun tipo o plan para
   registrarlas en los campos de cantidades
   */
--------------------------------------------------------------------------
   /*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.CANTIDAD3G AS motivoE , c4.cantidad AS motivo
   FROM FA_REPORTEPAGOS c, (SELECT a.CODIGOCOMPANIA , COUNT( * ) cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product in ('Non PTT Post','IN Post','HP PTT Post','Banda Ancha','Non PTT Prepago','IN Pre')
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.codigocompania=c4.codigocompania and  instr(c.cuenta,'.',1,3)=0
  AND c.cuenta NOT LIKE '1.%'
     )
  SET motivoE = motivo ;*/
  /*185 validado*/
  MERGE INTO
   (
    SELECT C.CANTIDAD3G AS motivoE ,c.codigocompania,c.cuenta
   FROM FA_REPORTEPAGOS_HISTORICO c
   WHERE c.periodo2=SANHO||SMES
   )A
   USING
   (
    SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product in ('Non PTT Post','IN Post','HP PTT Post','Banda Ancha','Non PTT Prepago','IN Pre')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
    A.codigocompania=B.codigocompania and  instr(A.cuenta,'.',1,3)=0
  AND A.cuenta NOT LIKE '1.%'
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

/*UPDATE
   /*+BYPASS_UJVC*//*
   (
   SELECT C.CANTIDAD2G AS motivoE , c4.cantidad AS motivo
   FROM FA_REPORTEPAGOS c, (SELECT a.CODIGOCOMPANIA , COUNT( * ) cantidad
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product in ('iDen Post','iDen Pre')
      GROUP BY a.CODIGOCOMPANIA
      ) c4
   WHERE c.codigocompania=c4.codigocompania and  instr(c.cuenta,'.',1,3)=0
AND c.cuenta NOT LIKE '1.%'
   )
SET motivoE = motivo ;*/
/*83 validado*/
MERGE INTO
   (
     SELECT C.CANTIDAD2G AS motivoE ,c.codigocompania,c.cuenta
   FROM FA_REPORTEPAGOS_HISTORICO c
   WHERE c.periodo2=SANHO||SMES
   )A
   USING
   (
   SELECT a.CODIGOCOMPANIA , COUNT( * ) MOTIVO
      FROM fotoequipos a
      LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
      WHERE a.estadocontrato                           IN ('Activo','Suspendido')
      AND b.product in ('iDen Post','iDen Pre')
      GROUP BY a.CODIGOCOMPANIA
   )B
   ON
   (
    A.codigocompania=B.codigocompania and  instr(A.cuenta,'.',1,3)=0
AND A.cuenta NOT LIKE '1.%'
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo ;

  /*UPDATE /*+BYPASS_UJVC*//* (SELECT C.CANTIDAD3G  AS motivoE,
               c4.cantidad AS motivo
          FROM FA_REPORTEPAGOS c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in
                       ('Non PTT Post','IN Post','HP PTT Post','Banda Ancha','Non PTT Prepago','IN Pre')
                 GROUP BY a.numerocuentaresponsable) c4
         WHERE c.cuenta = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*654,312 validado*/
     MERGE INTO
   (
   SELECT C.CANTIDAD3G  AS motivoE,c.cuenta
          FROM FA_REPORTEPAGOS_HISTORICO c
   WHERE c.periodo2=SANHO||SMES
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in
                       ('Non PTT Post','IN Post','HP PTT Post','Banda Ancha','Non PTT Prepago','IN Pre')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
   A.cuenta = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

  /*UPDATE /*+BYPASS_UJVC*//* (SELECT c.CANTIDAD2G AS motivoE,
               c4.cantidad  AS motivo
          FROM FA_REPORTEPAGOS c,
               (SELECT a.numerocuentaresponsable, COUNT(*) cantidad
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in ('iDen Post','iDen Pre')
                 GROUP BY a.numerocuentaresponsable) c4
         WHERE c.cuenta = c4.numerocuentaresponsable)
     SET motivoE = motivo;*/
     /*30,598 validado*/
     MERGE INTO
   (
    SELECT c.CANTIDAD2G AS motivoE,c.cuenta
          FROM FA_REPORTEPAGOS_HISTORICO c
   WHERE c.periodo2=SANHO||SMES
   )A
   USING
   (
   SELECT a.numerocuentaresponsable, COUNT(*) MOTIVO
                  FROM fotoequipos a
                  LEFT JOIN pm_planes b
                    ON a.codigoplantarifariobscs = b.c_plan
                 WHERE a.estadocontrato IN
                       ('Activo', 'Suspendido')
                   AND b.product in ('iDen Post','iDen Pre')
                 GROUP BY a.numerocuentaresponsable
   )B
   ON
   (
    A.cuenta = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

--------------------------------------------------------------------------
   /*
   T3. SE ACTUALIZAN DENOMINACIONES SEGUN GLOSA
   Se usan las glosas para actualizar la denominacion segun la
   glosa o username que se inserto por el input
   */
--------------------------------------------------------------------------
   UPDATE FA_REPORTEPAGOS_HISTORICO
SET DENOMINACION='DOCUMENTOS SERIE 005'
WHERE USERNAME  ='CRM_FCFM'
AND REMARK LIKE '%005-%'
AND DENOMINACION IS NULL
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET DENOMINACION='DOCUMENTOS SERIE 279 - AMR'
WHERE USERNAME  ='CRM_FCFM'
AND REMARK LIKE '%279-%'
AND DENOMINACION IS NULL
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET DENOMINACION  ='AMR'
WHERE USERNAME    ='AMR'
AND DENOMINACION IS NULL
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET DENOMINACION  ='DEUDA CASTIGADA'
WHERE (TRX_TYPE   IN ('AO','WR'))
AND DENOMINACION IS NULL
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET DENOMINACION  ='CHEQUE DEVUELTO'
WHERE USERNAME    ='CRM_FCCD'
AND DENOMINACION IS NULL
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET DENOMINACION='SEPARACION DEUDA OLD'
WHERE UPPER(REMARK) LIKE '%SEPARAC%'
AND DENOMINACION IS NULL
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.DENOMINACION='ID DEVOLUCIONES'
WHERE UPPER(a.REMARK) LIKE '%ID DEV%'
AND a.DENOMINACION IS NULL
AND a.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.DENOMINACION  ='ABONOS REGISTRADOS'
WHERE (a.USERNAME   IN ('PIH','PAGOSBV','PAGOSMF','PAGOSEC' , 'PAGOSLN')
OR UPPER(A.USERNAME) LIKE 'PAGO%')
AND a.DENOMINACION IS NULL
AND a.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET DENOMINACION  ='RR.HH.'
WHERE USERNAME    ='RRHH'
AND DENOMINACION IS NULL
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET DENOMINACION='DEVOLUCION SALDO A FAVOR'
WHERE (UPPER(REMARK) LIKE '%COMPENSAT%'
OR UPPER(REMARK) LIKE '%A FAVOR%') and upper(remark) NOT LIKE '%TRANS%'
AND DENOMINACION IS NULL
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET DENOMINACION='AJUSTE DEUDA MENOR'
WHERE UPPER(REMARK) LIKE '%DEUDA MENOR COB%'
AND DENOMINACION IS NULL
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO A
SET A.DENOMINACION='AJUSTES MANUALES'
WHERE TRX_TYPE   IN ('ACE','FC','RC')
AND A.DENOMINACION IS NULL
AND A.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO A
SET A.DENOMINACION='OTROS'
WHERE A.DENOMINACION IS NULL
AND A.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET clasificacion='Mixto'
WHERE (CANTIDAD3G IS not NULL)
AND (CANTIDAD2G is not null )
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET clasificacion='iDen'
WHERE (CANTIDAD3G IS  NULL)
AND (CANTIDAD2G is not null )
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET clasificacion='3G'
WHERE (CANTIDAD3G IS NOT NULL)
AND (CANTIDAD2G is null )
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET subdenominacion='Nota de Crédito S-005'
WHERE denominacion ='DOCUMENTOS SERIE 005'
AND upper(remark) LIKE 'N/C%'
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET subdenominacion='Nota de Débito S-005'
WHERE denominacion ='DOCUMENTOS SERIE 005'
AND upper(remark) LIKE 'N/D%'
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET subdenominacion='Factura S-005'
WHERE denominacion ='DOCUMENTOS SERIE 005'
AND upper(remark) LIKE 'FAC%'
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET subdenominacion='Boleta de Venta S-005'
WHERE denominacion ='DOCUMENTOS SERIE 005'
AND upper(remark) LIKE 'BOL%'
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET subdenominacion='Intereses Compensatorios'
WHERE denominacion ='DEVOLUCION SALDO A FAVOR'
AND upper(remark) LIKE '%INTER%'
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO
SET subdenominacion='Devolución Saldo a Favor'
WHERE denominacion ='DEVOLUCION SALDO A FAVOR'
AND (upper(remark) LIKE '%A FAVOR%' and upper(remark)NOT LIKE '%TRANS%')
AND PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.subdenominacion='Montos Descontados Temporalmente'
WHERE a.denominacion ='AMR'
AND a.MONTO          <0
AND A.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.subdenominacion='Montos Extornados al EECC'
WHERE a.denominacion ='AMR'
AND a.MONTO          >0
AND A.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.subdenominacion='Balanceo IX + <Blank>'
WHERE a.denominacion ='DEUDA CASTIGADA'
AND (a.remark       IS NULL
OR upper(a.remark) LIKE '%BALANCEO IX%')
AND A.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.subdenominacion='Castigo Cobranza Judicial'
WHERE a.denominacion ='DEUDA CASTIGADA'
AND ( upper(a.remark) LIKE '%CASTIGO%')
AND A.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.subdenominacion='AMERICATEL'
WHERE a.denominacion ='SEPARACION DEUDA OLD'
AND upper(a.remark) LIKE '%AMERICATEL%'
AND A.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.subdenominacion='IDT'
WHERE a.denominacion ='SEPARACION DEUDA OLD'
AND upper(a.remark) LIKE '%IDT%'
AND A.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.subdenominacion='CONVERGIA'
WHERE a.denominacion ='SEPARACION DEUDA OLD'
AND upper(a.remark) LIKE '%CONVERGIA%'
AND A.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.subdenominacion='desde Nota de Crédito'
WHERE a.denominacion ='ID DEVOLUCIONES'
AND upper(a.remark) LIKE '%N/C%'
AND A.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.subdenominacion='desde Nota de Crédito'
WHERE a.denominacion ='ID DEVOLUCIONES'
AND upper(a.remark) LIKE '%N/C%'
AND A.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.subdenominacion='desde Depósito en Garantía'
WHERE a.denominacion ='ID DEVOLUCIONES'
and a.subdenominacion is null
AND A.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.subdenominacion='Abonos'
WHERE a.denominacion ='ABONOS REGISTRADOS'
AND a.MONTO          >0
AND A.PERIODO2=SANHO||SMES;

UPDATE FA_REPORTEPAGOS_HISTORICO a
SET a.subdenominacion='Extornos'
WHERE a.denominacion ='ABONOS REGISTRADOS'
AND a.MONTO          <0
AND A.PERIODO2=SANHO||SMES;
--------------------------------------------------------------------------
   /*
   T4. SE ACTUALIZAN EL TIPO DOCUMENTO
   Se actualiza la informacion del tipo de documento de acuerdo
   a si pertenece a Ruc 20 o Ruc 10
   */
--------------------------------------------------------------------------
UPDATE FA_REPORTEPAGOS_HISTORICO SET tipodocumento=decode(tipodocumento,'DNI','DNI','RUC',DECODE(SUBSTR(RUCCOMPANIA,0,2),'20','RUC 20','RUC 10')) where PERIODO2=SANHO||SMES;
COMMIT;
--------------------------------------------------------------------------
   /*
   T5. SE GENERA RESUMEN DE REPORTE DE PAGOS
   Se realiza un resumen a nivel de registros de cuentas para
   mostrarse en la consola de procesos
   */
--------------------------------------------------------------------------
delete from FA_REPORTEPAGOS_RESUMEN where to_char(mes,'yyyymm')=(SANHO||SMES);

INSERT
INTO FA_REPORTEPAGOS_RESUMEN
   (
      MES, CICLO,MONTO, CLASIFICACION, DENOMINACION, TIPODOCUMENTO, CANTIDADPAGOS,
      PROVINCIA, SEGMENTO, DEPARTAMENTO,SUBDENOMINACION
   )
SELECT to_date(SANHO||SMES,'yyyymm') mes,A.CICLO, SUM(monto) MONTO,NVL(clasificacion,'N/A') clasificacion,denominacion,tipodocumento,COUNT(1) CANTIDADPAGOS,
   CASE
      WHEN a.PROVINCIA='LIMA'
      OR a.PROVINCIA  ='CALLAO'
      THEN 'LIMA'
      WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
      THEN 'PROVINCIA'
      ELSE 'N/A'
   END provincia,NVL(A.SEGMENTO,'N/A') SEGMENTO,NVL(A.DEPARTAMENTO,'N/A')
   DEPARTAMENTO,a.SUBDENOMINACION
FROM FA_REPORTEPAGOS_HISTORICO a
where a.PERIODO2=SANHO||SMES
GROUP BY to_date(SANHO||SMES,'yyyymm'),NVL(clasificacion,'N/A'),denominacion,tipodocumento,
   CASE
      WHEN a.PROVINCIA='LIMA'
      OR a.PROVINCIA  ='CALLAO'
      THEN 'LIMA'
      WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
      THEN 'PROVINCIA'
      ELSE 'N/A'
   END,A.SEGMENTO,NVL(A.SEGMENTO,'N/A'),NVL(A.DEPARTAMENTO,'N/A') ,a.SUBDENOMINACION,A.CICLO;


END PROCESARREPORTEPAGOS_v2;

PROCEDURE BASE_MEC_RESULTADOS (PCURSOR1  OUT T_CURSOR, PCURSOR2  OUT T_CURSOR, PCURSOR3  OUT T_CURSOR, V_CICLO IN VARCHAR2)
IS

BEGIN

OPEN pcursor1 FOR
SELECT DISTINCT a.numerocuentaresponsable
     , a.compania
     , a.ruccompania
     , obtener_tipodoc(a.ruccompania) tipo_doc
     , a.tipocuenta
     , a.estadocobranzacuenta
     , to_char(h.fechaingreso,'dd/mm/yyyy') fecha
     , r.provincia
  FROM (SELECT *
          FROM fotoequipos
         WHERE ciclofacturacioncontrato = V_CICLO
           AND UPPER(product) LIKE '%POST%'
           AND ESTADOCONTRATO IN ('Activo' ,'Suspendido')) a
  left join p_compania h
    on a.codigocompania=h.codigocompania
  LEFT JOIN (SELECT * FROM
    (SELECT cuenta
          , provincia
          , ROW_NUMBER() OVER(PARTITION BY cuenta ORDER BY PERIODO DESC) RN
       FROM FA_BASEIMPRESIONTOTAL
      WHERE periodo >= TO_CHAR(sysdate-60,'YYYYMM') )
    WHERE RN = 1 ) R
    ON a.numerocuentaresponsable  = r.cuenta
 WHERE a.tipocuenta  <>'Regular'

 UNION

SELECT DISTINCT a.numerocuentacompania
     , a.compania
     , a.ruccompania
     , obtener_tipodoc(a.ruccompania)
     , a.tipocuenta
     , h.estadocobranza
     , to_char(h.fechaingreso,'dd/mm/yyyy') fecha
     , r.provincia
  FROM (SELECT *
          FROM fotoequipos
         WHERE ciclofacturacioncontrato = V_CICLO
           AND UPPER(product) LIKE '%POST%'
           AND ESTADOCONTRATO IN ('Activo' ,'Suspendido')) a
  left join p_compania h
    on a.codigocompania=h.codigocompania
   LEFT JOIN (SELECT * FROM
    (SELECT cuenta
          , provincia
          , ROW_NUMBER() OVER(PARTITION BY cuenta ORDER BY PERIODO DESC) RN
       FROM FA_BASEIMPRESIONTOTAL
      WHERE periodo >= TO_CHAR(sysdate-60,'YYYYMM') )
    WHERE RN = 1 ) R
    ON a.numerocuentaresponsable  = r.cuenta
 WHERE a.tipocuenta <>'Regular'
   AND a.numerocuentaresponsable NOT LIKE '1.%' ;

OPEN pcursor2 FOR
SELECT DISTINCT a.numerocuentaresponsable
     , a.compania
     , a.ruccompania
     , obtener_tipodoc(a.ruccompania) tipo_doc
     , a.tipocuenta
     , a.estadocobranzacuenta
     , to_char(d.fechaingreso,'dd/mm/yyyy') fecha
     , r.provincia
     , c.ultimos3meses
  FROM FA_BASESCOURIER_INCIDENTES c
  JOIN (SELECT *
          FROM fotoequipos
         WHERE ciclofacturacioncontrato = V_CICLO
           AND UPPER(product) LIKE '%POST%'
           AND ESTADOCONTRATO IN ('Activo' ,'Suspendido')) a
    ON c.cuenta  =a.numerocuentacompania
  LEFT JOIN pm_planes b
    ON a.codigoplantarifariobscs=b.c_plan
  LEFT JOIN p_compania d
    ON a.codigocompania  =d.codigocompania
  LEFT JOIN (SELECT * FROM
    (SELECT cuenta
          , provincia
          , ROW_NUMBER() OVER(PARTITION BY cuenta ORDER BY PERIODO DESC) RN
       FROM FA_BASEIMPRESIONTOTAL
      WHERE periodo >= TO_CHAR(sysdate-60,'YYYYMM') )
    WHERE RN = 1 ) R
    ON a.numerocuentaresponsable  = r.cuenta
 WHERE c.ciclo = V_CICLO
   AND c.ultimos3meses >=1
 UNION
 SELECT DISTINCT a.numerocuentacompania
      , a.compania
      , a.ruccompania
      , obtener_tipodoc(a.ruccompania)
      , a.tipocuenta
      , d.estadocobranza
      , to_char(d.fechaingreso,'dd/mm/yyyy') fecha
      , r.provincia
      , c.ultimos3meses
   FROM FA_BASESCOURIER_INCIDENTES c
   JOIN (SELECT *
          FROM fotoequipos
         WHERE ciclofacturacioncontrato = V_CICLO
           AND UPPER(product) LIKE '%POST%'
           AND ESTADOCONTRATO IN ('Activo' ,'Suspendido')) a
    ON c.cuenta  =a.numerocuentacompania
  LEFT JOIN p_compania d
    ON a.codigocompania  =d.codigocompania
   LEFT JOIN (SELECT * FROM
    (SELECT cuenta
          , provincia
          , ROW_NUMBER() OVER(PARTITION BY cuenta ORDER BY PERIODO DESC) RN
       FROM FA_BASEIMPRESIONTOTAL
      WHERE periodo >= TO_CHAR(sysdate-60,'YYYYMM') )
    WHERE RN = 1 ) R
    ON a.numerocuentaresponsable  = r.cuenta
  WHERE c.ciclo = V_CICLO
    AND c.ultimos3meses           >=1
    and a.numerocuentaresponsable NOT LIKE '1.%' ;

OPEN pcursor3 FOR
SELECT DISTINCT a.numerocuentaresponsable
     , a.compania
     , a.ruccompania
     , obtener_tipodoc(a.ruccompania) tipo_doc
     , a.tipocuenta
     , a.estadocobranzacuenta
     , TO_CHAR (d.fechaingreso, 'dd/mm/yyyy') fecha
     , r.provincia
  FROM (SELECT *
          FROM fotoequipos
         WHERE ciclofacturacioncontrato = V_CICLO
           AND UPPER(product) LIKE '%POST%'
           AND ESTADOCONTRATO IN ('Activo' ,'Suspendido')) a
  LEFT JOIN FA_BASESCOURIER_INCIDENTES c
    ON a.codigocompania = c.codigocompania
  LEFT JOIN p_compania d
    ON a.codigocompania = d.codigocompania
  LEFT JOIN FA_BASEMOTIVADOSTOTAL h
    ON     a.numerocuentaresponsable = h.cuenta
   AND TO_DATE (h.mes, 'mon-yy', 'nls_date_language=spanish') >=  ADD_MONTHS (TRUNC (SYSDATE), -10)
  LEFT JOIN (SELECT * FROM
                (SELECT cuenta
                      , provincia
                      , ROW_NUMBER() OVER(PARTITION BY cuenta ORDER BY PERIODO DESC) RN
                   FROM FA_BASEIMPRESIONTOTAL
                  WHERE periodo >= TO_CHAR(sysdate-60,'YYYYMM') )
                WHERE RN = 1 ) R
    ON a.numerocuentaresponsable  = r.cuenta
 WHERE a.tipocuenta = 'Regular'
   and a.estadocontrato='Activo'
   AND a.ciclofacturacioncontrato = V_CICLO
   AND c.cuenta IS NULL --NO TIENE INCIDENTES
   AND d.fechaingreso > ADD_MONTHS (TRUNC (SYSDATE), -3)
   AND h.cuenta IS NULL --NO ES MOTIVADO
   AND d.tipopersona = 'Natural'
   AND CASE WHEN LENGTH (d.RUCCOMPANIA) <> 11 THEN 'DNI'
            WHEN LENGTH (d.RUCCOMPANIA) = 11  AND (   d.RUCCOMPANIA LIKE '10%'OR d.RUCCOMPANIA LIKE '20%'
                 OR d.RUCCOMPANIA LIKE '15%'
                 OR d.RUCCOMPANIA LIKE '17%') THEN   'RUC'  END = 'DNI'
 UNION
SELECT DISTINCT a.numerocuentacompania
     , a.compania
     , a.ruccompania
     , a.tipocuenta
     , obtener_tipodoc(a.ruccompania)
     , d.estadocobranza
     , TO_CHAR (d.fechaingreso, 'dd/mm/yyyy') fecha
     , r.provincia
  FROM (SELECT *
          FROM fotoequipos
         WHERE ciclofacturacioncontrato = V_CICLO
           AND UPPER(product) LIKE '%POST%'
           AND ESTADOCONTRATO IN ('Activo' ,'Suspendido')) a
  LEFT JOIN FA_BASESCOURIER_INCIDENTES c
    ON a.codigocompania = c.codigocompania
  LEFT JOIN p_compania d
    ON a.codigocompania = d.codigocompania
  LEFT JOIN FA_BASEMOTIVADOSTOTAL h
    ON a.numerocuentaresponsable = h.cuenta
   AND TO_DATE (h.mes, 'mon-yy', 'nls_date_language=spanish') >=  ADD_MONTHS (TRUNC (SYSDATE), -10)
  LEFT JOIN (SELECT * FROM
    (SELECT cuenta
          , provincia
          , ROW_NUMBER() OVER(PARTITION BY cuenta ORDER BY PERIODO DESC) RN
       FROM FA_BASEIMPRESIONTOTAL
      WHERE periodo >= TO_CHAR(sysdate-60,'YYYYMM') )
    WHERE RN = 1 ) R
    ON a.numerocuentaresponsable  = r.cuenta
 WHERE a.tipocuenta = 'Regular'
   and           a.estadocontrato='Activo'
   AND a.ciclofacturacioncontrato = V_CICLO
   AND c.cuenta IS NULL
   AND a.numerocuentaresponsable NOT LIKE '1.%'
   AND d.fechaingreso > ADD_MONTHS (TRUNC (SYSDATE), -3)
   AND h.cuenta IS NULL
   AND d.tipopersona = 'Natural'
   AND CASE WHEN LENGTH (d.RUCCOMPANIA) <> 11 THEN 'DNI'
            WHEN LENGTH (d.RUCCOMPANIA) = 11 AND (   d.RUCCOMPANIA LIKE '10%'
                    OR d.RUCCOMPANIA LIKE '20%' OR d.RUCCOMPANIA LIKE '15%'
                    OR d.RUCCOMPANIA LIKE '17%') THEN  'RUC'  END = 'DNI';

END BASE_MEC_RESULTADOS;

PROCEDURE  PROCESAMIENTOBASEIMPRESION_T(speriodo VARCHAR2,sciclo1 VARCHAR2)
IS
sciclo varchar(10):=SUBSTR(sciclo1,2,1);
BEGIN
-- PROPÓSITO:
-- Actualizacion de campos de las tablas de impresion del mes y motivados del mes ;
/*
PREVIO=Se ha cargado el archivo completo, la base de motivados y la base de retenciones
*/
-- HISTORIAL DE MODIFICACION
-- Usuario                            Fecha            Comentario
-- ----------                         ---------              ----------------------
-- CCHAHUAS                  16/08/2016       Revisión del flujo y documentacion.
-- --------------------------------------------------------------------------
--Llenado de Temporales

EXECUTE IMMEDIATE 'TRUNCATE TABLE ods_gpf.fa_baseimpresion_basemes';
COMMIT;
INSERT INTO ods_gpf.fa_baseimpresion_basemes (cuenta,recibo,razonsocial,direccion,distrito,provincia,departamento,importe,estado,referencia)
SELECT code,invoice,company,address,distrito,provincia,dpto,0,estado,referencia
  FROM ods_gpf.fa_basebgh
 WHERE periodo = speriodo
   AND ciclo ='0'||sciclo;--2.33 SEG -- SE INSERTO 276227 --EL CICLO USA 05
COMMIT;

EXECUTE IMMEDIATE 'TRUNCATE TABLE ods_gpf.fa_baseimpresion_motivadosmes';
COMMIT;
INSERT INTO ods_gpf.fa_baseimpresion_motivadosmes(cuenta,recibo,motivo,estado,distrito,departamento,detallemotivo)
SELECT cuenta,recibo,motivo,estado,distrito,departamento,detallemotivo
  FROM ods_gpf.fa_bghmotivados
 WHERE periodo=speriodo
   AND ciclodef='0'||sciclo; --0.033 SEG -- SE INSERTO 6893 --EL CICLO USA 5
COMMIT;
EXECUTE IMMEDIATE 'TRUNCATE TABLE ods_gpf.temp_retenciones';
COMMIT;
INSERT INTO ods_gpf.temp_retenciones(codigo)
SELECT INVOICE
  FROM ods_gpf.FA_BGHRETENCION
 WHERE periodo=speriodo
   AND ciclo='0'||sciclo;--0.042 SEG -- SE INSERTO 38,975 --EL CICLO USA 05
COMMIT;

-------------------------------------------------------------------------------
   /*
   T1. ACTUALIZACION DE CAMPOS CICLO Y MES DE TABLA FA_BASEIMPRESION_BASEMES
    Se definen los ciclos y meses de la tabla de impresion del mes de acuerdo a los parametros enviados
   */
-------------------------------------------------------------------------------
  update ods_gpf.FA_BASEIMPRESION_BASEMES
  set ciclo=sciclo;--2,33 SEG -- SE ACTUALIZO 276,227 --EL CICLO USA 5
  commit;
  update ods_gpf.FA_BASEIMPRESION_BASEMES
  set mes=to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH');
  commit;--2.38 SEG -- SE ACTUALIZO 276,227
-------------------------------------------------------------------------------
   /*
   T2. ACTUALIZACION DE CAMPO ESRETENCION DE TABLA FA_BASEIMPRESION_BASEMES
   Se coloca la marca si es retencion extraido de la tabla de retenciones
   */
-------------------------------------------------------------------------------

  UPDATE ods_gpf.FA_BASEIMPRESION_BASEMES a
  SET a.esretencion='X'
  WHERE EXISTS
     (SELECT 1 FROM ods_gpf.TEMP_RETENCIONES b WHERE trim(a.recibo)=trim(b.codigo)
     );--0.008 SEG -- SE ACTUALIZO 0 -
-------------------------------------------------------------------------------
   /*
   T3. ACTUALIZACION DE CAMPOS CICLO Y MES DE TABLA fa_baseimpresion_motivadosmes
   Se definen los ciclos y meses de la tabla de motivados del mes de acuerdo a los parametros enviados
   */
-------------------------------------------------------------------------------

  UPDATE ods_gpf.fa_baseimpresion_motivadosmes
     SET ciclo=sciclo;--0.079 SEG -- SE ACTUALIZO 6,893 --EL CICLO USA 5
  COMMIT;
  UPDATE ods_gpf.fa_baseimpresion_motivadosmes
     SET mes=to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH') ;--0.091 SEG -- SE ACTUALIZO 6,893
  COMMIT;

  -------------------------------------------------------------------------------
   /*
   T1. FORMATEO DEL CAMPO CUENTAS DE FA_BASEIMPRESION_BASEMES Y FA_BASEIMPRESION_MOTIVADOSMES
   Se da formato al campo cuentas de las tablas fa_baseimpresion_basemes y fa_baseimpresion_motivadosmes
   según el tipo de cuenta
   */
-------------------------------------------------------------------------------
   UPDATE ods_gpf.fa_baseimpresion_basemes SET cuenta = REPLACE (cuenta, '''', '');
   UPDATE ods_gpf.fa_baseimpresion_basemes
   SET cuenta = RPAD (cuenta, 10, '0')
   WHERE cuenta LIKE '1.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE ods_gpf.fa_baseimpresion_basemes
   SET cuenta = RPAD (cuenta, 5, '0')
   WHERE cuenta LIKE '3.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE ods_gpf.fa_baseimpresion_basemes
   SET cuenta = RPAD (cuenta, 6, '0')
   WHERE cuenta LIKE '4.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE ods_gpf.fa_baseimpresion_basemes
   SET cuenta = RPAD (cuenta, 7, '0')
   WHERE cuenta LIKE '5.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE ods_gpf.fa_baseimpresion_motivadosmes
   SET cuenta = RPAD (cuenta, 10, '0')
   WHERE cuenta LIKE '1.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE ods_gpf.fa_baseimpresion_motivadosmes
   SET cuenta = RPAD (cuenta, 5, '0')
   WHERE cuenta LIKE '3.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE ods_gpf.fa_baseimpresion_motivadosmes
   SET cuenta = RPAD (cuenta, 6, '0')
   WHERE cuenta LIKE '4.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   UPDATE ods_gpf.fa_baseimpresion_motivadosmes
   SET cuenta = RPAD (cuenta, 7, '0')
   WHERE cuenta LIKE '5.%'
   AND INSTR (cuenta, '.', 1, 2) = 0;
   --3.92 SEG
-------------------------------------------------------------------------------
   /*
   T2. ACTUALIZACION DE CAMPOS INFORMATIVOS DE FA_BASEIMPRESION_BASEMES
   Se actualizan los campos informativos de la tabla de FA_BASEIMPRESION_BASEMES
   en base a cruce con P_COMPANIA por cuentacompania
   */
-------------------------------------------------------------------------------
 MERGE INTO
   (
   SELECT c.segmento AS segmentoe,  c.consultor AS
      consultore,  c.dealer AS dealere,  c.canalventa AS canalventae,
      c.tipocuenta AS tipocuentae,c.tipopersona AS
      TIPOPERSONAE,C.TIPODOCUMENTO AS
      tipodocumentoe, c.codigocompania AS codigocompaniae,C.cuenta,c.ruccompania as ruccompaniae
   FROM ods_gpf.fa_baseimpresion_basemes c
   )A
   USING
   (
   select segmento,consultor,dealer,tipocuenta,canalventa,tipopersona,tipodocumento,codigocompania,cuentacompania,ruccompania from (
  SELECT
    c4.segmento AS segmento, c4.consultor AS consultor, c4.dealer AS
      dealer, c4.tipocuenta AS tipocuenta, c4.canalventa AS canalventa,
      C4.TIPOPERSONA AS TIPOPERSONA,
      c4.tipodocumento, c4.codigocompania AS codigocompania,C4.cuentacompania,c4.ruccompania as ruccompania,row_number () over (partition by c4.cuentacompania order by c4.fechacreacion) as rn
   FROM  ods_gpf.p_compania c4
  ) where rn=1
   )B
   ON
   (
    DECODE (INSTR (A.cuenta, '.', 1, 2), 0, A.cuenta, SUBSTR (A.cuenta, 1,
      INSTR (A.cuenta, '.', 1, 2) - 1)) = B.cuentacompania
   )
   WHEN MATCHED THEN
   UPDATE SET segmentoe    = segmento, consultore = consultor, dealere = dealer, canalventae = canalventa,tipocuentae=tipocuenta,tipopersonae=tipopersona,
   tipodocumentoe=tipodocumento,codigocompaniae=codigocompania,ruccompaniae=ruccompania;--15.308 SEG -- SE ACTUALIZO 276,171
   COMMIT;
-------------------------------------------------------------------------------
   /*
   T3. ACTUALIZACION DEL CODIGOCOMPANIA EN FA_BASEIMPRESION_BASEMES
   Se actualiza el codigo compania de la tabla FA_BSEIMPRESION_BASEMES
   en base a un cruce con la tabla P_COMPANIA por razonsocial.
   */
-------------------------------------------------------------------------------
MERGE INTO
   (
   SELECT c.codigocompania AS motivoE,C.RAZONSOCIAL,C.codigocompania   FROM ods_gpf.FA_BASEIMPRESION_BASEMES c
   )A
   USING
   (
   select razonsocial,codigocompania as motivo from (
   select razonsocial,codigocompania,row_number () over (partition by razonsocial order by codigocompania desc) as rn from ods_gpf.p_compania where tipocompania <> 'Prospecto'
   ) where rn=1
   )B
   ON
   (
   A.RAZONSOCIAL  =B.RAZONSOCIAL
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE=motivo;--39.09 SEG -- SE ACTUALIZO 229,920
    commit;
-------------------------------------------------------------------------------
   /*
   T4. ACTUALIZACION DE CAMPOS INFORMATIVOS DE FA_BASEIMPRESION_BASEMES
   Se actualizan los campos informativos de la tabla de FA_BASEIMPRESION_BASEMES
   en base a cruce con P_COMPANIA por codigocompania

   observar si actualiza algo

   */
-------------------------------------------------------------------------------
  MERGE INTO
   (
    SELECT c.segmento AS segmentoe, c.consultor AS
      consultore,  c.dealer AS dealere,  c.canalventa AS canalventae,
      c.tipocuenta AS tipocuentae,c.tipopersona AS
      TIPOPERSONAE,C.TIPODOCUMENTO AS
      tipodocumentoe,C.TIPODOCUMENTO,C.CODIGOCOMPANIA
   FROM ods_gpf.fa_baseimpresion_basemes c
   )A
   USING
   (
   select segmento,consultor,dealer,canalventa,tipocuenta,tipopersona,tipodocumento,codigocompania from (
SELECT
    c4.segmento AS segmento, c4.consultor AS consultor, c4.dealer AS
      dealer, c4.canalventa AS canalventa, c4.tipocuenta AS tipocuenta,
      C4.TIPOPERSONA AS TIPOPERSONA, DECODE(LENGTH(C4.RUCCOMPANIA),8,'DNI',11,'RUC','-') AS
      tipodocumento,C4.CODIGOCOMPANIA,row_number () over (partition by C4.codigocompania order by C4.fechacreacion) rn
   FROM  ods_gpf.p_compania c4
) where rn=1
   )B
   ON
   (
   A.CODIGOCOMPANIA = B.CODIGOCOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET segmentoe    = segmento, consultore = consultor, dealere = dealer, canalventae    = canalventa,tipocuentae=tipocuenta,tipopersonae=tipopersona,
   tipodocumentoe=tipodocumento;--10.42 SEG -- SE ACTUALIZO 276,183
    commit;

    MERGE INTO
   (SELECT c.consultor AS consultore,  c.dealer AS dealere, c.canalventa AS canalventae,
      c.codigocompania
   FROM ods_gpf.fa_baseimpresion_basemes c) A
   USING
   (select codigocompania,vendedor,dealer from (
   SELECT codigocompania,vendedor,dealer,fechaactivacion,row_number () over (partition by codigocompania order by fechaactivacion desc) rn FROM tnp_inar_empresas_ods
   ) where rn=1) B
   ON
   (A.codigocompania=B.codigocompania)
   WHEN MATCHED THEN
   UPDATE SET A.CONSULTORE=B.VENDEDOR, A.DEALERE=B.DEALER;

   MERGE INTO
   (SELECT c.consultor AS consultore,  c.dealer AS dealere, c.canalventa AS canalventae,
      c.codigocompania
   FROM ods_gpf.fa_baseimpresion_basemes c) A
   USING
   (select codigocompania,vendedor,dealer from (
   SELECT codigocompania,vendedor,dealer,fechaactivacion,row_number () over (partition by codigocompania order by fechaactivacion desc) rn FROM tnp_inar_personas_ods
   ) where rn=1) B
   ON
   (A.codigocompania=B.codigocompania)
   WHEN MATCHED THEN
   UPDATE SET A.CONSULTORE=B.VENDEDOR, A.DEALERE=B.DEALER;
   commit;
-------------------------------------------------------------------------------
   /*
   T5. ACTUALIZACION DEL CAMPO DETALLEMOTIVO Y MOTIVO DE FA_BASEIMPRESION_MOTIVADOSMES
   Se actualizan los campos detallemotivo y motivo de la tabla FA_BASEIMPRESION_MOTIVADOSMES
   */
-------------------------------------------------------------------------------

   UPDATE ods_gpf.fa_baseimpresion_motivadosmes
   SET detallemotivo = SUBSTR (motivo, INSTR (motivo, '-', 1, 1) - LENGTH (
      motivo))
   WHERE motivo LIKE 'Direccion Errada%';
   UPDATE ods_gpf.fa_baseimpresion_motivadosmes
   SET detallemotivo = SUBSTR (motivo, INSTR (motivo, '-', 1, 2) - LENGTH (
      motivo))
   WHERE motivo LIKE 'Direccion Incompleta-Inexacta%';
   UPDATE ods_gpf.fa_baseimpresion_motivadosmes
   SET detallemotivo = SUBSTR (motivo, INSTR (motivo, '(', 1, 1) - LENGTH (
      motivo), LENGTH (motivo)                                   - INSTR (
      motivo, '(', 1, 1)                                         - 1)
   WHERE motivo LIKE 'DIREC. ERRADA%';
   UPDATE ods_gpf.fa_baseimpresion_motivadosmes
   SET motivo = 'Direccion Incompleta'
   WHERE UPPER (motivo) LIKE '%INCOMPLETA%';
   UPDATE ods_gpf.fa_baseimpresion_motivadosmes
   SET motivo = 'Direccion Errada'
   WHERE UPPER (motivo) LIKE '%ERRADA%';
   UPDATE ods_gpf.fa_baseimpresion_motivadosmes SET motivo = TRIM (motivo);
    commit;
    --0.07 seg
 -------------------------------------------------------------------------------
   /*
   T6. ACTUALIZACION DE CAMPOS MOTIVO, DETALLEMOTIVO Y ESMOTIVADO DE FA_BASEIMPRESION_BASEMES
   Se actualizan los campos motivo y detallemotivo de la tabla FA_BASEIMPRESION_BASEMES
   en base a un cruce con la tabla FA_BASEIMPRESION_MOTIVADOSMES por recibo. Además se
   actualiza el campo esmotivado con 'X' si es que el campo motivo no es nulo.
   */
-------------------------------------------------------------------------------
 MERGE INTO
   (
      SELECT C.MOTIVO AS MOTIVOE,  C.DETALLEMOTIVO AS
         detallemotivoe,C.ESMOTIVADO as fechae,C.recibo
      FROM ods_gpf.fa_baseimpresion_basemes c
   )A
   USING
   (
   SELECT distinct
   c4.motivo AS motivo, c4.detallemotivo AS detallemotivo,'X' as fecha,C4.recibo
   from ods_gpf.fa_baseimpresion_motivadosmes c4
   )B
   ON
   (
    A.recibo = B.recibo
   )
   WHEN MATCHED THEN
   UPDATE SET  motivoe = motivo, detallemotivoe = detallemotivo,fechae=fecha;--0.36 SEG -- SE ACTUALIZO 6,893
    commit;
 -------------------------------------------------------------------------------
   /*
   T7. ACTUALIZACION DE CAMPO CANTIDAD3G Y TIENE3G DE FA_BASEIMPRESION_BASEMES
   Se actualiza el campo cantidad3g en base a vista de fotoequipos y pm_planes.
   Además actualiza el campo tiene3g si el campo cantidad3g no es nulo.
   */
-------------------------------------------------------------------------------
  MERGE INTO
   (
    SELECT c.cantidad3g AS cantidad3ge,C.cuenta
      FROM ods_gpf.fa_baseimpresion_basemes c
   )A
   USING
   (
    SELECT numerocuentaresponsable, COUNT (
            *) cantidad3g
         FROM
            (SELECT a.numerocuentaresponsable, b.product, b.grupo
            FROM fotoequipos a
            LEFT JOIN ods_gpf.pm_planes b ON TO_CHAR ( a.codigoplantarifariobscs) =
               b.c_plan
            )
         WHERE grupo LIKE '%3G%'
         OR grupo           = 'Internet Nextel'
         AND product not in ('iDen Pre','IN Pre','Non PTT Prepago')
         GROUP BY numerocuentaresponsable
   )B
   ON
   (
   A.cuenta = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET cantidad3ge = cantidad3g;--10.53 SEG -- SE ACTUALIZO 48,325
commit;
-------------------------------------------------------------------------------
   /*
   T8. ACTUALIZACION DE CAMPO CANTIDAD2G Y TIENE2G DE FA_BASEIMPRESION_BASEMES
   Se actualiza el campo cantidad2g en base a vista de fotoequipos y pm_planes.
   Además actualiza el campo tiene2g si el campo cantidad3g no es nulo.
   */
-------------------------------------------------------------------------------
 MERGE INTO
   (
   SELECT C.CANTIDAD2G AS CANTIDAD2GE,c.cuenta
      FROM ods_gpf.fa_baseimpresion_basemes c
   )A
   USING
   (
    SELECT numerocuentaresponsable, COUNT (
            *) cantidad2g
         FROM
            (SELECT a.numerocuentaresponsable, b.product, b.grupo
            FROM fotoequipos a
            LEFT JOIN ods_gpf.pm_planes b ON TO_CHAR ( a.codigoplantarifariobscs) =
               b.c_plan
            )
         WHERE grupo NOT LIKE '%3G%'
         AND grupo         <> 'Internet Nextel'
         AND product not in ('iDen Pre','IN Pre','Non PTT Prepago')
         /*g_osiptel NOT IN ('Prepago', 'IN Prepago')*/
         GROUP BY numerocuentaresponsable
   )B
   ON
   (
   A.cuenta = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET cantidad2ge = cantidad2g;--10.86 SEG -- SE ACTUALIZO 1,492
    commit;
-------------------------------------------------------------------------------
   /*
   T9. ACTUALIZACION DE CAMPOS ESTADO, CONSULTOR Y CANALVENTA DE FA_BASEIMPRESION_MOTIVADOSMES
   Se actualizan los campos estado, consultor y canal veta de la tabla
   fa_baseimpresion_motivadosmes en base a un cruce con FA_BASEIMPRESION_BASEMES
   por recibo
   */
-------------------------------------------------------------------------------
  MERGE INTO
   (
   SELECT c.estado AS estadoe, c.consultor AS
         consultore,  c.canalventa AS canalventae,c.recibo
      FROM ods_gpf.fa_baseimpresion_motivadosmes c
   )A
   USING
   (
   SELECT
    c4.estado AS estado, c4.consultor AS consultor, c4.canalventa AS canalventa,c4.recibo
   FROM ods_gpf.fa_baseimpresion_basemes c4
   )B
   ON
   (
   A.recibo = B.recibo
   )
   WHEN MATCHED THEN
   UPDATE SET estadoe = estado, consultore = consultor, canalventae = canalventa;--0.17 SEG -- SE ACTUALIZO 6,893
   commit;
-------------------------------------------------------------------------------
   /*
   T10. ACTUALIZACION DE CAMPO CANTIDADNEXTELPLUS DE FA_BASEIMPRESION_BASEMES
   Se actualiza el campo cantidadnextelplus de la tabla FA_BASEIMPRESION_BASEMES
   en vase a cruce con vista de fotoequipos por cuenta-numerocuentaresponsable
   */
-------------------------------------------------------------------------------
  MERGE INTO
   (
    SELECT c.cantidadnextelplus AS cantidadnextelpluse,c.cuenta
      FROM ods_gpf.fa_baseimpresion_basemes c
   )A
   USING
   (
    SELECT numerocuentaresponsable, COUNT (
            *) cantidadnextelplus
         FROM ods_gpf.fotoequipos
         WHERE plantarifario LIKE '%Nextel+%'
         AND estadocontrato IN ('Activo', 'Suspendido')
         GROUP BY numerocuentaresponsable
   )B
   ON
   (
   A.cuenta = B.numerocuentaresponsable
   )
   WHEN MATCHED THEN
   UPDATE SET cantidadnextelpluse = cantidadnextelplus;--2.44 SEG -- SE ACTUALIZO 0
    COMMIT;

-------------------------------------------------------------------------------
   /*
   T1.
    Se limpia la tbla para el reproceso. Se ingresan en la base impresion los
    registros correspondientes a la base impresion del mes
   */
-------------------------------------------------------------------------------

DELETE FROM ods_gpf.fa_baseimpresiontotal WHERE mes=to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH') AND CICLO=SCICLO;--6.06 seg usa ciclo 5
commit;
INSERT
INTO FA_BASEIMPRESIONTOTAL (CUENTA, RECIBO, RAZONSOCIAL, DIRECCION, DISTRITO, PROVINCIA, DEPARTAMENTO,IMPORTE, ESTADO, REFERENCIA, MES, CICLO, MOTIVO, ESMOTIVADO, TIENE3G,
    CANTIDAD3G, TIENE2G, CANTIDAD2G, SEGMENTO, CANTIDADNEXTELPLUS, CONSULTOR,DEALER, CANALVENTA,  TIPOCUENTA, TIPOPERSONA, TIPODOCUMENTO,ESRETENCION, CODIGOCOMPANIA,RUCCOMPANIA)
SELECT CUENTA, RECIBO, RAZONSOCIAL, DIRECCION, DISTRITO, PROVINCIA,DEPARTAMENTO, IMPORTE, ESTADO, REFERENCIA, MES, CICLO, DetalleMOTIVO, ESMOTIVADO,TIENE3G, CANTIDAD3G, TIENE2G, CANTIDAD2G,
                SEGMENTO, CANTIDADNEXTELPLUS,CONSULTOR, DEALER, CANALVENTA, TIPOCUENTA, TIPOPERSONA, TIPODOCUMENTO,ESRETENCION, CODIGOCOMPANIA,RUCCOMPANIA
                FROM ods_gpf.FA_BASEIMPRESION_BASEMES;--5.56 seg
commit;
update ods_gpf.FA_BASEIMPRESIONTOTAL set PERIODO=SPERIODO where PERIODO is null;--29.03 seg -- se actualizo 276,227
COMMIT;
-------------------------------------------------------------------------------
    /*
   T2.
    Se ingresan en la tabla de motivados totales con la informacion de base impresion de motivados del mes
   */
-------------------------------------------------------------------------------
DELETE FROM ods_gpf.FA_BASEMOTIVADOSTOTAL WHERE mes=to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH') AND CICLO=SCICLO;--0.33 seg
commit;
INSERT INTO ods_gpf.FA_BASEMOTIVADOSTOTAL (CUENTA, RECIBO, MOTIVO, MES, CICLO, CANALVENTA, CONSULTOR, ESTADO,DISTRITO,DEPARTAMENTO)
   SELECT CUENTA, RECIBO, MOTIVO, MES, CICLO, CANALVENTA, CONSULTOR, ESTADO,DISTRITO,DEPARTAMENTO FROM ods_gpf.FA_BASEIMPRESION_MOTIVADOSMES;--0.042 seg --se inserto 6,893
COMMIT;
-------------------------------------------------------------------------------
    /*
    T3.-
    Se inicia la limpieza de Resumen Stats Rechazados, tabla que sirve para las metricas de la consola de procesos
    */
-------------------------------------------------------------------------------

delete from ods_gpf.FA_RESUMEN_STATSRECHAZADOS where mes=to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH');
commit;
-------------------------------------------------------------------------------
    /*
    T4.-
    Se carga la informacion de resumen de rechazados de base de impresion, tomando en cuenta solo las metricas de estado Antiguo y Nuevo (se decartan los negativos)
    */
-------------------------------------------------------------------------------

INSERT
INTO ods_gpf.FA_RESUMEN_STATSRECHAZADOS
   (
      ESTADO, MES, CANALVENTA, TIPODOCUMENTO, ESMOTIVADO, CANTIDAD
   )
SELECT ESTADO,MES,CANALVENTA,TIPODOCUMENTO,ESMOTIVADO,COUNT(*) CANTIDAD
FROM
   (SELECT ESTADO,MES,
      CASE
         WHEN CANALVENTA IN ('Retail','Showroom', 'Venta Directa','Venta Indirecta')
         THEN CANALVENTA
         ELSE 'Otros'
      END CANALVENTA ,
      CASE
         WHEN TIPODOCUMENTO IS NULL OR TIPODOCUMENTO    ='-'
         THEN 'DNI'
      ELSE TIPODOCUMENTO
      END TIPODOCUMENTO, ESMOTIVADO
   FROM ods_gpf.FA_BASEIMPRESIONTOTAL
   WHERE ESTADO IN ('LIMA ANTIGUO', 'LIMA NUEVO', 'PROV ANTIGUO', 'PROV NUEVO') AND mes=to_char(to_date(speriodo,'yyyymm'),'Mon-yy','NLS_DATE_LANGUAGE=SPANISH'))
   GROUP BY ESTADO, MES, CANALVENTA ,TIPODOCUMENTO,ESMOTIVADO;--1.78 seg --se inserto 77
commit;
update ods_gpf.FA_BASEIMPRESIONTOTAL set TIPODOC_2='DNI' where TIPODOCUMENTO='DNI' and PERIODO=SPERIODO and CICLO=sciclo;--6.62 seg
update ods_gpf.FA_BASEIMPRESIONTOTAL set TIPODOC_2='RUC10' where OBTENER_TIPODOC_2(RUCCOMPANIA)='RUC10' and TIPODOCUMENTO='RUC' and PERIODO=SPERIODO and CICLO=SCICLO;--4.32
update ods_gpf.FA_BASEIMPRESIONTOTAL set TIPODOC_2='RUC20' where OBTENER_TIPODOC_2(RUCCOMPANIA)='RUC20' and TIPODOCUMENTO='RUC' and PERIODO=SPERIODO and CICLO=sciclo;--1.36
commit;

END PROCESAMIENTOBASEIMPRESION_T;

PROCEDURE VINCPAGEQ_OBTENER_PERIODOS(pcursor  OUT t_cursor) IS
BEGIN

OPEN PCURSOR FOR
SELECT DISTINCT PERIODO FROM (
    select TO_CHAR(fecharecibido,'YYYYMM') PERIODO from FA_INCIDENTEDIARIO_PAGEQ_2)
ORDER BY PERIODO DESC;

END VINCPAGEQ_OBTENER_PERIODOS;

PROCEDURE VINCPAGEQ_OBTENER_TCLIENTENT(pcursor  OUT t_cursor, i_periodo varchar2, f_periodo varchar2, varea varchar2) IS
BEGIN

OPEN PCURSOR FOR
SELECT DESTINO,CLASIFICACION,FECHA,PERIODO,ROUND(TOT,2),ROUND(DIA,2),ROUND(DIA2,2) FROM (
select DESTINO,CLASIFICACION,TO_CHAR(FECHARECIBIDO,'DD/MM/YYYY') FECHA,TO_CHAR(FECHARECIBIDO,'YYYYMM') PERIODO,SUM(CANTIDAD) TOT,SUM(DIAS_ACUM) DIA,ROUND(AVG(DIAS_ACUM),4) DIA2 FROM (
select fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC') tipocuenta2,clasificacion,destino,ciclo,tipoincidente,provincia,SUM(antiguedad/24) as dias_acum,count(cod_incidente) as cantidad from (
select provincia,clasificacion,cod_incidente,cod_compania,razonsocial,tipocuenta,cuenta,ciclo,estadoincidente,tipoincidente,temaincidente,espec_incidente,desc_incidente,origen,destino,fecha,fechaingresoincidente,fecharecibido,fechaaccion,fechacierreincidente,duracion,antiguedad,inboxprecedente,tdoc,periodo,row_number () over (partition by cod_incidente order by fecharecibido desc,antiguedad desc) as rn from (
select decode(n.provincia,'LIMA','LIMA','PROVINCIA') as provincia,m.* from (
select b.clasificacion,a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is not null
UNION ALL
select DECODE(NVL(y.clasificacion,'-'),'-','NO CLASIFICADO',y.clasificacion),x.* from
(select a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is null) x
left join
FA_GLOSARIOINCIDENTES_PAGEQ y on x.espec_incidente=y.especificacion
) m left join p_compania n on to_number(m.cod_compania)=n.codigocompania
) where fechaaccion is null
)
/*where rn=1*/
group by fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC'),clasificacion,destino,ciclo,tipoincidente,provincia
order by fecharecibido desc,destino, clasificacion
)  where (TO_CHAR(fecharecibido,'YYYYMMDD') >= i_periodo
        and TO_CHAR(fecharecibido,'YYYYMMDD') <= f_periodo)
        and DESTINO=varea
    GROUP BY DESTINO,CLASIFICACION,TO_CHAR(FECHARECIBIDO,'DD/MM/YYYY'),TO_CHAR(FECHARECIBIDO,'YYYYMM')
UNION ALL
select 'Total','-','-',TO_CHAR(FECHARECIBIDO,'YYYYMM'),SUM(CANTIDAD),SUM(DIAS_ACUM),ROUND(AVG(DIAS_ACUM),4) FROM (
select fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC') tipocuenta2,clasificacion,destino,ciclo,tipoincidente,provincia,SUM(antiguedad/24) as dias_acum,count(cod_incidente) as cantidad from (
select provincia,clasificacion,cod_incidente,cod_compania,razonsocial,tipocuenta,cuenta,ciclo,estadoincidente,tipoincidente,temaincidente,espec_incidente,desc_incidente,origen,destino,fecha,fechaingresoincidente,fecharecibido,fechaaccion,fechacierreincidente,duracion,antiguedad,inboxprecedente,tdoc,periodo,row_number () over (partition by cod_incidente order by fecharecibido desc,antiguedad desc) as rn from (
select decode(n.provincia,'LIMA','LIMA','PROVINCIA') as provincia,m.* from (
select b.clasificacion,a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is not null
UNION ALL
select DECODE(NVL(y.clasificacion,'-'),'-','NO CLASIFICADO',y.clasificacion),x.* from
(select a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is null) x
left join
FA_GLOSARIOINCIDENTES_PAGEQ y on x.espec_incidente=y.especificacion
) m left join p_compania n on to_number(m.cod_compania)=n.codigocompania
) where fechaaccion is null
)
/*where rn=1*/
group by fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC'),clasificacion,destino,ciclo,tipoincidente,provincia
order by fecharecibido desc,destino, clasificacion
)  where (TO_CHAR(fecharecibido,'YYYYMMDD') >= i_periodo
        and TO_CHAR(fecharecibido,'YYYYMMDD') <= f_periodo)
        and DESTINO=varea
    GROUP BY TO_CHAR(FECHARECIBIDO,'YYYYMM')
) ORDER BY PERIODO,to_date(decode(fecha,'-','31/12/2100',fecha),'dd/mm/yyyy'),DESTINO;
END VINCPAGEQ_OBTENER_TCLIENTENT;

PROCEDURE VINCPAGEQ_OBTENER_TCLIENTATE(pcursor  OUT t_cursor, i_periodo varchar2, f_periodo varchar2, varea varchar2) IS
BEGIN

OPEN PCURSOR FOR
SELECT DESTINO,CLASIFICACION,FECHA,PERIODO,ROUND(TOT,2),ROUND(DIA,2),ROUND(DIA2,2) FROM (
select DESTINO,CLASIFICACION,TO_CHAR(FECHARECIBIDO,'DD/MM/YYYY') FECHA,TO_CHAR(FECHARECIBIDO,'YYYYMM') PERIODO,SUM(CANTIDAD) TOT,SUM(DIAS_ACUM) DIA,ROUND(AVG(DIAS_ACUM),4) DIA2 FROM (
select fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC') tipocuenta2,clasificacion,destino,ciclo,tipoincidente,provincia,SUM(antiguedad/24) as dias_acum,count(cod_incidente) as cantidad from (
select provincia,clasificacion,cod_incidente,cod_compania,razonsocial,tipocuenta,cuenta,ciclo,estadoincidente,tipoincidente,temaincidente,espec_incidente,desc_incidente,origen,destino,fecha,fechaingresoincidente,fecharecibido,fechaaccion,fechacierreincidente,duracion,antiguedad,inboxprecedente,tdoc,periodo,row_number () over (partition by cod_incidente order by fecharecibido desc,antiguedad desc) as rn from (
select decode(n.provincia,'LIMA','LIMA','PROVINCIA') as provincia,m.* from (
select b.clasificacion,a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is not null
UNION ALL
select DECODE(NVL(y.clasificacion,'-'),'-','NO CLASIFICADO',y.clasificacion),x.* from
(select a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is null) x
left join
FA_GLOSARIOINCIDENTES_PAGEQ y on x.espec_incidente=y.especificacion
) m left join p_compania n on to_number(m.cod_compania)=n.codigocompania
) where fechaaccion is not null
)
/*where rn=1*/
group by fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC'),clasificacion,destino,ciclo,tipoincidente,provincia
order by fecharecibido desc,destino, clasificacion
)  where (TO_CHAR(fecharecibido,'YYYYMMDD') >= i_periodo
        and TO_CHAR(fecharecibido,'YYYYMMDD') <= f_periodo)
        and DESTINO=varea
    GROUP BY DESTINO,CLASIFICACION,TO_CHAR(FECHARECIBIDO,'DD/MM/YYYY'),TO_CHAR(FECHARECIBIDO,'YYYYMM')
UNION ALL
select 'Total','-','-',TO_CHAR(FECHARECIBIDO,'YYYYMM'),SUM(CANTIDAD),SUM(DIAS_ACUM),ROUND(AVG(DIAS_ACUM),4) FROM (
select fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC') tipocuenta2,clasificacion,destino,ciclo,tipoincidente,provincia,SUM(antiguedad/24) as dias_acum,count(cod_incidente) as cantidad from (
select provincia,clasificacion,cod_incidente,cod_compania,razonsocial,tipocuenta,cuenta,ciclo,estadoincidente,tipoincidente,temaincidente,espec_incidente,desc_incidente,origen,destino,fecha,fechaingresoincidente,fecharecibido,fechaaccion,fechacierreincidente,duracion,antiguedad,inboxprecedente,tdoc,periodo,row_number () over (partition by cod_incidente order by fecharecibido desc,antiguedad desc) as rn from (
select decode(n.provincia,'LIMA','LIMA','PROVINCIA') as provincia,m.* from (
select b.clasificacion,a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is not null
UNION ALL
select DECODE(NVL(y.clasificacion,'-'),'-','NO CLASIFICADO',y.clasificacion),x.* from
(select a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is null) x
left join
FA_GLOSARIOINCIDENTES_PAGEQ y on x.espec_incidente=y.especificacion
) m left join p_compania n on to_number(m.cod_compania)=n.codigocompania
) where fechaaccion is not null
)
/*where rn=1*/
group by fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC'),clasificacion,destino,ciclo,tipoincidente,provincia
order by fecharecibido desc,destino, clasificacion
)  where (TO_CHAR(fecharecibido,'YYYYMMDD') >= i_periodo
        and TO_CHAR(fecharecibido,'YYYYMMDD') <= f_periodo)
        and DESTINO=varea
    GROUP BY TO_CHAR(FECHARECIBIDO,'YYYYMM')
) ORDER BY PERIODO,to_date(decode(fecha,'-','31/12/2100',fecha),'dd/mm/yyyy'),DESTINO;

END VINCPAGEQ_OBTENER_TCLIENTATE;

PROCEDURE VINCPAGEQ_OBTENER_RCLIENTENT(pcursor  OUT t_cursor, i_periodo varchar2, f_periodo varchar2, varea varchar2) IS
BEGIN

OPEN PCURSOR FOR
select DESTINO,CLASIFICACION,fecha,periodo,ROUND(TOT_LIMA,2),ROUND(DIA_LIMA,2),ROUND(DIA_LIMA2,2),ROUND(TOT_PROV,2),ROUND(DIA_PROV,2),ROUND(DIA_PROV2,2) FROM (
select DESTINO,CLASIFICACION,TO_CHAR(FECHARECIBIDO,'DD/MM/YYYY') fecha,TO_CHAR(FECHARECIBIDO,'YYYYMM') periodo,SUM(DECODE(provincia,'LIMA',cantidad,0)) tot_lima,SUM(DECODE(provincia,'LIMA',DIAS_ACUM,0)) dia_lima,NVL(AVG(DECODE(provincia,'LIMA',DIAS_ACUM,NULL)),0) dia_lima2,SUM(DECODE(provincia,'PROVINCIA',cantidad,0)) tot_prov,SUM(DECODE(provincia,'PROVINCIA',DIAS_ACUM,0)) dia_prov,NVL(AVG(DECODE(provincia,'PROVINCIA',DIAS_ACUM,null)),0) dia_prov2 FROM (
select fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC') tipocuenta2,clasificacion,destino,ciclo,tipoincidente,provincia,SUM(antiguedad/24) as dias_acum,count(cod_incidente) as cantidad from (
select provincia,clasificacion,cod_incidente,cod_compania,razonsocial,tipocuenta,cuenta,ciclo,estadoincidente,tipoincidente,temaincidente,espec_incidente,desc_incidente,origen,destino,fecha,fechaingresoincidente,fecharecibido,fechaaccion,fechacierreincidente,duracion,antiguedad,inboxprecedente,tdoc,periodo,row_number () over (partition by cod_incidente order by fecharecibido desc,antiguedad desc) as rn from (
select decode(n.provincia,'LIMA','LIMA','PROVINCIA') as provincia,m.* from (
select b.clasificacion,a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is not null
UNION ALL
select DECODE(NVL(y.clasificacion,'-'),'-','NO CLASIFICADO',y.clasificacion),x.* from
(select a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is null) x
left join
FA_GLOSARIOINCIDENTES_PAGEQ y on x.espec_incidente=y.especificacion
) m left join p_compania n on to_number(m.cod_compania)=n.codigocompania
) where fechaaccion is null
)
/*where rn=1*/
group by fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC'),clasificacion,destino,ciclo,tipoincidente,provincia
order by fecharecibido desc,destino, clasificacion
)  where (TO_CHAR(fecharecibido,'YYYYMMDD') >= i_periodo
        and TO_CHAR(fecharecibido,'YYYYMMDD') <= f_periodo)
        and DESTINO=varea
    group by DESTINO,CLASIFICACION,TO_CHAR(FECHARECIBIDO,'DD/MM/YYYY'),TO_CHAR(FECHARECIBIDO,'YYYYMM')
UNION ALL
select 'Total','-','-',TO_CHAR(FECHARECIBIDO,'YYYYMM'),SUM(DECODE(provincia,'LIMA',cantidad,0)),SUM(DECODE(provincia,'LIMA',DIAS_ACUM,0)),ROUND(AVG(DECODE(provincia,'LIMA',DIAS_ACUM,0)),4),SUM(DECODE(provincia,'PROVINCIA',cantidad,0)),SUM(DECODE(provincia,'PROVINCIA',DIAS_ACUM,0)),ROUND(AVG(DECODE(provincia,'PROVINCIA',DIAS_ACUM,NULL)),4) FROM (
select fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC') tipocuenta2,clasificacion,destino,ciclo,tipoincidente,provincia,SUM(antiguedad/24) as dias_acum,count(cod_incidente) as cantidad from (
select provincia,clasificacion,cod_incidente,cod_compania,razonsocial,tipocuenta,cuenta,ciclo,estadoincidente,tipoincidente,temaincidente,espec_incidente,desc_incidente,origen,destino,fecha,fechaingresoincidente,fecharecibido,fechaaccion,fechacierreincidente,duracion,antiguedad,inboxprecedente,tdoc,periodo,row_number () over (partition by cod_incidente order by fecharecibido desc,antiguedad desc) as rn from (
select decode(n.provincia,'LIMA','LIMA','PROVINCIA') as provincia,m.* from (
select b.clasificacion,a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is not null
UNION ALL
select DECODE(NVL(y.clasificacion,'-'),'-','NO CLASIFICADO',y.clasificacion),x.* from
(select a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is null) x
left join
FA_GLOSARIOINCIDENTES_PAGEQ y on x.espec_incidente=y.especificacion
) m left join p_compania n on to_number(m.cod_compania)=n.codigocompania
) where fechaaccion is null
)
/*where rn=1*/
group by fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC'),clasificacion,destino,ciclo,tipoincidente,provincia
order by fecharecibido desc,destino, clasificacion
)  where (TO_CHAR(fecharecibido,'YYYYMMDD') >= i_periodo
        and TO_CHAR(fecharecibido,'YYYYMMDD') <= f_periodo)
        and DESTINO=varea
    group by TO_CHAR(FECHARECIBIDO,'YYYYMM')
) ORDER BY PERIODO,to_date(decode(fecha,'-','31/12/2100',fecha),'dd/mm/yyyy'),DESTINO;

END VINCPAGEQ_OBTENER_RCLIENTENT;

PROCEDURE VINCPAGEQ_OBTENER_RCLIENTATE(pcursor  OUT t_cursor, i_periodo varchar2, f_periodo varchar2, varea varchar2) IS
BEGIN

OPEN PCURSOR FOR
select DESTINO,CLASIFICACION,fecha,periodo,ROUND(TOT_LIMA,2),ROUND(DIA_LIMA,2),ROUND(DIA_LIMA2,2),ROUND(TOT_PROV,2),ROUND(DIA_PROV,2),ROUND(DIA_PROV2,2) FROM (
select DESTINO,CLASIFICACION,TO_CHAR(FECHARECIBIDO,'DD/MM/YYYY') fecha,TO_CHAR(FECHARECIBIDO,'YYYYMM') periodo,SUM(DECODE(provincia,'LIMA',cantidad,0)) tot_lima,SUM(DECODE(provincia,'LIMA',DIAS_ACUM,0)) dia_lima,NVL(AVG(DECODE(provincia,'LIMA',DIAS_ACUM,NULL)),0) dia_lima2,SUM(DECODE(provincia,'PROVINCIA',cantidad,0)) tot_prov,SUM(DECODE(provincia,'PROVINCIA',DIAS_ACUM,0)) dia_prov,NVL(AVG(DECODE(provincia,'PROVINCIA',DIAS_ACUM,null)),0) dia_prov2 FROM (
select fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC') tipocuenta2,clasificacion,destino,ciclo,tipoincidente,provincia,SUM(antiguedad/24) as dias_acum,count(cod_incidente) as cantidad from (
select provincia,clasificacion,cod_incidente,cod_compania,razonsocial,tipocuenta,cuenta,ciclo,estadoincidente,tipoincidente,temaincidente,espec_incidente,desc_incidente,origen,destino,fecha,fechaingresoincidente,fecharecibido,fechaaccion,fechacierreincidente,duracion,antiguedad,inboxprecedente,tdoc,periodo,row_number () over (partition by cod_incidente order by fecharecibido desc,antiguedad desc) as rn from (
select decode(n.provincia,'LIMA','LIMA','PROVINCIA') as provincia,m.* from (
select b.clasificacion,a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is not null
UNION ALL
select DECODE(NVL(y.clasificacion,'-'),'-','NO CLASIFICADO',y.clasificacion),x.* from
(select a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is null) x
left join
FA_GLOSARIOINCIDENTES_PAGEQ y on x.espec_incidente=y.especificacion
) m left join p_compania n on to_number(m.cod_compania)=n.codigocompania
) where fechaaccion is not null
)
/*where rn=1*/
group by fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC'),clasificacion,destino,ciclo,tipoincidente,provincia
order by fecharecibido desc,destino, clasificacion
)  where (TO_CHAR(fecharecibido,'YYYYMMDD') >= i_periodo
        and TO_CHAR(fecharecibido,'YYYYMMDD') <= f_periodo)
        and DESTINO=varea
    group by DESTINO,CLASIFICACION,TO_CHAR(FECHARECIBIDO,'DD/MM/YYYY'),TO_CHAR(FECHARECIBIDO,'YYYYMM')
UNION ALL
select 'Total','-','-',TO_CHAR(FECHARECIBIDO,'YYYYMM'),SUM(DECODE(provincia,'LIMA',cantidad,0)),SUM(DECODE(provincia,'LIMA',DIAS_ACUM,0)),ROUND(AVG(DECODE(provincia,'LIMA',DIAS_ACUM,0)),4),SUM(DECODE(provincia,'PROVINCIA',cantidad,0)),SUM(DECODE(provincia,'PROVINCIA',DIAS_ACUM,0)),ROUND(AVG(DECODE(provincia,'PROVINCIA',DIAS_ACUM,NULL)),4) FROM (
select fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC') tipocuenta2,clasificacion,destino,ciclo,tipoincidente,provincia,SUM(antiguedad/24) as dias_acum,count(cod_incidente) as cantidad from (
select provincia,clasificacion,cod_incidente,cod_compania,razonsocial,tipocuenta,cuenta,ciclo,estadoincidente,tipoincidente,temaincidente,espec_incidente,desc_incidente,origen,destino,fecha,fechaingresoincidente,fecharecibido,fechaaccion,fechacierreincidente,duracion,antiguedad,inboxprecedente,tdoc,periodo,row_number () over (partition by cod_incidente order by fecharecibido desc,antiguedad desc) as rn from (
select decode(n.provincia,'LIMA','LIMA','PROVINCIA') as provincia,m.* from (
select b.clasificacion,a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is not null
UNION ALL
select DECODE(NVL(y.clasificacion,'-'),'-','NO CLASIFICADO',y.clasificacion),x.* from
(select a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is null) x
left join
FA_GLOSARIOINCIDENTES_PAGEQ y on x.espec_incidente=y.especificacion
) m left join p_compania n on to_number(m.cod_compania)=n.codigocompania
) where fechaaccion is not null
)
/*where rn=1*/
group by fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC'),clasificacion,destino,ciclo,tipoincidente,provincia
order by fecharecibido desc,destino, clasificacion
)  where (TO_CHAR(fecharecibido,'YYYYMMDD') >= i_periodo
        and TO_CHAR(fecharecibido,'YYYYMMDD') <= f_periodo)
        and DESTINO=varea
    group by TO_CHAR(FECHARECIBIDO,'YYYYMM')
) ORDER BY PERIODO,to_date(decode(fecha,'-','31/12/2100',fecha),'dd/mm/yyyy'),DESTINO;

END VINCPAGEQ_OBTENER_RCLIENTATE;

PROCEDURE VINCPAGEQ_OBTENER_DCLIENTENT(pcursor  OUT t_cursor, i_periodo varchar2, f_periodo varchar2, varea varchar2) IS
BEGIN

OPEN PCURSOR FOR
SELECT DESTINO,CLASIFICACION,FECHA,PERIODO,ROUND(TOT_DNI,2),ROUND(DIA_DNI,2),ROUND(DIA_DNI2,2),ROUND(TOT_RUC10,2),ROUND(DIA_RUC10,2),ROUND(DIA_RUC102,2),ROUND(TOT_RUC20,2),ROUND(DIA_RUC20,2),ROUND(DIA_RUC202,2) FROM (
select DESTINO,CLASIFICACION,TO_CHAR(FECHARECIBIDO,'DD/MM/YYYY') FECHA,TO_CHAR(FECHARECIBIDO,'YYYYMM') PERIODO,SUM(DECODE(tdoc,'DNI',cantidad,0)) TOT_DNI,SUM(DECODE(tdoc,'DNI',DIAS_ACUM,0)) DIA_DNI,NVL(AVG(DECODE(tdoc,'DNI',DIAS_ACUM,NULL)),0) DIA_DNI2,SUM(DECODE(tdoc,'RUC10',cantidad,0)) TOT_RUC10,SUM(DECODE(tdoc,'RUC10',DIAS_ACUM,0)) DIA_RUC10,NVL(AVG(DECODE(tdoc,'RUC10',DIAS_ACUM,NULL)),0) DIA_RUC102,SUM(DECODE(tdoc,'RUC20',cantidad,0)) TOT_RUC20,SUM(DECODE(tdoc,'RUC20',DIAS_ACUM,0)) DIA_RUC20,NVL(AVG(DECODE(tdoc,'RUC20',DIAS_ACUM,NULL)),0) DIA_RUC202 FROM (
select fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC') tipocuenta2,clasificacion,destino,ciclo,tipoincidente,provincia,SUM(antiguedad/24) as dias_acum,count(cod_incidente) as cantidad from (
select provincia,clasificacion,cod_incidente,cod_compania,razonsocial,tipocuenta,cuenta,ciclo,estadoincidente,tipoincidente,temaincidente,espec_incidente,desc_incidente,origen,destino,fecha,fechaingresoincidente,fecharecibido,fechaaccion,fechacierreincidente,duracion,antiguedad,inboxprecedente,tdoc,periodo,row_number () over (partition by cod_incidente order by fecharecibido desc,antiguedad desc) as rn from (
select decode(n.provincia,'LIMA','LIMA','PROVINCIA') as provincia,m.* from (
select b.clasificacion,a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is not null
UNION ALL
select DECODE(NVL(y.clasificacion,'-'),'-','NO CLASIFICADO',y.clasificacion),x.* from
(select a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is null) x
left join
FA_GLOSARIOINCIDENTES_PAGEQ y on x.espec_incidente=y.especificacion
) m left join p_compania n on to_number(m.cod_compania)=n.codigocompania
) where fechaaccion is null
)
/*where rn=1*/
group by fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC'),clasificacion,destino,ciclo,tipoincidente,provincia
order by fecharecibido desc,destino, clasificacion
)  where (TO_CHAR(fecharecibido,'YYYYMMDD') >= i_periodo
        and TO_CHAR(fecharecibido,'YYYYMMDD') <= f_periodo)
        and DESTINO=varea
    group by DESTINO,CLASIFICACION,TO_CHAR(FECHARECIBIDO,'DD/MM/YYYY'),TO_CHAR(FECHARECIBIDO,'YYYYMM')
UNION ALL
select 'Total' destino,'-' clasificacion,'-' fecharecibido,TO_CHAR(FECHARECIBIDO,'YYYYMM'),SUM(DECODE(tdoc,'DNI',cantidad,0)),SUM(DECODE(tdoc,'DNI',DIAS_ACUM,0)),ROUND(AVG(DECODE(tdoc,'DNI',DIAS_ACUM,0)),4),SUM(DECODE(tdoc,'RUC10',cantidad,0)),SUM(DECODE(tdoc,'RUC10',DIAS_ACUM,0)),ROUND(AVG(DECODE(tdoc,'RUC10',DIAS_ACUM,0)),4),SUM(DECODE(tdoc,'RUC20',cantidad,0)),SUM(DECODE(tdoc,'RUC20',DIAS_ACUM,0)),ROUND(AVG(DECODE(tdoc,'RUC20',DIAS_ACUM,0)),4) FROM (
select fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC') tipocuenta2,clasificacion,destino,ciclo,tipoincidente,provincia,SUM(antiguedad/24) as dias_acum,count(cod_incidente) as cantidad from (
select provincia,clasificacion,cod_incidente,cod_compania,razonsocial,tipocuenta,cuenta,ciclo,estadoincidente,tipoincidente,temaincidente,espec_incidente,desc_incidente,origen,destino,fecha,fechaingresoincidente,fecharecibido,fechaaccion,fechacierreincidente,duracion,antiguedad,inboxprecedente,tdoc,periodo,row_number () over (partition by cod_incidente order by fecharecibido desc,antiguedad desc) as rn from (
select decode(n.provincia,'LIMA','LIMA','PROVINCIA') as provincia,m.* from (
select b.clasificacion,a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is not null
UNION ALL
select DECODE(NVL(y.clasificacion,'-'),'-','NO CLASIFICADO',y.clasificacion),x.* from
(select a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is null) x
left join
FA_GLOSARIOINCIDENTES_PAGEQ y on x.espec_incidente=y.especificacion
) m left join p_compania n on to_number(m.cod_compania)=n.codigocompania
) where fechaaccion is null
)
/*where rn=1*/
group by fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC'),clasificacion,destino,ciclo,tipoincidente,provincia
order by fecharecibido desc,destino, clasificacion
)  where (TO_CHAR(fecharecibido,'YYYYMMDD') >= i_periodo
        and TO_CHAR(fecharecibido,'YYYYMMDD') <= f_periodo)
        and DESTINO=varea
    group by TO_CHAR(FECHARECIBIDO,'YYYYMM')
) ORDER BY PERIODO,to_date(decode(fecha,'-','31/12/2100',fecha),'dd/mm/yyyy'),DESTINO;

END VINCPAGEQ_OBTENER_DCLIENTENT;

PROCEDURE VINCPAGEQ_OBTENER_DCLIENTATE(pcursor  OUT t_cursor, i_periodo varchar2, f_periodo varchar2, varea varchar2) IS
BEGIN

OPEN PCURSOR FOR
SELECT DESTINO,CLASIFICACION,FECHA,PERIODO,ROUND(TOT_DNI,2),ROUND(DIA_DNI,2),ROUND(DIA_DNI2,2),ROUND(TOT_RUC10,2),ROUND(DIA_RUC10,2),ROUND(DIA_RUC102,2),ROUND(TOT_RUC20,2),ROUND(DIA_RUC20,2),ROUND(DIA_RUC202,2) FROM (
select DESTINO,CLASIFICACION,TO_CHAR(FECHARECIBIDO,'DD/MM/YYYY') FECHA,TO_CHAR(FECHARECIBIDO,'YYYYMM') PERIODO,SUM(DECODE(tdoc,'DNI',cantidad,0)) TOT_DNI,SUM(DECODE(tdoc,'DNI',DIAS_ACUM,0)) DIA_DNI,NVL(AVG(DECODE(tdoc,'DNI',DIAS_ACUM,NULL)),0) DIA_DNI2,SUM(DECODE(tdoc,'RUC10',cantidad,0)) TOT_RUC10,SUM(DECODE(tdoc,'RUC10',DIAS_ACUM,0)) DIA_RUC10,NVL(AVG(DECODE(tdoc,'RUC10',DIAS_ACUM,NULL)),0) DIA_RUC102,SUM(DECODE(tdoc,'RUC20',cantidad,0)) TOT_RUC20,SUM(DECODE(tdoc,'RUC20',DIAS_ACUM,0)) DIA_RUC20,NVL(AVG(DECODE(tdoc,'RUC20',DIAS_ACUM,NULL)),0) DIA_RUC202 FROM (
select fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC') tipocuenta2,clasificacion,destino,ciclo,tipoincidente,provincia,SUM(antiguedad/24) as dias_acum,count(cod_incidente) as cantidad from (
select provincia,clasificacion,cod_incidente,cod_compania,razonsocial,tipocuenta,cuenta,ciclo,estadoincidente,tipoincidente,temaincidente,espec_incidente,desc_incidente,origen,destino,fecha,fechaingresoincidente,fecharecibido,fechaaccion,fechacierreincidente,duracion,antiguedad,inboxprecedente,tdoc,periodo,row_number () over (partition by cod_incidente order by fecharecibido desc,antiguedad desc) as rn from (
select decode(n.provincia,'LIMA','LIMA','PROVINCIA') as provincia,m.* from (
select b.clasificacion,a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is not null
UNION ALL
select DECODE(NVL(y.clasificacion,'-'),'-','NO CLASIFICADO',y.clasificacion),x.* from
(select a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is null) x
left join
FA_GLOSARIOINCIDENTES_PAGEQ y on x.espec_incidente=y.especificacion
) m left join p_compania n on to_number(m.cod_compania)=n.codigocompania
) where fechaaccion is not null
)
/*where rn=1*/
group by fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC'),clasificacion,destino,ciclo,tipoincidente,provincia
order by fecharecibido desc,destino, clasificacion
)  where (TO_CHAR(fecharecibido,'YYYYMMDD') >= i_periodo
        and TO_CHAR(fecharecibido,'YYYYMMDD') <= f_periodo)
        and DESTINO=varea
    group by DESTINO,CLASIFICACION,TO_CHAR(FECHARECIBIDO,'DD/MM/YYYY'),TO_CHAR(FECHARECIBIDO,'YYYYMM')
UNION ALL
select 'Total' destino,'-' clasificacion,'-' fecharecibido,TO_CHAR(FECHARECIBIDO,'YYYYMM'),SUM(DECODE(tdoc,'DNI',cantidad,0)),SUM(DECODE(tdoc,'DNI',DIAS_ACUM,0)),ROUND(AVG(DECODE(tdoc,'DNI',DIAS_ACUM,0)),4),SUM(DECODE(tdoc,'RUC10',cantidad,0)),SUM(DECODE(tdoc,'RUC10',DIAS_ACUM,0)),ROUND(AVG(DECODE(tdoc,'RUC10',DIAS_ACUM,0)),4),SUM(DECODE(tdoc,'RUC20',cantidad,0)),SUM(DECODE(tdoc,'RUC20',DIAS_ACUM,0)),ROUND(AVG(DECODE(tdoc,'RUC20',DIAS_ACUM,0)),4) FROM (
select fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC') tipocuenta2,clasificacion,destino,ciclo,tipoincidente,provincia,SUM(antiguedad/24) as dias_acum,count(cod_incidente) as cantidad from (
select provincia,clasificacion,cod_incidente,cod_compania,razonsocial,tipocuenta,cuenta,ciclo,estadoincidente,tipoincidente,temaincidente,espec_incidente,desc_incidente,origen,destino,fecha,fechaingresoincidente,fecharecibido,fechaaccion,fechacierreincidente,duracion,antiguedad,inboxprecedente,tdoc,periodo,row_number () over (partition by cod_incidente order by fecharecibido desc,antiguedad desc) as rn from (
select decode(n.provincia,'LIMA','LIMA','PROVINCIA') as provincia,m.* from (
select b.clasificacion,a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is not null
UNION ALL
select DECODE(NVL(y.clasificacion,'-'),'-','NO CLASIFICADO',y.clasificacion),x.* from
(select a.* from FA_INCIDENTEDIARIO_PAGEQ_2 a left join FA_GLOSARIOINCIDENTES_PAGEQ b on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area where b.clasificacion is null) x
left join
FA_GLOSARIOINCIDENTES_PAGEQ y on x.espec_incidente=y.especificacion
) m left join p_compania n on to_number(m.cod_compania)=n.codigocompania
) where fechaaccion is not null
)
/*where rn=1*/
group by fecharecibido,tdoc,DECODE(tipocuenta,'Regular','Regular','MEC'),clasificacion,destino,ciclo,tipoincidente,provincia
order by fecharecibido desc,destino, clasificacion
)  where (TO_CHAR(fecharecibido,'YYYYMMDD') >= i_periodo
        and TO_CHAR(fecharecibido,'YYYYMMDD') <= f_periodo)
        and DESTINO=varea
    group by TO_CHAR(FECHARECIBIDO,'YYYYMM')
) ORDER BY PERIODO,to_date(decode(fecha,'-','31/12/2100',fecha),'dd/mm/yyyy'),DESTINO;

END VINCPAGEQ_OBTENER_DCLIENTATE;
PROCEDURE PROCESARINCIDENTESDIARIOSPEQ2 is
begin
MERGE INTO
   (
    SELECT COD_COMPANIA,TDOC FROM FA_INCIDENTEDIARIO_PAGEQ_2
   )A
   USING
   (
   SELECT CODIGOCOMPANIA,OBTENER_TIPODOC_2(RUCCOMPANIA) TIPODOCUMENTO FROM P_COMPANIA
   )B
   ON
   (
   TO_NUMBER(A.COD_COMPANIA)= B.CODIGOCOMPANIA
   )
   WHEN MATCHED THEN
   UPDATE SET a.TDOC = b.TIPODOCUMENTO;
commit;

DELETE FROM FA_INCIDENTEDIARIO_PAGEQ_3;
commit;

INSERT INTO FA_INCIDENTEDIARIO_PAGEQ_3
select a.COD_INCIDENTE,a.COD_COMPANIA,a.RAZONSOCIAL,a.TIPOCUENTA,a.CUENTA,a.CICLO,a.ESTADOINCIDENTE,a.TIPOINCIDENTE,a.TEMAINCIDENTE,a.ESPEC_INCIDENTE,a.DESC_INCIDENTE,a.ORIGEN,a.DESTINO,a.FECHA,a.FECHAINGRESOINCIDENTE,a.FECHARECIBIDO,a.FECHAACCION,a.FECHACIERREINCIDENTE,a.DURACION,a.ANTIGUEDAD,a.INBOXPRECEDENTE,a.TDOC,a.PERIODO,a.FECHAENVIADO,DECODE(NVL(b.clasificacion,'-'),'-','NO CLASIFICADO',b.clasificacion),decode(c.provincia,'LIMA','LIMA','PROVINCIA'),DECODE(TO_CHAR(NVL(FECHAACCION,TO_DATE('31/12/2100','dd/mm/yyyy')),'YYYYMMDD'),'21001231','NO','SI'),a.USUARIO,to_char(FECHAENVIADO,'yyyymm')
from FA_INCIDENTEDIARIO_PAGEQ_2 a
left join FA_GLOSARIOINCIDENTES_PAGEQ b
on a.espec_incidente||substr(a.destino,6)=b.especificacion||b.area
left join p_compania c
on to_number(a.cod_compania)=c.codigocompania;
commit;
end PROCESARINCIDENTESDIARIOSPEQ2;
---------------------------------------------------------------------------------------------------------------------------
--inserta en la tabla FA_AFILMAIL_JERARQ_SIMPLE cantidad de rechazados, afiliados, y venta de un periodo de plan simple
---------------------------------------------------------------------------------------------------------------------------
PROCEDURE FA_AFILMAIL_JERARQUIA_SIMPLE(speriodo varchar2) IS
BEGIN

DELETE FROM FA_AFILMAIL_JERARQ_SIMPLE
WHERE PERIODO=SPERIODO;
COMMIT;
---------------------------inserta todos los cananles menos TP y TPF-----------------------------------
INSERT INTO FA_AFILMAIL_JERARQ_SIMPLE
SELECT SPERIODO AS semana,a.vendedor,
       'Venta' AS ENTRADA,
       A.CANAL_VENTA,A.DIVISION_TERRITORIO,A.GERENCIA_TERRITORIO,
       A.SOCIO_NEGOCIO,A.TIENDA,A.CONSULTOR,A.FECHAACTIVACION,A.GRUPO,a.nextel,a.ruccompania,A.CODIGOCUENTA,
       SUM(CASE WHEN a.numerocuentaresponsable is not null THEN 1 ELSE 0 END) as afiliado_basehp,
       SUM(CASE WHEN A.RESULTADO='Afiliado' AND A.GRUPO='Como Cliente' THEN 1
                WHEN a.numerocuentaresponsable is not null AND a.cuenta is null THEN 1 ELSE 0 END) AS Afiliado_Vta,
       SUM(CASE WHEN a.resultado='Rechazado' AND a.grupo='Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_Vta,
       SUM(CASE WHEN a.resultado='Afiliado' AND a.grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Afiliado_PVta,
       SUM(CASE WHEN a.resultado='Rechazado' AND a.grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_PVta,
       COUNT(1) AS CUENTAS
  FROM (SELECT c.vendedor,c.canal_venta,c.division_territorio,c.gerencia_territorio,d.numerocuentaresponsable,b.cuenta,a.nextel,a.ruccompania,
               c.socio_negocio,c.tienda,b.consultor,a.fechaactivacion,b.grupo,
               A.CODIGOCUENTA, B.RESULTADO, COUNT(DISTINCT A.CODIGOCUENTA) AS REGISTROS
           FROM (SELECT z.CODIGOCUENTA,z.FECHA,z.CANAL_VENTA,z.GERENCIA_TERRITORIO,z.VENDEDOR,z.PERIODO,z.DIVISION_TERRITORIO,z.SOCIO_NEGOCIO,z.TIENDA,z.FECHAACTIVACION,z.nextel,z.ruccompania
                  FROM ODS_GPF.TNP_INAR_PERSONAS_ODS Z
                  WHERE FECHA<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA) AND
                        C_PLAN IN ('2167','2089') --NO CONSIDERA PLANES SIMPLE
                 MINUS
                SELECT x.codigocuenta,x.fecha,x.canal_venta,x.gerencia_territorio,x.vendedor,x.periodo,x.division_territorio,x.socio_negocio,x.tienda,x.fechaactivacion,x.nextel,x.ruccompania
                  FROM
                    (SELECT * FROM TNP_INAR_PERSONAS_ODS
                        WHERE FECHA <= (SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA) AND
                        C_PLAN IN ('2167','2089'))X,
                     (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE fechacreacioncontacto < TO_DATE(SPERIODO,'yyyymm')-7)b
                 WHERE x.codigocuenta = b.numerocuentaresponsable) A,
                (SELECT DISTINCT cuenta,resultado,grupo,fechaafiliacion,consultor,equipo,ruccompania
                   FROM ods_gpf.FA_AFILIADOSMAIL_BIENVENIDA
                  WHERE fechaafiliacion<=TO_DATE(SPERIODO,'yyyymm')+38
                    AND FECHAAFILIACION>=TO_DATE(SPERIODO,'yyyymm')-7)B,
                (SELECT * FROM JERARQUIA_PERSONA_HISTORICO WHERE periodo=to_char(add_months(to_date(SPERIODO,'yyyymm'),-1),'yyyymm')) C,
                  (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')=SPERIODO
                            and UPPER(tiponotificacion) = 'RECIBO ELECTRÓNICO'
                            and FECHACREACIONCONTACTO <= (SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) d
           where a.codigocuenta = b.cuenta(+)
             AND UPPER(TRIM(A.VENDEDOR))=UPPER(TRIM(C.VENDEDOR(+)))
             and a.codigocuenta= d.numerocuentaresponsable(+)
             AND A.PERIODO = SPERIODO
             AND A.CANAL_VENTA NOT IN ('TIENDAS PROPIAS','TIENDAS PROPIAS FRANQUICIADAS','TIENDAS PROPIAS FRANQUICIADAS CENTINELA')
        GROUP BY c.VENDEDOR,c.CANAL_VENTA,C.DIVISION_TERRITORIO,C.GERENCIA_TERRITORIO,D.NUMEROCUENTARESPONSABLE,B.CUENTA,a.nextel,a.ruccompania,
                 c.socio_negocio,c.tienda,b.consultor,a.fechaactivacion,b.grupo, b.resultado,a.codigocuenta) a
GROUP BY A.VENDEDOR,A.CANAL_VENTA,A.DIVISION_TERRITORIO,A.GERENCIA_TERRITORIO,
a.socio_negocio,a.tienda,a.consultor,a.fechaactivacion,a.grupo,a.nextel,a.ruccompania,a.codigocuenta;
---------------------------inserta los cananles TPF--------------------------------------------------------------------------------------------------
INSERT INTO FA_AFILMAIL_JERARQ_SIMPLE
SELECT SPERIODO AS semana,a.vendedor,
       'Venta' AS ENTRADA,
       A.CANAL_VENTA,A.DIVISION_TERRITORIO,A.GERENCIA_TERRITORIO,
       A.SOCIO_NEGOCIO,A.TIENDA,A.CONSULTOR,A.FECHAACTIVACION,A.GRUPO,a.nextel,a.ruccompania,A.CODIGOCUENTA,
       SUM(CASE WHEN a.numerocuentaresponsable is not null THEN 1 ELSE 0 END) as afiliado_basehp,
       SUM(CASE WHEN A.RESULTADO='Afiliado' AND A.GRUPO='Como Cliente' THEN 1
                WHEN a.numerocuentaresponsable is not null AND a.cuenta is null THEN 1 ELSE 0 END) AS Afiliado_Vta,
       SUM(CASE WHEN a.resultado='Rechazado' AND a.grupo='Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_Vta,
       SUM(CASE WHEN a.resultado='Afiliado' AND a.grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Afiliado_PVta,
       SUM(CASE WHEN a.resultado='Rechazado' AND a.grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_PVta,
       COUNT(1) AS CUENTAS
  FROM (SELECT c.vendedor,c.canal_venta,c.division_territorio,c.gerencia_territorio,d.numerocuentaresponsable,b.cuenta,a.nextel,a.ruccompania,
               c.socio_negocio,c.tienda,b.consultor,a.fechaactivacion,b.grupo,
               A.CODIGOCUENTA, B.RESULTADO, COUNT(DISTINCT A.CODIGOCUENTA) AS REGISTROS
           FROM (SELECT z.CODIGOCUENTA,z.FECHA,z.CANAL_VENTA,z.GERENCIA_TERRITORIO,z.VENDEDOR,z.PERIODO,z.DIVISION_TERRITORIO,z.SOCIO_NEGOCIO,z.TIENDA,z.FECHAACTIVACION,z.nextel,z.ruccompania
                  FROM ODS_GPF.TNP_INAR_PERSONAS_ODS Z
                  WHERE FECHA<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA) AND
                        C_PLAN IN ('2167','2089') --NO CONSIDERA PLANES SIMPLE
                 MINUS
                SELECT x.codigocuenta,x.fecha,x.canal_venta,x.gerencia_territorio,x.vendedor,x.periodo,x.division_territorio,x.socio_negocio,x.tienda,x.fechaactivacion,x.nextel,x.ruccompania
                  FROM
                    (SELECT * FROM TNP_INAR_PERSONAS_ODS
                        WHERE FECHA <= (SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA) AND
                        C_PLAN IN ('2167','2089'))X,
                     (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE fechacreacioncontacto < TO_DATE(SPERIODO,'yyyymm')-7)b
                 WHERE x.codigocuenta = b.numerocuentaresponsable) A,
                (SELECT DISTINCT cuenta,resultado,grupo,fechaafiliacion,consultor,equipo,ruccompania
                   FROM ods_gpf.FA_AFILIADOSMAIL_BIENVENIDA
                  WHERE fechaafiliacion<=TO_DATE(SPERIODO,'yyyymm')+38
                    AND FECHAAFILIACION>=TO_DATE(SPERIODO,'yyyymm')-7)B,
                (SELECT * FROM JERARQUIA_PERSONA_HISTORICO WHERE periodo=to_char(add_months(to_date(SPERIODO,'yyyymm'),-1),'yyyymm')) C,
                  (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')=SPERIODO
                            and UPPER(tiponotificacion) = 'RECIBO ELECTRÓNICO'
                            and FECHACREACIONCONTACTO <= (SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) d
           where a.codigocuenta = b.cuenta(+)
             AND UPPER(TRIM(A.VENDEDOR))=UPPER(TRIM(C.VENDEDOR(+)))
             and a.codigocuenta= d.numerocuentaresponsable(+)
             AND A.PERIODO = SPERIODO
             AND A.CANAL_VENTA IN  ('TIENDAS PROPIAS FRANQUICIADAS','TIENDAS PROPIAS FRANQUICIADAS CENTINELA')
        GROUP BY c.VENDEDOR,c.CANAL_VENTA,C.DIVISION_TERRITORIO,C.GERENCIA_TERRITORIO,D.NUMEROCUENTARESPONSABLE,B.CUENTA,a.nextel,a.ruccompania,
                 c.socio_negocio,c.tienda,b.consultor,a.fechaactivacion,b.grupo, b.resultado,a.codigocuenta) a
GROUP BY A.VENDEDOR,A.CANAL_VENTA,A.DIVISION_TERRITORIO,A.GERENCIA_TERRITORIO,
a.socio_negocio,a.tienda,a.consultor,a.fechaactivacion,a.grupo,a.nextel,a.ruccompania,a.codigocuenta;
---------------------------inserta los cananles TP-----------------------------------
INSERT INTO FA_AFILMAIL_JERARQ_SIMPLE
SELECT SPERIODO AS periodo,NVL(consultortp, ORDENCREADOPOR) AS vendedor,
       'Venta' AS ENTRADA,
       CANAL_VENTA,DIVISION_TERRITORIO,GERENCIA_TERRITORIO,
       NULL AS SOCIO_NEGOCIO,TIENDA,CONSULTOR,FECHAACTIVACION,GRUPO,nextel,ruccompania,CODIGOCUENTA,
       SUM(CASE WHEN numerocuentaresponsable is not null THEN 1 ELSE 0 END) as afiliado_basehp,
       SUM(CASE WHEN RESULTADO='Afiliado' AND GRUPO='Como Cliente' THEN 1
                WHEN numerocuentaresponsable is not null AND cuenta is null THEN 1 ELSE 0 END) AS Afiliado_Vta,
       SUM(CASE WHEN resultado='Rechazado' AND grupo='Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_Vta,
       SUM(CASE WHEN resultado='Afiliado' AND grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Afiliado_PVta,
       SUM(CASE WHEN resultado='Rechazado' AND grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_PVta,
       COUNT(1) AS CUENTAS
  FROM (SELECT c.consultor AS CONSULTORTP,c.canal_venta,c.division_territorio,c.gerencia_territorio,d.numerocuentaresponsable,b.cuenta,a.nextel,a.ruccompania,
               c.tienda,b.consultor,a.fechaactivacion,b.grupo,
               A.CODIGOCUENTA, B.RESULTADO,O.ORDENCREADOPOR, COUNT(DISTINCT A.CODIGOCUENTA) AS REGISTROS
           FROM (SELECT z.CODIGOCUENTA,z.FECHA,z.CANAL_VENTA,z.GERENCIA_TERRITORIO,z.VENDEDOR,z.PERIODO,z.DIVISION_TERRITORIO,z.SOCIO_NEGOCIO,z.TIENDA,z.nro_orden,z.FECHAACTIVACION,z.nextel,z.ruccompania
                  FROM ODS_GPF.TNP_INAR_PERSONAS_ODS Z WHERE C_PLAN IN ('2167','2089') --NO CONSIDERA PLANES SIMPLE
                       AND FECHA<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)
                       AND NOT EXISTS(SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) v WHERE z.codigocuenta=v.numerocuentaresponsable
                                       AND TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')<SPERIODO)
                 MINUS
                SELECT x.codigocuenta,x.fecha,x.canal_venta,x.gerencia_territorio,x.vendedor,x.periodo,x.division_territorio,x.socio_negocio,x.tienda,x.nro_orden,x.fechaactivacion,x.nextel,x.ruccompania
                  FROM
                    (SELECT * FROM TNP_INAR_PERSONAS_ODS WHERE C_PLAN IN ('2167','2089') --NO CONSIDERA PLANES SIMPLE
                        AND FECHA<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) X,
                     (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE fechacreacioncontacto<TO_DATE(SPERIODO,'yyyymm')-7) b
                 WHERE x.codigocuenta = b.numerocuentaresponsable) a,
                (SELECT codigoorden,estadoorden,tipoprocesoorden,ordencreadopor
                   FROM ODS_GPF.P_ORDENES
                    WHERE TIPOPROCESOORDEN IN ('PORTABILIDAD','VENTA MOVILES')
                    AND SUBCATEGORIA IN ('SOLICITUD DE PORTABILIDAD POSTPAGO','POSTPAGO NUEVA '||'&'||' ADICION','RETAIL POSTPAGO')
                    AND ESTADOORDEN = 'Cerrada') O,
                (SELECT DISTINCT cuenta,resultado,grupo,fechaafiliacion,consultor,equipo,ruccompania
                   FROM ods_gpf.FA_AFILIADOSMAIL_BIENVENIDA
                  WHERE fechaafiliacion<=TO_DATE(SPERIODO,'yyyymm')+38
                    AND FECHAAFILIACION>=TO_DATE(SPERIODO,'yyyymm')-7) B,
                (SELECT * FROM FA_JERARQUIA_TP WHERE fecha=(select max(fecha) from FA_JERARQUIA_TP)) C,
                  (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')=SPERIODO
                            and tiponotificacion='Recibo Electrónico'
                            and FECHACREACIONCONTACTO<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) d
           WHERE A.CODIGOCUENTA = B.CUENTA(+)
             AND A.NRO_ORDEN = o.CODIGOORDEN(+)
             AND UPPER(TRIM(o.ordencreadopor))=UPPER(TRIM(C.consultor(+)))
             and a.codigocuenta= d.numerocuentaresponsable(+)
             AND A.PERIODO = SPERIODO
             AND A.CANAL_VENTA = 'TIENDAS PROPIAS'
        GROUP BY c.CONSULTOR,c.CANAL_VENTA,C.DIVISION_TERRITORIO,C.GERENCIA_TERRITORIO,D.NUMEROCUENTARESPONSABLE,B.CUENTA,
                 a.nextel,a.ruccompania,c.tienda,
                 B.CONSULTOR,A.FECHAACTIVACION,B.GRUPO, B.RESULTADO,A.CODIGOCUENTA,O.ORDENCREADOPOR)
GROUP BY NVL(consultortp, ORDENCREADOPOR),CANAL_VENTA,DIVISION_TERRITORIO,GERENCIA_TERRITORIO,
         tienda,consultor,fechaactivacion,grupo,nextel,ruccompania,codigocuenta;
-----------------------------inserta post-venta---------------------------------
INSERT INTO FA_AFILMAIL_JERARQ_SIMPLE
SELECT SPERIODO AS periodo,NULL AS vendedor,'Post-venta' AS ENTRADA,
       NULL AS canal_venta, NULL AS divisio_territorio,NULL AS gerencia_territorio,
       NULL AS socio_negocio,NULL AS tienda,a.consultor,a.fechaafiliacion,
       CASE WHEN a.grupo = 'Como Cliente' AND equipos IS NULL THEN 'Desactivado'
            WHEN a.GRUPO = 'Como Cliente' AND EQUIPOS IS NOT NULL THEN 'Mal Afiliado'
            ELSE a.GRUPO END AS GRUPO,a.equipo,a.ruccompania,
       A.CUENTA,
        SUM(CASE WHEN a.codigocompania is not null THEN 1 ELSE 0 END) as afiliado_basehp,
       0 AS Afiliado_Vta,
       0 AS Rechazado_Vta,
       SUM(CASE WHEN a.resultado='Afiliado' THEN 1 ELSE 0 END) AS AfiliadoPvta,
       SUM(CASE WHEN a.resultado='Rechazado' THEN 1 ELSE 0 END) AS RechazadoPvta,
       COUNT(1) AS CUENTAS
  FROM (SELECT *
          FROM ODS_GPF.FA_AFILIADOSMAIL_BIENVENIDA A
         WHERE  A.FECHAAFILIACION < add_months(to_date(SPERIODO,'yyyymm'),1)
           AND A.FECHAAFILIACION >= TO_DATE(SPERIODO,'yyyymm')
           AND a.cuenta is not null
           AND NOT EXISTS
              (SELECT CUENTA
                 FROM FA_AFILIADOSMAIL_HISTORICO B
                WHERE A.CUENTA=B.CUENTA
                  AND TO_CHAR(B.FECHA,'yyyymm')<SPERIODO)
           AND NOT EXISTS
              (SELECT b.CODIGOCUENTA
                 FROM ODS_GPF.TNP_INAR_PERSONAS_ODS b
                WHERE a.cuenta=b.codigocuenta
                  AND b.PERIODO =SPERIODO)
           AND NOT EXISTS
                (SELECT CODIGOCOMPANIA
                    FROM TNP_INAR_PERSONAS_ODS C
                    WHERE C_PLAN IN ('2167','2089')
                        AND PERIODO = SPERIODO
                        AND a.CODIGOCOMPANIA = c.CODIGOCOMPANIA) --NO CONSIDERA PLANES SIMPLE
                  ) a,
       (SELECT A.CODIGOCOMPANIA, COUNT(1) AS EQUIPOS
          FROM fotoequipos a,
               pm_planes b
         WHERE a.codigoplantarifariobscs = b.c_plan
           AND a.estadocontrato <> 'Desactivado'
           AND upper(b.t_plan) = 'COMERCIAL'
           AND upper(a.product) NOT LIKE '%PRE%' --planes post
         GROUP BY A.CODIGOCOMPANIA) C,
         (SELECT DISTINCT CODIGOCOMPANIA FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')=SPERIODO
         and tiponotificacion='Recibo Electrónico'
         AND FECHACREACIONCONTACTO<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) D
 WHERE D.codigocompania=A.codigocompania(+)
     AND A.CODIGOCOMPANIA = C.CODIGOCOMPANIA(+)
 GROUP BY CASE WHEN A.GRUPO = 'Como Cliente' AND EQUIPOS IS NULL THEN 'Desactivado'
               WHEN A.GRUPO = 'Como Cliente' AND EQUIPOS IS NOT NULL THEN 'Mal Afiliado'
               ELSE a.grupo END,a.consultor,a.fechaafiliacion,a.grupo,a.equipo,a.ruccompania,a.cuenta;
COMMIT;
END FA_AFILMAIL_JERARQUIA_SIMPLE;
---------------------------------------------------------------------------------------------------------------------------
--inserta en la tabla FA_AFILIADOSMAIL_JERARQUIA cantidad de rechazados, afiliados, y venta de un periodo
---------------------------------------------------------------------------------------------------------------------------
PROCEDURE FA_AFILMAIL_JERARQUIA_NOSIMPLE(speriodo varchar2) IS
BEGIN

DELETE FROM FA_AFILMAIL_JERARQ_NOSIMPLE
WHERE PERIODO=SPERIODO;
COMMIT;
---------------------------inserta todos los cananles menos TP y TPF-----------------------------------
INSERT INTO FA_AFILMAIL_JERARQ_NOSIMPLE
SELECT SPERIODO AS semana,a.vendedor,
       'Venta' AS ENTRADA,
       A.CANAL_VENTA,A.DIVISION_TERRITORIO,A.GERENCIA_TERRITORIO,
       A.SOCIO_NEGOCIO,A.TIENDA,A.CONSULTOR,A.FECHAACTIVACION,A.GRUPO,a.nextel,a.ruccompania,A.CODIGOCUENTA,
       SUM(CASE WHEN a.numerocuentaresponsable is not null THEN 1 ELSE 0 END) as afiliado_basehp,
       SUM(CASE WHEN A.RESULTADO='Afiliado' AND A.GRUPO='Como Cliente' THEN 1
                WHEN a.numerocuentaresponsable is not null AND a.cuenta is null THEN 1 ELSE 0 END) AS Afiliado_Vta,
       SUM(CASE WHEN a.resultado='Rechazado' AND a.grupo='Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_Vta,
       SUM(CASE WHEN a.resultado='Afiliado' AND a.grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Afiliado_PVta,
       SUM(CASE WHEN a.resultado='Rechazado' AND a.grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_PVta,
       COUNT(1) AS CUENTAS
  FROM (SELECT c.vendedor,c.canal_venta,c.division_territorio,c.gerencia_territorio,d.numerocuentaresponsable,b.cuenta,a.nextel,a.ruccompania,
               c.socio_negocio,c.tienda,b.consultor,a.fechaactivacion,b.grupo,
               A.CODIGOCUENTA, B.RESULTADO, COUNT(DISTINCT A.CODIGOCUENTA) AS REGISTROS
           FROM (SELECT z.CODIGOCUENTA,z.FECHA,z.CANAL_VENTA,z.GERENCIA_TERRITORIO,z.VENDEDOR,z.PERIODO,z.DIVISION_TERRITORIO,z.SOCIO_NEGOCIO,z.TIENDA,z.FECHAACTIVACION,z.nextel,z.ruccompania
                  FROM ODS_GPF.TNP_INAR_PERSONAS_ODS Z
                  WHERE FECHA<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA) AND
                        C_PLAN NOT IN ('2167','2089') --NO CONSIDERA PLANES SIMPLE
                 MINUS
                SELECT x.codigocuenta,x.fecha,x.canal_venta,x.gerencia_territorio,x.vendedor,x.periodo,x.division_territorio,x.socio_negocio,x.tienda,x.fechaactivacion,x.nextel,x.ruccompania
                  FROM
                    (SELECT * FROM TNP_INAR_PERSONAS_ODS
                        WHERE FECHA <= (SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA) AND
                        C_PLAN NOT IN ('2167','2089'))X,
                     (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE fechacreacioncontacto < TO_DATE(SPERIODO,'yyyymm')-7)b
                 WHERE x.codigocuenta = b.numerocuentaresponsable) A,
                (SELECT DISTINCT cuenta,resultado,grupo,fechaafiliacion,consultor,equipo,ruccompania
                   FROM ods_gpf.FA_AFILIADOSMAIL_BIENVENIDA
                  WHERE fechaafiliacion<=TO_DATE(SPERIODO,'yyyymm')+38
                    AND FECHAAFILIACION>=TO_DATE(SPERIODO,'yyyymm')-7)B,
                (SELECT * FROM JERARQUIA_PERSONA_HISTORICO WHERE periodo=to_char(add_months(to_date(SPERIODO,'yyyymm'),-1),'yyyymm')) C,
                  (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')=SPERIODO
                            and UPPER(tiponotificacion) = 'RECIBO ELECTRÓNICO'
                            and FECHACREACIONCONTACTO <= (SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) d
           where a.codigocuenta = b.cuenta(+)
             AND UPPER(TRIM(A.VENDEDOR))=UPPER(TRIM(C.VENDEDOR(+)))
             and a.codigocuenta= d.numerocuentaresponsable(+)
             AND A.PERIODO = SPERIODO
             AND A.CANAL_VENTA NOT IN ('TIENDAS PROPIAS','TIENDAS PROPIAS FRANQUICIADAS','TIENDAS PROPIAS FRANQUICIADAS CENTINELA')
        GROUP BY c.VENDEDOR,c.CANAL_VENTA,C.DIVISION_TERRITORIO,C.GERENCIA_TERRITORIO,D.NUMEROCUENTARESPONSABLE,B.CUENTA,a.nextel,a.ruccompania,
                 c.socio_negocio,c.tienda,b.consultor,a.fechaactivacion,b.grupo, b.resultado,a.codigocuenta) a
GROUP BY A.VENDEDOR,A.CANAL_VENTA,A.DIVISION_TERRITORIO,A.GERENCIA_TERRITORIO,
a.socio_negocio,a.tienda,a.consultor,a.fechaactivacion,a.grupo,a.nextel,a.ruccompania,a.codigocuenta;
---------------------------inserta los cananles TPF--------------------------------------------------------------------------------------------------
INSERT INTO FA_AFILMAIL_JERARQ_NOSIMPLE
SELECT SPERIODO AS semana,a.vendedor,
       'Venta' AS ENTRADA,
       A.CANAL_VENTA,A.DIVISION_TERRITORIO,A.GERENCIA_TERRITORIO,
       A.SOCIO_NEGOCIO,A.TIENDA,A.CONSULTOR,A.FECHAACTIVACION,A.GRUPO,a.nextel,a.ruccompania,A.CODIGOCUENTA,
       SUM(CASE WHEN a.numerocuentaresponsable is not null THEN 1 ELSE 0 END) as afiliado_basehp,
       SUM(CASE WHEN A.RESULTADO='Afiliado' AND A.GRUPO='Como Cliente' THEN 1
                WHEN a.numerocuentaresponsable is not null AND a.cuenta is null THEN 1 ELSE 0 END) AS Afiliado_Vta,
       SUM(CASE WHEN a.resultado='Rechazado' AND a.grupo='Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_Vta,
       SUM(CASE WHEN a.resultado='Afiliado' AND a.grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Afiliado_PVta,
       SUM(CASE WHEN a.resultado='Rechazado' AND a.grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_PVta,
       COUNT(1) AS CUENTAS
  FROM (SELECT c.vendedor,c.canal_venta,c.division_territorio,c.gerencia_territorio,d.numerocuentaresponsable,b.cuenta,a.nextel,a.ruccompania,
               c.socio_negocio,c.tienda,b.consultor,a.fechaactivacion,b.grupo,
               A.CODIGOCUENTA, B.RESULTADO, COUNT(DISTINCT A.CODIGOCUENTA) AS REGISTROS
           FROM (SELECT z.CODIGOCUENTA,z.FECHA,z.CANAL_VENTA,z.GERENCIA_TERRITORIO,z.VENDEDOR,z.PERIODO,z.DIVISION_TERRITORIO,z.SOCIO_NEGOCIO,z.TIENDA,z.FECHAACTIVACION,z.nextel,z.ruccompania
                  FROM ODS_GPF.TNP_INAR_PERSONAS_ODS Z
                  WHERE FECHA<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA) AND
                        C_PLAN NOT IN ('2167','2089') --NO CONSIDERA PLANES SIMPLE
                 MINUS
                SELECT x.codigocuenta,x.fecha,x.canal_venta,x.gerencia_territorio,x.vendedor,x.periodo,x.division_territorio,x.socio_negocio,x.tienda,x.fechaactivacion,x.nextel,x.ruccompania
                  FROM
                    (SELECT * FROM TNP_INAR_PERSONAS_ODS
                        WHERE FECHA <= (SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA) AND
                        C_PLAN NOT IN ('2167','2089'))X,
                     (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE fechacreacioncontacto < TO_DATE(SPERIODO,'yyyymm')-7)b
                 WHERE x.codigocuenta = b.numerocuentaresponsable) A,
                (SELECT DISTINCT cuenta,resultado,grupo,fechaafiliacion,consultor,equipo,ruccompania
                   FROM ods_gpf.FA_AFILIADOSMAIL_BIENVENIDA
                  WHERE fechaafiliacion<=TO_DATE(SPERIODO,'yyyymm')+38
                    AND FECHAAFILIACION>=TO_DATE(SPERIODO,'yyyymm')-7)B,
                (SELECT * FROM JERARQUIA_PERSONA_HISTORICO WHERE periodo=to_char(add_months(to_date(SPERIODO,'yyyymm'),-1),'yyyymm')) C,
                  (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')=SPERIODO
                            and UPPER(tiponotificacion) = 'RECIBO ELECTRÓNICO'
                            and FECHACREACIONCONTACTO <= (SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) d
           where a.codigocuenta = b.cuenta(+)
             AND UPPER(TRIM(A.VENDEDOR))=UPPER(TRIM(C.VENDEDOR(+)))
             and a.codigocuenta= d.numerocuentaresponsable(+)
             AND A.PERIODO = SPERIODO
             AND A.CANAL_VENTA IN  ('TIENDAS PROPIAS FRANQUICIADAS','TIENDAS PROPIAS FRANQUICIADAS CENTINELA')
        GROUP BY c.VENDEDOR,c.CANAL_VENTA,C.DIVISION_TERRITORIO,C.GERENCIA_TERRITORIO,D.NUMEROCUENTARESPONSABLE,B.CUENTA,a.nextel,a.ruccompania,
                 c.socio_negocio,c.tienda,b.consultor,a.fechaactivacion,b.grupo, b.resultado,a.codigocuenta) a
GROUP BY A.VENDEDOR,A.CANAL_VENTA,A.DIVISION_TERRITORIO,A.GERENCIA_TERRITORIO,
a.socio_negocio,a.tienda,a.consultor,a.fechaactivacion,a.grupo,a.nextel,a.ruccompania,a.codigocuenta;
---------------------------inserta los cananles TP-----------------------------------
INSERT INTO FA_AFILMAIL_JERARQ_NOSIMPLE
SELECT SPERIODO AS periodo,NVL(consultortp, ORDENCREADOPOR) AS vendedor,
       'Venta' AS ENTRADA,
       CANAL_VENTA,DIVISION_TERRITORIO,GERENCIA_TERRITORIO,
       NULL AS SOCIO_NEGOCIO,TIENDA,CONSULTOR,FECHAACTIVACION,GRUPO,nextel,ruccompania,CODIGOCUENTA,
       SUM(CASE WHEN numerocuentaresponsable is not null THEN 1 ELSE 0 END) as afiliado_basehp,
       SUM(CASE WHEN RESULTADO='Afiliado' AND GRUPO='Como Cliente' THEN 1
                WHEN numerocuentaresponsable is not null AND cuenta is null THEN 1 ELSE 0 END) AS Afiliado_Vta,
       SUM(CASE WHEN resultado='Rechazado' AND grupo='Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_Vta,
       SUM(CASE WHEN resultado='Afiliado' AND grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Afiliado_PVta,
       SUM(CASE WHEN resultado='Rechazado' AND grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_PVta,
       COUNT(1) AS CUENTAS
  FROM (SELECT c.consultor AS CONSULTORTP,c.canal_venta,c.division_territorio,c.gerencia_territorio,d.numerocuentaresponsable,b.cuenta,a.nextel,a.ruccompania,
               c.tienda,b.consultor,a.fechaactivacion,b.grupo,
               A.CODIGOCUENTA, B.RESULTADO,O.ORDENCREADOPOR, COUNT(DISTINCT A.CODIGOCUENTA) AS REGISTROS
           FROM (SELECT z.CODIGOCUENTA,z.FECHA,z.CANAL_VENTA,z.GERENCIA_TERRITORIO,z.VENDEDOR,z.PERIODO,z.DIVISION_TERRITORIO,z.SOCIO_NEGOCIO,z.TIENDA,z.nro_orden,z.FECHAACTIVACION,z.nextel,z.ruccompania
                  FROM ODS_GPF.TNP_INAR_PERSONAS_ODS Z WHERE C_PLAN NOT IN ('2167','2089') --NO CONSIDERA PLANES SIMPLE
                       AND FECHA<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)
                       AND NOT EXISTS(SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) v WHERE z.codigocuenta=v.numerocuentaresponsable
                                       AND TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')<SPERIODO)
                 MINUS
                SELECT x.codigocuenta,x.fecha,x.canal_venta,x.gerencia_territorio,x.vendedor,x.periodo,x.division_territorio,x.socio_negocio,x.tienda,x.nro_orden,x.fechaactivacion,x.nextel,x.ruccompania
                  FROM
                    (SELECT * FROM TNP_INAR_PERSONAS_ODS WHERE C_PLAN NOT IN ('2167','2089') --NO CONSIDERA PLANES SIMPLE
                        AND FECHA<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) X,
                     (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE fechacreacioncontacto<TO_DATE(SPERIODO,'yyyymm')-7) b
                 WHERE x.codigocuenta = b.numerocuentaresponsable) a,
                (SELECT codigoorden,estadoorden,tipoprocesoorden,ordencreadopor
                   FROM ODS_GPF.P_ORDENES
                    WHERE TIPOPROCESOORDEN IN ('PORTABILIDAD','VENTA MOVILES')
                    AND SUBCATEGORIA IN ('SOLICITUD DE PORTABILIDAD POSTPAGO','POSTPAGO NUEVA '||'&'||' ADICION','RETAIL POSTPAGO')
                    AND ESTADOORDEN = 'Cerrada') O,
                (SELECT DISTINCT cuenta,resultado,grupo,fechaafiliacion,consultor,equipo,ruccompania
                   FROM ods_gpf.FA_AFILIADOSMAIL_BIENVENIDA
                  WHERE fechaafiliacion<=TO_DATE(SPERIODO,'yyyymm')+38
                    AND FECHAAFILIACION>=TO_DATE(SPERIODO,'yyyymm')-7) B,
                (SELECT * FROM FA_JERARQUIA_TP WHERE fecha=(select max(fecha) from FA_JERARQUIA_TP)) C,
                  (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')=SPERIODO
                            and tiponotificacion='Recibo Electrónico'
                            and FECHACREACIONCONTACTO<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) d
           WHERE A.CODIGOCUENTA = B.CUENTA(+)
             AND A.NRO_ORDEN = o.CODIGOORDEN(+)
             AND UPPER(TRIM(o.ordencreadopor))=UPPER(TRIM(C.consultor(+)))
             and a.codigocuenta= d.numerocuentaresponsable(+)
             AND A.PERIODO = SPERIODO
             AND A.CANAL_VENTA = 'TIENDAS PROPIAS'
        GROUP BY c.CONSULTOR,c.CANAL_VENTA,C.DIVISION_TERRITORIO,C.GERENCIA_TERRITORIO,D.NUMEROCUENTARESPONSABLE,B.CUENTA,
                 a.nextel,a.ruccompania,c.tienda,
                 B.CONSULTOR,A.FECHAACTIVACION,B.GRUPO, B.RESULTADO,A.CODIGOCUENTA,O.ORDENCREADOPOR)
GROUP BY NVL(consultortp, ORDENCREADOPOR),CANAL_VENTA,DIVISION_TERRITORIO,GERENCIA_TERRITORIO,
         tienda,consultor,fechaactivacion,grupo,nextel,ruccompania,codigocuenta;
-----------------------------inserta post-venta---------------------------------
INSERT INTO FA_AFILMAIL_JERARQ_NOSIMPLE
SELECT SPERIODO AS periodo,NULL AS vendedor,'Post-venta' AS ENTRADA,
       NULL AS canal_venta, NULL AS divisio_territorio,NULL AS gerencia_territorio,
       NULL AS socio_negocio,NULL AS tienda,a.consultor,a.fechaafiliacion,
       CASE WHEN a.grupo = 'Como Cliente' AND equipos IS NULL THEN 'Desactivado'
            WHEN a.GRUPO = 'Como Cliente' AND EQUIPOS IS NOT NULL THEN 'Mal Afiliado'
            ELSE a.GRUPO END AS GRUPO,a.equipo,a.ruccompania,
       A.CUENTA,
        SUM(CASE WHEN a.codigocompania is not null THEN 1 ELSE 0 END) as afiliado_basehp,
       0 AS Afiliado_Vta,
       0 AS Rechazado_Vta,
       SUM(CASE WHEN a.resultado='Afiliado' THEN 1 ELSE 0 END) AS AfiliadoPvta,
       SUM(CASE WHEN a.resultado='Rechazado' THEN 1 ELSE 0 END) AS RechazadoPvta,
       COUNT(1) AS CUENTAS
  FROM (SELECT *
          FROM ODS_GPF.FA_AFILIADOSMAIL_BIENVENIDA A
         WHERE  A.FECHAAFILIACION < add_months(to_date(SPERIODO,'yyyymm'),1)
           AND A.FECHAAFILIACION >= TO_DATE(SPERIODO,'yyyymm')
           AND a.cuenta is not null
           AND NOT EXISTS
              (SELECT CUENTA
                 FROM FA_AFILIADOSMAIL_HISTORICO B
                WHERE A.CUENTA=B.CUENTA
                  AND TO_CHAR(B.FECHA,'yyyymm')<SPERIODO)
           AND NOT EXISTS
              (SELECT b.CODIGOCUENTA
                 FROM ODS_GPF.TNP_INAR_PERSONAS_ODS b
                WHERE a.cuenta=b.codigocuenta
                  AND b.PERIODO =SPERIODO)
           AND NOT EXISTS
                (SELECT CODIGOCOMPANIA
                    FROM TNP_INAR_PERSONAS_ODS C
                    WHERE C_PLAN NOT IN ('2167','2089')
                        AND PERIODO = SPERIODO
                        AND a.CODIGOCOMPANIA = c.CODIGOCOMPANIA) --NO CONSIDERA PLANES SIMPLE
                  ) a,
       (SELECT A.CODIGOCOMPANIA, COUNT(1) AS EQUIPOS
          FROM fotoequipos a,
               pm_planes b
         WHERE a.codigoplantarifariobscs = b.c_plan
           AND a.estadocontrato <> 'Desactivado'
           AND upper(b.t_plan) = 'COMERCIAL'
           AND upper(a.product) NOT LIKE '%PRE%' --planes post
         GROUP BY A.CODIGOCOMPANIA) C,
         (SELECT DISTINCT CODIGOCOMPANIA FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')=SPERIODO
         and tiponotificacion='Recibo Electrónico'
         AND FECHACREACIONCONTACTO<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) D
 WHERE D.codigocompania=A.codigocompania(+)
     AND A.CODIGOCOMPANIA = C.CODIGOCOMPANIA(+)
 GROUP BY CASE WHEN A.GRUPO = 'Como Cliente' AND EQUIPOS IS NULL THEN 'Desactivado'
               WHEN A.GRUPO = 'Como Cliente' AND EQUIPOS IS NOT NULL THEN 'Mal Afiliado'
               ELSE a.grupo END,a.consultor,a.fechaafiliacion,a.grupo,a.equipo,a.ruccompania,a.cuenta;
COMMIT;
END FA_AFILMAIL_JERARQUIA_NOSIMPLE;
---------------------------------------------------------------------------------------------------------------------------
--inserta en la tabla FA_AFILIADOSMAIL_JERARQUIA cantidad de rechazados, afiliados, y venta de un periodo
---------------------------------------------------------------------------------------------------------------------------
PROCEDURE FA_AFILMAIL_JERARQUIA(speriodo varchar2) IS
BEGIN

DELETE FROM FA_AFILIADOSMAIL_JERARQUIA
WHERE PERIODO=SPERIODO;
COMMIT;
---------------------------inserta todos los cananles menos TP y TPF-----------------------------------
INSERT INTO FA_AFILIADOSMAIL_JERARQUIA
SELECT SPERIODO AS semana,a.vendedor,
       'Venta' AS ENTRADA,
       A.CANAL_VENTA,A.DIVISION_TERRITORIO,A.GERENCIA_TERRITORIO,
       A.SOCIO_NEGOCIO,A.TIENDA,A.CONSULTOR,A.FECHAACTIVACION,A.GRUPO,a.nextel,a.ruccompania,A.CODIGOCUENTA,
       SUM(CASE WHEN a.numerocuentaresponsable is not null THEN 1 ELSE 0 END) as afiliado_basehp,
       SUM(CASE WHEN A.RESULTADO='Afiliado' AND A.GRUPO='Como Cliente' THEN 1
                WHEN a.numerocuentaresponsable is not null AND a.cuenta is null THEN 1 ELSE 0 END) AS Afiliado_Vta,
       SUM(CASE WHEN a.resultado='Rechazado' AND a.grupo='Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_Vta,
       SUM(CASE WHEN a.resultado='Afiliado' AND a.grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Afiliado_PVta,
       SUM(CASE WHEN a.resultado='Rechazado' AND a.grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_PVta,
       COUNT(1) AS CUENTAS
  FROM (SELECT c.vendedor,c.canal_venta,c.division_territorio,c.gerencia_territorio,d.numerocuentaresponsable,b.cuenta,a.nextel,a.ruccompania,
               c.socio_negocio,c.tienda,b.consultor,a.fechaactivacion,b.grupo,
               A.CODIGOCUENTA, B.RESULTADO, COUNT(DISTINCT A.CODIGOCUENTA) AS REGISTROS
           FROM (SELECT z.CODIGOCUENTA,z.FECHA,z.CANAL_VENTA,z.GERENCIA_TERRITORIO,z.VENDEDOR,z.PERIODO,z.DIVISION_TERRITORIO,z.SOCIO_NEGOCIO,z.TIENDA,z.FECHAACTIVACION,z.nextel,z.ruccompania
                  FROM ODS_GPF.TNP_INAR_PERSONAS_ODS Z
                  WHERE FECHA<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)
                 MINUS
                SELECT x.codigocuenta,x.fecha,x.canal_venta,x.gerencia_territorio,x.vendedor,x.periodo,x.division_territorio,x.socio_negocio,x.tienda,x.fechaactivacion,x.nextel,x.ruccompania
                  FROM
                    (SELECT * FROM TNP_INAR_PERSONAS_ODS
                        WHERE FECHA <= (SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA))X,
                     (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE fechacreacioncontacto < TO_DATE(SPERIODO,'yyyymm')-7)b
                 WHERE x.codigocuenta = b.numerocuentaresponsable) A,
                (SELECT DISTINCT cuenta,resultado,grupo,fechaafiliacion,consultor,equipo,ruccompania
                   FROM ods_gpf.FA_AFILIADOSMAIL_BIENVENIDA
                  WHERE fechaafiliacion<=TO_DATE(SPERIODO,'yyyymm')+38
                    AND FECHAAFILIACION>=TO_DATE(SPERIODO,'yyyymm')-7)B,
                (SELECT * FROM JERARQUIA_PERSONA_HISTORICO WHERE periodo=to_char(add_months(to_date(SPERIODO,'yyyymm'),-1),'yyyymm')) C,
                  (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')=SPERIODO
                            and UPPER(tiponotificacion) = 'RECIBO ELECTRÓNICO'
                            and FECHACREACIONCONTACTO <= (SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) d
           where a.codigocuenta = b.cuenta(+)
             AND UPPER(TRIM(A.VENDEDOR))=UPPER(TRIM(C.VENDEDOR(+)))
             and a.codigocuenta= d.numerocuentaresponsable(+)
             AND A.PERIODO = SPERIODO
             AND A.CANAL_VENTA NOT IN ('TIENDAS PROPIAS','TIENDAS PROPIAS FRANQUICIADAS','TIENDAS PROPIAS FRANQUICIADAS CENTINELA')
        GROUP BY c.VENDEDOR,c.CANAL_VENTA,C.DIVISION_TERRITORIO,C.GERENCIA_TERRITORIO,D.NUMEROCUENTARESPONSABLE,B.CUENTA,a.nextel,a.ruccompania,
                 c.socio_negocio,c.tienda,b.consultor,a.fechaactivacion,b.grupo, b.resultado,a.codigocuenta) a
GROUP BY A.VENDEDOR,A.CANAL_VENTA,A.DIVISION_TERRITORIO,A.GERENCIA_TERRITORIO,
a.socio_negocio,a.tienda,a.consultor,a.fechaactivacion,a.grupo,a.nextel,a.ruccompania,a.codigocuenta;
---------------------------inserta los cananles TPF--------------------------------------------------------------------------------------------------
INSERT INTO FA_AFILIADOSMAIL_JERARQUIA
SELECT SPERIODO AS semana,a.vendedor,
       'Venta' AS ENTRADA,
       A.CANAL_VENTA,A.DIVISION_TERRITORIO,A.GERENCIA_TERRITORIO,
       A.SOCIO_NEGOCIO,A.TIENDA,A.CONSULTOR,A.FECHAACTIVACION,A.GRUPO,a.nextel,a.ruccompania,A.CODIGOCUENTA,
       SUM(CASE WHEN a.numerocuentaresponsable is not null THEN 1 ELSE 0 END) as afiliado_basehp,
       SUM(CASE WHEN A.RESULTADO='Afiliado' AND A.GRUPO='Como Cliente' THEN 1
                WHEN a.numerocuentaresponsable is not null AND a.cuenta is null THEN 1 ELSE 0 END) AS Afiliado_Vta,
       SUM(CASE WHEN a.resultado='Rechazado' AND a.grupo='Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_Vta,
       SUM(CASE WHEN a.resultado='Afiliado' AND a.grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Afiliado_PVta,
       SUM(CASE WHEN a.resultado='Rechazado' AND a.grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_PVta,
       COUNT(1) AS CUENTAS
  FROM (SELECT c.vendedor,c.canal_venta,c.division_territorio,c.gerencia_territorio,d.numerocuentaresponsable,b.cuenta,a.nextel,a.ruccompania,
               c.socio_negocio,c.tienda,b.consultor,a.fechaactivacion,b.grupo,
               A.CODIGOCUENTA, B.RESULTADO, COUNT(DISTINCT A.CODIGOCUENTA) AS REGISTROS
           FROM (SELECT z.CODIGOCUENTA,z.FECHA,z.CANAL_VENTA,z.GERENCIA_TERRITORIO,z.VENDEDOR,z.PERIODO,z.DIVISION_TERRITORIO,z.SOCIO_NEGOCIO,z.TIENDA,z.FECHAACTIVACION,z.nextel,z.ruccompania
                  FROM ODS_GPF.TNP_INAR_PERSONAS_ODS Z
                  WHERE FECHA<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)
                 MINUS
                SELECT x.codigocuenta,x.fecha,x.canal_venta,x.gerencia_territorio,x.vendedor,x.periodo,x.division_territorio,x.socio_negocio,x.tienda,x.fechaactivacion,x.nextel,x.ruccompania
                  FROM
                    (SELECT * FROM TNP_INAR_PERSONAS_ODS
                        WHERE FECHA <= (SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA))X,
                     (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE fechacreacioncontacto < TO_DATE(SPERIODO,'yyyymm')-7)b
                 WHERE x.codigocuenta = b.numerocuentaresponsable) A,
                (SELECT DISTINCT cuenta,resultado,grupo,fechaafiliacion,consultor,equipo,ruccompania
                   FROM ods_gpf.FA_AFILIADOSMAIL_BIENVENIDA
                  WHERE fechaafiliacion<=TO_DATE(SPERIODO,'yyyymm')+38
                    AND FECHAAFILIACION>=TO_DATE(SPERIODO,'yyyymm')-7)B,
                (SELECT * FROM JERARQUIA_PERSONA_HISTORICO WHERE periodo=to_char(add_months(to_date(SPERIODO,'yyyymm'),-1),'yyyymm')) C,
                  (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')=SPERIODO
                            and UPPER(tiponotificacion) = 'RECIBO ELECTRÓNICO'
                            and FECHACREACIONCONTACTO <= (SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) d
           where a.codigocuenta = b.cuenta(+)
             AND UPPER(TRIM(A.VENDEDOR))=UPPER(TRIM(C.VENDEDOR(+)))
             and a.codigocuenta= d.numerocuentaresponsable(+)
             AND A.PERIODO = SPERIODO
             AND A.CANAL_VENTA IN  ('TIENDAS PROPIAS FRANQUICIADAS','TIENDAS PROPIAS FRANQUICIADAS CENTINELA')
        GROUP BY c.VENDEDOR,c.CANAL_VENTA,C.DIVISION_TERRITORIO,C.GERENCIA_TERRITORIO,D.NUMEROCUENTARESPONSABLE,B.CUENTA,a.nextel,a.ruccompania,
                 c.socio_negocio,c.tienda,b.consultor,a.fechaactivacion,b.grupo, b.resultado,a.codigocuenta) a
GROUP BY A.VENDEDOR,A.CANAL_VENTA,A.DIVISION_TERRITORIO,A.GERENCIA_TERRITORIO,
a.socio_negocio,a.tienda,a.consultor,a.fechaactivacion,a.grupo,a.nextel,a.ruccompania,a.codigocuenta;
---------------------------inserta los cananles TP-----------------------------------
INSERT INTO FA_AFILIADOSMAIL_JERARQUIA
SELECT SPERIODO AS periodo,NVL(consultortp, ORDENCREADOPOR) AS vendedor,
       'Venta' AS ENTRADA,
       CANAL_VENTA,DIVISION_TERRITORIO,GERENCIA_TERRITORIO,
       NULL AS SOCIO_NEGOCIO,TIENDA,CONSULTOR,FECHAACTIVACION,GRUPO,nextel,ruccompania,CODIGOCUENTA,
       SUM(CASE WHEN numerocuentaresponsable is not null THEN 1 ELSE 0 END) as afiliado_basehp,
       SUM(CASE WHEN RESULTADO='Afiliado' AND GRUPO='Como Cliente' THEN 1
                WHEN numerocuentaresponsable is not null AND cuenta is null THEN 1 ELSE 0 END) AS Afiliado_Vta,
       SUM(CASE WHEN resultado='Rechazado' AND grupo='Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_Vta,
       SUM(CASE WHEN resultado='Afiliado' AND grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Afiliado_PVta,
       SUM(CASE WHEN resultado='Rechazado' AND grupo<>'Como Cliente' THEN 1 ELSE 0 END) AS Rechazado_PVta,
       COUNT(1) AS CUENTAS
  FROM (SELECT c.consultor AS CONSULTORTP,c.canal_venta,c.division_territorio,c.gerencia_territorio,d.numerocuentaresponsable,b.cuenta,a.nextel,a.ruccompania,
               c.tienda,b.consultor,a.fechaactivacion,b.grupo,
               A.CODIGOCUENTA, B.RESULTADO,O.ORDENCREADOPOR, COUNT(DISTINCT A.CODIGOCUENTA) AS REGISTROS
           FROM (SELECT z.CODIGOCUENTA,z.FECHA,z.CANAL_VENTA,z.GERENCIA_TERRITORIO,z.VENDEDOR,z.PERIODO,z.DIVISION_TERRITORIO,z.SOCIO_NEGOCIO,z.TIENDA,z.nro_orden,z.FECHAACTIVACION,z.nextel,z.ruccompania
                  FROM ODS_GPF.TNP_INAR_PERSONAS_ODS Z
                  WHERE FECHA<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)
                       AND NOT EXISTS(SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) v WHERE z.codigocuenta=v.numerocuentaresponsable
                                       AND TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')<SPERIODO)
                 MINUS
                SELECT x.codigocuenta,x.fecha,x.canal_venta,x.gerencia_territorio,x.vendedor,x.periodo,x.division_territorio,x.socio_negocio,x.tienda,x.nro_orden,x.fechaactivacion,x.nextel,x.ruccompania
                  FROM
                    (SELECT * FROM TNP_INAR_PERSONAS_ODS
                        WHERE FECHA<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) X,
                     (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE fechacreacioncontacto<TO_DATE(SPERIODO,'yyyymm')-7) b
                 WHERE x.codigocuenta = b.numerocuentaresponsable) a,
                (SELECT codigoorden,estadoorden,tipoprocesoorden,ordencreadopor
                   FROM ODS_GPF.P_ORDENES
                    WHERE TIPOPROCESOORDEN IN ('PORTABILIDAD','VENTA MOVILES')
                    AND SUBCATEGORIA IN ('SOLICITUD DE PORTABILIDAD POSTPAGO','POSTPAGO NUEVA '||'&'||' ADICION','RETAIL POSTPAGO')
                    AND ESTADOORDEN = 'Cerrada') O,
                (SELECT DISTINCT cuenta,resultado,grupo,fechaafiliacion,consultor,equipo,ruccompania
                   FROM ods_gpf.FA_AFILIADOSMAIL_BIENVENIDA
                  WHERE fechaafiliacion<=TO_DATE(SPERIODO,'yyyymm')+38
                    AND FECHAAFILIACION>=TO_DATE(SPERIODO,'yyyymm')-7) B,
                (SELECT * FROM FA_JERARQUIA_TP WHERE fecha=(select max(fecha) from FA_JERARQUIA_TP)) C,
                  (SELECT * FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')=SPERIODO
                            and tiponotificacion='Recibo Electrónico'
                            and FECHACREACIONCONTACTO<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) d
           WHERE A.CODIGOCUENTA = B.CUENTA(+)
             AND A.NRO_ORDEN = o.CODIGOORDEN(+)
             AND UPPER(TRIM(o.ordencreadopor))=UPPER(TRIM(C.consultor(+)))
             and a.codigocuenta= d.numerocuentaresponsable(+)
             AND A.PERIODO = SPERIODO
             AND A.CANAL_VENTA = 'TIENDAS PROPIAS'
        GROUP BY c.CONSULTOR,c.CANAL_VENTA,C.DIVISION_TERRITORIO,C.GERENCIA_TERRITORIO,D.NUMEROCUENTARESPONSABLE,B.CUENTA,
                 a.nextel,a.ruccompania,c.tienda,
                 B.CONSULTOR,A.FECHAACTIVACION,B.GRUPO, B.RESULTADO,A.CODIGOCUENTA,O.ORDENCREADOPOR)
GROUP BY NVL(consultortp, ORDENCREADOPOR),CANAL_VENTA,DIVISION_TERRITORIO,GERENCIA_TERRITORIO,
         tienda,consultor,fechaactivacion,grupo,nextel,ruccompania,codigocuenta;
-----------------------------inserta post-venta---------------------------------
INSERT INTO FA_AFILIADOSMAIL_JERARQUIA
SELECT SPERIODO AS periodo,NULL AS vendedor,'Post-venta' AS ENTRADA,
       NULL AS canal_venta, NULL AS divisio_territorio,NULL AS gerencia_territorio,
       NULL AS socio_negocio,NULL AS tienda,a.consultor,a.fechaafiliacion,
       CASE WHEN a.grupo = 'Como Cliente' AND equipos IS NULL THEN 'Desactivado'
            WHEN a.GRUPO = 'Como Cliente' AND EQUIPOS IS NOT NULL THEN 'Mal Afiliado'
            ELSE a.GRUPO END AS GRUPO,a.equipo,a.ruccompania,
       A.CUENTA,
        SUM(CASE WHEN a.codigocompania is not null THEN 1 ELSE 0 END) as afiliado_basehp,
       0 AS Afiliado_Vta,
       0 AS Rechazado_Vta,
       SUM(CASE WHEN a.resultado='Afiliado' THEN 1 ELSE 0 END) AS AfiliadoPvta,
       SUM(CASE WHEN a.resultado='Rechazado' THEN 1 ELSE 0 END) AS RechazadoPvta,
       COUNT(1) AS CUENTAS
  FROM (SELECT *
          FROM ODS_GPF.FA_AFILIADOSMAIL_BIENVENIDA A
         WHERE  A.FECHAAFILIACION < add_months(to_date(SPERIODO,'yyyymm'),1)
           AND A.FECHAAFILIACION >= TO_DATE(SPERIODO,'yyyymm')
           AND a.cuenta is not null
           AND NOT EXISTS
              (SELECT CUENTA
                 FROM FA_AFILIADOSMAIL_HISTORICO B
                WHERE A.CUENTA=B.CUENTA
                  AND TO_CHAR(B.FECHA,'yyyymm')<SPERIODO)
           AND NOT EXISTS
              (SELECT b.CODIGOCUENTA
                 FROM ODS_GPF.TNP_INAR_PERSONAS_ODS b
                WHERE a.cuenta=b.codigocuenta
                  AND b.PERIODO =SPERIODO)) a,
       (SELECT A.CODIGOCOMPANIA, COUNT(1) AS EQUIPOS
          FROM fotoequipos a,
               pm_planes b
         WHERE a.codigoplantarifariobscs = b.c_plan
           AND a.estadocontrato <> 'Desactivado'
           AND upper(b.t_plan) = 'COMERCIAL'
           AND upper(a.product) NOT LIKE '%PRE%' --planes post
         GROUP BY A.CODIGOCOMPANIA) C,
         (SELECT DISTINCT CODIGOCOMPANIA FROM (SELECT * FROM FA_BASE_HP_V3 WHERE PERIODO = SPERIODO) WHERE TO_CHAR(FECHACREACIONCONTACTO,'yyyymm')=SPERIODO
         and tiponotificacion='Recibo Electrónico'
         AND FECHACREACIONCONTACTO<=(SELECT MAX(FECHAAFILIACION) FROM FA_AFILIADOSMAIL_BIENVENIDA)) D
 WHERE D.codigocompania=A.codigocompania(+)
     AND A.CODIGOCOMPANIA = C.CODIGOCOMPANIA(+)
 GROUP BY CASE WHEN A.GRUPO = 'Como Cliente' AND EQUIPOS IS NULL THEN 'Desactivado'
               WHEN A.GRUPO = 'Como Cliente' AND EQUIPOS IS NOT NULL THEN 'Mal Afiliado'
               ELSE a.grupo END,a.consultor,a.fechaafiliacion,a.grupo,a.equipo,a.ruccompania,a.cuenta;
COMMIT;
END FA_AFILMAIL_JERARQUIA;

PROCEDURE PROCESAR_REGVTA_SERIES_PYE(speriodo VARCHAR2)
IS
BEGIN
DELETE FROM ODS_GPF.FA_RVDETALLE_CRUZADO WHERE PERIODO=speriodo;
commit;
INSERT INTO ODS_GPF.FA_RVDETALLE_CRUZADO (SERIE,TRX_NUMBER,NUMERO_DOC,TIPODOC,TIPOPERSONA,NOMBRE,NRO_DOC,TIPO,IMPORTE_SOLES,CANT_TOT,MONT_TOT,MONT_LIN_TOT,IGV_LIN_TOT,TIPODOCUMENTO,VEP,GEO,PERIODO)
------------------------------------------------------------------------------------------------
--SERIE 009 - MANUAL
------------------------------------------------------------------------------------------------
SELECT  distinct '009' SERIE,a.TRX_NUMBER,a.NUMERO_DOC,a.TIPODOC,a.TIPOPERSONA,a.NOMBRE,a.NRO_DOC,
        a.TIPO,a.IMPORTE_SOLES,a.CANT_TOT,a.MONT_TOT,a.MTO_LIN_TOT,a.IGV_LIN_TOT,
        obtener_tipodoc_2(A.NUMERO_DOC) tipodocumento,DECODE(NVL(b.NRO_DOCUMENTO,'-'),'-','NO','SI') VEP,
        a.GEO,speriodo
FROM (
SELECT  TRX_NUMBER,NUMERO_DOC,TIPODOC,TIPOPERSONA,NOMBRE,NRO_DOC,TIPO,IMPORTE_SOLES,
        SUM(CANTIDAD) CANT_TOT,SUM(PRECIO_UNI) MONT_TOT,SUM(MONTO_LINEA) MTO_LIN_TOT,SUM(IGV_LINEA) IGV_LIN_TOT,
        DECODE(dirección_legal,'LIMA','LIMA','CALLAO','LIMA','PROVINCIA') geo
FROM FA_RVEQUIPOSPAGOS_SERIE
WHERE tipo like '%009%' and periodo=speriodo
GROUP BY TRX_NUMBER,NUMERO_DOC,TIPODOC,TIPOPERSONA,NOMBRE,NRO_DOC,TIPO,IMPORTE_SOLES,DECODE(dirección_legal,'LIMA','LIMA','CALLAO','LIMA','PROVINCIA')
) A
LEFT JOIN
(
/*select NRO_DOCUMENTO from FA_REGVTA009_PORTAL1 where CARGO_VEP='SI'
union all*/
select NUM_COMPROBANTE NRO_DOCUMENTO from FA_INGRESOS_VEP where SUBSTR(SUBSTR(NUM_COMPROBANTE,1,4),-3)='009' and periodo=speriodo
) B
ON SUBSTR(A.NRO_DOC,-8)=SUBSTR(B.NRO_DOCUMENTO,-8)
UNION ALL
------------------------------------------------------------------------------------------------
--SERIE 007 - MANUAL
------------------------------------------------------------------------------------------------
SELECT  '007' SERIE,a.TRX_NUMBER,a.NUMERO_DOC,a.TIPODOC,a.TIPOPERSONA,a.NOMBRE,a.NRO_DOC,
        a.TIPO,a.IMPORTE_SOLES,a.CANT_TOT,a.MONT_TOT,a.MTO_LIN_TOT,a.IGV_LIN_TOT,
        obtener_tipodoc_2(A.NUMERO_DOC) tipodocumento,DECODE(NVL(b.NRO_DOCUMENTO,'-'),'-','NO','SI') VEP,
        a.GEO,speriodo
FROM (
SELECT  TRX_NUMBER,NUMERO_DOC,TIPODOC,TIPOPERSONA,NOMBRE,NRO_DOC,TIPO,IMPORTE_SOLES,
        SUM(CANTIDAD) CANT_TOT,SUM(PRECIO_UNI) MONT_TOT,SUM(MONTO_LINEA) MTO_LIN_TOT,SUM(IGV_LINEA) IGV_LIN_TOT,
        DECODE(dirección_legal,'LIMA','LIMA','CALLAO','LIMA','PROVINCIA') geo
FROM FA_RVEQUIPOSPAGOS_SERIE
WHERE tipo like '%007%' and periodo=speriodo
GROUP BY TRX_NUMBER,NUMERO_DOC,TIPODOC,TIPOPERSONA,NOMBRE,NRO_DOC,TIPO,IMPORTE_SOLES,DECODE(dirección_legal,'LIMA','LIMA','CALLAO','LIMA','PROVINCIA')
) A
LEFT JOIN
(
select NRO_DOCUMENTO from FA_REGVTA009_PORTAL1 where periodo=speriodo
union all
select NUM_COMPROBANTE from FA_INGRESOS_VEP where SUBSTR(SUBSTR(NUM_COMPROBANTE,1,4),-3)='007' and periodo=speriodo
) B
ON SUBSTR(A.NRO_DOC,-8)=SUBSTR(B.NRO_DOCUMENTO,-8)
UNION ALL
------------------------------------------------------------------------------------------------
--SERIE 213 - DISTRIB. / MAYORISTAS / SOC. NEG. / CADENAS RETAIL
------------------------------------------------------------------------------------------------
SELECT  '213' SERIE,a.TRX_NUMBER,a.NUMERO_DOC,a.TIPODOC,a.TIPOPERSONA,a.NOMBRE,a.NRO_DOC,
        a.TIPO,a.IMPORTE_SOLES,a.CANT_TOT,a.MONT_TOT,a.MTO_LIN_TOT,a.IGV_LIN_TOT,
        obtener_tipodoc_2(A.NUMERO_DOC) tipodocumento,DECODE(NVL(b.NRO_DOCUMENTO,'-'),'-','NO','SI') VEP,
        A.GEO,speriodo
FROM (
SELECT  TRX_NUMBER,NUMERO_DOC,TIPODOC,TIPOPERSONA,NOMBRE,NRO_DOC,TIPO,IMPORTE_SOLES,
        SUM(CANTIDAD) CANT_TOT,SUM(PRECIO_UNI) MONT_TOT,SUM(MONTO_LINEA) MTO_LIN_TOT,SUM(IGV_LINEA) IGV_LIN_TOT,
        DECODE(dirección_legal,'LIMA','LIMA','CALLAO','LIMA','PROVINCIA') geo
FROM FA_RVEQUIPOSPAGOS_SERIE
WHERE tipo like '%213%' and periodo=speriodo
GROUP BY TRX_NUMBER,NUMERO_DOC,TIPODOC,TIPOPERSONA,NOMBRE,NRO_DOC,TIPO,IMPORTE_SOLES,DECODE(dirección_legal,'LIMA','LIMA','CALLAO','LIMA','PROVINCIA')
) A
LEFT JOIN
(
select NRO_DOCUMENTO from FA_REGVTA009_PORTAL1 where periodo=speriodo
union all
select NUM_COMPROBANTE from FA_INGRESOS_VEP where SUBSTR(SUBSTR(NUM_COMPROBANTE,1,4),-3)='213' and periodo=speriodo
) B
ON SUBSTR(A.NRO_DOC,-8)=SUBSTR(B.NRO_DOCUMENTO,-8)
UNION ALL
------------------------------------------------------------------------------------------------
--SERIE 300 - VENTAS WEB / APLICATIVO
------------------------------------------------------------------------------------------------
SELECT  '300' SERIE,a.TRX_NUMBER,a.NUMERO_DOC,a.TIPODOC,a.TIPOPERSONA,a.NOMBRE,a.NRO_DOC,
        a.TIPO,a.IMPORTE_SOLES,a.CANT_TOT,a.MONT_TOT,a.MTO_LIN_TOT,a.IGV_LIN_TOT,
        obtener_tipodoc_2(A.NUMERO_DOC) tipodocumento,DECODE(NVL(b.NRO_DOCUMENTO,'-'),'-','NO','SI') VEP,
        A.GEO,speriodo
FROM (
SELECT  (x.SERIE||LPAD(x.COMPROBANTE,8,'0')) TRX_NUMBER,x.NRO_DOCUMENTO NUMERO_DOC,x.TIPO_DOCUMENTO TIPODOC,'-' as TIPOPERSONA,
        x.CLIENTE as NOMBRE,x.SERIE||LPAD(x.COMPROBANTE,8,'0') NRO_DOC,x.TIPO,x.VALORVENTA IMPORTE_SOLES,SUM(x.CANTIDAD) CANT_TOT,
        SUM(x.PRECIO_UNITARIO) MONT_TOT,SUM(x.MONTO) MTO_LIN_TOT, SUM(x.MONTO*0.18) IGV_LIN_TOT,obtener_tipodoc_2(x.NRO_DOCUMENTO) tipodocumento,
        DECODE(y.provincia,'LIMA','LIMA','CALLAO','LIMA','PROVINCIA') GEO
FROM FA_DOCSERIES_TIENDA x
LEFT JOIN p_compania y
ON x.codigo_bscs=y.cuentacompania
WHERE x.SERIE='300' and x.periodo=speriodo
GROUP BY (x.SERIE||LPAD(x.COMPROBANTE,8,'0')),x.NRO_DOCUMENTO,x.TIPO_DOCUMENTO,
        x.CLIENTE,x.SERIE||LPAD(x.COMPROBANTE,8,'0'),x.TIPO,x.VALORVENTA,DECODE(y.provincia,'LIMA','LIMA','CALLAO','LIMA','PROVINCIA')
) A
LEFT JOIN
(
select NRO_DOCUMENTO from FA_REGVTA009_PORTAL1 where periodo=speriodo
union all
select NUM_COMPROBANTE from FA_INGRESOS_VEP where SUBSTR(SUBSTR(NUM_COMPROBANTE,1,4),-3)='300' and periodo=speriodo
) B
ON SUBSTR(A.NRO_DOC,-8)=SUBSTR(B.NRO_DOCUMENTO,-8);
------------------------------------------------------------------------------------------------
UPDATE FA_RVDETALLE_CRUZADO
SET clasificacion=DECODE(SUBSTR(TIPO,-2),'CR',DECODE(VEP,'SI','cargo al recibo VEP','cargo al recibo'),'al contado')
WHERE periodo=SPERIODO;

UPDATE FA_RVDETALLE_CRUZADO
SET clasedocumento=DECODE(SERIE,'300',TIPO,DECODE(SUBSTR(TIPO,1,2),'FA','Factura','BV','Boleta Venta','NC','Nota Credito','Nota Debito'))
WHERE periodo=SPERIODO;
COMMIT;

MERGE INTO
   (
   SELECT c.detalle AS motivoE, SUBSTR(C.NRO_DOC,-8) documento
    FROM FA_RVDETALLE_CRUZADO c
    WHERE c.SERIE='009' and c.CLASEDOCUMENTO in ('Factura') and periodo=SPERIODO
   )A
   USING
   (
   SELECT motivo,DOCUMENTO FROM (
   SELECT c4.CONCEPTO AS motivo,SUBSTR(C4.NRO_DOCUMENTO,-8) documento,row_number () over (partition by SUBSTR(C4.NRO_DOCUMENTO,-8) order by C4.VVENTA desc,C4.NPQUANTITY desc) RN
   FROM FA_REGVTA009_PORTAL1 c4
   WHERE c4.TIPO='FA'
   ) WHERE RN=1
   )B
   ON
   (
   A.documento= b.documento
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

   MERGE INTO
   (
   SELECT c.detalle AS motivoE, SUBSTR(C.NRO_DOC,-8) documento
    FROM FA_RVDETALLE_CRUZADO c
    WHERE c.SERIE='009' and c.CLASEDOCUMENTO in ('Boleta Venta') and periodo=SPERIODO
   )A
   USING
   (
   SELECT motivo,DOCUMENTO FROM (
   SELECT c4.CONCEPTO AS motivo,SUBSTR(C4.NRO_DOCUMENTO,-8) documento,row_number () over (partition by SUBSTR(C4.NRO_DOCUMENTO,-8) order by C4.VVENTA desc,C4.NPQUANTITY desc) RN
   FROM FA_REGVTA009_PORTAL1 c4
   WHERE c4.TIPO='BV'
   ) WHERE RN=1
   )B
   ON
   (
   A.documento= b.documento
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

   MERGE INTO
   (
   SELECT c.detalle AS motivoE, C.NRO_DOC documento
    FROM FA_RVDETALLE_CRUZADO c
    WHERE c.SERIE='009' and c.CLASEDOCUMENTO in ('Nota Debito','Nota Credito') and periodo=SPERIODO
   )A
   USING
   (
   SELECT motivo,documento FROM (
   select DISTINCT DESCRIPTION AS motivo,nro_doc documento,row_number () over (partition by nro_doc order by monto_linea asc,cantidad desc) RN
   from FA_RVEQUIPOSPAGOS_SERIE
   where tipo like '%009%'
   ) WHERE RN=1
   )B
   ON
   (
   A.documento= b.documento
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

   MERGE INTO
   (
   SELECT c.detalle AS motivoE, C.NRO_DOC documento
    FROM FA_RVDETALLE_CRUZADO c
    WHERE c.SERIE in ('213','007')  and periodo=SPERIODO
   )A
   USING
   (
   SELECT motivo,documento FROM (
   select DISTINCT DESCRIPTION AS motivo,nro_doc documento,row_number () over (partition by nro_doc order by monto_linea asc,cantidad desc) RN
   from FA_RVEQUIPOSPAGOS_SERIE
   where tipo not like '%009%'
   ) WHERE RN=1
   )B
   ON
   (
   A.documento= b.documento
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

   UPDATE FA_RVDETALLE_CRUZADO SET DETALLE=clasedocumento WHERE SERIE in ('300');
   COMMIT;
   UPDATE FA_RVDETALLE_CRUZADO SET CONCEPTO='-' WHERE CONCEPTO IS NULL;
   COMMIT;

   ------------------------------------
-----------------NOTA DEBITO
------------------------------------
update FA_RVDETALLE_CRUZADO set concepto = 'Error emision nota de credito' where concepto='-' and serie='009' and clasedocumento='Nota Debito' and detalle like '%APLICA%%POR AUMENTO%';
update FA_RVDETALLE_CRUZADO set concepto = 'Error emision nota de credito' where concepto='-' and serie='009' and clasedocumento='Nota Debito' and detalle like '%APLICA%%NOTA DE CREDITO%';
commit;
update FA_RVDETALLE_CRUZADO set concepto = 'Regularizacion ajuste de liquidacion' where concepto='-' and serie='213' and clasedocumento='Nota Debito' and detalle like '%AJUSTE DE LIQUIDACI¿N%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulacion nota de credito' where concepto='-' and serie='213' and clasedocumento='Nota Debito' and detalle like '%NOTA DE CREDITO%%ANULACION DE DOC%';
commit;
update FA_RVDETALLE_CRUZADO set concepto = 'Regularizacion ajuste de liquidacion' where concepto='-' and serie='007' and clasedocumento='Nota Debito' and detalle like '%APLICA%%POR REGULARIZACI¿N AJUSTE DE LIQUIDACI¿N%';
update FA_RVDETALLE_CRUZADO set concepto = 'Faltante Inventario' where concepto='-' and serie='007' and clasedocumento='Nota Debito' and detalle like '%POR CONCEPTO%%INVENTARIO%';
update FA_RVDETALLE_CRUZADO set concepto = 'Faltante Inventario' where concepto='-' and serie='007' and clasedocumento='Nota Debito' and detalle like '%POR CONCEPTO%%PERDIDA DE EQUIPO%';
update FA_RVDETALLE_CRUZADO set concepto = 'Reclamos / Detectivos' where concepto='-' and serie='007' and clasedocumento='Nota Debito' and detalle like '%POR CONCEPTO%';
update FA_RVDETALLE_CRUZADO set concepto = 'LDI - Concepto' where serie='007' and UPPER(detalle) like '%CONCEP%%TERMINACI%%TR%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros' where concepto='-' and serie='007' and clasedocumento='Nota Debito';
commit;
------------------------------------
--------------NOTA CREDITO
------------------------------------
update FA_RVDETALLE_CRUZADO set concepto = 'Anulación Guía de  Remision' where concepto='-' and serie='009' and clasedocumento='Nota Credito' and detalle like '%ANULACI¿N DE GU¿A DE REMISI¿N%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulación Guía de  Remision' where concepto='-' and serie='009' and clasedocumento='Nota Credito' and detalle like '%ANULACION DE GUIA DE REMISION%';
update FA_RVDETALLE_CRUZADO set concepto = 'Descuento especial' where concepto='-' and serie='009' and clasedocumento='Nota Credito' and detalle like '%DESCUENTO%';
update FA_RVDETALLE_CRUZADO set concepto = 'DevoluciónVentaTrunca' where concepto='-' and serie='009' and clasedocumento='Nota Credito' and detalle like '%DEVOLUCI¿N%';
update FA_RVDETALLE_CRUZADO set concepto = 'DevoluciónVentaTrunca' where concepto='-' and serie='009' and clasedocumento='Nota Credito' and detalle like '%DEVOLUCION%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros' where concepto='-' and serie='009' and clasedocumento='Nota Credito';
commit;
update FA_RVDETALLE_CRUZADO set concepto = 'Anulación Guía de  Remision' where concepto='-' and serie='009' and clasedocumento='Nota Credito' and detalle like '%ANULACI¿N DE GU¿A DE REMISI¿N%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulación Guía de  Remision' where concepto='-' and serie='009' and clasedocumento='Nota Credito' and detalle like '%ANULACION DE GUIA DE REMISION%';
update FA_RVDETALLE_CRUZADO set concepto = 'Descuento especial' where concepto='-' and serie='009' and clasedocumento='Nota Credito' and detalle like '%DESCUENTO%';
update FA_RVDETALLE_CRUZADO set concepto = 'DevoluciónVentaTrunca' where concepto='-' and serie='009' and clasedocumento='Nota Credito' and detalle like '%DEVOLUCI¿N%';
update FA_RVDETALLE_CRUZADO set concepto = 'DevoluciónVentaTrunca' where concepto='-' and serie='009' and clasedocumento='Nota Credito' and detalle like '%DEVOLUCION%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros' where concepto='-' and serie='009' and clasedocumento='Nota Credito';
commit;
merge into
(select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='213' and concepto='-') A
using (
select trx_number from (
select distinct trx_number from (
select NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.* from FA_RVDETALLE_CRUZADO a left join (select distinct nro_doc,codigo from FA_RVEQUIPOSPAGOS_SERIE) b on a.trx_number=b.nro_doc left join FA_RVDETALLE_COD_CLI c on b.codigo=c.codigo where a.serie='213' and a.detalle like '%DEVOLUCI¿N%' and NVL(c.tipo,'OTROS')='RETAIL' and concepto='-'
)
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Cadenas retail/Nuevos socios';
merge into
(select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='213' and concepto='-') A
using (
select trx_number from (
select distinct trx_number from (
select NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.* from FA_RVDETALLE_CRUZADO a left join (select distinct nro_doc,codigo from FA_RVEQUIPOSPAGOS_SERIE) b on a.trx_number=b.nro_doc left join FA_RVDETALLE_COD_CLI c on b.codigo=c.codigo where a.serie='213' and a.detalle like '%DEVOLUCI¿N%' and NVL(c.tipo,'OTROS')='OTROS' and concepto='-'
)
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Canal Mayorista';
update FA_RVDETALLE_CRUZADO set concepto = 'Ajuste de Liquidación' where concepto='-' and serie='213' and clasedocumento='Nota Credito' and detalle like '%REGULARIZACI¿N AJUSTE%';
update FA_RVDETALLE_CRUZADO set concepto = 'Proteccion de precios' where concepto='-' and serie='213' and clasedocumento='Nota Credito' and detalle like '%PROTECCI¿N%';
update FA_RVDETALLE_CRUZADO set concepto = 'Factura duplicada' where concepto='-' and serie='213' and clasedocumento='Nota Credito' and detalle like '%DUPLIC%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulacion de guia de remision' where concepto='-' and serie='213' and clasedocumento='Nota Credito' and detalle like '%GU¿A%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulacion de guia de remision' where concepto='-' and serie='213' and clasedocumento='Nota Credito' and detalle like '%GUIA%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulacion de guia de remision' where concepto='-' and serie='213' and clasedocumento='Nota Credito' and detalle like '%GR%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulacion de guia de remision' where concepto='-' and serie='213' and clasedocumento='Nota Credito' and detalle like '%G/R%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros' where concepto='-' and serie='213' and clasedocumento='Nota Credito';
commit;
merge into
(select trx_number,concepto from (select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and concepto='-')) A
using (
select trx_number from (
select distinct trx_number from (
select NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.* from FA_RVDETALLE_CRUZADO a left join (select distinct nro_doc,codigo from FA_RVEQUIPOSPAGOS_SERIE) b on a.trx_number=b.nro_doc left join FA_RVDETALLE_COD_CLI c on b.codigo=c.codigo where a.serie='007' and a.detalle like '%DEVOLUCI¿N%' and NVL(c.tipo,'OTROS')='RETAIL' and concepto='-'
)
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Equipos -RETAIL';
merge into
(select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and concepto='-') A
using (
select trx_number from (
select distinct trx_number from (
select NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.* from FA_RVDETALLE_CRUZADO a left join (select distinct nro_doc,codigo from FA_RVEQUIPOSPAGOS_SERIE) b on a.trx_number=b.nro_doc left join FA_RVDETALLE_COD_CLI c on b.codigo=c.codigo where a.serie='007' and a.detalle like '%DEVOLUCI¿N%' and NVL(c.tipo,'OTROS')='OTROS' and concepto='-'
)
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Canal Mayorista';
update FA_RVDETALLE_CRUZADO set concepto = 'Ajuste de Liquidación' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%REGULARIZACI¿N AJUSTE%';
update FA_RVDETALLE_CRUZADO set concepto = 'Ajuste de Liquidación' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%AJUSTE%%LIQUIDAC%';
update FA_RVDETALLE_CRUZADO set concepto = 'Venta no reconocida' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%DESCUENTO EN CONCEPTO%';
update FA_RVDETALLE_CRUZADO set concepto = 'Venta no reconocida' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%DESCUENTO POR CONCEPTO%';
update FA_RVDETALLE_CRUZADO set concepto = 'Descuento especial' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%DESCUENTO%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulacion de guia de remision' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%GU¿A%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulacion de guia de remision' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%GUIA%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulacion de guia de remision' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%GR%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulacion de guia de remision' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%G/R%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulacion de factura' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%ANULACI¿N DE COMPROBANTE%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulacion de factura' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%ANULACI¿N DE DOCUMENTO%';
update FA_RVDETALLE_CRUZADO set concepto = 'Anulacion de factura' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%ANULACION%%DOCUMENTO%';
update FA_RVDETALLE_CRUZADO set concepto = 'Penalidad' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%PENALIDAD%';
update FA_RVDETALLE_CRUZADO set concepto = 'Proteccion de precios' where concepto='-' and serie='007' and clasedocumento='Nota Credito' and detalle like '%PROTECCI¿N%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros' where concepto='-' and serie='007' and clasedocumento='Nota Credito';
commit;
update FA_RVDETALLE_CRUZADO set concepto ='Anulacion de factura' where concepto='-' and serie='300' and clasedocumento='Nota de Cr?ito';
commit;
------------------------------------
-----------BOLETA FACTURA
------------------------------------
update FA_RVDETALLE_CRUZADO set concepto ='Boleta' where concepto='-' and serie='300' and clasedocumento='Boleta';
update FA_RVDETALLE_CRUZADO set concepto ='Factura' where concepto='-' and serie='300' and clasedocumento='Factura';
commit;
update FA_RVDETALLE_CRUZADO set concepto =detalle where concepto='-' and serie='009' and clasedocumento='Boleta Venta';
update FA_RVDETALLE_CRUZADO set concepto =detalle where concepto='-' and serie='009' and clasedocumento='Factura';
commit;
merge into
(select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='213' and concepto='-') A
using (
select trx_number from (
select distinct trx_number from (
select NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.* from FA_RVDETALLE_CRUZADO a left join (select distinct nro_doc,codigo from FA_RVEQUIPOSPAGOS_SERIE) b on a.trx_number=b.nro_doc left join FA_RVDETALLE_COD_CLI c on b.codigo=c.codigo where a.serie='213' and NVL(c.tipo,'OTROS')='RETAIL' and concepto='-'
)
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
--UPDATE set concepto = 'Venta En consignacion de equipos - Cadena Retail/ Socios Negocios';
UPDATE set concepto = 'Venta En consignacion de equipos - Cadena Retail';
merge into
(select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='213' and concepto='-') A
using (
select trx_number from (
select distinct trx_number from (
select NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.* from FA_RVDETALLE_CRUZADO a left join (select distinct nro_doc,codigo from FA_RVEQUIPOSPAGOS_SERIE) b on a.trx_number=b.nro_doc left join FA_RVDETALLE_COD_CLI c on b.codigo=c.codigo where a.serie='213' and NVL(c.tipo,'OTROS')='OTROS' and detalle like '%Descuento seg¿n contrato%' and concepto='-'
)
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Venta de equipos - Distribuidor y Mayorista - Venta de equipo';
merge into
(select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='213' and concepto='-') A
using (
select trx_number from (
select distinct trx_number from (
select NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.* from FA_RVDETALLE_CRUZADO a left join (select distinct nro_doc,codigo from FA_RVEQUIPOSPAGOS_SERIE) b on a.trx_number=b.nro_doc left join FA_RVDETALLE_COD_CLI c on b.codigo=c.codigo where a.serie='213' and NVL(c.tipo,'OTROS')='OTROS' and UPPER(detalle) like '%PACK SIM ENTEL%' and concepto='-'
)
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Venta de equipos - Distribuidor y Mayorista - Venta de PacK sim : chip +  servicio';
merge into
(select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='213' and concepto='-') A
using (
select trx_number from (
select distinct trx_number from (
select NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.* from FA_RVDETALLE_CRUZADO a left join (select distinct nro_doc,codigo from FA_RVEQUIPOSPAGOS_SERIE) b on a.trx_number=b.nro_doc left join FA_RVDETALLE_COD_CLI c on b.codigo=c.codigo where a.serie='213' and NVL(c.tipo,'OTROS')='OTROS' and UPPER(detalle) like '%CHIP%' and concepto='-'
)
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Venta de equipos - Distribuidor y Mayorista - Venta de Chip';
merge into
(select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='213' and concepto='-') A
using (
select trx_number from (
select distinct trx_number from (
select NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.* from FA_RVDETALLE_CRUZADO a left join (select distinct nro_doc,codigo from FA_RVEQUIPOSPAGOS_SERIE) b on a.trx_number=b.nro_doc left join FA_RVDETALLE_COD_CLI c on b.codigo=c.codigo where a.serie='213' and NVL(c.tipo,'OTROS')='OTROS' and UPPER(detalle) like '%TARJETA PREPAGO%' and concepto='-'
)
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Venta de equipos - Distribuidor y Mayorista - Venta tarjeta prepago fisica';
merge into
(select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='213' and concepto='-') A
using (
select trx_number from (
select distinct trx_number from (
select NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.* from FA_RVDETALLE_CRUZADO a left join (select distinct nro_doc,codigo from FA_RVEQUIPOSPAGOS_SERIE) b on a.trx_number=b.nro_doc left join FA_RVDETALLE_COD_CLI c on b.codigo=c.codigo where a.serie='213' and NVL(c.tipo,'OTROS')='OTROS' and UPPER(detalle) like '%EQUIPO%' and concepto='-'
)
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Venta de equipos - Distribuidor y Mayorista - Venta de equipo';
commit;
-------------------------------------------------------------
update FA_RVDETALLE_CRUZADO set concepto='Servicios Entidades Publicas' where periodo=speriodo and serie='007' and UPPER(detalle) like '%RENTA B¿SICA%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='Consumo Central de Riesgo' where periodo=speriodo and serie='007' and UPPER(detalle) like '%CENTRAL DE RIESGO%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='Activo Fijo' where periodo=speriodo and serie='007' and UPPER(detalle) like '%REPOSIC%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='Consumo Central Aporte Terminales (MKT)' where periodo=speriodo and serie='007' and UPPER(detalle) like '%APOYO%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='Consumo Central Aporte Terminales (MKT)' where periodo=speriodo and serie='007' and UPPER(detalle) like '%AUSPICIO%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='Consumo Central Aporte Terminales (MKT)' where periodo=speriodo and serie='007' and UPPER(detalle) like '%AUSPICIO%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='Otros -FACTURACION CLIENTES-Mensajeria Banca Movil VAS' where periodo=speriodo and serie='007' and UPPER(detalle) like '%POR CONCEPTO%%SMS%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where periodo=speriodo and serie='007' and UPPER(detalle) like '%POR CONCEPTO%%COUBICACION%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where periodo=speriodo and serie='007' and UPPER(detalle) like '%POR CONCEPTO%%TRANSMI%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where periodo=speriodo and serie='007' and UPPER(detalle) like '%POR CONCEPTO%%ENLACES%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='Recargas Virtuales' where periodo=speriodo and serie='007' and UPPER(detalle) like '%PREPAGO%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='Recargas Virtuales' where periodo=speriodo and serie='007' and UPPER(detalle) like '%RECARGA%%PREPAGO%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='SOCIO DE NEGOCIO - Activo Fijo' where periodo=speriodo and concepto='Activo Fijo';
update FA_RVDETALLE_CRUZADO set concepto='SOCIO DE NEGOCIO - Consumo Central de Riesgo' where periodo=speriodo and concepto='Consumo Central de Riesgo';
update FA_RVDETALLE_CRUZADO set concepto='Otros -FACTURACION CLIENTES - Servicios Entidades Publicas' where periodo=speriodo and concepto='Servicios Entidades Publicas';
update FA_RVDETALLE_CRUZADO set concepto='Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where periodo=speriodo and concepto='Consumo Central Aporte Terminales (MKT)';
commit;
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-LDI' where serie='007' and UPPER(detalle) like '%CONCEP%%TERMINACI%%TR%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where serie='007' and UPPER(detalle) like '%SERVICIO%%COUBICACION%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where serie='007' and UPPER(detalle) like '%LAN2LAN%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where serie='007' and UPPER(detalle) like '%SERVICIO%%TRANSMISION%%DATOS%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO - Activo Fijo' where serie='007' and UPPER(detalle) like '%VENTA%%CAMIONETA%';
update FA_RVDETALLE_CRUZADO set concepto = 'Equipos -DISTRIBUIDOR ' where serie='007' and UPPER(detalle) like '%DIFERENCIA%%PAGO%%LIQUIDACI%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Servicios Entidades Publicas' where serie='007' and UPPER(detalle) like '%RENTA%%BAS%%CONTRATO%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Servicios Entidades Publicas' where serie='007' and UPPER(detalle) like '%CONCEPTO%%RENTA%%BASICA%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Servicios Entidades Publicas' where serie='007' and UPPER(detalle) like '%CONCEPTO%%CUOTA%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and UPPER(detalle) like '%CONCEPTO%%REVISTA%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and UPPER(detalle) like '%CONCEPTO%%EVENTO%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and UPPER(detalle) like '%CONCEPTO%%ENCARTE%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and UPPER(detalle) like '%CONCEPTO%%ADVERTISING%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and UPPER(detalle) like '%CONCEPTO%%CARAVANA%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and UPPER(detalle) like '%CONCEPTO%%CAMPA¿A%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and UPPER(detalle) like '%CONCEPTO%%SORTEO%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and UPPER(detalle) like '%CONCEPTO%%TAQUILLA%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and UPPER(detalle) like '%CONCEPTO%%BOXES%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and UPPER(detalle) like '%CONCEPTO%%T16%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and UPPER(detalle) like '%CONCEPTO%%HUAWEI%%EGO16%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and UPPER(detalle) like '%CONCEPTO%%REBATE%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and UPPER(detalle) like '%CONCEPTO%%PROMOCION%%HUAWEI%%ENTEL%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Faltante Inventario' where serie='007' and UPPER(detalle) like '%MATERIAL%%REPORT%%EXTRAVIADO%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Faltante Inventario' where serie='007' and UPPER(detalle) like '%REEMBOLSO%%REPARACI%%DA¿OS%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES-Mensajeria Banca Movil VAS' where serie='007' and UPPER(detalle) like '%CONCEPTO%%SERVICIO%%MENSAJERI%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES-Mensajeria Banca Movil VAS' where serie='007' and UPPER(detalle) like '%CONCEPTO%%SERVICIO%%MENSAJ%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Otros' where serie='007' and UPPER(detalle) like '%CONCEPT%%REVERS%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Otros' where serie='007' and UPPER(detalle) like '%CONCEPT%%FRAUD%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Otros' where serie='007' and UPPER(detalle) like '%CONCEPT%%REEMBOLS%%NII%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Otros' where serie='007' and UPPER(detalle) like '%CONCEPT%%USO%%CWAN%';
COMMIT;
update FA_RVDETALLE_CRUZADO set concepto = 'Equipos -RETAIL' where serie='007' and UPPER(nombre) like '%PAGOS DIGITALES PERUANOS S.A%';
update FA_RVDETALLE_CRUZADO set concepto = 'Equipos -RETAIL' where serie='007' and UPPER(nombre) like '%TELVICOM S.A.%';
update FA_RVDETALLE_CRUZADO set concepto = 'Equipos -RETAIL' where serie='007' and UPPER(nombre) like '%STOCK COMPANY SAC%';
update FA_RVDETALLE_CRUZADO set concepto = 'Equipos -RETAIL' where serie='007' and UPPER(nombre) like '%MI MOVIL SAC%';
update FA_RVDETALLE_CRUZADO set concepto = 'Equipos -RETAIL' where serie='007' and UPPER(nombre) like '%INVERSIONES TRIPLEP SAC%';
update FA_RVDETALLE_CRUZADO set concepto = 'Equipos -RETAIL' where serie='007' and UPPER(nombre) like '%MUNDO ACTIVA TELECOMUNICACIONES E.I.R.L.%';
update FA_RVDETALLE_CRUZADO set concepto = 'Equipos -RETAIL' where serie='007' and UPPER(nombre) like '%COMERCIALIZADORA MACARENA EIRL%';
commit;
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Servicios Entidades Publicas' where serie='007' and UPPER(nombre) like '% NACIONAL%' and UPPER(nombre) NOT LIKE '%EMPRESA%%NACIONAL%%TELECOMUNICACION%' and UPPER(detalle) like '%CONCEPT%%RENT%%SICA%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Servicios Entidades Publicas' where serie='007' and UPPER(nombre) like '%MUNICIP%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Servicios Entidades Publicas' where serie='007' and UPPER(nombre) like '%REGIONAL%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES - Servicios Entidades Publicas' where serie='007' and UPPER(nombre) like '%COFOPRI%';
commit;
update FA_RVDETALLE_CRUZADO set concepto = 'Equipos -DISTRIBUIDOR ' where serie='007' and UPPER(nombre) like '%SODALES DISTRIBUIDORES S.R.L.%';
update FA_RVDETALLE_CRUZADO set concepto = 'Equipos -DISTRIBUIDOR ' where serie='007' and UPPER(nombre) like '%SODALES DISTRIBUIDORES SRL%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Otros' where serie='007' and UPPER(nombre) like '%HUAWEI%' and UPPER(detalle) like '%EQUIPO%%HUAWEI%%CONTENIDO%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Otros' where serie='007' and UPPER(nombre) like '%SAMSUNG%%PERU%' and UPPER(detalle) like '%ITEM_VARIOS%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO - Activo Fijo' where serie='007' and UPPER(detalle) like '%CONCEPTO%%ANTEN%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO - Activo Fijo' where serie='007' and UPPER(detalle) like '%CONCEPTO%%UMPT%';
commit;
update FA_RVDETALLE_CRUZADO set concepto = 'Recargas Virtuales' where serie='007' and UPPER(detalle) like '%DESCUENT%%ESPEC%';
update FA_RVDETALLE_CRUZADO set concepto = 'Recargas Virtuales' where serie='007' and UPPER(detalle) like '%RECARGA%%PREP%';
UPDATE FA_RVDETALLE_CRUZADO set concepto = 'Equipos -RETAIL' where serie='007' and UPPER(detalle) like '%CAMBIO%%PREPAGO%';
UPDATE FA_RVDETALLE_CRUZADO set concepto = 'Equipos -RETAIL' where serie='007' and UPPER(detalle) like '%MIGRACION%%PREPAGO%';
UPDATE FA_RVDETALLE_CRUZADO set concepto = 'Equipos -RETAIL' where serie='007' and UPPER(detalle) like '%SERVICIO%%PREPAGO%';
update FA_RVDETALLE_CRUZADO set concepto = 'Equipos -RETAIL' where serie='007' and UPPER(detalle) like '%DIFERENCIA%%PAGO%%LIQUIDACI%';
update FA_RVDETALLE_CRUZADO set concepto = 'Otros -FACTURACION CLIENTES-Mensajeria Banca Movil VAS' where serie='007' and UPPER(detalle) like '%USSD%%SMS%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where serie='007' and UPPER(detalle) like '%ARRENDAMIENT%%INFRAESTRUCTURA%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where serie='007' and UPPER(detalle) like '%FUNCIONALIDADES%%PROYECTO%%PDP%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where serie='007' and UPPER(detalle) like '%ROTACI%%EMISOR%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where serie='007' and UPPER(detalle) like '%CARGO%%ADECUACI%%RED%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where serie='007' and UPPER(detalle) like '%SERVICIO%%DATOS%%GB%%MBPS%';
update FA_RVDETALLE_CRUZADO set concepto = 'SOCIO DE NEGOCIO-Subarriendo' where serie='007' and UPPER(detalle) like '%GASTO%%ARRENDAMIENTO%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where periodo=speriodo and serie='007' and UPPER(detalle) like '%POR CONCEPTO%%DETERMIN%%MOVIL%';
commit;


------------------------------------
--02 Equipos -RETAIL [787]
merge into
(
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and clasedocumento in ('Factura','Boleta Venta')
) A
using (
select trx_number from (
select distinct trx_number from (
select d.monto_linea+d.igv_linea as suma_fin,d.codigo_arti,NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.*
from FA_RVDETALLE_CRUZADO a
left join
  (select distinct nro_doc,codigo
    from FA_RVEQUIPOSPAGOS_SERIE) b
on a.trx_number=b.nro_doc
left join FA_RVDETALLE_COD_CLI c
on b.codigo=c.codigo
left join FA_RVEQUIPOSPAGOS_SERIE d
on a.trx_number=d.trx_number
where a.serie='007' and a.periodo=speriodo and concepto='-'
) where tiporecibido='RETAIL'
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Equipos -RETAIL';
commit;
--03 Equipos -DISTRIBUIDOR  [70]
merge into
(
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and clasedocumento in ('Factura','Boleta Venta')
) A
using (
select trx_number from (
select distinct trx_number from (
select d.monto_linea+d.igv_linea as suma_fin,d.codigo_arti,NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.*
from FA_RVDETALLE_CRUZADO a
left join
  (select distinct nro_doc,codigo
    from FA_RVEQUIPOSPAGOS_SERIE) b
on a.trx_number=b.nro_doc
left join FA_RVDETALLE_COD_CLI c
on b.codigo=c.codigo
left join FA_RVEQUIPOSPAGOS_SERIE d
on a.trx_number=d.trx_number
where a.serie='007' and a.periodo=speriodo and concepto='-'
) where codigo_arti<>'ITEM_VARIOS' and substr(codigo,1,2)='CI' and tiporecibido='DISTRIBUIDOR'
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Equipos -DISTRIBUIDOR ';
commit;
--06 Ordenes Costo Cero  [70]
merge into
(
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and clasedocumento in ('Factura','Boleta Venta')
) A
using (
select trx_number from (
select distinct trx_number from (
select d.monto_linea+d.igv_linea as suma_fin,d.codigo_arti,NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.*
from FA_RVDETALLE_CRUZADO a
left join
  (select distinct nro_doc,codigo
    from FA_RVEQUIPOSPAGOS_SERIE) b
on a.trx_number=b.nro_doc
left join FA_RVDETALLE_COD_CLI c
on b.codigo=c.codigo
left join FA_RVEQUIPOSPAGOS_SERIE d
on a.trx_number=d.trx_number
where a.serie='007' and a.periodo=speriodo and concepto='-'
) where suma_fin=0 and codigo_arti<>'ITEM_VARIOS' and REGEXP_LIKE(substr(codigo,1,1), '^[[:digit:]]+$')
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Otros -FACTURACION CLIENTES-Ordenes Costo Cero ';
commit;
--07 Activo Fijo [0]
merge into
(
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and clasedocumento in ('Factura','Boleta Venta')
) A
using (
select trx_number from (
select distinct trx_number from (
select d.monto_linea+d.igv_linea as suma_fin,d.codigo_arti,NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.*
from FA_RVDETALLE_CRUZADO a
left join
  (select distinct nro_doc,codigo
    from FA_RVEQUIPOSPAGOS_SERIE) b
on a.trx_number=b.nro_doc
left join FA_RVDETALLE_COD_CLI c
on b.codigo=c.codigo
left join FA_RVEQUIPOSPAGOS_SERIE d
on a.trx_number=d.trx_number
where a.serie='007' and a.periodo=speriodo and concepto='-'
) where REGEXP_LIKE(substr(codigo,1,1), '^[[:digit:]]+$') and detalle like '%CONCEPTO%%VENTA%'
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Otros -FACTURACION CLIENTES-Activo Fijo';
commit;
--01 Equipos -FACTURACION CLIENTES [10]
merge into
(
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and clasedocumento in ('Factura','Boleta Venta')
) A
using (
select trx_number from (
select distinct trx_number from (
select d.monto_linea+d.igv_linea as suma_fin,d.codigo_arti,NVL(c.tipo,'OTROS') as tiporecibido,b.codigo,a.*
from FA_RVDETALLE_CRUZADO a
left join
  (select distinct nro_doc,codigo
    from FA_RVEQUIPOSPAGOS_SERIE) b
on a.trx_number=b.nro_doc
left join FA_RVDETALLE_COD_CLI c
on b.codigo=c.codigo
left join FA_RVEQUIPOSPAGOS_SERIE d
on a.trx_number=d.trx_number
where a.serie='007' and a.periodo=speriodo and concepto='-'
) where suma_fin>0 and codigo_arti<>'ITEM_VARIOS' and REGEXP_LIKE(substr(codigo,1,1), '^[[:digit:]]+$')
)
) B
on (a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE set concepto = 'Equipos -FACTURACION CLIENTES';
commit;

update FA_RVDETALLE_CRUZADO set concepto='Web Recargas' where serie='007' and clasedocumento in ('Boleta','Boleta Venta','Factura') and concepto='Equipos -PACKSIM- Recargas prepago virtual';
update FA_RVDETALLE_CRUZADO set concepto='Recargas Virtuales' where serie='007' and clasedocumento in ('Nota Credito','Nota de Cr¿dito','Nota de Cr?ito') and concepto='Venta no reconocida';
update FA_RVDETALLE_CRUZADO set concepto='SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where serie='007' and clasedocumento in ('Boleta','Boleta Venta','Factura') and trx_number in ('700004091');
update FA_RVDETALLE_CRUZADO set concepto='Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and clasedocumento in ('Boleta','Boleta Venta','Factura') and trx_number in ('700014504','700014505');
update FA_RVDETALLE_CRUZADO set concepto='Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)' where serie='007' and clasedocumento in ('Boleta','Boleta Venta','Factura') and detalle like '%CONCEPTO%%CARRERA%%ENTEL%' and concepto='-';
update FA_RVDETALLE_CRUZADO set concepto='SOCIO DE NEGOCIO - Activo Fijo' where serie='007' and clasedocumento in ('Boleta','Boleta Venta','Factura') and detalle like '%CONCEPTO%%DONACION%' and concepto='-';
update FA_RVDETALLE_CRUZADO set concepto='SOCIO DE NEGOCIO-Faltante Inventario' where serie='007' and clasedocumento in ('Boleta','Boleta Venta','Factura') and detalle like '%CONCEPTO%%DA¿O FISICO%' and concepto='-';
update FA_RVDETALLE_CRUZADO set concepto='SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where serie='007' and clasedocumento in ('Boleta','Boleta Venta','Factura') and detalle like '%CONCEPTO%%ESTABLECIMIENTO%%INTERCONEXI¿N%' and concepto='-';
update FA_RVDETALLE_CRUZADO set concepto='SOCIO DE NEGOCIO-Coubicaciones - Transmision de Datos' where serie='007' and clasedocumento in ('Boleta','Boleta Venta','Factura') and detalle like '%CONCEPTO%%TRANSACCION%%USSD%' and concepto='-';
update FA_RVDETALLE_CRUZADO set concepto='Otros -FACTURACION CLIENTES-Ordenes Costo Cero ' where serie='007' and clasedocumento in ('Boleta','Boleta Venta','Factura') and mont_tot =0 and concepto='-';
update FA_RVDETALLE_CRUZADO set concepto='SOCIO DE NEGOCIO-Otros' where serie='007' and clasedocumento in ('Boleta','Boleta Venta','Factura') and detalle like '%REINTEGRO%%FINANCIAMIENTO%%CDM%' and concepto='-';
update FA_RVDETALLE_CRUZADO set concepto='Equipos -RETAIL' where serie='007' and clasedocumento in ('Boleta','Boleta Venta','Factura') and concepto='-';
commit;
update FA_RVDETALLE_CRUZADO set concepto='Anulacion de factura' where serie='007' and clasedocumento in ('Nota Credito','Nota de Cr¿dito','Nota de Cr?ito') and concepto='Otros' and detalle like '%APLICA%%ANULACION%%DOCUMENTO%';
commit;

update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-LDI' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and DETALLE like '%LDI%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-VAS' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and DETALLE like '%SMS%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-VAS' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and DETALLE like '%USSD%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-VAS' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and DETALLE like '%INFOBIP%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-VAS' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and DETALLE like '%BIMER%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-CARRIER' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and DETALLE like '%TRANSMIS%%DATOS%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-CARRIER' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and DETALLE like '%COUBIC%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-CARRIER' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and DETALLE like '%ARRENDAM%%ENLACES%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-CARRIER' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and DETALLE like '%ARRENDAM%%INFRAESTRUCTUR%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-CARRIER' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and DETALLE like '%LAN2LAN%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-CARRIER' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and DETALLE like '%ADECUAC%%RED%';
commit;

update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-INVENTARIO' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%SOCIO DE NEGOCIO-Faltante Inventario%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-SUBARRIENDO' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%SOCIO DE NEGOCIO-Subarriendo%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-MKT' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%Otros -FACTURACION CLIENTES - Consumo Central Aporte Terminales (MKT)%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-CLIENTES' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%Equipos -FACTURACION CLIENTES%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-ENTIDADES PUBLICAS' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%Otros -FACTURACION CLIENTES - Servicios Entidades Publicas%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-ACTIVO FIJO' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%SOCIO DE NEGOCIO - Activo Fijo%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-ACTIVO FIJO' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%Otros -FACTURACION CLIENTES-Activo Fijo%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-CENTRAL DE RIESGO' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%SOCIO DE NEGOCIO - Consumo Central de Riesgo%';
commit;

update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-COSTO CERO' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%Otros -FACTURACION CLIENTES-Ordenes Costo Cero%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-ENTIDADES PUBLICAS' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%Otros -FACTURACION CLIENTES - Servicios Entidades Publicas%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-LDI' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%SOCIO DE NEGOCIO-LDI%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-VAS' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%Otros -FACTURACION CLIENTES-Mensajeria Banca Movil VAS%';
commit;

update FA_RVDETALLE_CRUZADO set concepto = 'LIQUI Y RECARGAS-LIQUIDACIONES' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%Equipos -RETAIL%';
update FA_RVDETALLE_CRUZADO set concepto = 'LIQUI Y RECARGAS-RECARGAS' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%Recargas Virtuales%';
update FA_RVDETALLE_CRUZADO set concepto = 'LIQUI Y RECARGAS-RECARGAS' where clasedocumento in ('Boleta','Boleta Venta','Factura') and serie='007'and concepto like '%Equipos - Recargas Virtuales%';
commit;

update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-ENTIDADES PUBLICAS' where serie='007' and UPPER(nombre) like '% NACIONAL%' and UPPER(nombre) NOT LIKE '%EMPRESA%%NACIONAL%%TELECOMUNICACION%' and UPPER(detalle) like '%CONCEPT%%RENT%%SICA%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-ENTIDADES PUBLICAS' where serie='007' and UPPER(nombre) like '%MUNICIP%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-ENTIDADES PUBLICAS' where serie='007' and UPPER(nombre) like '%REGIONAL%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-ENTIDADES PUBLICAS' where serie='007' and UPPER(nombre) like '%COFOPRI%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-ENTIDADES PUBLICAS' where serie='007' and UPPER(nombre) like '%PETROPERU%';
commit;

update FA_RVDETALLE_CRUZADO set concepto = 'LIQUI Y RECARGAS-RECARGAS' where serie='007'and UPPER(DETALLE) like '%RECARGAS%%VIRTUAL%';
update FA_RVDETALLE_CRUZADO set concepto = 'LIQUI Y RECARGAS-RECARGAS' where serie='007'and UPPER(DETALLE) like '%EQUIPOS%%RECARGAS%%VIRTUALES%';
update FA_RVDETALLE_CRUZADO set concepto = 'LIQUI Y RECARGAS-RECARGAS' where serie='007'and UPPER(DETALLE) like '%RECARGA%%PREPAGO%%EN L¿NEA%';
update FA_RVDETALLE_CRUZADO set concepto = 'LIQUI Y RECARGAS-RECARGAS' where serie='007'and UPPER(DETALLE) like '%RECARGA%%PREPAGO%%EN L¿NEA%';
commit;

update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-CARRIER' where serie='007'and UPPER(DETALLE) like '%L2L%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-CARRIER' where serie='007'and UPPER(DETALLE) like '%CARRIER%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-CARRIER' where serie='007'and UPPER(DETALLE) like '%ERROR%%DESCRIPCION%' and nombre like '%TELEFONICA%%PERU%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-VAS' where serie='007'and UPPER(DETALLE) like '%SERVICIO DE INTERNET 10 MBPS%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-ACTIVO FIJO' where serie='007'and UPPER(NOMBRE) like '%PRESTIGE%%WHOLESALE%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-ACTIVO FIJO' where serie='007'and UPPER(DETALLE) like '%VENTA%%MARCA%%SERIE%%MOTOR%%PLACA%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-CLIENTES' where serie='007'and UPPER(DETALLE) like '%RAYEN%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-CLIENTES' where serie='007'and UPPER(DETALLE) like '%CIERRE%%PUNTO%%VENTA%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-CLIENTES' where serie='007'and UPPER(DETALLE) like '%VENTA%%MOBILE%%SVA%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-CLIENTES' where serie='007'and UPPER(DETALLE) like '%REEMBOLSO%%GASTOS%';
update FA_RVDETALLE_CRUZADO set concepto = 'LIQUI Y RECARGAS-LIQUIDACIONES' where serie='007'and UPPER(DETALLE) like '%AJUSTE%%LIQ%';
update FA_RVDETALLE_CRUZADO set concepto = 'LIQUI Y RECARGAS-LIQUIDACIONES' where serie='007'and UPPER(DETALLE) like '%POR AJUSTES%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-MKT' where serie='007'and UPPER(DETALLE) like '%T17C%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-MKT' where serie='007'and UPPER(DETALLE) like '%SPR17%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-MKT' where serie='007'and UPPER(DETALLE) like '%REVISTA%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-PENALIDAD' where serie='007'and UPPER(DETALLE) like '%PENALIDAD%%INVENTARIO%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-PENALIDAD' where serie='007'and UPPER(DETALLE) like '%PENALIDAD%%INVENTARIO%';
update FA_RVDETALLE_CRUZADO set concepto = 'LIQUI Y RECARGAS-RECARGAS' where serie='007'and UPPER(DETALLE) like '%APLICA%%POR RECARGAS%';
update FA_RVDETALLE_CRUZADO set concepto = 'FACTURACIÓN ADM-SUBARRIENDO' where serie='007'and UPPER(DETALLE) like '%SUBARRIENDO%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-VAS' where serie='007'and UPPER(DETALLE) like '%DATOS%%AUSPICIADOS%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-VAS' where serie='007'and UPPER(DETALLE) like '%MENSAJERIA%%BANCO%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-VAS' where serie='007'and UPPER(DETALLE) like '%NUMERO%%CORTO%%ELIBOM%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-VAS' where serie='007'and UPPER(NOMBRE) like '%INFOBIP%';
update FA_RVDETALLE_CRUZADO set concepto = 'NEGOCIO MAYORISTA-VAS' where serie='007'and UPPER(NOMBRE) like '%TEAMSOURCING%';
update FA_RVDETALLE_CRUZADO set concepto = 'LIQUI Y RECARGAS-LIQUIDACIONES' where serie='007'and concepto like '%Equipos -RETAIL%';
update FA_RVDETALLE_CRUZADO set concepto='NEGOCIO MAYORISTA-VAS' where concepto='LIQUI Y RECARGAS-VAS';
commit;
MERGE INTO
   (
   SELECT c.detalle AS motivoE,
              C.nro_doc ||
              DECODE(SUBSTR(C.tipo,1,2),'BV','Boleta de Venta','FA','Factura','NC','Nota de Credito','ND','Nota de Debito') ||
              DECODE(length(C.tipo),14,SUBSTR(C.tipo,12,3),SUBSTR(C.tipo,12,3)) as clave
    FROM FA_RVDETALLE_CRUZADO c
    WHERE c.SERIE in ('213','007')
   )A
   USING
   (
   select motivo,clave from (
   select DESCRIPTION AS motivo,nro_doc ||
              DECODE(SUBSTR(tipo,1,2),'BV','Boleta de Venta','FA','Factura','NC','Nota de Credito','ND','Nota de Debito') ||
              DECODE(length(tipo),14,SUBSTR(tipo,12,3),SUBSTR(tipo,12,3)) as clave,
              row_number () over (partition by nro_doc||DECODE(SUBSTR(tipo,1,2),'BV','Boleta de Venta','FA','Factura','NC','Nota de Credito','ND','Nota de Debito')||DECODE(length(tipo),14,SUBSTR(tipo,12,3),SUBSTR(tipo,12,3)) order by monto_linea desc,cantidad desc) as RN
    from FA_RVEQUIPOSPAGOS_SERIE where tipo not like '%009%'
    ) where rn=1
   )B
   ON
   (
   A.clave= b.clave
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;
   commit;

--PAGO ANTICIPADO
MERGE INTO (
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO
) a
USING (
select distinct trx_number,concepto from (
select trx_number,'LIQUI Y RECARGAS-PAGO ANTICIPADO' as concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO and trx_number in (
select distinct trx_number from FA_RVEQUIPOSPAGOS_SERIE where periodo=SPERIODO and tipo like '%007%' and cuenta_ingresos='080-1000-4000-886-1C-000000'
)
)
) b
ON
(a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE SET a.concepto = b.concepto;
commit;
--RECARGAS VIRTUALES
MERGE INTO (
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO
) a
USING (
select distinct trx_number,concepto from (
select trx_number,'LIQUI Y RECARGAS-RECARGAS' as concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO and trx_number in (
select distinct trx_number from FA_RVEQUIPOSPAGOS_SERIE where periodo=SPERIODO and tipo like '%007%' and cuenta_ingresos='080-1000-2271-000-27-000000'
)
)
) b
ON
(a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE SET a.concepto = b.concepto;
commit;
--NEGOCIO MAYORISTA-CARRIER
MERGE INTO (
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO
) a
USING (
select distinct trx_number,concepto from (
select trx_number,'NEGOCIO MAYORISTA-CARRIER' as concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO and trx_number in (
select distinct trx_number from FA_RVEQUIPOSPAGOS_SERIE where periodo=SPERIODO and tipo like '%007%' and cuenta_ingresos in
('080-1000-4180-001- VMRPWF',
'080-1000-4180-001-00-VMINTE',
'080-1000-4195-001-00-000000',
'080-1000-4194-001-00-000000',
'080-1000-4188-418-70-000000',
'080-1000-4023-810-00-MAYORI',
'080-1000-4193-001-00-TD1104')
)
)
) b
ON
(a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE SET a.concepto = b.concepto;
commit;
--NEGOCIO MAYORISTA-VAS
MERGE INTO (
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO
) a
USING (
select distinct trx_number,concepto from (
select trx_number,'NEGOCIO MAYORISTA-VAS' as concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO and trx_number in (
select distinct trx_number from FA_RVEQUIPOSPAGOS_SERIE where periodo=SPERIODO and tipo like '%007%' and cuenta_ingresos in
('080-1000-4019-810-86-000000',
'080-1000-4019-810-86-DINERO')
)
)
) b
ON
(a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE SET a.concepto = b.concepto;
commit;
--NEGOCIO MAYORISTA-LDI
MERGE INTO (
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO
) a
USING (
select distinct trx_number,concepto from (
select trx_number,'NEGOCIO MAYORISTA-LDI' as concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO and trx_number in (
select distinct trx_number from FA_RVEQUIPOSPAGOS_SERIE where periodo=SPERIODO and tipo like '%007%' and cuenta_ingresos='080-1000-4021-001-00-000000'
)
)
) b
ON
(a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE SET a.concepto = b.concepto;
commit;
--FACTURACIÓN ADM-PENALIDAD---ND/NC
MERGE INTO (
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO and clasedocumento in ('Nota Debito','Nota Credito','Nota de Cr¿dito')
) a
USING (
select distinct trx_number,concepto from (
select trx_number,'FACTURACIÓN ADM-PENALIDAD' as concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO and clasedocumento in ('Nota Debito','Nota Credito','Nota de Cr¿dito') and trx_number in (
select distinct trx_number from FA_RVEQUIPOSPAGOS_SERIE where periodo=SPERIODO and tipo like '%007%' and cuenta_ingresos='080-1000-4193-001-00-000000'
)
)
) b
ON
(a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE SET a.concepto = b.concepto;
commit;
--FACTURACIÓN ADM-ENTIDADES PUBLICAS
MERGE INTO (
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO
) a
USING (
select distinct trx_number,concepto from (
select trx_number,'FACTURACIÓN ADM-ENTIDADES PUBLICAS' as concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO and trx_number in (
select distinct trx_number from FA_RVEQUIPOSPAGOS_SERIE where periodo=SPERIODO and tipo like '%007%' and cuenta_ingresos='080-1000-4000-886-1C-000000'
)
)
) b
ON
(a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE SET a.concepto = b.concepto;
commit;
--FACTURACIÓN ADM-CENTRAL DE RIESGO---FA
MERGE INTO (
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO and clasedocumento in ('Factura')
) a
USING (
select distinct trx_number,concepto from (
select trx_number,'FACTURACIÓN ADM-CENTRAL DE RIESGO' as concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO and clasedocumento in ('Factura') and trx_number in (
select distinct trx_number from FA_RVEQUIPOSPAGOS_SERIE where periodo=SPERIODO and tipo like '%007%' and cuenta_ingresos='080-1000-4193-001-00-000000'
)
)
) b
ON
(a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE SET a.concepto = b.concepto;
commit;
--VALOR AGREGADO
MERGE INTO (
select trx_number,concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO
) a
USING (
select distinct trx_number,concepto from (
select trx_number,'FACTURACIÓN ADM-VALOR AGREGADO' as concepto from FA_RVDETALLE_CRUZADO where serie='007' and periodo=SPERIODO and trx_number in (
select distinct trx_number from FA_RVEQUIPOSPAGOS_SERIE where periodo=SPERIODO and tipo like '%007%' and cuenta_ingresos='080-1000-4007-886-P6-000000'
)
)
) b
ON
(a.trx_number=b.trx_number)
WHEN MATCHED THEN
UPDATE SET a.concepto = b.concepto;
commit;
update FA_RVDETALLE_CRUZADO set concepto='FACTURACIÓN ADM-CLIENTES' where periodo=SPERIODO and UPPER(detalle) like '%AJUS%%OPER%%CARG%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='FACTURACIÓN ADM-CLIENTES' where trx_number in ('700001728','700001749') and periodo='201803';
commit;
update FA_RVDETALLE_CRUZADO set concepto='FACTURACIÓN ADM-CLIENTES' where trx_number in ('700001760','700002407','700002408','700001761') and periodo='201803';
commit;
update FA_RVDETALLE_CRUZADO set concepto='LIQUI Y RECARGAS-LIQUIDACIONES' where trx_number in ('700001757','700001739') and periodo='201803';
commit;

update FA_RVDETALLE_CRUZADO set concepto='FACTURACIÓN ADM-CLIENTES' where trx_number in ('700002404') and periodo='201802';
commit;
update FA_RVDETALLE_CRUZADO set concepto='FACTURACIÓN ADM-MKT' where trx_number in ('700001747') and periodo='201802';
commit;

update FA_RVDETALLE_CRUZADO set concepto='FACTURACIÓN ADM-CLIENTES' where trx_number in ('700001676') and periodo='201802';
commit;
update FA_RVDETALLE_CRUZADO set concepto='LIQUI Y RECARGAS-LIQUIDACIONES' where trx_number in ('700001651','700001680') and periodo='201801';
commit;
update FA_RVDETALLE_CRUZADO set concepto='LIQUI Y RECARGAS-RECARGAS' where trx_number in ('700001679') and periodo='201801';
commit;
update FA_RVDETALLE_CRUZADO set concepto='NEGOCIO MAYORISTA-CARRIER' where trx_number in ('700002394','700002387','700002391','700002389','700002386','700002398','700002384','700002388','700002375','700002374','700002385','700002392') and periodo='201801';
commit;
update FA_RVDETALLE_CRUZADO set concepto='NEGOCIO MAYORISTA-VAS' where trx_number in ('700002378','700002381') and periodo='201801';
commit;
update FA_RVDETALLE_CRUZADO set concepto='FACTURACIÓN ADM-MKT' where trx_number in ('700001675') and periodo='201802';
commit;
update FA_RVDETALLE_CRUZADO set concepto='LIQUI Y RECARGAS-LIQUIDACIONES' where trx_number in ('700001672') and periodo='201802';
commit;
update FA_RVDETALLE_CRUZADO set concepto='FACTURACIÓN ADM-CLIENTES' where periodo=SPERIODO and UPPER(detalle) like '%REVERS%%V%';
commit;
update FA_RVDETALLE_CRUZADO set concepto='LIQUI Y RECARGAS-LIQUIDACIONES' where trx_number in ('700002400') and periodo='201801';
commit;
update FA_RVDETALLE_CRUZADO set concepto='NEGOCIO MAYORISTA-CARRIER' where trx_number in ('700002393','700002397','700002390','700002396') and periodo='201801';
commit;
END PROCESAR_REGVTA_SERIES_PYE;


PROCEDURE PROCSORTEO_OBTENER_FECHA(pcursor  OUT t_cursor) IS
BEGIN

OPEN PCURSOR FOR
SELECT DISTINCT FECHASORTEO
FROM FA_BASESORTEO_BASEMAIL
ORDER BY TO_DATE(FECHASORTEO,'dd/mm/yy hh:mi') desc;

END PROCSORTEO_OBTENER_FECHA;

PROCEDURE GENERAREPORTEAFILIADOSCONCIL is
begin

---Hoja Base 01
------------------------------------------------
delete from fa_mdl_afiliados_acumulado_res where periodo=to_char(add_months(sysdate,1),'yyyymm');
delete from fa_mdl_afiliados_acumulado_res where periodo=to_char(sysdate,'yyyymm') and categoria not like 'AFILIADOS%';
commit;
--[1] AFILIADOS Act (a inicio de mes)
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'AFILIADOS ACT' as Categoria,'TOTAL' as Subcategoria,to_char(add_months(sysdate,1),'yyyymm') as periodo,'1' as
from FA_MDL_AFILIADOS_MES_DET_B01 where activ='SI' and periodo=to_char(sysdate,'yyyymm');
--lima provincias
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct a.codigocompania) as cantidad,'ACTIVOS' as Grupo,'AFILIADOS ACT' as Categoria,DECODE(b.region,'LIMA','LIMA','PROVINCIAS')  as Subcategoria,to_char(add_months(sysdate,1),'yyyymm') as periodo,'1' as base
from fa_mdl_afiliados_mes_det_b01 a,p_compania b
where a.codigocompania=b.codigocompania and
a.activ='SI' and a.periodo=to_char(sysdate,'yyyymm')
group by DECODE(b.region,'LIMA','LIMA','PROVINCIAS');

--porta
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'AFILIADOS ACT' as Categoria,portabilidad,to_char(add_months(sysdate,1),'yyyymm') as periodo,'1' from (
select a.codigocompania,decode(nvl(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad from fa_mdl_afiliados_mes_det_b01 a
left join (select distinct b.codigocompania from (select * from tnp_portabilidad where mensaje='SPR')a  join fotoequipos b  on a.inicio_rango=b.telefono) b
on a.codigocompania=b.codigocompania where a.activ='SI' and a.periodo=to_char(sysdate,'yyyymm')
) group by portabilidad;

--[2] NUEVOS AFIL Act
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'NUEVOS AFIL ACT' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base
from FA_MDL_AFILIADOS_MES_DET_NVO where grafica='Superior' and periodo=to_char(sysdate,'yyyymm') and base='01';
--venta postventa
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT count(DISTINCT a.codigocompania) as cantidad,'ACTIVOS' as Grupo,'NUEVOS AFIL ACT' as Categoria,
       decode(nvl(b.codigocompania,'1'),'1','En venta','Post venta') AS Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base
  from ods_gpf.fa_mdl_afiliados_mes_det_nvo a,
    (SELECT DISTINCT codigocompania FROM ods_gpf.p_incidentes
      WHERE resolucionincidente
      IN ('ENVIO DE  RECIBO SOLO POR MAIL',
          'ENVIO DE RECIBOS POR MAIL Y FISICO',
          'SE ENVIA RECIBO POR CORREO',
          'SE ENVIA RECIBO POR MAIL',
          'SE ENVÍA RECIBO POR MAIL')
      AND especificacionincidente IN('ENVIO DE RECIBO POR MAIL',
                                     'ENVÍO DE RECIBOS POR MAIL',
                                     'ENVIO DE RECIBOS POR MAIL')
      AND tipoincidente = 'PEDIDO'
      AND estadoincidente='Cerrado'
      and to_char(fechaingresoincidente,'yyyymm')=to_char(sysdate,'yyyymm')) b
  WHERE a.codigocompania=b.codigocompania(+)
  AND a.grafica='Superior'
  AND a.periodo=to_char(sysdate,'yyyymm')
  AND a.base='01'
GROUP BY decode(nvl(b.codigocompania,'1'),'1','En venta','Post venta');
--porta
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'NUEVOS AFIL ACT' as Categoria,portabilidad as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from (
select a.codigocompania,decode(nvl(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad from FA_MDL_AFILIADOS_MES_DET_NVO a left join (select distinct b.codigocompania from (select * from tnp_portabilidad where mensaje='SPR')a  join fotoequipos b  on a.inicio_rango=b.telefono) b on a.codigocompania=b.codigocompania where a.grafica='Superior' and a.periodo=to_char(sysdate,'yyyymm')and a.base='01'
) group by portabilidad;
--lima provincias

insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct a.codigocompania) as cantidad,'ACTIVOS' as Grupo,'NUEVOS AFIL ACT' as Categoria,DECODE(b.region,'LIMA','LIMA','PROVINCIAS')  as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base
FROM FA_MDL_AFILIADOS_MES_DET_NVO A,P_COMPANIA B
where a.codigocompania=b.codigocompania and grafica='Superior' and periodo=to_char(sysdate,'yyyymm') and base='01'
GROUP BY DECODE(B.REGION,'LIMA','LIMA','PROVINCIAS');

--[3] REMAINING
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'REMAINING ACT' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base
from FA_MDL_AFILIADOS_MES_DET_REM where grafica='Superior' and periodo=to_char(sysdate,'yyyymm') and base='01';
--porta
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'REMAINING ACT' as Categoria,portabilidad as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from (
select a.codigocompania,decode(nvl(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad from FA_MDL_AFILIADOS_MES_DET_REM a left join (select distinct b.codigocompania from (select * from tnp_portabilidad where mensaje='SPR')a  join fotoequipos b  on a.inicio_rango=b.telefono) b on a.codigocompania=b.codigocompania where a.grafica='Superior' and a.periodo=to_char(sysdate,'yyyymm')and a.base='01'
) group by portabilidad;

--[4] DESAFILIADOS Act
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select '-'||count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'DESAFILIADOS ACT' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base
from FA_MDL_AFILIADOS_MES_DET_DEAC where grafica='Superior' and periodo=to_char(sysdate,'yyyymm') and base='01';
--porta
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select '-'||count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'DESAFILIADOS ACT' as Categoria,portabilidad as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from (
select a.codigocompania,decode(nvl(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad from FA_MDL_AFILIADOS_MES_DET_DEAC a left join (select distinct b.codigocompania from (select * from tnp_portabilidad where mensaje='SPR')a  join fotoequipos b  on a.inicio_rango=b.telefono) b on a.codigocompania=b.codigocompania where a.grafica='Superior' and a.periodo=to_char(sysdate,'yyyymm')and a.base='01'
) GROUP BY PORTABILIDAD;
--lima provincias

INSERT INTO FA_MDL_AFILIADOS_ACUMULADO_RES (CANTIDAD,GRUPO,CATEGORIA,SUBCATEGORIA,PERIODO,BASE)
select '-'||count(distinct a.codigocompania) as cantidad,'ACTIVOS' as Grupo,'DESAFILIADOS ACT' as Categoria,DECODE(b.region,'LIMA','LIMA','PROVINCIAS')  as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base
FROM FA_MDL_AFILIADOS_MES_DET_DEAC A,P_COMPANIA B
WHERE A.CODIGOCOMPANIA=B.CODIGOCOMPANIA AND GRAFICA='Superior' AND PERIODO=TO_CHAR(SYSDATE,'yyyymm') AND BASE='01'
group by DECODE(b.region,'LIMA','LIMA','PROVINCIAS');

--[5] AFILIADOS Desact (a inicio de mes)
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'DESACTIVADOS' as Grupo,'AFILIADOS DESACT' as Categoria,'TOTAL' as Subcategoria,to_char(add_months(sysdate,1),'yyyymm') as periodo,'1' as base
from FA_MDL_AFILIADOS_MES_DET_B01 where activ='NO' and periodo=to_char(sysdate,'yyyymm');
--porta
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'DESACTIVADOS' as Grupo,'AFILIADOS DESACT' as Categoria,portabilidad as Subcategoria,to_char(add_months(sysdate,1),'yyyymm') as periodo,'1' as base from (
select a.codigocompania,decode(nvl(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad from fa_mdl_afiliados_mes_det_b01 a left join (select distinct b.codigocompania from (select * from tnp_portabilidad where mensaje='SPR')a  join fotoequipos b  on a.inicio_rango=b.telefono) b on a.codigocompania=b.codigocompania where a.activ='NO' and a.periodo=to_char(sysdate,'yyyymm')
) group by portabilidad;
--[6] NUEVOS AFIL Desact
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'DESACTIVADOS' as Grupo,'NUEVOS AFIL DESACT' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base
from FA_MDL_AFILIADOS_MES_DET_NVO where grafica='Inferior' and periodo=to_char(sysdate,'yyyymm') and base='01';
--porta
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'DESACTIVADOS' as Grupo,'NUEVOS AFIL DESACT' as Categoria,portabilidad as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from (
select a.codigocompania,decode(nvl(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad from FA_MDL_AFILIADOS_MES_DET_NVO a left join (select distinct b.codigocompania from (select * from tnp_portabilidad where mensaje='SPR')a  join fotoequipos b  on a.inicio_rango=b.telefono) b on a.codigocompania=b.codigocompania where a.grafica='Inferior' and a.periodo=to_char(sysdate,'yyyymm')and a.base='01'
) group by portabilidad;
--[7] REMAINING
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'DESACTIVADOS' as Grupo,'REMAINING DESACT' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base
from FA_MDL_AFILIADOS_MES_DET_REM where grafica='Inferior' and periodo=to_char(sysdate,'yyyymm') and base='01';
--porta
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'DESACTIVADOS' as Grupo,'REMAINING DESACT' as Categoria,portabilidad as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from (
select a.codigocompania,decode(nvl(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad from FA_MDL_AFILIADOS_MES_DET_REM a left join (select distinct b.codigocompania from (select * from tnp_portabilidad where mensaje='SPR')a  join fotoequipos b  on a.inicio_rango=b.telefono) b on a.codigocompania=b.codigocompania where a.grafica='Inferior' and a.periodo=to_char(sysdate,'yyyymm')and a.base='01'
) group by portabilidad;
--[8] DEACS
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select '-'||count(distinct codigocompania) as cantidad,'DESACTIVADOS' as Grupo,'DESAFILIADOS DESACT' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base
from FA_MDL_AFILIADOS_MES_DET_DEAC where grafica='Inferior' and periodo=to_char(sysdate,'yyyymm') and base='01';
--porta
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select '-'||count(distinct codigocompania) as cantidad,'DESACTIVADOS' as Grupo,'DESAFILIADOS DESACT' as Categoria,portabilidad as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from (
select a.codigocompania,decode(nvl(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad from FA_MDL_AFILIADOS_MES_DET_DEAC a left join (select distinct b.codigocompania from (select * from tnp_portabilidad where mensaje='SPR')a  join fotoequipos b  on a.inicio_rango=b.telefono) b on a.codigocompania=b.codigocompania where a.grafica='Inferior' and a.periodo=to_char(sysdate,'yyyymm')and a.base='01'
) group by portabilidad;
--[9] DESAF Act VS NEWS Desact [si]
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count (distinct codigocompania) as cantidad,'IDENTIFICACION DE DESAFILIADOS' as Grupo,'DESAF ACT VS NEWS DESACT' as Categoria,'SI' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from
(
select codigocompania from FA_MDL_AFILIADOS_MES_DET_DEAC where grafica='Superior' and periodo=to_char(sysdate,'yyyymm') and base='01'
intersect
select codigocompania from FA_MDL_AFILIADOS_MES_DET_NVO where grafica='Inferior' and periodo=to_char(sysdate,'yyyymm') and base='01'
);
--[10] DESAF Act VS NEWS Desact [no]
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'IDENTIFICACION DE DESAFILIADOS' as Grupo,'DESAF ACT VS NEWS DESACT' as Categoria,'NO' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from
(
select codigocompania from FA_MDL_AFILIADOS_MES_DET_DEAC where grafica='Superior' and periodo=to_char(sysdate,'yyyymm') and base='01'
minus
select codigocompania from FA_MDL_AFILIADOS_MES_DET_NVO where grafica='Inferior' and periodo=to_char(sysdate,'yyyymm') and base='01'
);

--[11] DESAF Act VS Motiv [si]
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count (distinct codigocompania) as cantidad,'IDENTIFICACION DE DESAFILIADOS' as Grupo,'DESAF ACT VS MOTIV' as Categoria,'SI' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from
(
select distinct codigocompania from FA_MDL_AFILIADOS_MES_DET_DEAC where grafica='Superior' and periodo=to_char(sysdate,'yyyymm') and base='01'
intersect
select distinct codigocompania from FA_BASEDESAFILIADOS_SD
);
--[12] DESAF Act VS Motiv [no]
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count (distinct codigocompania) as cantidad,'IDENTIFICACION DE DESAFILIADOS' as Grupo,'DESAF ACT VS MOTIV' as Categoria,'NO' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from
(
select distinct codigocompania from FA_MDL_AFILIADOS_MES_DET_DEAC where grafica='Superior' and periodo=to_char(sysdate,'yyyymm') and base='01'
minus
select distinct codigocompania from FA_BASEDESAFILIADOS_SD
);

--[13] Base Activa TOTAL POST
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select COUNT(distinct CODIGOCOMPANIA) as cantidad,'ENDING' as Grupo,'BASE ACTIVA POST' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from (
select a.tipodoc,a.periodo,b.product,codigocompania,b.t_plan
from (select compania,telefono,estadocontrato,fechadesactivacioncontrato,fechacargacontrato,ciclofacturacioncontrato,codigocontratobscs,plantarifario,codigoplantarifariobscs,
numerocuentaresponsable,fechaactivacioncontrato,tipopersona,ruccompania,distrito,codigocompania,girocompania,subgirocompania,scorecrediticio,
region,supervisado,tipocuenta,imei,sim,codigocuentaresponsable,identificadorconsultor,canalventa,identificadordealer,producto,motivomovimiento,solucion,
division,estadocobranzacuenta,nextel,segmento,rentabasica,fechaproceso,zona,tipoplan,canalventacontrato,consultorcontrato,dealercontrato,numerocuentacompania,
riesgofinanciero,motivomovimiento as motivosuspension,periodo,fechacreacion,fechaingreso,product,rangocuenta,OBTENER_TIPODOC_2(ruccompania)  as TIPODOC from FOTOEQUIPOS) a
left join (select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,T_PLAN from PM_PLANES) B on a.CODIGOPLANTARIFARIOBSCS=B.NUMEROPLAN
where ESTADOCONTRATO in ('Activo','Suspendido') group by a.TIPODOC,a.PERIODO,B.PRODUCT,CODIGOCOMPANIA,t_plan --order by PERIODO,TIPODOC,PRODUCT
) where upper(product) like '%POST%' --in ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
    and t_plan = 'Comercial';

--[14] Base Activa TOTAL POST DNI
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select COUNT(distinct CODIGOCOMPANIA) as cantidad,'ENDING' as Grupo,'BASE ACTIVA POST' as Categoria,'DNI' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from (
select a.tipodoc,a.periodo,b.product,OBTENER_TIPODOC_2(a.ruccompania) tdoc,codigocompania,b.t_plan
from (select compania,telefono,estadocontrato,fechadesactivacioncontrato,fechacargacontrato,ciclofacturacioncontrato,codigocontratobscs,plantarifario,codigoplantarifariobscs,
numerocuentaresponsable,fechaactivacioncontrato,tipopersona,ruccompania,distrito,codigocompania,girocompania,subgirocompania,scorecrediticio,
region,supervisado,tipocuenta,imei,sim,codigocuentaresponsable,identificadorconsultor,canalventa,identificadordealer,producto,motivomovimiento,solucion,
division,estadocobranzacuenta,nextel,segmento,rentabasica,fechaproceso,zona,tipoplan,numerocuentacompania,
RIESGOFINANCIERO,PERIODO,FECHACREACION,FECHAINGRESO,PRODUCT,OBTENER_TIPODOC_2(ruccompania) as TIPODOC from FOTOEQUIPOS) a
left join (select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,T_PLAN from PM_PLANES) B
    on a.CODIGOPLANTARIFARIOBSCS=B.NUMEROPLAN
where ESTADOCONTRATO in ('Activo','Suspendido')
group by a.TIPODOC,a.PERIODO,B.PRODUCT,OBTENER_TIPODOC_2(a.RUCCOMPANIA),CODIGOCOMPANIA,T_PLAN --order by periodo,tipodoc,product,OBTENER_TIPODOC_2(a.ruccompania)
) where upper(PRODUCT) like '%POST%' -- in ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
    and TIPODOC='DNI'
    and T_PLAN = 'Comercial';

--[R] Base Activa TOTAL POST DNI - SEGMENTADO LIMA PROVINCIAS
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ENDING' as Grupo,'BASE ACTIVA POST DNI' as Categoria,DECODE(region,'LIMA','LIMA','PROVINCIAS') as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from (
select a.tipodoc,a.periodo,b.product,obtener_tipodoc_2(a.ruccompania) tdoc,codigocompania,b.t_plan,a.region
from (select ruccompania,estadocontrato,codigocompania,region,periodo,codigoplantarifariobscs,obtener_tipodoc_2(ruccompania) as tipodoc
      from fotoequipos) a
left join (select to_number(c_plan) numeroplan,n_plan,product,t_plan from pm_planes) b on a.codigoplantarifariobscs=b.numeroplan
where estadocontrato in ('Activo','Suspendido')
group by a.tipodoc,a.periodo,b.product,obtener_tipodoc_2(a.ruccompania),codigocompania,t_plan,a.region)
where upper(product) like '%POST%' -- in ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
  and tipodoc='DNI'
  and t_plan = 'Comercial'
group by DECODE(region,'LIMA','LIMA','PROVINCIAS');



--[R1] Base Activa TOTAL POST DNI - SEGMENTADO PORTABILIDAD
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ENDING' as Grupo,'BASE ACTIVA POST' as Categoria,portabilidad as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from (
select a.tipodoc,a.periodo,a.product,a.codigocompania,decode(c.numero_documento,null/*nvl(c.numero_documento,-1),-1*/,'No Porta','Porta') portabilidad,b.t_plan
from (
select compania,telefono,estadocontrato,fechadesactivacioncontrato,fechacargacontrato,ciclofacturacioncontrato,codigocontratobscs,plantarifario,codigoplantarifariobscs,
numerocuentaresponsable,fechaactivacioncontrato,tipopersona,ruccompania,distrito,codigocompania,girocompania,subgirocompania,scorecrediticio,
region,supervisado,tipocuenta,imei,sim,codigocuentaresponsable,identificadorconsultor,canalventa,identificadordealer,producto,motivomovimiento,solucion,
division,estadocobranzacuenta,nextel,segmento,rentabasica,fechaproceso,zona,tipoplan,numerocuentacompania,
riesgofinanciero,periodo,fechacreacion,fechaingreso,product,OBTENER_TIPODOC_2(ruccompania) as tipodoc from FOTOEQUIPOS
) a
left join (select to_number(c_plan) numeroplan,n_plan,product,t_plan from pm_planes
) b
on a.codigoplantarifariobscs=b.numeroplan
left join (
SELECT numero_documento,periodo
FROM
(
SELECT a.*,
row_number () over (PARTITION BY a.numero_documento,a.periodo
             ORDER BY to_date(fec_registro_rep,'dd/mm/yyyy hh24:mi:ss') DESC NULLS LAST) AS num_c
FROM ods_gpf.tnp_portabilidad a
WHERE mensaje = 'SPR'
)
WHERE num_c = 1
) c
on a.ruccompania=c.numero_documento
where estadocontrato in ('Activo','Suspendido') and b.t_plan = 'Comercial'
) WHERE upper(product) like '%POST%' -- IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')  /*and tipodoc='DNI'*/
group by portabilidad order by portabilidad;

--[R2] Base Activa TOTAL POST DNI - SEGMENTADO PORTABILIDAD
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ENDING' as Grupo,'BASE ACTIVA POST DNI' as Categoria,portabilidad as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base from (
select a.tipodoc,a.periodo,a.product,a.codigocompania,decode(c.numero_documento,null/*nvl(c.numero_documento,-1),-1*/,'No Porta','Porta') portabilidad,b.t_plan
from (
select compania,telefono,estadocontrato,fechadesactivacioncontrato,fechacargacontrato,ciclofacturacioncontrato,codigocontratobscs,plantarifario,codigoplantarifariobscs,
numerocuentaresponsable,fechaactivacioncontrato,tipopersona,ruccompania,distrito,codigocompania,girocompania,subgirocompania,scorecrediticio,
region,supervisado,tipocuenta,imei,sim,codigocuentaresponsable,identificadorconsultor,canalventa,identificadordealer,producto,motivomovimiento,solucion,
division,estadocobranzacuenta,nextel,segmento,rentabasica,fechaproceso,zona,tipoplan,numerocuentacompania,
riesgofinanciero,periodo,fechacreacion,fechaingreso,product,OBTENER_TIPODOC_2(ruccompania) as tipodoc from FOTOEQUIPOS
) a
left join (select to_number(c_plan) numeroplan,n_plan,product,t_plan from pm_planes
) b
on a.codigoplantarifariobscs=b.numeroplan
left join (
SELECT numero_documento,periodo
FROM
(
SELECT a.*,
row_number () over (PARTITION BY a.numero_documento,a.periodo
             ORDER BY to_date(fec_registro_rep,'dd/mm/yyyy hh24:mi:ss') DESC NULLS LAST) AS num_c
FROM ods_gpf.tnp_portabilidad a
WHERE mensaje = 'SPR'
)
WHERE num_c = 1
) c
on a.ruccompania=c.numero_documento
where estadocontrato in ('Activo','Suspendido') and b.t_plan = 'Comercial'
) WHERE upper(product) like '%POST%' --IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
   and tipodoc='DNI'
group by portabilidad order by portabilidad;
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
---Hoja Base 02
------------------------------------------------
--[1] AFILIADOS Act (a inicio de mes)
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'AFILIADOS ACT' as Categoria,'TOTAL' as Subcategoria,to_char(add_months(sysdate,1),'yyyymm') as periodo,'2' as base
from FA_MDL_AFILIADOS_MES_DET_B02 where activ='SI' and periodo=to_char(sysdate,'yyyymm');

insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'AFILIADOS ACT DNI' as Categoria,'TOTAL' as Subcategoria,to_char(add_months(sysdate,1),'yyyymm') as periodo,'2' as base
from FA_MDL_AFILIADOS_MES_DET_B02 where activ='SI' and periodo=to_char(sysdate,'yyyymm')and tipodocumento='DNI';

insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'AFILIADOS ACT RUC' as Categoria,'TOTAL' as Subcategoria,to_char(add_months(sysdate,1),'yyyymm') as periodo,'2' as base
from FA_MDL_AFILIADOS_MES_DET_B02 where activ='SI' and periodo=to_char(sysdate,'yyyymm')and tipodocumento='RUC';

insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'AFILIADOS ACT RUC' as Categoria,tdoc as Subcategoria,to_char(add_months(sysdate,1),'yyyymm') as periodo,'2' as base from (
SELECT A.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC FROM FA_MDL_AFILIADOS_MES_DET_B02 A LEFT JOIN P_COMPANIA B ON A.CODIGOCOMPANIA=B.CODIGOCOMPANIA WHERE A.ACTIV='SI'
and a.periodo=to_char(sysdate,'yyyymm') and a.tipodocumento='RUC'
) where tdoc like 'RUC%' group by tdoc;

--ruc10 con y sin negocio
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT count(DISTINCT codigocompania) as cantidad,'ACTIVOS' as Grupo,'AFILIADOS ACT RUC' as Categoria,tipodocumento as Subcategoria,to_char(add_months(sysdate,1),'yyyymm') as periodo,'2' as base  FROM (
SELECT A.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC , c.tipodocumento
FROM FA_MDL_AFILIADOS_MES_DET_B02 A
LEFT JOIN P_COMPANIA B
ON A.CODIGOCOMPANIA=B.CODIGOCOMPANIA
LEFT JOIN (SELECT * FROM (SELECT RUCCOMPANIA,TIPODOCUMENTO, ROW_NUMBER () OVER (PARTITION BY RUCCOMPANIA ORDER BY NPCREATEDDATE DESC) rn
            FROM TNP_PREEVALUACION)
            WHERE RN=1) C
ON B.RUCCOMPANIA=C.RUCCOMPANIA
WHERE A.ACTIV='SI'
AND A.periodo=to_char(sysdate,'yyyymm') AND A.tipodocumento='RUC'
) where tipodocumento is not null and tipodocumento like 'RUC%' group by tipodocumento;

--afiliados activos RUC recibo electronico
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT CODIGOCOMPANIA) AS CANTIDAD,'ACTIVOS' AS GRUPO,'AFILIADOS ACT RUC' AS CATEGORIA,
DECODE(TIPONOTIFICACION,'Recibo Electrónico','Recibo Electrónico(Ruc10)') as SUBCATEGORIA,
TO_CHAR(ADD_MONTHS(SYSDATE,1),'yyyymm') AS PERIODO,'2' AS BASE FROM (
select a.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC,a.TIPONOTIFICACION
    from FA_MDL_AFILIADOS_MES_DET_B02 a
    left join P_COMPANIA B on a.CODIGOCOMPANIA=B.CODIGOCOMPANIA where a.ACTIV='SI'
        and a.PERIODO=TO_CHAR(sysdate,'yyyymm') and a.TIPODOCUMENTO='RUC'
        and OBTENER_TIPODOC_2(B.RUCCOMPANIA)='RUC10' and TIPONOTIFICACION='Recibo Electrónico'
        and not EXISTS  (select CODIGOCOMPANIA from FA_MDL_AFILIADOS_MES_DET_B02 b
                            where b.ACTIV='SI' and b.PERIODO=TO_CHAR(sysdate,'yyyymm') and b.TIPODOCUMENTO='RUC'
                                and b.TIPONOTIFICACION='Recibo Electrónico y Físico' and a.codigocompania = b.codigocompania)
) where TDOC='RUC10'
group by TIPONOTIFICACION;

--afiliados activos RUC Recibo Electrónico y Físico
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT CODIGOCOMPANIA) AS CANTIDAD,'ACTIVOS' AS GRUPO,'AFILIADOS ACT RUC' AS CATEGORIA,
decode(tiponotificacion,'Recibo Electrónico y Físico','Recibo Electrónico y Físico(Ruc10)') AS SUBCATEGORIA,TO_CHAR(ADD_MONTHS(SYSDATE,1),'yyyymm') AS PERIODO,'2' AS BASE FROM (
select a.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC,a.TIPONOTIFICACION from FA_MDL_AFILIADOS_MES_DET_B02 a left join P_COMPANIA B on a.CODIGOCOMPANIA=B.CODIGOCOMPANIA where a.ACTIV='SI'
and a.PERIODO=TO_CHAR(sysdate,'yyyymm') and a.TIPODOCUMENTO='RUC'
) where TDOC='RUC10'and TIPONOTIFICACION='Recibo Electrónico y Físico' group by TIPONOTIFICACION;

--[2] NUEVOS AFIL Act
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'NUEVOS AFIL ACT' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base
from FA_MDL_AFILIADOS_MES_DET_NVO where grafica='Superior' and periodo=to_char(sysdate,'yyyymm') and base='02';

insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'NUEVOS AFIL ACT' as Categoria,tdoc as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base from (
SELECT A.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC FROM FA_MDL_AFILIADOS_MES_DET_NVO A LEFT JOIN P_COMPANIA B ON A.CODIGOCOMPANIA=B.CODIGOCOMPANIA WHERE
 A.PERIODO=to_char(sysdate,'yyyymm') AND A.TIPODOCUMENTO='RUC' AND BASE='02' AND GRAFICA='Superior'
) where TDOC like 'RUC%' group by TDOC;

--nuevos afiliados act RUC recibo electronico
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select COUNT(distinct CODIGOCOMPANIA) as CANTIDAD,'ACTIVOS' as GRUPO,'NUEVOS AFIL ACT' as CATEGORIA,
DECODE(TIPONOTIFICACION,'Recibo Electrónico','Recibo Electrónico(Ruc10)')
as SUBCATEGORIA,TO_CHAR(sysdate,'yyyymm') as PERIODO,'2' as BASE from (
select a.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC,a.TIPONOTIFICACION from FA_MDL_AFILIADOS_MES_DET_NVO a left join P_COMPANIA B on a.CODIGOCOMPANIA=B.CODIGOCOMPANIA where
 a.PERIODO=TO_CHAR(sysdate,'yyyymm') and a.TIPODOCUMENTO='RUC' and BASE='02' and GRAFICA='Superior' and TIPONOTIFICACION='Recibo Electrónico'
   and not exists  (select CODIGOCOMPANIA from FA_MDL_AFILIADOS_MES_DET_NVO B
                            where B.PERIODO=TO_CHAR(sysdate,'yyyymm') and B.TIPODOCUMENTO='RUC' and b.BASE='02' and b.GRAFICA='Superior'
                                and b.TIPONOTIFICACION='Recibo Electrónico y Físico' and a.codigocompania = b.codigocompania)
) where tdoc='RUC10' group by tiponotificacion;

--nuevos afiliados act RUC recibo electronico
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select COUNT(distinct CODIGOCOMPANIA) as CANTIDAD,'ACTIVOS' as GRUPO,'NUEVOS AFIL ACT' as CATEGORIA,
DECODE(TIPONOTIFICACION,'Recibo Electrónico y Físico','Recibo Electrónico y Físico(Ruc10)')
as SUBCATEGORIA,TO_CHAR(sysdate,'yyyymm') as PERIODO,'2' as BASE from (
select a.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC,a.TIPONOTIFICACION from FA_MDL_AFILIADOS_MES_DET_NVO a left join P_COMPANIA B on a.CODIGOCOMPANIA=B.CODIGOCOMPANIA where
 a.PERIODO=TO_CHAR(sysdate,'yyyymm') and a.TIPODOCUMENTO='RUC' and BASE='02' and GRAFICA='Superior'
) where tdoc='RUC10' and TIPONOTIFICACION='Recibo Electrónico y Físico' group by tiponotificacion;

--[3] REMAINING
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'REMAINING ACT' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base
from FA_MDL_AFILIADOS_MES_DET_REM where grafica='Superior' and periodo=to_char(sysdate,'yyyymm') and base='02';

insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct codigocompania) as cantidad,'ACTIVOS' as Grupo,'REMAINING ACT' as Categoria,tdoc as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base from (
SELECT A.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC FROM FA_MDL_AFILIADOS_MES_DET_REM A LEFT JOIN P_COMPANIA B ON A.CODIGOCOMPANIA=B.CODIGOCOMPANIA WHERE
a.periodo=to_char(sysdate,'yyyymm') and a.tipodocumento='RUC' and base='02' and grafica='Superior'
) where tdoc like 'RUC%' GROUP BY TDOC;

-- REMAINING recibo electronico
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select COUNT(distinct CODIGOCOMPANIA) as CANTIDAD,'ACTIVOS' as GRUPO,'REMAINING ACT' as CATEGORIA,
DECODE(TIPONOTIFICACION,'Recibo Electrónico','Recibo Electrónico(Ruc10)') as SUBCATEGORIA,TO_CHAR(sysdate,'yyyymm') as PERIODO,'2' as BASE from (
select a.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC,a.TIPONOTIFICACION from FA_MDL_AFILIADOS_MES_DET_REM a left join P_COMPANIA B on a.CODIGOCOMPANIA=B.CODIGOCOMPANIA where
a.PERIODO=TO_CHAR(sysdate,'yyyymm') and a.TIPODOCUMENTO='RUC' and BASE='02' and GRAFICA='Superior'
 and not exists  (select CODIGOCOMPANIA from FA_MDL_AFILIADOS_MES_DET_REM B
                            where B.PERIODO=TO_CHAR(sysdate,'yyyymm') and B.TIPODOCUMENTO='RUC' and B.BASE='02' and B.GRAFICA='Superior'
                                and b.TIPONOTIFICACION='Recibo Electrónico y Físico' and a.codigocompania = b.codigocompania)
)  where tdoc='RUC10' and TIPONOTIFICACION='Recibo Electrónico' group by tiponotificacion;

-- REMAINING recibo electronico y fisico
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select COUNT(distinct CODIGOCOMPANIA) as CANTIDAD,'ACTIVOS' as GRUPO,'REMAINING ACT' as CATEGORIA,
DECODE(TIPONOTIFICACION,'Recibo Electrónico y Físico','Recibo Electrónico y Físico(Ruc10)') as SUBCATEGORIA,TO_CHAR(sysdate,'yyyymm') as PERIODO,'2' as BASE from (
select a.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC,a.TIPONOTIFICACION from FA_MDL_AFILIADOS_MES_DET_REM a left join P_COMPANIA B on a.CODIGOCOMPANIA=B.CODIGOCOMPANIA where
a.PERIODO=TO_CHAR(sysdate,'yyyymm') and a.TIPODOCUMENTO='RUC' and BASE='02' and GRAFICA='Superior'
)  where tdoc='RUC10' and TIPONOTIFICACION='Recibo Electrónico y Físico' group by tiponotificacion;

--[4] DESAFILIADOS Act
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select '-'||COUNT(distinct CODIGOCOMPANIA) as cantidad,'ACTIVOS' as Grupo,'DESAFILIADOS ACT' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base
from FA_MDL_AFILIADOS_MES_DET_DEAC where GRAFICA='Superior' and PERIODO=to_char(sysdate,'yyyymm') and BASE='02';

insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select '-'||count(distinct CODIGOCOMPANIA) as cantidad,'ACTIVOS' as Grupo,'DESAFILIADOS ACT' as Categoria,tdoc as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base from (
SELECT  A.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC FROM FA_MDL_AFILIADOS_MES_DET_DEAC A LEFT JOIN P_COMPANIA B ON A.CODIGOCOMPANIA=B.CODIGOCOMPANIA WHERE
 a.periodo=to_char(sysdate,'yyyymm') and a.tipodocumento='RUC' and base='02' and grafica='Superior'
) WHERE tdoc like 'RUC%' GROUP BY TDOC;

-- DESAFILIADOS Act recibo electronico
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select '-'||COUNT(distinct CODIGOCOMPANIA) as CANTIDAD,'ACTIVOS' as GRUPO,'DESAFILIADOS ACT' as CATEGORIA,
DECODE(TIPONOTIFICACION,'Recibo Electrónico','Recibo Electrónico(Ruc10)') as SUBCATEGORIA,TO_CHAR(sysdate,'yyyymm') as PERIODO,'2' as BASE from (
select  a.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC,a.TIPONOTIFICACION from FA_MDL_AFILIADOS_MES_DET_DEAC a left join P_COMPANIA B on a.CODIGOCOMPANIA=B.CODIGOCOMPANIA where
 a.PERIODO=TO_CHAR(sysdate,'yyyymm') and a.TIPODOCUMENTO='RUC' and BASE='02' and GRAFICA='Superior'
  and not exists  (select CODIGOCOMPANIA from FA_MDL_AFILIADOS_MES_DET_DEAC B
                            where B.PERIODO=TO_CHAR(sysdate,'yyyymm') and B.TIPODOCUMENTO='RUC' and B.BASE='02' and B.GRAFICA='Superior'
                                and b.TIPONOTIFICACION='Recibo Electrónico y Físico' and a.codigocompania = b.codigocompania)
) where tdoc='RUC10' and TIPONOTIFICACION='Recibo Electrónico' group by tiponotificacion;

-- DESAFILIADOS Act recibo electronico y fisico
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select '-'||COUNT(distinct CODIGOCOMPANIA) as CANTIDAD,'ACTIVOS' as GRUPO,'DESAFILIADOS ACT' as CATEGORIA,
DECODE(TIPONOTIFICACION,'Recibo Electrónico y Físico','Recibo Electrónico y Físico(Ruc10)') as SUBCATEGORIA,TO_CHAR(sysdate,'yyyymm') as PERIODO,'2' as BASE from (
select  a.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC,a.TIPONOTIFICACION from FA_MDL_AFILIADOS_MES_DET_DEAC a left join P_COMPANIA B on a.CODIGOCOMPANIA=B.CODIGOCOMPANIA where
 a.PERIODO=TO_CHAR(sysdate,'yyyymm') and a.TIPODOCUMENTO='RUC' and BASE='02' and GRAFICA='Superior'
) where tdoc='RUC10' and TIPONOTIFICACION='Recibo Electrónico y Físico' group by tiponotificacion;

--[5] AFILIADOS Desact (a inicio de mes)
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct CODIGOCOMPANIA) as cantidad,'DESACTIVADOS' as Grupo,'AFILIADOS DESACT' as Categoria,'TOTAL' as Subcategoria,to_char(add_months(sysdate,1),'yyyymm') as periodo,'2' as base
from FA_MDL_AFILIADOS_MES_DET_B02 where activ='NO' and periodo=to_char(sysdate,'yyyymm');

insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(distinct CODIGOCOMPANIA) as cantidad,'DESACTIVADOS' as Grupo,'AFILIADOS DESACT' as Categoria,TDOC as Subcategoria,to_char(add_months(sysdate,1),'yyyymm') as periodo,'2' as base  FROM (
SELECT A.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC FROM FA_MDL_AFILIADOS_MES_DET_B02 A LEFT JOIN P_COMPANIA B ON A.CODIGOCOMPANIA=B.CODIGOCOMPANIA WHERE A.ACTIV='NO'
and a.periodo=to_char(sysdate,'yyyymm') and a.tipodocumento='RUC'
) WHERE tdoc like 'RUC%' GROUP BY TDOC;

--[6] NUEVOS AFIL Desact
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct CODIGOCOMPANIA) as cantidad,'DESACTIVADOS' as Grupo,'NUEVOS AFIL DESACT' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base
from FA_MDL_AFILIADOS_MES_DET_NVO where grafica='Inferior' and periodo=to_char(sysdate,'yyyymm') and base='02';

insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(distinct CODIGOCOMPANIA) as cantidad,'DESACTIVADOS' as Grupo,'NUEVOS AFIL DESACT' as Categoria,TDOC as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base FROM (
SELECT A.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC FROM FA_MDL_AFILIADOS_MES_DET_NVO A LEFT JOIN P_COMPANIA B ON A.CODIGOCOMPANIA=B.CODIGOCOMPANIA WHERE
a.periodo=to_char(sysdate,'yyyymm') and a.tipodocumento='RUC' and grafica='Inferior' and base='02'
) WHERE tdoc like 'RUC%' GROUP BY TDOC;

--[7] REMAINING
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count(distinct CODIGOCOMPANIA) as cantidad,'DESACTIVADOS' as Grupo,'REMAINING DESACT' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base
from FA_MDL_AFILIADOS_MES_DET_REM where grafica='Inferior' and periodo=to_char(sysdate,'yyyymm') and base='02';

insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(distinct CODIGOCOMPANIA) as cantidad,'DESACTIVADOS' as Grupo,'REMAINING DESACT' as Categoria,TDOC as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base FROM (
SELECT A.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC FROM FA_MDL_AFILIADOS_MES_DET_REM A LEFT JOIN P_COMPANIA B ON A.CODIGOCOMPANIA=B.CODIGOCOMPANIA WHERE
A.PERIODO=to_char(sysdate,'yyyymm') AND A.TIPODOCUMENTO='RUC' AND GRAFICA='Inferior' AND BASE='02'
) WHERE tdoc like 'RUC%' GROUP BY TDOC;

--[8] DEACS
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select '-'||COUNT(1) as cantidad,'DESACTIVADOS' as Grupo,'DESAFILIADOS DESACT' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base
from FA_MDL_AFILIADOS_MES_DET_DEAC where GRAFICA='Inferior' and PERIODO=to_char(sysdate,'yyyymm') and BASE='02';

insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT '-'||COUNT(1) as cantidad,'DESACTIVADOS' as Grupo,'DESAFILIADOS DESACT' as Categoria,TDOC as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base FROM (
SELECT A.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC FROM FA_MDL_AFILIADOS_MES_DET_DEAC A LEFT JOIN P_COMPANIA B ON A.CODIGOCOMPANIA=B.CODIGOCOMPANIA WHERE
A.PERIODO=to_char(sysdate,'yyyymm') AND A.TIPODOCUMENTO='RUC' AND GRAFICA='Inferior' AND BASE='02'
) where TDOC like 'RUC%' GROUP BY TDOC;

--[9] DESAF Act VS NEWS Desact
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count (1) as cantidad,'IDENTIFICACION DE DESAFILIADOS' as Grupo,'DESAF ACT VS NEWS DESACT' as Categoria,'SI' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base from
(
select codigocompania from FA_MDL_AFILIADOS_MES_DET_DEAC where grafica='Superior' and periodo=to_char(sysdate,'yyyymm') and base='02'
intersect
select codigocompania from FA_MDL_AFILIADOS_MES_DET_NVO where grafica='Inferior' and periodo=to_char(sysdate,'yyyymm') and base='02'
);
--[10] DESAF Por Desact
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select count (1) as cantidad,'IDENTIFICACION DE DESAFILIADOS' as Grupo,'DESAF ACT VS NEWS DESACT' as Categoria,'NO' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base from
(
select codigocompania from FA_MDL_AFILIADOS_MES_DET_DEAC where grafica='Superior' and periodo=to_char(sysdate,'yyyymm') and base='02'
minus
select codigocompania from FA_MDL_AFILIADOS_MES_DET_NVO where grafica='Inferior' and periodo=to_char(sysdate,'yyyymm') and base='02'
);

--[11] Base Activa TOTAL POST
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select COUNT(distinct CODIGOCOMPANIA) as cantidad,'ENDING' as Grupo,'BASE ACTIVA POST' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base from (
select a.tipodoc,a.periodo,b.product,codigocompania,b.t_plan
from (select compania,telefono,estadocontrato,fechadesactivacioncontrato,fechacargacontrato,ciclofacturacioncontrato,codigocontratobscs,plantarifario,codigoplantarifariobscs,
numerocuentaresponsable,fechaactivacioncontrato,tipopersona,ruccompania,distrito,codigocompania,girocompania,subgirocompania,scorecrediticio,
region,supervisado,tipocuenta,imei,sim,codigocuentaresponsable,identificadorconsultor,canalventa,identificadordealer,producto,motivomovimiento,solucion,
division,estadocobranzacuenta,nextel,segmento,rentabasica,fechaproceso,zona,tipoplan,canalventacontrato,consultorcontrato,dealercontrato,numerocuentacompania,
riesgofinanciero,motivomovimiento as motivosuspension,periodo,fechacreacion,fechaingreso,product,rangocuenta,OBTENER_TIPODOC_2(ruccompania)  as TIPODOC from FOTOEQUIPOS) a
left join (select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,T_PLAN from PM_PLANES) B on a.CODIGOPLANTARIFARIOBSCS=B.NUMEROPLAN
where ESTADOCONTRATO in ('Activo','Suspendido')
group by a.TIPODOC,a.PERIODO,B.PRODUCT,CODIGOCOMPANIA,t_plan --order by PERIODO,TIPODOC,PRODUCT
) where upper(product) like '%POST%' -- in ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
    and t_plan = 'Comercial';

--[12] Base Activa TOTAL POST DNI
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select COUNT(distinct CODIGOCOMPANIA) as cantidad,'ENDING' as Grupo,'BASE ACTIVA POST' as Categoria,'DNI' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base from (
select a.tipodoc,a.periodo,b.product,OBTENER_TIPODOC_2(a.ruccompania) tdoc,codigocompania,b.t_plan
from (select compania,telefono,estadocontrato,fechadesactivacioncontrato,fechacargacontrato,ciclofacturacioncontrato,codigocontratobscs,plantarifario,codigoplantarifariobscs,
numerocuentaresponsable,fechaactivacioncontrato,tipopersona,ruccompania,distrito,codigocompania,girocompania,subgirocompania,scorecrediticio,
region,supervisado,tipocuenta,imei,sim,codigocuentaresponsable,identificadorconsultor,canalventa,identificadordealer,producto,motivomovimiento,solucion,
division,estadocobranzacuenta,nextel,segmento,rentabasica,fechaproceso,zona,tipoplan,numerocuentacompania,
RIESGOFINANCIERO,PERIODO,FECHACREACION,FECHAINGRESO,PRODUCT,OBTENER_TIPODOC_2(ruccompania) as TIPODOC from FOTOEQUIPOS) a
left join (select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,T_PLAN from PM_PLANES) B on a.CODIGOPLANTARIFARIOBSCS=B.NUMEROPLAN where ESTADOCONTRATO in ('Activo','Suspendido') group by a.TIPODOC,a.PERIODO,B.PRODUCT,OBTENER_TIPODOC_2(a.RUCCOMPANIA),CODIGOCOMPANIA,T_PLAN --order by periodo,tipodoc,product,OBTENER_TIPODOC_2(a.ruccompania)
) where upper(product) like '%POST%' -- in ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
    and TIPODOC='DNI'
    and T_PLAN = 'Comercial';

--[13] Base Activa TOTAL POST RUC
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select COUNT(distinct CODIGOCOMPANIA) as cantidad,'ENDING' as Grupo,'BASE ACTIVA POST' as Categoria,'RUC' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base from (
select a.tipodoc,a.periodo,b.product,codigocompania,b.t_plan
from (select compania,telefono,estadocontrato,fechadesactivacioncontrato,fechacargacontrato,ciclofacturacioncontrato,codigocontratobscs,plantarifario,codigoplantarifariobscs,
numerocuentaresponsable,fechaactivacioncontrato,tipopersona,ruccompania,distrito,codigocompania,girocompania,subgirocompania,scorecrediticio,
region,supervisado,tipocuenta,imei,sim,codigocuentaresponsable,identificadorconsultor,canalventa,identificadordealer,producto,motivomovimiento,solucion,
division,estadocobranzacuenta,nextel,segmento,rentabasica,fechaproceso,zona,tipoplan,canalventacontrato,consultorcontrato,dealercontrato,numerocuentacompania,
riesgofinanciero,motivomovimiento as motivosuspension,periodo,fechacreacion,fechaingreso,product,rangocuenta,OBTENER_TIPODOC_2(ruccompania) as TIPODOC from FOTOEQUIPOS) a
left join (select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,T_PLAN from PM_PLANES) B on a.CODIGOPLANTARIFARIOBSCS=B.NUMEROPLAN
where ESTADOCONTRATO in ('Activo','Suspendido')
) where upper(product) like '%POST%' -- in ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
    and TIPODOC like 'RUC%'
    and T_PLAN = 'Comercial';

--[R] Base Activa TOTAL POST RUC - SEGMENTADO
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select COUNT(distinct CODIGOCOMPANIA) as cantidad,'ENDING' as Grupo,'BASE ACTIVA POST RUC' as Categoria,TDOC as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base from (
select a.tipodoc,a.periodo,b.product,OBTENER_TIPODOC_2(a.ruccompania) tdoc,codigocompania,b.t_plan
from (select compania,telefono,estadocontrato,fechadesactivacioncontrato,fechacargacontrato,ciclofacturacioncontrato,codigocontratobscs,plantarifario,codigoplantarifariobscs,
numerocuentaresponsable,fechaactivacioncontrato,tipopersona,ruccompania,distrito,codigocompania,girocompania,subgirocompania,scorecrediticio,
region,supervisado,tipocuenta,imei,sim,codigocuentaresponsable,identificadorconsultor,canalventa,identificadordealer,producto,motivomovimiento,solucion,
division,estadocobranzacuenta,nextel,segmento,rentabasica,fechaproceso,zona,tipoplan,numerocuentacompania,
RIESGOFINANCIERO,PERIODO,FECHACREACION,FECHAINGRESO,PRODUCT,OBTENER_TIPODOC_2(ruccompania) as TIPODOC from FOTOEQUIPOS) a
left join (select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,t_plan from PM_PLANES) B on a.CODIGOPLANTARIFARIOBSCS=B.NUMEROPLAN where ESTADOCONTRATO in ('Activo','Suspendido') group by a.TIPODOC,a.PERIODO,B.PRODUCT,OBTENER_TIPODOC_2(a.RUCCOMPANIA),CODIGOCOMPANIA,t_plan --order by periodo,tipodoc,product,OBTENER_TIPODOC_2(a.ruccompania)
) where upper(product) like '%POST%' -- in ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
    and TIPODOC like 'RUC%'
    and t_plan = 'Comercial'
group by tdoc;

--ruc10 con y sin negocio
insert into fa_mdl_afiliados_acumulado_res (cantidad,grupo,categoria,subcategoria,periodo,base)
select COUNT(distinct CODIGOCOMPANIA) as cantidad,'ENDING' as Grupo,'BASE ACTIVA POST RUC' as Categoria,TIPODOCUMENTO as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base from (
select c.TIPODOCUMENTO,a.periodo,b.product,codigocompania,b.t_plan
FROM (SELECT
ruccompania,codigocompania,PERIODO,CODIGOPLANTARIFARIOBSCS,estadocontrato from FOTOEQUIPOS) a
LEFT JOIN (SELECT TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,t_plan FROM PM_PLANES) B ON A.CODIGOPLANTARIFARIOBSCS=B.NUMEROPLAN
LEFT JOIN (SELECT * FROM (SELECT RUCCOMPANIA, TIPODOCUMENTO,ROW_NUMBER () OVER (PARTITION BY RUCCOMPANIA ORDER BY NPCREATEDDATE DESC) rn
            FROM TNP_PREEVALUACION)
            WHERE RN=1) C
ON a.RUCCOMPANIA=c.RUCCOMPANIA
WHERE ESTADOCONTRATO IN ('Activo','Suspendido')
group by c.TIPODOCUMENTO,a.PERIODO,B.PRODUCT,CODIGOCOMPANIA,t_plan --order by periodo,tipodoc,product,OBTENER_TIPODOC_2(a.ruccompania)
) WHERE upper(product) like '%POST%' -- IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
    AND TIPODOCUMENTO LIKE 'RUC%'
    AND t_plan = 'Comercial'
GROUP BY TIPODOCUMENTO;
COMMIT;

DELETE FROM FA_MDL_AFILIADOS_ACUMU_RES_2;
commit;
insert into FA_MDL_AFILIADOS_ACUMU_RES_2
select * from fa_mdl_afiliados_acumulado_res;
commit;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------BASE BASE 01------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
insert into FA_MDL_AFILIADOS_ACUMU_RES_2 (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT A.CODIGOCOMPANIA) AS CANTIDAD,'ACTIVOS' AS GRUPO,'NUEVOS AFIL ACT' AS CATEGORIA,
       DECODE(B.PRODUCT,'Internet Hogar Post',DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','INTERNET No Porta','INTERNET Porta'),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES No Porta','MOVILES Porta')) AS SUBCATEGORIA,
       TO_CHAR(SYSDATE,'yyyymm') AS PERIODO,
       '1' as base
  from ods_gpf.fa_mdl_afiliados_mes_det_nvo a,
    (select to_char(sysdate-1,'yyyymm') as periodoacceso,periodo,codigocompaniatel,fecha,codigocuenta,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from (
select to_char(b.fecha,'yyyymm') as periodo,a.codigocompaniatel,b.fecha,b.codigocuenta,b.ruccompania,b.razonsocial,b.contrato,b.nextel,b.c_plan,b.n_plan,b.t_plan,b.product,b.unidades_gross,b.tipodoc,b.rentabasica,b.nro_orden,b.ciclo,row_number () over (partition by codigocompaniatel order by fecha desc) as rn from
(
select to_number(codigocompania) as codigocompaniatel from FA_MDL_AFILIADOS_MES_DET_NVO where periodo=to_char(sysdate-1,'yyyymm') and base='01' and activ='SI'
) a,
(
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_PERSONAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
union
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_EMPRESAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
) b
where a.codigocompaniatel=b.codigocompania (+)
) where rn=1) b,
(SELECT DISTINCT CODIGOCOMPANIA FROM (
  SELECT * FROM TNP_PORTABILIDAD WHERE MENSAJE='SPR'
                                      ) X
JOIN
  FOTOEQUIPOS Z  ON X.INICIO_RANGO=Z.TELEFONO
) c
  WHERE a.codigocompania=b.codigocompaniatel(+)
  AND a.codigocompania=c.codigocompania(+)
  AND a.grafica='Superior'
  AND a.periodo=to_char(sysdate,'yyyymm')
  AND A.BASE='01'
  GROUP BY DECODE(B.PRODUCT,'Internet Hogar Post',DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','INTERNET No Porta','INTERNET Porta'),DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES No Porta','MOVILES Porta'));
commit;

insert into FA_MDL_AFILIADOS_ACUMU_RES_2 (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT count(DISTINCT a.codigocompania) as cantidad,'ACTIVOS' as Grupo,'NUEVOS AFIL ACT' as Categoria,
       DECODE(b.product,'Internet Hogar Post',decode(nvl(c.codigocompania,'1'),'1','INTERNET En venta','INTERNET Post venta'),decode(nvl(c.codigocompania,'1'),'1','MOVILES En venta','MOVILES Post venta')) AS Subcategoria,to_char(sysdate,'yyyymm') as periodo,'1' as base
  from ods_gpf.fa_mdl_afiliados_mes_det_nvo a,
    (select to_char(sysdate-1,'yyyymm') as periodoacceso,periodo,codigocompaniatel,fecha,codigocuenta,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from (
select to_char(b.fecha,'yyyymm') as periodo,a.codigocompaniatel,b.fecha,b.codigocuenta,b.ruccompania,b.razonsocial,b.contrato,b.nextel,b.c_plan,b.n_plan,b.t_plan,b.product,b.unidades_gross,b.tipodoc,b.rentabasica,b.nro_orden,b.ciclo,row_number () over (partition by codigocompaniatel order by fecha desc) as rn from
(
select to_number(codigocompania) as codigocompaniatel from FA_MDL_AFILIADOS_MES_DET_NVO where periodo=to_char(sysdate-1,'yyyymm') and base='01' and activ='SI'
) a,
(
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_PERSONAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
union
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_EMPRESAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
) b
where a.codigocompaniatel=b.codigocompania (+)
) where rn=1) b,
(SELECT DISTINCT codigocompania FROM ods_gpf.p_incidentes
      WHERE resolucionincidente
      IN ('ENVIO DE  RECIBO SOLO POR MAIL',
          'ENVIO DE RECIBOS POR MAIL Y FISICO',
          'SE ENVIA RECIBO POR CORREO',
          'SE ENVIA RECIBO POR MAIL',
          'SE ENVÍA RECIBO POR MAIL')
      AND especificacionincidente IN('ENVIO DE RECIBO POR MAIL',
                                     'ENVÍO DE RECIBOS POR MAIL',
                                     'ENVIO DE RECIBOS POR MAIL')
      AND tipoincidente = 'PEDIDO'
      AND estadoincidente='Cerrado'
      and to_char(fechaingresoincidente,'yyyymm')=to_char(sysdate,'yyyymm')) c
  WHERE a.codigocompania=b.codigocompaniatel(+)
  AND a.codigocompania=c.codigocompania(+)
  AND a.grafica='Superior'
  AND a.periodo=to_char(sysdate,'yyyymm')
  AND a.base='01'
  group by DECODE(b.product,'Internet Hogar Post',decode(nvl(c.codigocompania,'1'),'1','INTERNET En venta','INTERNET Post venta'),decode(nvl(c.codigocompania,'1'),'1','MOVILES En venta','MOVILES Post venta'));
  commit;



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------------------------------BASE BASE 02------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------GRAFICA 1 -------------------------------------------------
insert into FA_MDL_AFILIADOS_ACUMU_RES_2 (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT A.CODIGOCOMPANIA) AS CANTIDAD,'ACTIVOS' AS GRUPO,'NUEVOS AFIL ACT' AS CATEGORIA,
       DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) AS SUBCATEGORIA,
       TO_CHAR(SYSDATE,'yyyymm') AS PERIODO,
       '2' as base
  from ods_gpf.fa_mdl_afiliados_mes_det_nvo a,
    (select to_char(sysdate-1,'yyyymm') as periodoacceso,periodo,codigocompaniatel,fecha,codigocuenta,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from (
select to_char(b.fecha,'yyyymm') as periodo,a.codigocompaniatel,b.fecha,b.codigocuenta,b.ruccompania,b.razonsocial,b.contrato,b.nextel,b.c_plan,b.n_plan,b.t_plan,b.product,b.unidades_gross,b.tipodoc,b.rentabasica,b.nro_orden,b.ciclo,row_number () over (partition by codigocompaniatel order by fecha desc) as rn from
(
select to_number(codigocompania) as codigocompaniatel from FA_MDL_AFILIADOS_MES_DET_NVO where periodo=to_char(sysdate-1,'yyyymm') and base='02' and activ='SI'
) a,
(
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_PERSONAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
union
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_EMPRESAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
) b
where a.codigocompaniatel=b.codigocompania (+)
) where rn=1) b,
(
 select distinct codigocompania,'ACTIVOS' as Grupo,'NUEVOS AFIL ACT' as Categoria,'TOTAL' as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base
from FA_MDL_AFILIADOS_MES_DET_NVO where grafica='Superior' and periodo=to_char(sysdate,'yyyymm') and base='02'
) c
  WHERE a.codigocompania=b.codigocompaniatel(+)
  AND a.codigocompania=c.codigocompania(+)
  AND a.grafica='Superior'
  AND a.periodo=to_char(sysdate,'yyyymm')
  AND A.BASE='02'
  GROUP BY DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria));
-------------------------------------------------GRAFICA 2 -------------------------------------------------
insert into FA_MDL_AFILIADOS_ACUMU_RES_2 (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT A.CODIGOCOMPANIA) AS CANTIDAD,'ACTIVOS' AS GRUPO,'NUEVOS AFIL ACT' AS CATEGORIA,
       DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) AS SUBCATEGORIA,
       TO_CHAR(SYSDATE,'yyyymm') AS PERIODO,
       '2' as base
  from ods_gpf.fa_mdl_afiliados_mes_det_nvo a,
    (select to_char(sysdate-1,'yyyymm') as periodoacceso,periodo,codigocompaniatel,fecha,codigocuenta,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from (
select to_char(b.fecha,'yyyymm') as periodo,a.codigocompaniatel,b.fecha,b.codigocuenta,b.ruccompania,b.razonsocial,b.contrato,b.nextel,b.c_plan,b.n_plan,b.t_plan,b.product,b.unidades_gross,b.tipodoc,b.rentabasica,b.nro_orden,b.ciclo,row_number () over (partition by codigocompaniatel order by fecha desc) as rn from
(
select to_number(codigocompania) as codigocompaniatel from FA_MDL_AFILIADOS_MES_DET_NVO where periodo=to_char(sysdate-1,'yyyymm') and base='02' and activ='SI'
) a,
(
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_PERSONAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
union
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_EMPRESAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
) b
where a.codigocompaniatel=b.codigocompania (+)
) where rn=1) b,
(
 select distinct codigocompania,'ACTIVOS' as Grupo,'NUEVOS AFIL ACT' as Categoria,tdoc as Subcategoria,to_char(sysdate,'yyyymm') as periodo,'2' as base from (
SELECT A.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC FROM FA_MDL_AFILIADOS_MES_DET_NVO A LEFT JOIN P_COMPANIA B ON A.CODIGOCOMPANIA=B.CODIGOCOMPANIA WHERE
 A.PERIODO=to_char(sysdate,'yyyymm') AND A.TIPODOCUMENTO='RUC' AND BASE='02' AND GRAFICA='Superior'
) where TDOC like 'RUC%'
) c
  WHERE a.codigocompania=b.codigocompaniatel(+)
  AND a.codigocompania=c.codigocompania(+)
  AND a.grafica='Superior'
  AND a.periodo=to_char(sysdate,'yyyymm')
  AND A.BASE='02'
  AND A.TIPODOCUMENTO='RUC'
  GROUP BY DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria));
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------01-P2----------------------------------------------------------------------------------------------------------------
insert into FA_MDL_AFILIADOS_ACUMU_RES_2 (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT A.CODIGOCOMPANIA) AS CANTIDAD,'ACTIVOS' AS GRUPO,'AFILIADOS ACT DNI' AS CATEGORIA,
       DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET TOTAL'),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES TOTAL')) AS SUBCATEGORIA,
       TO_CHAR(ADD_MONTHS(SYSDATE,1),'yyyymm') AS PERIODO,
--SELECT A.CODIGOCOMPANIA,B.PRODUCT,C.CODIGOCOMPANIA,
       '2' as base
  from ods_gpf.FA_MDL_AFILIADOS_MES_DET_B02 a,
    (select to_char(sysdate-1,'yyyymm') as periodoacceso,periodo,codigocompaniatel,fecha,codigocuenta,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from (
select to_char(b.fecha,'yyyymm') as periodo,a.codigocompaniatel,b.fecha,b.codigocuenta,b.ruccompania,b.razonsocial,b.contrato,b.nextel,b.c_plan,b.n_plan,b.t_plan,b.product,b.unidades_gross,b.tipodoc,b.rentabasica,b.nro_orden,b.ciclo,row_number () over (partition by codigocompaniatel order by fecha desc) as rn from
(
select to_number(codigocompania) as codigocompaniatel from FA_MDL_AFILIADOS_MES_DET_B02 where activ='SI' and periodo=to_char(sysdate,'yyyymm')and tipodocumento='DNI'
) a,
(
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_PERSONAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
union
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_EMPRESAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
) b
where a.codigocompaniatel=b.codigocompania (+)
) where rn=1) b,
(
select distinct codigocompania
from FA_MDL_AFILIADOS_MES_DET_B02 where activ='SI' and periodo=to_char(sysdate,'yyyymm')and tipodocumento='DNI'
) c
  WHERE a.codigocompania=b.codigocompaniatel(+)
  AND a.codigocompania=c.codigocompania(+)
  AND a.activ='SI'
  AND a.periodo=to_char(sysdate,'yyyymm')
  AND a.tipodocumento='DNI'
  GROUP BY DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET TOTAL'),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES TOTAL'));
----------------------------------------------------------------------------------------------------------------02-P2----------------------------------------------------------------------------------------------------------------
insert into FA_MDL_AFILIADOS_ACUMU_RES_2 (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT A.CODIGOCOMPANIA) AS CANTIDAD,'ACTIVOS' AS GRUPO,'AFILIADOS ACT RUC' AS CATEGORIA,
       DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET TOTAL'),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES TOTAL')) AS SUBCATEGORIA,
       TO_CHAR(ADD_MONTHS(SYSDATE,1),'yyyymm') AS PERIODO,
--SELECT A.CODIGOCOMPANIA,B.PRODUCT,C.CODIGOCOMPANIA,
       '2' as base
  from ods_gpf.FA_MDL_AFILIADOS_MES_DET_B02 a,
    (select to_char(sysdate-1,'yyyymm') as periodoacceso,periodo,codigocompaniatel,fecha,codigocuenta,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from (
select to_char(b.fecha,'yyyymm') as periodo,a.codigocompaniatel,b.fecha,b.codigocuenta,b.ruccompania,b.razonsocial,b.contrato,b.nextel,b.c_plan,b.n_plan,b.t_plan,b.product,b.unidades_gross,b.tipodoc,b.rentabasica,b.nro_orden,b.ciclo,row_number () over (partition by codigocompaniatel order by fecha desc) as rn from
(
select to_number(codigocompania) as codigocompaniatel from FA_MDL_AFILIADOS_MES_DET_B02  where activ='SI' and periodo=to_char(sysdate,'yyyymm')and tipodocumento='RUC'
) a,
(
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_PERSONAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
union
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_EMPRESAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
) b
where a.codigocompaniatel=b.codigocompania (+)
) where rn=1) b,
(
select distinct codigocompania
from FA_MDL_AFILIADOS_MES_DET_B02 where activ='SI' and periodo=to_char(sysdate,'yyyymm')and tipodocumento='RUC'
) c
  WHERE a.codigocompania=b.codigocompaniatel(+)
  AND a.codigocompania=c.codigocompania(+)
  AND a.activ='SI'
  AND a.periodo=to_char(sysdate,'yyyymm')
  AND a.tipodocumento='RUC'
  GROUP BY DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET TOTAL'),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES TOTAL'));
----------------------------------------------------------------------------------------------------------------03-P2----------------------------------------------------------------------------------------------------------------
insert into FA_MDL_AFILIADOS_ACUMU_RES_2 (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT A.CODIGOCOMPANIA) AS CANTIDAD,'ACTIVOS' AS GRUPO,'AFILIADOS ACT RUC' AS CATEGORIA,
       DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) AS SUBCATEGORIA,
       TO_CHAR(ADD_MONTHS(SYSDATE,1),'yyyymm') AS PERIODO,
--SELECT A.CODIGOCOMPANIA,B.PRODUCT,C.CODIGOCOMPANIA,
       '2' as base
  from ods_gpf.FA_MDL_AFILIADOS_MES_DET_B02 a,
    (select to_char(sysdate-1,'yyyymm') as periodoacceso,periodo,codigocompaniatel,fecha,codigocuenta,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from (
select to_char(b.fecha,'yyyymm') as periodo,a.codigocompaniatel,b.fecha,b.codigocuenta,b.ruccompania,b.razonsocial,b.contrato,b.nextel,b.c_plan,b.n_plan,b.t_plan,b.product,b.unidades_gross,b.tipodoc,b.rentabasica,b.nro_orden,b.ciclo,row_number () over (partition by codigocompaniatel order by fecha desc) as rn from
(
select to_number(codigocompania) as codigocompaniatel from FA_MDL_AFILIADOS_MES_DET_B02  where activ='SI' and periodo=to_char(sysdate,'yyyymm')and tipodocumento='RUC'
) a,
(
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_PERSONAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
union
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_EMPRESAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
) b
where a.codigocompaniatel=b.codigocompania (+)
) where rn=1) b,
(
select distinct codigocompania,tdoc as Subcategoria from (
SELECT A.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC FROM FA_MDL_AFILIADOS_MES_DET_B02 A LEFT JOIN P_COMPANIA B ON A.CODIGOCOMPANIA=B.CODIGOCOMPANIA WHERE A.ACTIV='SI'
and a.periodo=to_char(sysdate,'yyyymm') and a.tipodocumento='RUC'
) where tdoc like 'RUC%'
) c
  WHERE a.codigocompania=b.codigocompaniatel(+)
  AND a.codigocompania=c.codigocompania(+)
  AND a.activ='SI'
  AND a.periodo=to_char(sysdate,'yyyymm')
  AND a.tipodocumento='RUC'
  GROUP BY DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria));
----------------------------------------------------------------------------------------------------------------04-P2----------------------------------------------------------------------------------------------------------------
insert into FA_MDL_AFILIADOS_ACUMU_RES_2 (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT A.CODIGOCOMPANIA) AS CANTIDAD,'ACTIVOS' AS GRUPO,'AFILIADOS ACT RUC' AS CATEGORIA,
       DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) AS SUBCATEGORIA,
       TO_CHAR(ADD_MONTHS(SYSDATE,1),'yyyymm') AS PERIODO,
--SELECT A.CODIGOCOMPANIA,B.PRODUCT,C.CODIGOCOMPANIA,
       '2' as base
  from ods_gpf.FA_MDL_AFILIADOS_MES_DET_B02 a,
    (select to_char(sysdate-1,'yyyymm') as periodoacceso,periodo,codigocompaniatel,fecha,codigocuenta,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from (
select to_char(b.fecha,'yyyymm') as periodo,a.codigocompaniatel,b.fecha,b.codigocuenta,b.ruccompania,b.razonsocial,b.contrato,b.nextel,b.c_plan,b.n_plan,b.t_plan,b.product,b.unidades_gross,b.tipodoc,b.rentabasica,b.nro_orden,b.ciclo,row_number () over (partition by codigocompaniatel order by fecha desc) as rn from
(
select to_number(codigocompania) as codigocompaniatel from FA_MDL_AFILIADOS_MES_DET_B02  where activ='SI' and periodo=to_char(sysdate,'yyyymm')and tipodocumento='RUC' and TIPONOTIFICACION='Recibo Electrónico y Físico'
) a,
(
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_PERSONAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
union
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_EMPRESAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
) b
where a.codigocompaniatel=b.codigocompania (+)
) where rn=1) b,
(
SELECT DISTINCT CODIGOCOMPANIA,decode(tiponotificacion,'Recibo Electrónico y Físico','Recibo Electrónico y Físico(Ruc10)') AS SUBCATEGORIA FROM (
select a.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC,a.TIPONOTIFICACION from FA_MDL_AFILIADOS_MES_DET_B02 a left join P_COMPANIA B on a.CODIGOCOMPANIA=B.CODIGOCOMPANIA where a.ACTIV='SI'
and a.PERIODO=TO_CHAR(sysdate,'yyyymm') and a.TIPODOCUMENTO='RUC'
) where TDOC='RUC10'and TIPONOTIFICACION='Recibo Electrónico y Físico'
) c
  WHERE a.codigocompania=b.codigocompaniatel(+)
  AND a.codigocompania=c.codigocompania(+)
  AND a.activ='SI'
  AND a.periodo=to_char(sysdate,'yyyymm')
  AND a.tipodocumento='RUC'
  and TIPONOTIFICACION='Recibo Electrónico y Físico'
  and DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) like '%Recibo Electrónico y Físico%'
  GROUP BY DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria));
----------------------------------------------------------------------------------------------------------------05-P2----------------------------------------------------------------------------------------------------------------
insert into FA_MDL_AFILIADOS_ACUMU_RES_2 (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT A.CODIGOCOMPANIA) AS CANTIDAD,'ACTIVOS' AS GRUPO,'AFILIADOS ACT RUC' AS CATEGORIA,
DECODE(B.PRODUCT,'Internet Hogar Post',
DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) AS SUBCATEGORIA,
TO_CHAR(ADD_MONTHS(SYSDATE,1),'yyyymm') AS PERIODO,
--SELECT A.CODIGOCOMPANIA,B.PRODUCT,C.CODIGOCOMPANIA,
'2' as base
from ods_gpf.FA_MDL_AFILIADOS_MES_DET_B02 a,
(select to_char(sysdate-1,'yyyymm') as periodoacceso,periodo,codigocompaniatel,fecha,codigocuenta,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from (
select to_char(b.fecha,'yyyymm') as periodo,a.codigocompaniatel,b.fecha,b.codigocuenta,b.ruccompania,b.razonsocial,b.contrato,b.nextel,b.c_plan,b.n_plan,b.t_plan,b.product,b.unidades_gross,b.tipodoc,b.rentabasica,b.nro_orden,b.ciclo,row_number () over (partition by codigocompaniatel order by fecha desc) as rn from
(
select to_number(codigocompania) as codigocompaniatel from FA_MDL_AFILIADOS_MES_DET_B02  where activ='SI' and periodo=to_char(sysdate,'yyyymm')and tipodocumento='RUC' and TIPONOTIFICACION='Recibo Electrónico'
) a,
(
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_PERSONAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
union
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_EMPRESAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
) b
where a.codigocompaniatel=b.codigocompania (+)
) where rn=1) b,
(
SELECT DISTINCT CODIGOCOMPANIA,DECODE(TIPONOTIFICACION,'Recibo Electrónico','Recibo Electrónico(Ruc10)') as SUBCATEGORIA FROM (
select a.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC,a.TIPONOTIFICACION
from FA_MDL_AFILIADOS_MES_DET_B02 a
left join P_COMPANIA B on a.CODIGOCOMPANIA=B.CODIGOCOMPANIA where a.ACTIV='SI'
and a.PERIODO=TO_CHAR(sysdate,'yyyymm') and a.TIPODOCUMENTO='RUC'
and OBTENER_TIPODOC_2(B.RUCCOMPANIA)='RUC10' and TIPONOTIFICACION='Recibo Electrónico'
and not EXISTS  (select CODIGOCOMPANIA from FA_MDL_AFILIADOS_MES_DET_B02 b
where b.ACTIV='SI' and b.PERIODO=TO_CHAR(sysdate,'yyyymm') and b.TIPODOCUMENTO='RUC'
and b.TIPONOTIFICACION='Recibo Electrónico y Físico' and a.codigocompania = b.codigocompania)
) where TDOC='RUC10'
) c
WHERE a.codigocompania=b.codigocompaniatel(+)
AND a.codigocompania=c.codigocompania(+)
AND a.activ='SI'
AND a.periodo=to_char(sysdate,'yyyymm')
AND a.tipodocumento='RUC'
and TIPONOTIFICACION='Recibo Electrónico'
and DECODE(B.PRODUCT,'Internet Hogar Post',
DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) like '%Recibo Electrónico%'
GROUP BY DECODE(B.PRODUCT,'Internet Hogar Post',
DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria));
----------------------------------------------------------------------------------------------------------------06-P2----------------------------------------------------------------------------------------------------------------
insert into FA_MDL_AFILIADOS_ACUMU_RES_2 (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT A.CODIGOCOMPANIA) AS CANTIDAD,'ACTIVOS' AS GRUPO,'AFILIADOS ACT RUC' AS CATEGORIA,
       DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) AS SUBCATEGORIA,
       TO_CHAR(ADD_MONTHS(SYSDATE,1),'yyyymm') AS PERIODO,
--SELECT A.CODIGOCOMPANIA,B.PRODUCT,C.CODIGOCOMPANIA,
       '2' as base
  from ods_gpf.FA_MDL_AFILIADOS_MES_DET_B02 a,
    (select to_char(sysdate-1,'yyyymm') as periodoacceso,periodo,codigocompaniatel,fecha,codigocuenta,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from (
select to_char(b.fecha,'yyyymm') as periodo,a.codigocompaniatel,b.fecha,b.codigocuenta,b.ruccompania,b.razonsocial,b.contrato,b.nextel,b.c_plan,b.n_plan,b.t_plan,b.product,b.unidades_gross,b.tipodoc,b.rentabasica,b.nro_orden,b.ciclo,row_number () over (partition by codigocompaniatel order by fecha desc) as rn from
(
select to_number(codigocompania) as codigocompaniatel from FA_MDL_AFILIADOS_MES_DET_B02  where activ='SI' and periodo=to_char(sysdate,'yyyymm')and tipodocumento='RUC'
) a,
(
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_PERSONAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
union
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_EMPRESAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
) b
where a.codigocompaniatel=b.codigocompania (+)
) where rn=1) b,
(
SELECT DISTINCT codigocompania,tipodocumento as Subcategoria FROM (
SELECT A.CODIGOCOMPANIA,B.RUCCOMPANIA,OBTENER_TIPODOC_2(B.RUCCOMPANIA) TDOC , c.tipodocumento
FROM FA_MDL_AFILIADOS_MES_DET_B02 A
LEFT JOIN P_COMPANIA B
ON A.CODIGOCOMPANIA=B.CODIGOCOMPANIA
LEFT JOIN (SELECT * FROM (SELECT RUCCOMPANIA,TIPODOCUMENTO, ROW_NUMBER () OVER (PARTITION BY RUCCOMPANIA ORDER BY NPCREATEDDATE DESC) rn
            FROM TNP_PREEVALUACION)
            WHERE RN=1) C
ON B.RUCCOMPANIA=C.RUCCOMPANIA
WHERE A.ACTIV='SI'
AND A.periodo=to_char(sysdate,'yyyymm') AND A.tipodocumento='RUC'
) where tipodocumento is not null and tipodocumento like 'RUC%'
) c
  WHERE a.codigocompania=b.codigocompaniatel(+)
  AND a.codigocompania=c.codigocompania(+)
  AND a.activ='SI'
  AND a.periodo=to_char(sysdate,'yyyymm')
  AND a.tipodocumento='RUC'
  AND DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) like '%NEGOCIO%'
  GROUP BY DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria));
----------------------------------------------------------------------------------------------------------------07-P2----------------------------------------------------------------------------------------------------------------
insert into FA_MDL_AFILIADOS_ACUMU_RES_2 (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT A.CODIGOCOMPANIA) AS CANTIDAD,'ENDING' AS GRUPO,'BASE ACTIVA POST' AS CATEGORIA,
       DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) AS SUBCATEGORIA,
       TO_CHAR(SYSDATE,'yyyymm') AS PERIODO,
--SELECT A.CODIGOCOMPANIA,B.PRODUCT,C.CODIGOCOMPANIA,
       '2' as base
  from ods_gpf.FOTOEQUIPOS a,
    (select to_char(sysdate-1,'yyyymm') as periodoacceso,periodo,codigocompaniatel,fecha,codigocuenta,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from (
select to_char(b.fecha,'yyyymm') as periodo,a.codigocompaniatel,b.fecha,b.codigocuenta,b.ruccompania,b.razonsocial,b.contrato,b.nextel,b.c_plan,b.n_plan,b.t_plan,b.product,b.unidades_gross,b.tipodoc,b.rentabasica,b.nro_orden,b.ciclo,row_number () over (partition by codigocompaniatel order by fecha desc) as rn from
(
select to_number(a.codigocompania) as codigocompaniatel from FOTOEQUIPOS a left join (select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,T_PLAN from PM_PLANES) B on a.CODIGOPLANTARIFARIOBSCS=B.NUMEROPLAN where upper(a.product) like '%POST%' AND OBTENER_TIPODOC_2(a.ruccompania)='DNI' AND b.T_PLAN = 'Comercial' AND a.ESTADOCONTRATO in ('Activo','Suspendido') AND a.periodo=to_char(sysdate,'yyyymm')
) a,
(
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_PERSONAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
union
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_EMPRESAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
) b
where a.codigocompaniatel=b.codigocompania (+)
) where rn=1) b,
(
SELECT distinct CODIGOCOMPANIA,'DNI' as Subcategoria FROM (
select a.tipodoc,a.periodo,b.product,OBTENER_TIPODOC_2(a.ruccompania) tdoc,codigocompania,b.t_plan
from (select compania,telefono,estadocontrato,fechadesactivacioncontrato,fechacargacontrato,ciclofacturacioncontrato,codigocontratobscs,plantarifario,codigoplantarifariobscs,
numerocuentaresponsable,fechaactivacioncontrato,tipopersona,ruccompania,distrito,codigocompania,girocompania,subgirocompania,scorecrediticio,
region,supervisado,tipocuenta,imei,sim,codigocuentaresponsable,identificadorconsultor,canalventa,identificadordealer,producto,motivomovimiento,solucion,
division,estadocobranzacuenta,nextel,segmento,rentabasica,fechaproceso,zona,tipoplan,numerocuentacompania,
RIESGOFINANCIERO,PERIODO,FECHACREACION,FECHAINGRESO,PRODUCT,OBTENER_TIPODOC_2(ruccompania) as TIPODOC from FOTOEQUIPOS) a
left join (select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,T_PLAN from PM_PLANES) B on a.CODIGOPLANTARIFARIOBSCS=B.NUMEROPLAN where ESTADOCONTRATO in ('Activo','Suspendido') group by a.TIPODOC,a.PERIODO,B.PRODUCT,OBTENER_TIPODOC_2(a.RUCCOMPANIA),CODIGOCOMPANIA,T_PLAN --order by periodo,tipodoc,product,OBTENER_TIPODOC_2(a.ruccompania)
)
where upper(product) like '%POST%' -- in ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
    and TIPODOC='DNI'
    and T_PLAN = 'Comercial'
) c,
(select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,T_PLAN from PM_PLANES) D
  WHERE a.codigocompania=b.codigocompaniatel(+)
  AND a.codigocompania=c.codigocompania(+)
  AND a.CODIGOPLANTARIFARIOBSCS=D.NUMEROPLAN(+)
  AND upper(a.product) like '%POST%' -- in ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
  AND OBTENER_TIPODOC_2(a.ruccompania)='DNI'
  AND d.T_PLAN = 'Comercial'
  AND a.ESTADOCONTRATO in ('Activo','Suspendido')
  AND a.periodo=to_char(sysdate,'yyyymm')
  /*AND DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) like '%NEGOCIO%'
       */
  GROUP BY DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria));
----------------------------------------------------------------------------------------------------------------08-P2----------------------------------------------------------------------------------------------------------------
insert into FA_MDL_AFILIADOS_ACUMU_RES_2 (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT A.CODIGOCOMPANIA) AS CANTIDAD,'ENDING' AS GRUPO,'BASE ACTIVA POST RUC' AS CATEGORIA,
       DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) AS SUBCATEGORIA,
       TO_CHAR(SYSDATE,'yyyymm') AS PERIODO,
--SELECT A.CODIGOCOMPANIA,B.PRODUCT,C.CODIGOCOMPANIA,
       '2' as base
  from ods_gpf.FOTOEQUIPOS a,
    (select to_char(sysdate-1,'yyyymm') as periodoacceso,periodo,codigocompaniatel,fecha,codigocuenta,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from (
select to_char(b.fecha,'yyyymm') as periodo,a.codigocompaniatel,b.fecha,b.codigocuenta,b.ruccompania,b.razonsocial,b.contrato,b.nextel,b.c_plan,b.n_plan,b.t_plan,b.product,b.unidades_gross,b.tipodoc,b.rentabasica,b.nro_orden,b.ciclo,row_number () over (partition by codigocompaniatel order by fecha desc) as rn from
(
select to_number(a.codigocompania) as codigocompaniatel from FOTOEQUIPOS a left join (select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,T_PLAN from PM_PLANES) B on a.CODIGOPLANTARIFARIOBSCS=B.NUMEROPLAN where upper(a.product) like '%POST%' AND OBTENER_TIPODOC_2(a.ruccompania) like 'RUC%' AND b.T_PLAN = 'Comercial' AND a.ESTADOCONTRATO in ('Activo','Suspendido') AND a.periodo=to_char(sysdate,'yyyymm')
) a,
(
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_PERSONAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
union
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_EMPRESAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
) b
where a.codigocompaniatel=b.codigocompania (+)
) where rn=1) b,
(
select distinct CODIGOCOMPANIA,TDOC as Subcategoria from (
select a.tipodoc,a.periodo,b.product,OBTENER_TIPODOC_2(a.ruccompania) tdoc,codigocompania,b.t_plan
from (select compania,telefono,estadocontrato,fechadesactivacioncontrato,fechacargacontrato,ciclofacturacioncontrato,codigocontratobscs,plantarifario,codigoplantarifariobscs,
numerocuentaresponsable,fechaactivacioncontrato,tipopersona,ruccompania,distrito,codigocompania,girocompania,subgirocompania,scorecrediticio,
region,supervisado,tipocuenta,imei,sim,codigocuentaresponsable,identificadorconsultor,canalventa,identificadordealer,producto,motivomovimiento,solucion,
division,estadocobranzacuenta,nextel,segmento,rentabasica,fechaproceso,zona,tipoplan,numerocuentacompania,
RIESGOFINANCIERO,PERIODO,FECHACREACION,FECHAINGRESO,PRODUCT,OBTENER_TIPODOC_2(ruccompania) as TIPODOC from FOTOEQUIPOS) a
left join (select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,t_plan from PM_PLANES) B on a.CODIGOPLANTARIFARIOBSCS=B.NUMEROPLAN where ESTADOCONTRATO in ('Activo','Suspendido') group by a.TIPODOC,a.PERIODO,B.PRODUCT,OBTENER_TIPODOC_2(a.RUCCOMPANIA),CODIGOCOMPANIA,t_plan --order by periodo,tipodoc,product,OBTENER_TIPODOC_2(a.ruccompania)
) where upper(product) like '%POST%' -- in ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
    and TIPODOC like 'RUC%'
    and t_plan = 'Comercial'
) c,
(select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,T_PLAN from PM_PLANES) D
  WHERE a.codigocompania=b.codigocompaniatel(+)
  AND a.codigocompania=c.codigocompania(+)
  AND a.CODIGOPLANTARIFARIOBSCS=D.NUMEROPLAN(+)
  AND upper(a.product) like '%POST%' -- in ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
  AND OBTENER_TIPODOC_2(a.ruccompania) like 'RUC%'
  AND d.T_PLAN = 'Comercial'
  AND a.ESTADOCONTRATO in ('Activo','Suspendido')
  AND a.periodo=to_char(sysdate,'yyyymm')
  GROUP BY DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria));
----------------------------------------------------------------------------------------------------------------08-P2----------------------------------------------------------------------------------------------------------------
insert into FA_MDL_AFILIADOS_ACUMU_RES_2 (cantidad,grupo,categoria,subcategoria,periodo,base)
SELECT COUNT(DISTINCT A.CODIGOCOMPANIA) AS CANTIDAD,'ENDING' AS GRUPO,'AFILIADOS ACT RUC' AS CATEGORIA,
       DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) AS SUBCATEGORIA,
       TO_CHAR(SYSDATE,'yyyymm') AS PERIODO,
--SELECT A.CODIGOCOMPANIA,B.PRODUCT,C.CODIGOCOMPANIA,
       '2' as base
  from ods_gpf.FOTOEQUIPOS a,
    (select to_char(sysdate-1,'yyyymm') as periodoacceso,periodo,codigocompaniatel,fecha,codigocuenta,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from (
select to_char(b.fecha,'yyyymm') as periodo,a.codigocompaniatel,b.fecha,b.codigocuenta,b.ruccompania,b.razonsocial,b.contrato,b.nextel,b.c_plan,b.n_plan,b.t_plan,b.product,b.unidades_gross,b.tipodoc,b.rentabasica,b.nro_orden,b.ciclo,row_number () over (partition by codigocompaniatel order by fecha desc) as rn from
(
select to_number(a.codigocompania) as codigocompaniatel from FOTOEQUIPOS a left join (select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,T_PLAN from PM_PLANES) B on a.CODIGOPLANTARIFARIOBSCS=B.NUMEROPLAN where upper(a.product) like '%POST%' AND OBTENER_TIPODOC_2(a.ruccompania) like 'RUC%' AND b.T_PLAN = 'Comercial' AND a.ESTADOCONTRATO in ('Activo','Suspendido') AND a.periodo=to_char(sysdate,'yyyymm')
) a,
(
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_PERSONAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
union
select fecha,codigocuenta,codigocompania,ruccompania,razonsocial,contrato,nextel,c_plan,n_plan,t_plan,product,unidades_gross,tipodoc,rentabasica,nro_orden,ciclo from TNP_INAR_EMPRESAS_ODS where periodo>to_char(ADD_MONTHS(sysdate-1,-24),'yyyymm')
) b
where a.codigocompaniatel=b.codigocompania (+)
) where rn=1) b,
(
select distinct CODIGOCOMPANIA,TIPODOCUMENTO as Subcategoria from (
select c.TIPODOCUMENTO,a.periodo,b.product,codigocompania,b.t_plan
FROM (SELECT
ruccompania,codigocompania,PERIODO,CODIGOPLANTARIFARIOBSCS,estadocontrato from FOTOEQUIPOS) a
LEFT JOIN (SELECT TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,t_plan FROM PM_PLANES) B ON A.CODIGOPLANTARIFARIOBSCS=B.NUMEROPLAN
LEFT JOIN (SELECT * FROM (SELECT RUCCOMPANIA, TIPODOCUMENTO,ROW_NUMBER () OVER (PARTITION BY RUCCOMPANIA ORDER BY NPCREATEDDATE DESC) rn
            FROM TNP_PREEVALUACION)
            WHERE RN=1) C
ON a.RUCCOMPANIA=c.RUCCOMPANIA
WHERE ESTADOCONTRATO IN ('Activo','Suspendido')
group by c.TIPODOCUMENTO,a.PERIODO,B.PRODUCT,CODIGOCOMPANIA,t_plan --order by periodo,tipodoc,product,OBTENER_TIPODOC_2(a.ruccompania)
) WHERE upper(product) like '%POST%' -- IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
    AND TIPODOCUMENTO LIKE 'RUC%'
    AND t_plan = 'Comercial'
) c,
(select TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,PRODUCT,T_PLAN from PM_PLANES) D
  WHERE a.codigocompania=b.codigocompaniatel(+)
  AND a.codigocompania=c.codigocompania(+)
  AND a.CODIGOPLANTARIFARIOBSCS=D.NUMEROPLAN(+)
  AND upper(a.product) like '%POST%' -- in ('HP PTT Post','iDen Post','IN Post','Non PTT Post','In Post')
  AND OBTENER_TIPODOC_2(a.ruccompania) like 'RUC%'
  AND d.T_PLAN = 'Comercial'
  AND a.ESTADOCONTRATO in ('Activo','Suspendido')
  AND a.periodo=to_char(sysdate,'yyyymm')
  AND DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria)) like '%NEGOCIO%'
  GROUP BY DECODE(B.PRODUCT,'Internet Hogar Post',
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1',' INTERNET NO TOTAL','INTERNET '||C.Subcategoria),
       DECODE(NVL(C.CODIGOCOMPANIA,'1'),'1','MOVILES NO TOTAL','MOVILES '||C.Subcategoria));
       commit;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
update FA_MDL_AFILIADOS_ACUMU_RES_2 set categoria='BASE ACTIVA POST RUC' where grupo='ENDING' and categoria='AFILIADOS ACT RUC';
commit;
end GENERAREPORTEAFILIADOSCONCIL;

PROCEDURE procesarbasemaildiaria_v2
IS
BEGIN
-- PROPÓSITO:
-- Genera la base de clientes afiliados al servicio de envio de recibo electronico, esta basado en el procedure de la base mail original
--
-- HISTORIAL DE MODIFICACION
-- Usuario                                     Fecha                   Comentario
-- ----------                                 ---------           ----------------------
-- CCHAHUAS/NVEGA                            01/02/2017                 Creación.
--------------------------------------------------------------------------
   --------------------------------------------------------------------------
   /*
   T1. LIMPIEZA DE DE TABLAS fa_afiliadosmail_historico_t Y FA_MAIL_CONTRATOSPROMOCION_T
   Limpieza de informacion para tablas historica de afiliacion y
   limpieza de los contratos de promocion solo para el dia a procesar
   */
   --------------------------------------------------------------------------
    DELETE FROM fa_afiliadosmail_historico_t WHERE TRUNC(fecha)=TRUNC(sysdate-1);
    DELETE FROM FA_MAIL_CONTRATOSPROMOCION_T WHERE TRUNC(fecha)=TRUNC(sysdate);
    DELETE FROM FA_AFILIADOSMAIL_DIARIO_TEST;
    commit;
   --------------------------------------------------------------------------
   /*
   T8. INSERCION DE BASE 1 EN FA_AFILIADOSMAIL_DIARIO_TEST
   Se agregan la base 1 en FA_AFILIADOSMAIL_DIARIO_TEST (C) incluyendo
   FA_BASE_HP_TEST (A) y p_compania (D), fa_afiliadosmail_historico_t (E)
   fotoequipos (B) adicionalmente se filtra fa_motivados_semanal (F)
   y fa_basedesafiliados_sd (G)
   */
   --------------------------------------------------------------------------
   INSERT INTO FA_AFILIADOSMAIL_DIARIO_TEST
    (
    codigocompania, numerocuentaresponsable, tipodocumento, ruccompania, razonsocial,
    cuentacompania, provincia, departamento, mail, ciclo, canalventa, fechaingreso,
    estado, base, tipopersona, estado2, distrito, riesgofinanciero, indicecrediticio,
    estadodecobranza, consultor, dealer, nombrecontacto
    )
    WITH HPENCARGADORECIBOELECTRONICO AS
        (SELECT *
        FROM FA_BASE_HP_TEST
        WHERE (cargo = 'ENCARGADO-RECIBO ELECTRONICO' OR tiponotificacion='Recibo Electrónico')
        ),
        PERSONAS AS
        (SELECT * FROM p_compania WHERE tipodocumento <> 'RUC'
        ),
        AFILIADOSHASTAMESPASADO AS
        (SELECT codigocompaniahistorico
        FROM fa_afiliadosmail_historico_t
        WHERE fecha < TRUNC(SYSDATE-1,'MM')
        OR fecha   IS NULL
        GROUP BY codigocompaniahistorico
        ),
        DATOSPOSTPAGOMASNUEVO as
        (SELECT DECODE(canalventacontrato, NULL, canalventa, canalventacontrato) canal, codigocompania,
        NVL(consultorcontrato, identificadorconsultor) consultor, NVL(dealercontrato, identificadordealer) dealer
        FROM
            (SELECT a.canalventa,a.canalventacontrato,a.consultorcontrato,
            a.identificadorconsultor,a.dealercontrato,a.identificadordealer,
            a.codigocompania,row_number() over ( PARTITION BY a.codigocompania ORDER BY
            a.codigocompania ASC, a.fechaactivacioncontrato DESC) ar
            FROM fotoequipos a
            LEFT JOIN pm_planes b ON a.codigoplantarifariobscs=b.c_plan
            WHERE b.product not in ('iDen Pre','IN Pre','Non PTT Prepago','Fijo Movil Prepago')
            AND a.estadocontrato IN ('Activo','Suspendido')
            ORDER BY codigocompania
            )
        WHERE ar=1
        )
    SELECT b.codigocompania, b.cuentacompania, b.tipodocumento, b.ruccompania,
    b.razonsocial, b.cuentacompania, b.provincia, b.departamento, a.mail,
    b.ciclo, c1.canal, b.fechaingreso, DECODE (c.base, NULL, 'NUEVO', 'ANTIGUO')
    estado, '1', b.tipopersona, DECODE (D1.codigocompaniahistorico , NULL,
    'NUEVO', 'ANTIGUO'), b.distrito, b.riesgofinanciero, b.indice,
    b.estadocobranza,c1.consultor, c1.dealer,a.nombrecontacto
    FROM hpencargadoreciboelectronico a, personas b, fa_afiliadosmail_historico_t c, afiliadoshastamespasado D1,datospostpagomasnuevo c1
    WHERE a.codigocompanianum = b.codigocompania(+)
    AND a.codigocompanianum   = c.codigocompaniahistorico(+)
    AND a.codigocompanianum   = D1.codigocompaniahistorico(+)
    AND b.codigocompania      =c1.codigocompania(+)
    AND NOT EXISTS
        (SELECT 1 FROM fa_motivados_semanal v WHERE (UPPER (v.mail)=a.mail and  v.cuenta=a.numerocuentaresponsable) and (v.mes>a.fechacreacioncontacto or v.mes is null))
    AND NOT EXISTS
        (SELECT 1 FROM fa_basedesafiliados_sd v WHERE (UPPER (v.mail)=a.mail and  v.cuenta=a.numerocuentaresponsable) and v.periododesafil>a.fechacreacioncontacto)
    GROUP BY b.codigocompania, b.cuentacompania, b.tipodocumento, b.ruccompania, b.razonsocial,
    b.cuentacompania, b.provincia, b.departamento, a.mail, b.ciclo, c1.canal, b.fechaingreso,
    DECODE (c.base, NULL, 'NUEVO', 'ANTIGUO') ,b.tipopersona, DECODE (D1.codigocompaniahistorico, NULL, 'NUEVO', 'ANTIGUO'),
    b.distrito, b.riesgofinanciero, b.indice, b.estadocobranza, c1.consultor, c1.dealer, a.nombrecontacto;
   --------------------------------------------------------------------------
   /*
   T9. INSERCION DE BASE 2 EN FA_AFILIADOSMAIL_DIARIO_TEST
   Se agregan la base 1 en FA_AFILIADOSMAIL_DIARIO_TEST (C) incluyendo
   FA_BASE_HP_TEST (A) y p_compania (D), fa_afiliadosmail_historico_t (E)
   fotoequipos (B) adicionalmente se filtra fa_motivados_semanal (F)
   y fa_basedesafiliados_sd (G)
   */
   --------------------------------------------------------------------------
    INSERT INTO FA_AFILIADOSMAIL_DIARIO_TEST
    (
      codigocompania, numerocuentaresponsable, tipodocumento, ruccompania, razonsocial,
      cuentacompania, provincia, departamento, mail, ciclo, canalventa, fechaingreso,
      cargo, estado, base, tipopersona, estado2, distrito, riesgofinanciero, indicecrediticio,
      estadoDEcobranza, consultor ,dealer,nombrecontacto
    )
    WITH afiliadoshastamespasado AS
        (SELECT codigocompaniahistorico
        FROM fa_afiliadosmail_historico_t
        WHERE fecha < TRUNC(sysdate-1,'MM') OR fecha IS NULL
        GROUP BY codigocompaniahistorico
        )
    SELECT b.codigocompania, b.cuentacompania, b.tipodocumento, b.ruccompania,
    b.razonsocial, b.cuentacompania, b.provincia, b.departamento, a.mail,
    b.ciclo, b.canalventa, b.fechaingreso, a.cargo, DECODE (c.base, NULL, 'NUEVO', 'ANTIGUO') estado,
    '2', b.tipopersona, DECODE(D1.codigocompaniahistorico, NULL, 'NUEVO', 'ANTIGUO'),
    b.distrito, b.riesgofinanciero, b.indice, b.estadocobranza,b.consultor,b.dealer,
    a.nombrecontacto
    FROM FA_BASE_HP_TEST a, p_compania b, fa_afiliadosmail_historico_t c, afiliadoshastamespasado D1
    WHERE a.codigocompaniaNUM = b.codigocompania(+)
    AND a.codigocompaniaNUM   = c.codigocompaniahistorico(+)
    AND a.codigocompaniaNUM   = D1.codigocompaniahistorico(+)
    AND NOT EXISTS
        (SELECT 1 FROM fa_motivados_semanal v WHERE (UPPER (v.mail)=a.mail and  v.cuenta=a.numerocuentaresponsable) and (v.mes>a.fechacreacioncontacto or v.mes is null))
    AND NOT EXISTS
        (SELECT 1 FROM fa_basedesafiliados_sd v WHERE (UPPER (v.mail)=a.mail and  v.cuenta=a.numerocuentaresponsable) and v.periododesafil>a.fechacreacioncontacto)
    AND (
        (
        (a.cargo = 'ENCARGADO-RECIBO ELECTRONICO' OR a.cargo = 'ENCARGADO-RECIBO ELECT. Y FISICO' OR a.tiponotificacion = 'Recibo Electrónico' OR a.tiponotificacion = 'Recibo Electrónico y Físico')
        AND b.tipodocumento   = 'RUC')
        OR (a.cargo          = 'ENCARGADO-RECIBO ELECT. Y FISICO' OR a.tiponotificacion = 'Recibo Electrónico y Físico')
        )
    GROUP BY b.codigocompania, b.cuentacompania, b.tipodocumento, b.ruccompania, b.razonsocial,
    b.cuentacompania, b.provincia, b.departamento, a.mail, b.ciclo, b.canalventa, b.fechaingreso,
    a.cargo, DECODE (c.base, NULL, 'NUEVO', 'ANTIGUO'), b.tipopersona, DECODE ( D1.codigocompaniahistorico, NULL, 'NUEVO', 'ANTIGUO'),
    b.distrito, b.riesgofinanciero, b.indice, b.estadocobranza,b.consultor,b.dealer,a.nombrecontacto;

   --------------------------------------------------------------------------
   /*
   T10. ACTUALIZAN EL CAMPO COMPANHIAACTIVA EN BASE MAIL
   Se clasifica el campo companhiaactiva de acuerdo al estado
   de contrato en la foto de equipo.
   */
   --------------------------------------------------------------------------
    MERGE INTO
   (
   SELECT c.companhiaActiva AS motivoE, 'Activa' AS motivo,c.codigocompania
    FROM FA_AFILIADOSMAIL_DIARIO_TEST c
   )A
   USING
   (
   SELECT a.codigocompania FROM fotoequipos a, pm_planes_promocion b
         WHERE a.codigoplantarifariobscs = b.c_plan
         AND a.estadocontrato IN ('Activo','Suspendido')
         GROUP BY a.codigocompania
   )B
   ON
   (
   A.codigocompania = B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;
    COMMIT;

    UPDATE FA_AFILIADOSMAIL_DIARIO_TEST SET companhiaActiva='Inactiva'
    WHERE companhiaActiva IS NULL;
   --------------------------------------------------------------------------
   /*
   T11. ACTUALIZAN BASE MAIL CON INFORMACION DE fa_afiliadosmail_historico_t
   Se actualizan la informacion de FA_AFILIADOSMAIL_DIARIO_TEST tomando los campos
   grupo, fechaafiliacion
   */
   --------------------------------------------------------------------------
    MERGE INTO
   (
   SELECT c4.fechaafiliacion AS fecha,c4.codigocompania
    FROM FA_AFILIADOSMAIL_DIARIO_TEST c4 where c4.fechaafiliacion IS  NULL
   )A
   USING
   (
   SELECT to_date(fechaE,'yyyy-mm-dd') as fechaE,codigocompania FROM (
   SELECT
    c.fechaingreso AS fechaE,c.codigocompania,row_number () over (partition by c.codigocompania order by c.fechaingreso desc) rn
   FROM FA_BASE_HP_TEST c where c.fechaingreso IS NOT NULL
   )
   WHERE RN=1
   )B
   ON
   (
    B.codigocompania = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET fecha = fechaE;

   MERGE INTO
   (
   SELECT  c4.grupo AS motivo, c4.subgrupo AS razon,  c4.fechaafiliacion AS fecha,c4.codigocompania
    FROM FA_AFILIADOSMAIL_DIARIO_TEST c4 where c4.fechaafiliacion IS NOT NULL
   )A
   USING
   (
   SELECT
   c.grupo AS motivoE, c.subgrupo AS razonE, c.fechaafiliacion AS fechaE,c.codigocompaniahistorico
   FROM fa_afiliadosmail_historico_t c where
         c.grupo IS NOT NULL
        AND c.subgrupo IS NOT NULL
        AND c.fechaafiliacion IS NOT NULL
   )B
   ON
   (
   B.codigocompaniahistorico = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivo = motivoE,razon = razonE, fecha = fechaE;
   --------------------------------------------------------------------------
   /*
   T12. ACTUALIZAN BASE MAIL CON INFORMACION DE fa_afiliadosmail_historico_t
   Se actualizan la informacion de FA_AFILIADOSMAIL_DIARIO_TEST tomando los campos
   grupo, fechaafiliacion
   */
   --------------------------------------------------------------------------
   MERGE INTO
   (
   SELECT  c4.grupo AS motivo, c4.subgrupo AS razon,
   c4.fechaafiliacion AS fecha,c4.consultor as consultor,
   c4.dealer as dealer,c4.codigocompania
   FROM FA_AFILIADOSMAIL_DIARIO_TEST c4 where (c4.consultor= 'Sin Consultor' OR c4.consultor IS NULL) AND c4.dealer IS NULL
   )A
   USING
   (
   SELECT
   c.grupo AS motivoE,c.subgrupo AS razonE, c.fechaafiliacion AS fechaE, c.consultor as consultorE, c.dealer as dealerE,c.codigocompaniahistorico
   FROM fa_afiliadosmail_historico_t c where (c.consultor  <>  'Sin Consultor' OR c.consultor IS NOT NULL)
        AND c.dealer IS NOT NULL
        AND c.grupo IS NOT NULL
        AND c.subgrupo IS NOT NULL
        AND c.fechaafiliacion IS NOT NULL
   )B
   ON
   (
   B.codigocompaniahistorico = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET consultor=consultorE,dealer=dealerE;
 --------------------------------------------------------------------------
   /*
   T13. ACTUALIZAN BASE MAIL CON INFORMACION DE FA_RESUMENBASEMAIL_INCIDENTE_T
   Se actualizan la informacion de FA_AFILIADOSMAIL_DIARIO_TEST tomando los campos
   grupo, fechaingresoincidente
   */
   --------------------------------------------------------------------------
   MERGE INTO
   (
   SELECT  c4.grupo AS motivo, c4.subgrupo AS razon,  c4.fechaafiliacion AS fecha, c4.codigocompania
   FROM FA_AFILIADOSMAIL_DIARIO_TEST c4 where c4.grupo IS NULL
        AND c4.subgrupo IS NULL
   )A
   USING
   (
   SELECT
   c.grupo AS motivoE, c.subgrupo AS razonE, c.fechaingresoincidente AS fechaE,c.codigocompania
   FROM  FA_RESUMENBASEMAIL_INCIDENTE_T c
   )B
   ON
   (
   B.codigocompania  = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivo = motivoE,razon = razonE, fecha = fechaE;
   --------------------------------------------------------------------------
   /*
   T14. ACTUALIZAN BASE MAIL LAS FECHAS DE AFILIACION VACIAS
   Se actualizan la informacion de FA_AFILIADOSMAIL_DIARIO_TEST identificando las fechas
   de afiliacion y grupos vacios
   */
   --------------------------------------------------------------------------
   UPDATE FA_AFILIADOSMAIL_DIARIO_TEST
   SET fechaafiliacion = fechaingreso, grupo = 'Como Cliente'
   WHERE grupo IS NULL;

   --------------------------------------------------------------------------
   /*
   T15. DEPURACION DE DUPLICADOS EN BASE 1 PRESENTES EN BASE 2
   Se depura la informacion duplicada dentro de la base 1 que ya han sido identificados
   en la base 2
   */
   --------------------------------------------------------------------------
   DELETE FROM FA_AFILIADOSMAIL_DIARIO_TEST a
   WHERE a.base = '2'
   AND EXISTS
        (SELECT 1
        FROM FA_AFILIADOSMAIL_DIARIO_TEST b
        WHERE b.codigocompania = a.codigocompania
        AND b.base = '1'
        );
   --------------------------------------------------------------------------
   /*
   T16. ACTUALIZACION FALTANTE DESDE LA FOTOEQUIPOS
   Se actualizan el codigocompania, ciclofacturacion y cantidad de equipos
   extrayendolo de la foto de equipos
   */
   --------------------------------------------------------------------------
   MERGE INTO
   (
   SELECT c.cantidadequipos AS motivoE,c.codigocompania
    FROM FA_AFILIADOSMAIL_DIARIO_TEST c
   )A
   USING
   (
   SELECT a.codigocompania, COUNT (*) motivo
         FROM fotoequipos a, pm_planes b
         WHERE a.codigoplantarifariobscs = b.c_plan(+)
         AND a.estadocontrato IN ('Activo', 'Suspendido')
         AND b.product NOT IN ('iDen Pre','IN Pre','Non PTT Prepago')
         GROUP BY a.codigocompania
   )B
   ON
   (
   A.codigocompania = B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE = motivo;

   MERGE INTO
   (
   SELECT c.ciclo AS motivoE,c.codigocompania
   FROM FA_AFILIADOSMAIL_DIARIO_TEST c where c.ciclo IS NULL
   )A
   USING
   (
   SELECT
    c4.ciclofacturacioncontrato AS motivo,c4.codigocompania
   FROM fotoequipos c4
   group by c4.ciclofacturacioncontrato,c4.codigocompania
   )B
   ON
   (
   A.codigocompania=B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivoE=motivo;

     MERGE INTO
   (
   SELECT c.cantidad3G AS cantidad3GE,c.codigocompania
    FROM FA_AFILIADOSMAIL_DIARIO_TEST c
   )A
   USING
   (
   SELECT x.codigocompania, COUNT (1) cantidad3G
    FROM fotoequipos x, pm_planes z
    WHERE x.codigoplantarifariobscs = z.c_plan(+)
        AND ( z.grupo LIKE '%3G%' OR z.grupo = 'Internet Nextel')
        AND z.product NOT IN ('iDen Pre','IN Pre','Non PTT Prepago')
        AND x.estadocontrato IN ('Activo', 'Suspendido')
        GROUP BY x.codigocompania
   )B
   ON
   (
   A.codigocompania = B.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET cantidad3GE = cantidad3G;

    MERGE INTO
   (
     SELECT  c4.tipocompania AS motivo,c4.codigocompania
        FROM FA_AFILIADOSMAIL_DIARIO_TEST c4
   )A
   USING
   (
   SELECT
   c.tipocompania AS motivoE,c.codigocompania
   FROM p_compania c
   )B
   ON
   (
   B.codigocompania  = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivo = motivoE;
   delete from FA_AFILIADOSMAIL_DIARIO_TEST where codigocompania is null;
   --------------------------------------------------------------------------
   /*
   T17. ACTUALIZACION DE RESULTADOS DE DOMINIOS MAS COMUNES
   Se verifican mediante una funcion de correlacion la conicidencia de dominios de correo
   */
   --------------------------------------------------------------------------
    UPDATE FA_AFILIADOSMAIL_DIARIO_TEST a
    SET a.resultado1=func_corr(SUBSTR(a.mail,instr(a.mail,'@')+1),'GMAIL.COM');
    UPDATE FA_AFILIADOSMAIL_DIARIO_TEST a
    SET a.resultado2=func_corr(SUBSTR(a.mail,instr(a.mail,'@')+1),'HOTMAIL.COM');

    MERGE INTO
   (
   SELECT  c4.territorio AS motivo,
     c4.clasificacion AS fecha,c4.consultor
    FROM FA_AFILIADOSMAIL_DIARIO_TEST c4 where c4.territorio IS NULL
    AND c4.clasificacion IS NULL
   )A
   USING
   (
   SELECT
   c.territorio AS motivoE, c.clasificacion AS fechaE,c.consultor
   FROM base_consultores c
   )B
   ON
   (
   B.consultor  = A.consultor
   )
   WHEN MATCHED THEN
   UPDATE SET motivo = motivoE, fecha = fechaE;

    COMMIT;

    UPDATE FA_AFILIADOSMAIL_DIARIO_TEST
    SET clasificacion= 'Tiendas Propias'
    WHERE grupo= 'CAP';
    COMMIT;

    UPDATE FA_AFILIADOSMAIL_DIARIO_TEST
    SET clasificacion = 'CAL Tercerizado'
    WHERE grupo = 'CAL Tercerizado';
    COMMIT;

    UPDATE FA_AFILIADOSMAIL_DIARIO_TEST
    SET clasificacion = 'CAL Inhouse'
    WHERE grupo = 'CAL Inhouse';
    COMMIT;

    UPDATE FA_AFILIADOSMAIL_DIARIO_TEST
    SET clasificacion = 'Web'
    WHERE grupo = 'Web';
    COMMIT;

    UPDATE FA_AFILIADOSMAIL_DIARIO_TEST
    SET clasificacion= 'NO CLASIFICADO'
    WHERE clasificacion IS NULL ;
    COMMIT;

    UPDATE FA_AFILIADOSMAIL_DIARIO_TEST
    SET territorio= 'NO CLASIFICADO'
    WHERE territorio IS NULL ;
    COMMIT;

   --------------------------------------------------------------------------
   /*
   T23. DEPURACION DE FA_PROSPECTOSMAIL_DIARIO DE BASE MAIL
   se identifican los fa_prospectosmail_diario dentro de la FA_AFILIADOSMAIL_DIARIO_TEST
   para eliminarlos para evitar redundancia
   */
   --------------------------------------------------------------------------
    DELETE from FA_AFILIADOSMAIL_DIARIO_TEST Y
    WHERE EXISTS
        (SELECT 1 FROM
                (SELECT a.ruccompania
                FROM p_compania a, fotoequipos b
                WHERE a.ruccompania=b.ruccompania(+) AND a.tipocompania='Prospecto') x
    WHERE x.ruccompania=y.ruccompania)
    AND y.ruccompania IS NOT NULL;
    COMMIT;

   --------------------------------------------------------------------------
   /*
   T24. CORRECCION DE DOMINIOS
   se identifican los dominios erroneos dentro de la tabla de validacion de correo
   */
   --------------------------------------------------------------------------
    MERGE INTO
   (select mail,correccionmail AS mailc from FA_AFILIADOSMAIL_DIARIO_TEST)A
   USING
   (SELECT b.correccion,b.error
    FROM fa_correccion_mail b
   )B
   ON
   (
   SUBSTR(A.mail,INSTR(A.mail,'@')+1) = B.error
   )
   WHEN MATCHED THEN
   UPDATE SET  a.mailc= REPLACE(a.mail, SUBSTR(a.mail,INSTR(a.mail,'@')+1), b.correccion);

    COMMIT;

    MERGE INTO
   (
   SELECT c4.fechaafiliacion as fechaafil,c4.consultor as consultor,c4.grupo as grupo,  c4.subgrupo as subgrupo,c4.codigocompania
    FROM FA_AFILIADOSMAIL_DIARIO_TEST c4
   )A
   USING
   (
    SELECT c.fechaingresoincidente as fechaafilE,c.identificadorusuariovantive as consultorE,c.grupo as grupoE, c.subgrupo AS subgrupoE,c.codigocompania
   FROM FA_RESUMENBASEMAIL_INCIDENTE_T c where to_char(fechaingresoincidente,'yyyymmdd')>'20160331'
   )B
   ON
   (
   B.codigocompania = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET fechaafil=fechaafilE,consultor=consultorE,grupo=grupoE,subgrupo=subgrupoE;
  commit;
   --------------------------------------------------------------------------
   /*
    cruce con base de sat push para actualizar el campo grupo
   */
   --------------------------------------------------------------------------

    MERGE INTO
    (
    SELECT NUMEROCUENTARESPONSABLE,consultor,grupo
    FROM FA_AFILIADOSMAIL_DIARIO_TEST
    ) a
    USING
    (
    SELECT COD_BSCS,'INC-RECIBOS' AS consultorE, 'Web' as grupoE
    FROM FA_SAT_PUSH
    GROUP BY COD_BSCS
    ) b
    ON
    (trim(a.numerocuentaresponsable)=trim(b.cod_bscs))
    WHEN MATCHED THEN
    UPDATE SET consultor = consultorE,
               grupo=grupoE;

   --------------------------------------------------------------------------
   /*
   T25. INSERCION Y ACTUALIZACION DE REGISTROS HISTORICOS DE AFILIADOSMAIL_HISTORICO
   se ingresan SOLO los nuevos afiliados de la base mail para guardarlos dentro
   del historico de afiliadomail,adicionalmente se actualizan los datos de los clasificados
   */
   --------------------------------------------------------------------------
    INSERT INTO fa_afiliadosmail_historico_t
    (cuenta, base, fecha, grupo, fechaafiliacion, canalventa, codigocompaniahistorico,
    consultor, dealer, territorio, clasificacion, provincia, departamento,tipocompania,subgrupo,cargo
    )
    SELECT numerocuentaresponsable, base, SYSDATE - 1, grupo, fechaafiliacion, canalventa,
    codigocompania,consultor,dealer,territorio,clasificacion,'NO CLASIFICADO' provincia,'NO CLASIFICADO' departamento,tipocompania,subgrupo,cargo
    FROM FA_AFILIADOSMAIL_DIARIO_TEST
    WHERE estado = 'NUEVO'
    AND companhiaactiva='Activa'
    GROUP BY numerocuentaresponsable, base, SYSDATE - 1, grupo, fechaafiliacion, canalventa,
    codigocompania, consultor, dealer, territorio, clasificacion, provincia, departamento,tipocompania,subgrupo,cargo;
    COMMIT;

    MERGE INTO
   (
   SELECT c4.provincia as consultor,c4.departamento as dealer,c4.codigocompaniahistorico
    FROM fa_afiliadosmail_historico_t c4 where (c4.provincia IS NULL OR c4.provincia = 'NO CLASIFICADO')
    AND (c4.departamento IS NULL OR c4.departamento = 'NO CLASIFICADO')
   )A
   USING
   (
   SELECT
   c.provincia as consultorE, c.departamento as dealerE,c.codigocompania
   FROM p_compania c
   )B
   ON
   (
   B.codigocompania = A.codigocompaniahistorico
   )
   WHEN MATCHED THEN
   UPDATE SET  consultor=consultorE,dealer=dealerE;

    COMMIT;
    MERGE INTO
   (
     SELECT  c4.codigoincidente AS motivo,c4.fechaincidente AS caso,c4.codigocompania
        FROM FA_AFILIADOSMAIL_DIARIO_TEST c4
   )A
   USING
   (
   SELECT
   c.codigoincidente AS motivoE,c.fechaingresoincidente AS casoE,c.codigocompania
   FROM FA_RESUMENBASEMAIL_INCIDENTE_T c
   )B
   ON
   (
   B.codigocompania  = A.codigocompania
   )
   WHEN MATCHED THEN
   UPDATE SET motivo = motivoE,caso = casoE;

   UPDATE FA_AFILIADOSMAIL_DIARIO_TEST SET codigoincidente='-' WHERE codigoincidente IS NULL;
   COMMIT;
END procesarbasemaildiaria_v2;

PROCEDURE GENERAREPORTECIASDIRUSSD is
begin

insert into FA_DIRECCIONES_USSD_ORDEN
select  a.codigocompania,a.razonsocial,a.cuentacompania,a.tipodocumento,a.ruccompania,a.tipocuenta,a.tipopersona,a.tipocompania,a.telefono as telefono_compania,
            a.ciclo,a.region,a.departamento,a.provincia,a.distrito,a.direccion,a.ubigeo,a.fechacreacion,a.fechaingreso,a.consultor,a.creadopor,a.consultor2,
            b.telefono,b.codigocontratobscs,c.codigoorden,c.estadoorden,c.subcategoria,c.ordencreadopor,c.ordencerradopor,c.solicitud,c.codigoincidente,c.logintienda,c.nombreconsultor,c.origenorden,to_char(a.fechaingreso,'YYYYMM')
from (select * from p_compania where direccion like '%USSD%' and tipocompania in ('Cliente','Empleado')) a
left join(
  select * from (
  select numerocuentaresponsable,telefono,codigocontratobscs,codigocompania,row_number () over (partition by codigocompania order by fechaactivacioncontrato asc) rn from fotoequipos where product not in ('iDen Pre','Non PTT Prepago','Fijo Movil Prepago','IN Pre')
  ) where rn=1) b
on a.codigocompania=b.codigocompania
left join (
  select * from (
  select codigocontratofuente,codigoorden,estadoorden,subcategoria,ordencreadopor,ordencerradopor,solicitud,codigoincidente,logintienda,nombreconsultor,origenorden,row_number () over (partition by codigoorden order by fechacarga desc) rn
  from p_ordenes
  where  UPPER(subcategoria) not like '%PREPAGO%' and
               tipoprocesoorden in ('PORTABILIDAD','REACTIVACION','REPOSICION','VENTA MOVILES','VENTA PRODUCTOS','CAMBIO DE MODELO')
               or subcategoria='SOLICITA CAMBIO PLAN TARIFARIO'
  ) where rn=1) c
on b.codigocontratobscs=c.codigocontratofuente
where to_char(a.fechaingreso,'yyyymmdd')=to_char(sysdate-1,'yyyymmdd');

end GENERAREPORTECIASDIRUSSD;

PROCEDURE PROCESARREGISTROVENTA(SANHO VARCHAR2,SMES VARCHAR2,SCICLO VARCHAR2) is
begin
-- PROPÓSITO:
--k
--
-- HISTORIAL DE MODIFICACION
-- Usuario                   Fecha           Comentario
-- ----------                ---------       ----------------------
-- CCHAHUAS/FESPINOZA        12/05/2017      Revisión del flujo y reduccion de pasos.
-- CCHAHUAS/FESPINOZA        22/05/2017      Inclusion de inserts.
-- --------------------------------------------------------------------------
update temp_fa_registroventa_a set code=RPAD(code,10,'0') where substr(code,1,1)='1' and length(code)<10;
commit;

DELETE FROM temp_fa_registroventa_b;
commit;

INSERT INTO temp_fa_registroventa_b
( invoice_number,code,company,invoice_date,system_access,features_options,data_services,add_charges,disc_prom,
  dispatch,interconnect,nat_ld,inat_ld,insurance,occ,late_payment,sales_value,igv,equipment,ohinvamt,
  compute_0022,ruc,roaming,occ_rep_gn,cdi_acc,cdi_exc,ciclo,
  ruccompania,tipocuenta,canalventa,dealer,tipopersona,segmento,tipocompania,
  codigocompania,consultor,provincia,departamento,tipodocumento,company_type,periodo)
 SELECT invoice_number,n_code,company,invoice_date,system_access,features_options,data_services,add_charges,disc_prom,
       dispatch,interconnect,nat_ld,inat_ld,insurance,occ,late_payment,sales_value,igv,equipment,ohinvamt,
       compute_0022,ruc,roaming,occ_rep_gn,cdi_acc,cdi_exc,ciclo,
       ruccompania,tipocuenta,canalventa,dealer,tipopersona,segmento,tipocompania,
       codigocompania,consultor,provincia,departamento,tipodocumento,company_type,periodo FROM (
SELECT distinct a.invoice_number,a.n_code,a.company,a.invoice_date,a.system_access,a.features_options,a.data_services,a.add_charges,a.disc_prom,
       a.dispatch,a.interconnect,a.nat_ld,a.inat_ld,a.insurance,a.occ,a.late_payment,a.sales_value,a.igv,a.equipment,a.ohinvamt,
       a.compute_0022,a.ruc,a.roaming,a.occ_rep_gn,a.cdi_acc,a.cdi_exc,a.ciclo,
       NVL(NVL(b.ruccompania,c.ruccompania),d.ruccompania) AS ruccompania,
       NVL(NVL(b.tipocuenta,c.tipocuenta),d.tipocuenta) AS tipocuenta,
       NVL(NVL(b.canalventa,c.canalventa),d.canalventa) AS canalventa,
       NVL(NVL(b.dealer,c.dealer),d.dealer) AS dealer,
       NVL(NVL(b.tipopersona,c.tipopersona),d.tipopersona) AS tipopersona,
       NVL(NVL(b.segmento,c.segmento),d.segmento) AS segmento,
       NVL(NVL(b.tipocompania,c.tipocompania),d.tipocompania) AS tipocompania,
       NVL(NVL(b.codigocompania,c.codigocompania),d.codigocompania) AS codigocompania,
       NVL(NVL(b.consultor,c.consultor),d.consultor) AS consultor,
       NVL(NVL(b.provincia,c.provincia),d.provincia) AS provincia,
       NVL(NVL(b.departamento,c.departamento),d.departamento) AS departamento,
       NVL(NVL(b.fechacreacion,c.fechacreacion),d.fechacreacion) AS fechacreacion,
       NVL(obtener_tipodoc(a.ruc),obtener_tipodoc(NVL(NVL(b.ruccompania,c.ruccompania),d.ruccompania))) as tipodocumento,
       a.company_type,
       a.periodo,
       row_number () over (partition by a.invoice_number order by NVL(NVL(b.fechacreacion,c.fechacreacion),d.fechacreacion) desc) as rn
  FROM (SELECT X.*,CASE WHEN instr(x.code,'.',1,3)=0 AND instr(x.code,'.',1,2) <>0
                        THEN FN_DECODIFICA_CUENTA(x.code)||'.00.00.1000'||SUBSTR(x.code,-2,2)
                        ELSE x.code END n_code
          FROM temp_fa_registroventa_a x) a,
       p_compania b,
       p_compania c,
       p_compania d
WHERE FN_DECODIFICA_CUENTA(A.N_CODE)=B.CUENTACOMPANIA (+) AND
       a.ruc=c.ruccompania(+) AND
       a.company=d.razonsocial(+)
       ) where rn=1;
       commit;

DELETE  FROM fa_registroventa_historico_t WHERE periodo=SANHO||SMES and ciclo=SCICLO;
COMMIT;

INSERT INTO fa_registroventa_historico_t
(
INVOICE_NUMBER,CODE,COMPANY,INVOICE_DATE,SYSTEM_ACCESS, FEATURES_OPTIONS,DATA_SERVICES,ADD_CHARGES,DISC_PROM,DISPATCH,
INTERCONNECT,NAT_LD,INAT_LD,INSURANCE,OCC, LATE_PAYMENT,SALES_VALUE,IGV,EQUIPMENT,OHINVAMT,
COMPUTE_0022,RUC,ROAMING,OCC_REP_GN,CDI_ACC, CDI_EXC,CICLO,RUCCOMPANIA,TIPOCUENTA,CANALVENTA,
DEALER,TIPOPERSONA,TIPODOCUMENTO,SEGMENTO,TIPOCOMPANIA, CODIGOCOMPANIA,CONSULTOR,
EQ_TOTAL,EQBAFI,EQBAM,EQ3G,EQACTIVOS,EQSUSPENDIDOS,EQDESACTIVADOS,CANT_DESAC_PORT,
PROVINCIA,DEPARTAMENTO,COMPANY_TYPE,
PERIODO,TIPO_CUENTA,FACTURABLE
)
SELECT
    A.INVOICE_NUMBER,A.CODE,A.COMPANY,A.INVOICE_DATE,A.SYSTEM_ACCESS,A.FEATURES_OPTIONS,A.DATA_SERVICES,A.ADD_CHARGES,A.DISC_PROM,A.DISPATCH,
    A.INTERCONNECT,A.NAT_LD,A.INAT_LD,A.INSURANCE,A.OCC,A.LATE_PAYMENT,A.SALES_VALUE,A.IGV,A.EQUIPMENT,A.OHINVAMT,
    A.COMPUTE_0022,A.RUC,A.ROAMING,A.OCC_REP_GN,A.CDI_ACC,A.CDI_EXC,A.CICLO,A.ruccompania,A.tipocuenta,A.canalventa,
    A.dealer,A.tipopersona,NVL(obtener_tipodoc_2(a.RUC),obtener_tipodoc_2(A.ruccompania)) as tipodocumento,A.segmento,A.tipocompania,A.codigocompania,A.consultor AS consultor,
    NVL(B.EQTOTAL,0) EQTOTAL,NVL(B.EQBAFI,0) EQBAFI,NVL(B.EQBAM,0) EQBAM,NVL(B.EQ3G,0) EQ3G,
    NVL(B.EQACTIVOS,0) EQACTIVOS,NVL(B.EQSUSPENDIDOS,0) EQSUSPENDIDOS,NVL(B.EQDESACTIVADOS,0) EQDESACTIVADOS,NVL(D.cant_desac_port,0) CANT_DESAC_PORT,
    A.provincia,A.departamento,A.COMPANY_TYPE,
    A.PERIODO,DECODE(NVL(C.cuenta,'-'),'-','-','EXCLUIR')AS tipo_cuenta, CASE WHEN A.SYSTEM_ACCESS>0 AND A.SALES_VALUE>0 AND A.OHINVAMT>0 THEN 'SI' ELSE 'NO' END AS FACTURABLE
FROM
    (SELECT * FROM TEMP_FA_REGISTROVENTA_B) A,
    (
    select
        M.NUMEROCUENTARESPONSABLE,
        COUNT(1) EQTOTAL,
        SUM(CASE WHEN M.estadocontrato IN ('Activo')  THEN 1 ELSE 0 END) EQACTIVOS,
        SUM(CASE WHEN M.estadocontrato IN ('Suspendido')  THEN 1 ELSE 0 END) EQSUSPENDIDOS,
        SUM(CASE WHEN M.estadocontrato IN ('Desactivado') THEN 1 ELSE 0 END) EQDESACTIVADOS,
        SUM(CASE WHEN M.product = 'Internet Hogar Post' THEN 1 ELSE 0 END) EQBAFI,
        SUM(CASE WHEN M.product = 'IN Post' THEN 1 ELSE 0 END) EQBAM,
        SUM(CASE WHEN M.product not in  ('IN Post','Internet Hogar Post') THEN 1 ELSE 0 END) EQ3G
    from p_fotoequipos_ciclo M,
    pm_planes N
    where
        M.codigoplantarifariobscs=N.c_plan (+) and
        M.periodo = SANHO||SMES and M.ciclo_foto = SCICLO and
        UPPER(M.tipoplan)<>'FULL PREPAGO' and UPPER(M.PLANTARIFARIO) NOT LIKE '%PACK SIM%' and N.t_plan='Comercial'
    group by M.NUMEROCUENTARESPONSABLE
    ) B,
    (SELECT * FROM fa_cuentas_excluir) C,
    (
    SELECT codigocompania,COUNT(DISTINCT c_contrato) cant_desac_port
    FROM
        (SELECT a.*,b.rtabasic,b.product
         FROM   ods_med.w_med_inar@pods_lm a ,
                pm_planes b
         WHERE  a.c_plan=b.c_plan(+)
        )
    WHERE   to_char(fechadesactivacion,'yyyymmdd')>SANHO||SMES||DECODE(SCICLO,'01','01','03','15','04','08','05','22') and
            to_char(fechadesactivacion,'yyyymmdd')<=to_char(add_months(to_date(SANHO||SMES,'yyyymm'),1),'yyyymm')||DECODE(SCICLO,'01','01','03','15','04','08','05','22') and
            estadoinar in ('ADDOF','NEWOF','DEAC','FCHURN','DEOF') and
            UPPER(motivo) like UPPER('%solicita portabilidad%') and
            rtabasic>0 and n_plan<>'Pack SIM' and
            codigocuenta not like '%3.457%'
    GROUP BY    codigocompania
    ) D
WHERE A.code=B.NUMEROCUENTARESPONSABLE(+) AND
                A.code=C.cuenta (+) AND
                A.codigocompania=D.codigocompania (+);
COMMIT;

delete from FA_REPORTERVRESUMEN_T where periodo=SANHO||SMES and ciclo=SCICLO;

insert into FA_REPORTERVRESUMEN_T
  ( periodo,system_access,cdi_acc,data_services,insurance,dispatch,cdi_exc,interconnect,add_charges,nat_ld,inat_ld,roaming,
    features_options,disc_prom,occ,late_payment,sales_value,igv,equipment,ohinvamt,occ_rep_gn,ciclo,tipodocumento,cantidadrecibos,
    segmento,provincia,departamento,tipocompania,company_type,tipo_cuenta,facturable)
  select a.periodo,
       sum(a.system_access) system_access,
       sum(a.cdi_acc) cdi_acc,
       sum(a.data_services) data_services,
       sum(a.insurance) insurance,
       sum(a.dispatch) dispatch,
       sum(a.cdi_exc) cdi_exc,
       sum(a.interconnect) interconnect,
       sum(a.add_charges) add_charges,
       sum(a.nat_ld) nat_ld,
       sum(a.inat_ld) inat_ld,
       sum(a.roaming) roaming,
       sum(a.features_options) features_options,
       sum(a.disc_prom) disc_prom,
       sum(a.occ) occ,
       sum(a.late_payment) late_payment,
       sum(a.sales_value) sales_value,
       sum(a.igv) igv,
       sum(a.equipment) equipment,
       sum(a.ohinvamt) ohinvamt,
       sum(a.occ_rep_gn) occ_rep_gn,
       a.ciclo,a.tipodocumento,count(a.invoice_number),
       nvl(A.SEGMENTO,'N/A') SEGMENTO,
       CASE
         WHEN a.PROVINCIA='LIMA'
         OR a.PROVINCIA  ='CALLAO'
         THEN 'LIMA'
         WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
         THEN 'PROVINCIA'
         ELSE 'N/A'
      END provincia,NVL(A.DEPARTAMENTO,'N/A') DEPARTAMENTO,
      a.TIPOCOMPANIA,
      a.COMPANY_TYPE,
      a.TIPO_CUENTA,
      a.FACTURABLE
  from FA_REGISTROVENTA_HISTORICO_T a
  WHERE a.periodo=SANHO||SMES and a.ciclo=SCICLO
  group by a.periodo,a.ciclo,a.tipodocumento,nvl(A.SEGMENTO,'N/A'),
       CASE
         WHEN a.PROVINCIA='LIMA'
         OR a.PROVINCIA  ='CALLAO'
         THEN 'LIMA'
         WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
         THEN 'PROVINCIA'
         ELSE 'N/A'
      END,NVL(A.DEPARTAMENTO,'N/A'),
      a.TIPOCOMPANIA,a.COMPANY_TYPE,a.TIPO_CUENTA,a.FACTURABLE;
commit;

end PROCESARREGISTROVENTA;

PROCEDURE CARTEO_RESULTADOS(pcursor  OUT t_cursor) IS
BEGIN

OPEN PCURSOR FOR
    SELECT /*PARALLEL(5)*/a.code cuenta_occ
         , TRIM(INA.c_cuenta) cuenta
         , a.amount
         , a.occ_date
         , a.sncode
         , a.description
         , a.company
         , INA.fechaactivacion
         , INA.fechadesactivacion
         , INA.contrato
         , INA.telefono
         , INA.ruccompania
         , DECODE(INA.ruccompania, NULL, NULL,obtener_tipodoc_2(INA.ruccompania)) tipo_doc

         , CASE WHEN DIG.periodo IS NULL AND AFP.periodo IS NULL THEN '-'
                WHEN DIG.periodo = AFP.periodo THEN 'Digital y Físico'
                WHEN NVL(DIG.periodo,0)> NVL(AFP.periodo,0) THEN 'Digital'
                WHEN NVL(AFP.periodo,0)> NVL(DIG.periodo,0) THEN 'Físico' END tipo_recibo

         , CASE WHEN NVL(DIG.periodo,0)>= NVL(AFP.periodo,0) THEN DIG.periodo END digital_periodo
         , CASE WHEN NVL(DIG.periodo,0)>= NVL(AFP.periodo,0) THEN DIG.saludo END digital_saludo
         , CASE WHEN NVL(DIG.periodo,0)>= NVL(AFP.periodo,0) THEN DIG.correo END digital_correo

         , CASE WHEN NVL(AFP.periodo,0)>= NVL(DIG.periodo,0) THEN AFP.periodo END fisico_periodo
         , CASE WHEN NVL(AFP.periodo,0)>= NVL(DIG.periodo,0) THEN 'AFP.saludo' END fisico_saludo
         , CASE WHEN NVL(AFP.periodo,0)>= NVL(DIG.periodo,0) THEN AFP.direccion END fisico_direccion
         , CASE WHEN NVL(AFP.periodo,0)>= NVL(DIG.periodo,0) THEN AFP.distrito END fisico_distrito
         , CASE WHEN NVL(AFP.periodo,0)>= NVL(DIG.periodo,0) THEN AFP.provincia END fisico_provincia
         , CASE WHEN NVL(AFP.periodo,0)>= NVL(DIG.periodo,0) THEN AFP.departamento END fisico_departamento
      FROM FA_CARTEO_OCC2 A
      LEFT JOIN (SELECT * FROM P_INAR WHERE estadoinar IN ('DEAC','ADDOF','NEWOF') )INA
        ON SUBSTR(TRIM(a.description),-9) = SUBSTR(TRIM(ina.telefono),-9)
           AND INSTR( TRIM(INA.c_cuenta) , TRIM(A.code) ) = 1
      LEFT JOIN (    SELECT *
                       FROM(SELECT codcuenta
                                 , compania
                                 , saludo
                                 , correo
                                 , ciclo
                                 , periodo
                                -- , esdireccionerronea
                                 , row_number() over (PARTITION BY codcuenta ORDER BY periodo desc)rn
                              FROM fa_hpextreme_electronica
                            ) WHERE RN =1
                )  DIG
        ON TRIM(INA.c_cuenta) = DIG.codcuenta
      LEFT JOIN (SELECT *
                   FROM(SELECT codcuenta
                             , compania
                             , 'saludo'
                             , direccion
                             , distrito
                             , provincia
                             , departamento
                             , ciclo
                             , periodo
                             , row_number() over (PARTITION BY codcuenta ORDER BY periodo desc)rn
                          FROM fa_hpextreme_fisica
                        ) WHERE RN =1) AFP
        ON TRIM(INA.c_cuenta) = AFP.codcuenta;

END CARTEO_RESULTADOS;

PROCEDURE PROCESARREPORTEOCC(SANHO VARCHAR2,SMES VARCHAR2, SCICLO VARCHAR2)
IS
   --
   -- exec PROCESARREPORTEOCC;
   -- Purpose: This procedure has been built in order to process OCC documents, then we obtain a classified dataset and a table summary
   --
   -- MODIFICATION HISTORY
   -- Person      Date        Comments
   -- ---------   ----------  -------------------------------------------
   -- cchahuas     09/08/2017  Creación.
BEGIN
DELETE FROM FA_OCC_PRUEBA WHERE MES=(SANHO||SMES) and ciclo LIKE DECODE(SCICLO,'0','%%',SCICLO);

update TEMP_FA_OCCTOTAL_A set code=RPAD(code,10,'0') where substr(code,1,1)='1' and length(code)<10;
update TEMP_FA_OCCTOTAL_A set code=RPAD(code,4,'0') where substr(code,1,1)='2' and length(code)<4;
update TEMP_FA_OCCTOTAL_A set code=RPAD(code,5,'0') where substr(code,1,1)='3' and length(code)<5;
update TEMP_FA_OCCTOTAL_A set code=RPAD(code,7,'0') where substr(code,1,1)='5' and length(code)<7;
commit;

insert into FA_OCC_PRUEBA (cuenta,razonsocial,validodesde,descripcion,monto,fecha,tipo,nombreusuario,usuario,fueaplicado,reasoncode,sncode,
tipoincidente,tipoocc,ciclo,motivo,montoigv,cod_incidente,denominacion,tipodocumento,cantidad3g,cantidadbandaancha,cantidad2g,clasificacion,provincia,departamento,segmento,
codigocompania,ruccompania,tipocuenta,canalventa,consultor,dealer,esexoneracion,distrito,codigocontratobscs,mes,penalidad_motivo_desact,promocion_clasificacion)
select code,company,valid_from,description,amount,occ_date,type,username,usuario,aplicado,reason_code,sncode,
tipoincidente,tipoocc,ciclo,motivo,montoigv,cod_incidente,denominacion,tipodocumento,cantidad3g,cantidadbandaancha,cantidad2g,clasificacion,provincia,departamento,segmento,
codigocompania,ruccompania,tipocuenta,canalventa,consultor,dealer,esexoneracion,distrito,codigocontratobscs,mes,penalidad_motivo_desact,
promocion_clasificacion
from(
select code,company,valid_from,description,amount,occ_date,type,username,usuario,aplicado,reason_code,sncode,
tipoincidente,tipoocc,ciclo,'-' as motivo,montoigv,cod_incidente,denominacion,tipodocumento,cant3G as cantidad3g,0 as cantidadbandaancha,cant2G as cantidad2g,clasificacion,provincia,departamento,segmento,
codigocompania,ruccompania,tipocuenta,canalventa,consultor,dealer,'-' as esexoneracion,distrito,'-' as codigocontratobscs,mes,'-' as penalidad_motivo_desact,
promocion_clasificacion,
row_number () over (partition by id order by id desc) rn from (
select x.*,
        NVL(z1.tipoincidente,'-') as tipoincidente,
        z2.CANT3G,
        z2.CANT2G,
        z2.CLASIFICACION ,
        CASE WHEN denominacion = 'PROMOCIONES' THEN fn_fa_occ_promocion(x.description)
        ELSE '-' END promocion_clasificacion
        from (
        select id,code,company,valid_from,description,amount,
            occ_date,type,username,usuario,aplicado,
            reason_code,sncode,ciclo,mes,denominacion,
            cuenta,montoigv,tipoocc,ruccompania,tipocuenta,
            canalventa,dealer,tipopersona,segmento,tipocompania,
            codigocompania,consultor,distrito,provincia,departamento,
            fechacreacion,tipodocumento ,
            CASE
                  WHEN LENGTH(TRIM(NVL(SUBSTR(regexp_substr(UPPER(description), 'INC.(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)'),-8),'-')))=8 THEN TRIM(NVL(SUBSTR(regexp_substr(UPPER(description), 'INC.(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)'),-8),'-'))
                  WHEN LENGTH(TRIM(NVL(SUBSTR(regexp_substr(UPPER(description), 'INC  (\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)'),-8),'-')))=8 THEN TRIM(NVL(SUBSTR(regexp_substr(UPPER(description), 'INC  (\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)'),-8),'-'))
                  WHEN LENGTH(TRIM(NVL(SUBSTR(regexp_substr(UPPER(description), 'INC\..(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)'),-8),'-')))=8 THEN TRIM(NVL(SUBSTR(regexp_substr(UPPER(description), 'INC\..(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)'),-8),'-'))
                  WHEN LENGTH(TRIM(NVL(SUBSTR(regexp_substr(UPPER(description), 'INCD.(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)'),-8),'-')))=8 THEN TRIM(NVL(SUBSTR(regexp_substr(UPPER(description), 'INCD.(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)'),-8),'-'))
                  WHEN LENGTH(TRIM(NVL(SUBSTR(regexp_substr(UPPER(description), 'INCID.(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)'),-8),'-')))=8 THEN TRIM(NVL(SUBSTR(regexp_substr(UPPER(description), 'INCID.(\d)(\d)(\d)(\d)(\d)(\d)(\d)(\d)'),-8),'-'))
                  ELSE '-1' END cod_incidente
            from (
            select distinct
            a.id ,
            a.code, a.company, a.valid_from, a.description, a.amount,
            a.occ_date, a.type, a.username, a.usuario, a.aplicado,
            a.reason_code, a.sncode, a.ciclo,
            a.periodo as mes,
             fn_fa_occ_denominacion(a.description, a.sncode, a.reason_code, a.type) as denominacion,
             CASE WHEN (LENGTH(a.code)<10 AND a.code LIKE '1.%') THEN a.code||'0'
             WHEN (LENGTH(a.code)<6 AND a.code LIKE '4.%') THEN a.code||'0'
             WHEN (LENGTH(a.code)<7 AND a.code LIKE '5.%') THEN a.code||'0'
             ELSE a.code
             END as cuenta,
             CASE WHEN (a.type = 'TAXABLE') THEN (TO_NUMBER (a.amount))
             WHEN (a.type = 'NON-TAX') THEN (TO_NUMBER (a.amount) / 1.18)
             END as montoigv,
             CASE WHEN (a.description LIKE '%OCCAC%') THEN 'Acuerdos Comerciales'
             WHEN (a.description LIKE '°%' OR a.description LIKE 'Transf Saldo%' OR a.description LIKE 'Ajuste MMS with text only%' OR a.description LIKE 'Descuento
excesos Modem 3G%' OR a.description LIKE '%Ajuste Mensajeria%') THEN 'Masivas'
             WHEN (a.description LIKE '%Inc%' AND a.description NOT LIKE '%Inc. de%' OR a.description LIKE 'extorno cargo%') THEN 'Manuales'
             ELSE 'Sistemas'
             END as tipoocc,
             NVL(b.ruccompania,c.ruccompania) AS ruccompania,
             NVL(b.tipocuenta,c.tipocuenta) AS tipocuenta,
             NVL(b.canalventa,c.canalventa) AS canalventa,
             NVL(b.dealer,c.dealer) AS dealer,
             NVL(b.tipopersona,c.tipopersona) AS tipopersona,
             NVL(b.segmento,c.segmento) AS segmento,
             NVL(b.tipocompania,c.tipocompania) AS tipocompania,
             NVL(b.codigocompania,c.codigocompania) AS codigocompania,
             NVL(b.consultor,c.consultor) AS consultor,
             NVL(b.distrito,c.distrito) AS distrito,
             NVL(b.provincia,c.provincia) AS provincia,
             NVL(b.departamento,c.departamento) AS departamento,
             NVL(b.fechacreacion,c.fechacreacion) AS fechacreacion,
             obtener_tipodoc_2(NVL(b.ruccompania,c.ruccompania)) as tipodocumento,
             row_number () over (partition by a.id order by NVL(b.fechacreacion,c.fechacreacion) desc) rn
             from TEMP_FA_OCCTOTAL_A a,
            p_compania b,
            p_compania c
            WHERE FN_DECODIFICA_CUENTA(A.CODE)=B.CUENTACOMPANIA (+) AND
                   a.company=c.razonsocial(+)
            order by id asc
            )  where rn=1

            ) x,
             (select * from p_incidentes) z1,
             (
                SELECT numerocuentaresponsable,CANT3G,CANT2G,
                                CASE WHEN CANT3G<>0 AND CANT2G<>0 THEN 'MIXTO'
                                WHEN CANT3G<>0 AND CANT2G=0 THEN '3G'
                                WHEN CANT3G=0 AND CANT2G<>0 THEN '2G' END Clasificacion FROM (
                    SELECT a.numerocuentaresponsable ,
                                SUM(CASE WHEN a.product IN ('Non PTT Post','IN Post','HP PTT Post','Banda Ancha','Non PTT Prepago','IN Pre','Fijo Movil Prepago','Internet Hogar Post') THEN 1
                                ELSE 0 END) CANT3G,
                                SUM(CASE WHEN a.product IN ('iDen Post','iDen Pre') THEN 1
                                ELSE 0 END) CANT2G
                      /*FROM fotoequipos a*/
                      FROM (select * from p_fotoequipos_historico where periodo='201711') a
                      WHERE a.estadocontrato IN ('Activo','Suspendido')
                      GROUP BY a.numerocuentaresponsable
              )
              ) z2
             WHERE
              to_number(x.cod_incidente)=z1.codigoincidente (+) AND
              x.code=z2.numerocuentaresponsable (+)
)
) where rn=1;
commit;

update FA_OCC_PRUEBA set cuenta=RPAD(cuenta,10,'0') where substr(cuenta,1,1)='1' and length(cuenta)<10 and MES=(SANHO||SMES) and ciclo LIKE DECODE(SCICLO,'0','%%',SCICLO);
update FA_OCC_PRUEBA set cuenta=RPAD(cuenta,4,'0') where substr(cuenta,1,1)='2' and length(cuenta)<4 and MES=(SANHO||SMES) and ciclo LIKE DECODE(SCICLO,'0','%%',SCICLO);
update FA_OCC_PRUEBA set cuenta=RPAD(cuenta,5,'0') where substr(cuenta,1,1)='3' and length(cuenta)<5 and MES=(SANHO||SMES) and ciclo LIKE DECODE(SCICLO,'0','%%',SCICLO);
update FA_OCC_PRUEBA set cuenta=RPAD(cuenta,7,'0') where substr(cuenta,1,1)='5' and length(cuenta)<7 and MES=(SANHO||SMES) and ciclo LIKE DECODE(SCICLO,'0','%%',SCICLO);
commit;

MERGE INTO fa_occ_prueba  A
     USING (SELECT codigocuentacompania, telefono, motivodesactivacion, fechadesactivacioncontrato
              FROM
                (SELECT codigocuentacompania, SUBSTR(telefono,-9) telefono, motivodesactivacion, fechadesactivacioncontrato
                     , row_number()OVER (PARTITION BY codigocuentacompania, SUBSTR(telefono,-9)
                                             ORDER BY fechadesactivacioncontrato desc) RN
                  FROM FA_OCC_MOTIV_DESACTIVACION )
             WHERE RN = 1 ) B
       ON (fn_decodifica_cuenta(A.cuenta) = B.codigocuentacompania  AND INSTR(A.descripcion, B.telefono) > 0)
     WHEN MATCHED THEN UPDATE SET A.penalidad_motivo_desact = B.motivodesactivacion
    WHERE A.denominacion = 'PENALIDADES'
      AND A.mes = sanho||smes
      AND A.CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
      AND INSTR(A.descripcion,'P.') = 0;
    COMMIT;

    MERGE INTO fa_occ_prueba  A
     USING (SELECT codigocuentacompania, telefono, motivodesactivacion, fechadesactivacioncontrato
              FROM
                (SELECT codigocuentacompania, SUBSTR(telefono,-9) telefono, motivodesactivacion, fechadesactivacioncontrato
                     , row_number()OVER (PARTITION BY SUBSTR(telefono,-9)
                                             ORDER BY fechadesactivacioncontrato desc) RN
                  FROM FA_OCC_MOTIV_DESACTIVACION )
             WHERE RN = 1 ) B
       ON (SUBSTR(TRIM(A.descripcion),-9) = B.telefono)--(fn_decodifica_cuenta(A.cuenta) = B.codigocuentacompania  AND INSTR(A.descripcion, B.telefono) > 0)
     WHEN MATCHED THEN UPDATE SET A.penalidad_motivo_desact = B.motivodesactivacion
    WHERE A.denominacion = 'PENALIDADES'
      AND A.mes = sanho||smes
      AND A.CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
      AND INSTR(A.descripcion,'P.') = 0
      AND A.penalidad_motivo_desact IS NULL;
    COMMIT;

     UPDATE fa_occ_prueba a
       SET penalidad_motivo_desact = 'Orden con Cargo al Recibo'
     WHERE A.denominacion = 'PENALIDADES'
       AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
       AND mes = sanho||smes
       AND INSTR(A.descripcion,'P.') > 0;
    COMMIT;

update  fa_occ_prueba set promocion_clasificacion='Beneficio MEC' where UPPER(DESCRIPCION) like '%BENEFICIO MEC%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='DESCUENTO TLV' where UPPER(DESCRIPCION) like '%DESCUENTO TLV%' or UPPER(DESCRIPCION) like '%DSCTO TELEVENTAS MES%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='Descuento Promocional' where UPPER(DESCRIPCION) like '%DESCUENTO PROMOCIONAL%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='BENEFICIO SURA' where UPPER(DESCRIPCION) like '%BENEFICIO SURA%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='Promocion Internet Hogar Empleados' where UPPER(DESCRIPCION) like '%PROMOCION INTERNET HOGAR EMPLEADOS%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='Descuento SD' where UPPER(DESCRIPCION) like '%DESCUENTO SD%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='Aplicacion de Pago por Adelanto Renta Basica Postpago Simple' where UPPER(DESCRIPCION) like '%APLICACION DE PAGO POR ADELANTO RENTA BASICA POSTPAGO SIMPLE%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='Descuento.Especial CHIP EMPRESAS' where UPPER(DESCRIPCION) like '%DESCUENTO%%CHIP%%EMPRESAS%%PLUS%' or UPPER(DESCRIPCION) like '%PROMOC%%ESPECIAL%%CHIP%%EMPRESAS%%PLUS%' or UPPER(DESCRIPCION) like '%PROMOC%%CHIP%%EMPRESAS%%2015%' or UPPER(DESCRIPCION) like '%PROMOC%%CHIP%%EMPRESAS%%2016%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='Descuento EP49C' where UPPER(DESCRIPCION) like '%DESCUENTO EP49C%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='Descuento EP55C' where UPPER(DESCRIPCION) like '%DESCUENTO EP55C%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='BAFI' where UPPER(DESCRIPCION) like '%PROMOC%%DSCTO%%BAF%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='Promocion descuento MDM' where UPPER(DESCRIPCION) like '%PROMOCION DESCUENTO MDM%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='DSCTO DUO FIJO  MES' where UPPER(DESCRIPCION) like '%DSCTO DUO FIJO MES%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='DSCTO SATISFACCION MES' where UPPER(DESCRIPCION) like '%DSCTO SATISFACCION MES%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='Pago anticipado por dias prorrateados previos al primer cargo fijo' where UPPER(DESCRIPCION) like '%PAGO ANTICIPADO POR DIAS PRORRATEADOS PREVIOS AL PRIMER CARGO FIJO%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='Seguimiento de Ruta' where UPPER(DESCRIPCION) like '%SEGUIMIENTO DE RUTA%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='Cargo Bolsa Celular' where UPPER(DESCRIPCION) like '%ACTIVADA%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='Promoción 25 % 50 %' where UPPER(DESCRIPCION) like '%DSCTO%%1RA%%LINEA%%ADICIONAL%' or UPPER(DESCRIPCION) like '%DSCTO%%2DA%%LINEA%%MES%' or UPPER(DESCRIPCION) like 'DSCTO CARGO FIJO' or UPPER(DESCRIPCION) like 'DSCTO%%2DA%%LINEA%%ADICIONAL' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
update  fa_occ_prueba set promocion_clasificacion='Promoción 25 % 50 % Empresas' where UPPER(DESCRIPCION) like '%PROMOC%%2DA%%LINEA%%ADICIONAL%' AND CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO) AND mes = sanho||smes;
commit;

delete from FA_REPORTEOCC_RESUMEN2
where to_char(mes,'yyyymm')=(SANHO||SMES) and ciclo LIKE DECODE(SCICLO,'0','%%',SCICLO);

 INSERT
INTO FA_REPORTEOCC_RESUMEN2
   (
      MES, CICLO, MONTO, CLASIFICACION, DENOMINACION, TIPODOCUMENTO,
      CANTIDAD, PROVINCIA, SEGMENTO, DEPARTAMENTO, NATURALACCOUNT,TIPO
   )
  select MES, CICLO, MONTO, CLASIFICACION, DENOMINACION, TIPODOCUMENTO,
      CANTIDAD, PROVINCIA, SEGMENTO, DEPARTAMENTO, NATURALACCOUNT,TIPO from  (
SELECT  to_date(SANHO  ||SMES,'yyyymm') mes,A.CICLO, SUM(ROUND(TO_NUMBER(monto),3)) MONTO,
NVL(   clasificacion,'N/A') clasificacion,denominacion, tipodocumento,COUNT(1)   CANTIDAD,
   CASE
      WHEN a.PROVINCIA='LIMA'
      OR a.PROVINCIA  ='CALLAO'
      THEN 'LIMA'
      WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
      THEN 'PROVINCIA'
      ELSE 'N/A'
   END provincia,NVL(A.SEGMENTO,'N/A') SEGMENTO,NVL(A.DEPARTAMENTO,'N/A')
   DEPARTAMENTO,NVL(C.TIPO,'N/A') NATURALACCOUNT,A.TIPO
FROM FA_OCC_prueba a
LEFT JOIN FA_GLCODES b        ON A.sncode         =b.descripcion
LEFT JOIN FA_NATURALACCOUNT c ON b.naturalaccount =c.naturalaccount
WHERE  a.mes = sanho||smes AND a.CICLO LIKE DECODE(SCICLO,'0','%%',SCICLO)
GROUP BY  to_date(SANHO  ||SMES,'yyyymm') ,NVL(clasificacion,'N/A'),denominacion,tipodocumento,
   CASE
      WHEN a.PROVINCIA='LIMA'
      OR a.PROVINCIA  ='CALLAO'
      THEN 'LIMA'
      WHEN a.PROVINCIA NOT IN ('CALLAO','LIMA')
      THEN 'PROVINCIA'
      ELSE 'N/A'
   END,A.SEGMENTO,NVL(A.SEGMENTO,'N/A'),NVL(A.DEPARTAMENTO,'N/A') ,NVL(C.TIPO,
   'N/A'),A.CICLO,A.TIPO
   );
   COMMIT;

END PROCESARREPORTEOCC;

PROCEDURE CARGAPROCESOSORTEOBASE
IS
   --
   -- exec CARGAPROCESOSORTEOBASE;
   -- Purpose: This procedure has been built in order to load and pre-process data of campaign lotteries
   --
   -- MODIFICATION HISTORY
   -- Person      Date        Comments
   -- ---------   ----------  -------------------------------------------
   -- cchahuas     11/09/2017  Creación.
BEGIN

delete from FA_TMP_BASESORTEO_BASEMAIL where codigocompania='CODIGOCOMPANIA';
COMMIT;
UPDATE FA_TMP_BASESORTEO_BASEMAIL SET fechasorteo=sysdate WHERE fechasorteo is null;
COMMIT;
UPDATE FA_TMP_BASESORTEO_BASEMAIL SET estadosorteo='NG' WHERE estadosorteo is null;
COMMIT;
UPDATE FA_TMP_BASESORTEO_BASEMAIL SET antiguedad='NUEVO' WHERE antiguedad is null;
COMMIT;
UPDATE FA_BASESORTEO_BASEMAIL SET ANTIGUEDAD='ANTIGUO' WHERE ANTIGUEDAD='NUEVO';
COMMIT;
delete from FA_TMP_BASESORTEO_BASEMAIL where codigocompania='CODIGOCOMPANIA';
COMMIT;
DELETE FROM FA_BASESORTEO_BASEMAIL WHERE to_char(TO_DATE(FECHASORTEO,'DD/MM/YY'),'yyyymmdd')=TO_CHAR(SYSDATE,'YYYYMMDD');
COMMIT;
INSERT INTO FA_BASESORTEO_BASEMAIL
(CODIGOCOMPANIA,NUMCUENTA,TIPODOCUMENTO,RUCCOMPANIA,RAZONSOCIAL,PROVINCIA,DEPARTAMENTO,DISTRITO,
MAIL,CICLO,TIPOPERSONA,FECHABASE,ESTADOCONTRATO,GRUPO,ESTADOCOBRANZA,TELEFONO,ESTADOSORTEO,FECHASORTEO,ORDEN,ANTIGUEDAD)
SELECT CODIGOCOMPANIA,NUMCUENTA,TIPODOCUMENTO,RUCCOMPANIA,RAZONSOCIAL,PROVINCIA,DEPARTAMENTO,DISTRITO,
MAIL,CICLO,TIPOPERSONA,FECHABASE,ESTADOCONTRATO,GRUPO,ESTADOCOBRANZA,TELEFONO,ESTADOSORTEO,FECHASORTEO,ORDEN,ANTIGUEDAD
FROM FA_TMP_BASESORTEO_BASEMAIL;
COMMIT;
END CARGAPROCESOSORTEOBASE;



PROCEDURE GENERAREPORTEAFILIADOSCONCIL2(ad_fecha DATE) IS
BEGIN

-- PROPÓSITO:
-- Generar reportes finales de conciliacion SOLO para el mes actual
-- (utiliza solo FOTOEQUIPOS - Mes Actual)
--
-- HISTORIAL DE MODIFICACION
-- Usuario                      Fecha          Comentario
-- ----------                   ---------      ----------------------
-- CCHAHUAS                     01/02/2014      Creacion
-- FSEQUEIROS                   26/01/2018      Actualizacion (BAFI)
-- FESPINOZA                    26/01/2018      Revision
-- --------------------------------------------------------------------------

    ---Hoja Base 01
    ------------------------------------------------
    DELETE FROM ods_gpf.fa_mdl_afiliados_acumu_res_3 WHERE periodo=TO_CHAR(ADD_MONTHS(ad_fecha,1),'yyyymm');
    DELETE FROM ods_gpf.fa_mdl_afiliados_acumu_res_3 WHERE periodo=TO_CHAR(ad_fecha,'yyyymm') AND categoria NOT LIKE 'AFILIADOS%';
    COMMIT;
    --[1] AFILIADOS Act (a inicio de mes)
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad, grupo, categoria, subcategoria, periodo, base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS Grupo, 'AFILIADOS ACT' AS Categoria, 'TOTAL' AS Subcategoria,
           TO_CHAR(ADD_MONTHS(ad_fecha, 1), 'yyyymm') AS PERIODO , '1' AS BASE
      FROM ods_gpf.fa_mdl_afiliados_mes_det_b01
     WHERE activ = 'SI'
       AND periodo = TO_CHAR(ad_fecha, 'yyyymm');
    COMMIT;
    --BIFURCADO TOTAL INTERNET/MOVILES
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad, grupo, categoria, subcategoria, periodo, base)
    SELECT COUNT(DISTINCT codigocompania) AS CANTIDAD,'ACTIVOS' AS GRUPO,'AFILIADOS ACT' AS CATEGORIA,
           clasif AS SUBCATEGORIA, TO_CHAR(ADD_MONTHS(ad_fecha, 1), 'yyyymm')  AS PERIODO,'1' AS BASE
      FROM (SELECT b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS CONTRATOS,
                   SUM(DECODE(a.product,'Internet Hogar Post',1,0)) SUMABAFI,
                   CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                   THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END CLASIF
              FROM ods_gpf.fotoequipos a,
                   ods_gpf.fa_mdl_afiliados_mes_det_b01 b
             WHERE a.codigocompania(+)=b.codigocompania
               AND b.periodo=TO_CHAR(ad_fecha,'yyyymm')
               AND b.base='01'
               AND b.activ='SI'
             GROUP BY b.codigocompania)
     GROUP BY clasif;
    COMMIT;

    --PORTA/NO PORTA
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompania) AS CANTIDAD,'ACTIVOS' AS GRUPO,'AFILIADOS ACT' AS CATEGORIA,
           a.portabilidad,TO_CHAR(ADD_MONTHS(ad_fecha,1),'yyyymm') AS periodo,'1' AS BASE
      FROM (SELECT a.codigocompania,DECODE(NVL(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad
              FROM ods_gpf.fa_mdl_afiliados_mes_det_b01 a,
                   (SELECT b.codigocompania, count(1) AS regs
                      FROM ods_gpf.tnp_portabilidad a,
                           ods_gpf.fotoequipos b
                     WHERE a.inicio_rango=b.telefono
                       AND a.mensaje='SPR'
                     GROUP BY b.codigocompania) b
             WHERE a.codigocompania = b.codigocompania(+)
               AND a.activ = 'SI'
               AND a.periodo = TO_CHAR(ad_fecha,'yyyymm')) a
     GROUP BY a.portabilidad;
    COMMIT;

    --BIFURCADO PORTA/NO PORTA
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompaniatel) AS cantidad, 'ACTIVOS' AS grupo, 'AFILIADOS ACT' AS categoria,
           DECODE(clasif, 'INTERNET',DECODE(NVL(b.codigocompania, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
           DECODE(NVL(b.codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta')) AS subcategoria,
           TO_CHAR(ADD_MONTHS(ad_fecha, 1), 'yyyymm') AS periodo, '1' AS base
      FROM (SELECT a.codigocompaniatel, a.periodo, a.base, nvl(b.clasif,'MOVILES') AS clasif
              FROM (SELECT base, periodo, TO_NUMBER(codigocompania) AS codigocompaniatel
                      FROM ods_gpf.fa_mdl_afiliados_mes_det_b01
                     WHERE periodo = TO_CHAR(ad_fecha, 'yyyymm')
                       AND base  = '01'
                       AND activ = 'SI') a,
                   (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS CONTRATOS,
                           SUM(DECODE(a.product, 'Internet Hogar Post', 1, 0)) SUMABAFI,
                           CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product, 'Internet Hogar Post', 1, 0))
                                THEN 'INTERNET' ELSE 'MOVILES'END CLASIF
                      FROM ods_gpf.fotoequipos a,
                           ods_gpf.pm_planes b
                     WHERE a.codigoplantarifariobscs = b.c_plan
                       AND UPPER(a.product) LIKE '%POST%'
                       AND b.t_plan          = 'Comercial'
                       AND a.estadocontrato IN ('Activo', 'Suspendido')
                     GROUP BY a.periodo, a.codigocompania) b
             WHERE a.codigocompaniatel = b.codigocompania(+)) a,
           (SELECT z.codigocompania, count(1) AS regs
              FROM (SELECT *
                      FROM ods_gpf.tnp_portabilidad
                     WHERE mensaje = 'SPR') x,
                   ods_gpf.fotoequipos z
             WHERE x.inicio_rango = z.telefono
             GROUP BY z.codigocompania) b
     WHERE a.codigocompaniatel = b.codigocompania(+)
     GROUP BY DECODE(clasif, 'INTERNET', DECODE(NVL(b.codigocompania, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
           DECODE(NVL(b.codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta'));
    COMMIT;

     --LIMA/PROVINCIAS
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad, grupo, categoria, subcategoria, periodo, base)
    SELECT COUNT(DISTINCT a.codigocompania) AS CANTIDAD,'ACTIVOS' AS GRUPO,'AFILIADOS ACT' AS CATEGORIA,
           DECODE(b.region,'LIMA','LIMA','PROVINCIAS') AS Subcategoria, TO_CHAR(ADD_MONTHS(ad_fecha,1),'yyyymm') AS periodo,'1' AS BASE
      FROM ods_gpf.fa_mdl_afiliados_mes_det_b01 a,
           ods_gpf.fotoequipos b
     WHERE a.codigocompania=b.codigocompania
       AND a.activ ='SI'
       AND a.periodo =TO_CHAR(ad_fecha,'yyyymm')
     GROUP BY DECODE(b.region,'LIMA','LIMA','PROVINCIAS');
    COMMIT;
    --BIFURCADO LIMA/PROVINCIAS
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS CANTIDAD, 'ACTIVOS' AS GRUPO, 'AFILIADOS ACT' AS CATEGORIA, clasif AS SUBCATEGORIA,
           TO_CHAR(ADD_MONTHS(ad_fecha, 1), 'yyyymm') AS PERIODO, '1' AS BASE
      FROM (SELECT b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS CONTRATOS,
                   SUM(DECODE(a.product, 'Internet Hogar Post',1, 0)) AS SUMABAFI,
                   CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product, 'Internet Hogar Post', 1, 0))
                        THEN DECODE(a.region,'LIMA','INTERNET LIMA','INTERNET PROVINCIAS')
                        ELSE DECODE(a.region,'LIMA','MOVILES LIMA','MOVILES PROVINCIAS')
                   END clasif
              FROM ods_gpf.fotoequipos a,
                   ods_gpf.fa_mdl_afiliados_mes_det_b01 b
             WHERE a.codigocompania(+) = b.codigocompania
               AND B.PERIODO = TO_CHAR(AD_FECHA, 'yyyymm')
               AND b.base = '01'
               AND b.activ = 'SI'
             GROUP BY  b.codigocompania, a.region)
     GROUP BY CLASIF;
    COMMIT;

    --[2] NUEVOS AFIL Act ---------------------------------------------------------------------------------------
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'NUEVOS AFIL ACT' AS Categoria,'TOTAL' AS Subcategoria,
           TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
      FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
     WHERE grafica  ='Superior'
       AND periodo=TO_CHAR(ad_fecha,'yyyymm')
       AND base   ='01';
    COMMIT;

    --BIFURCADO NUEVOS AFIL TOTAL
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS grupo,'NUEVOS AFIL ACT' AS categoria,
           clasif AS subcategoria, periodo, '1' AS base
      FROM (SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                   SUM(DECODE(A.PRODUCT,'Internet Hogar Post',1,0)) sumabafi,
                   CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                        THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
              FROM ods_gpf.fotoequipos a,
                   ods_gpf.fa_mdl_afiliados_mes_det_nvo b
             WHERE b.codigocompania=a.codigocompania(+)
               AND B.periodo = TO_CHAR(ad_fecha,'yyyymm')
               AND B.base = '01'
               AND B.grafica = 'Superior'
               AND B.activ = 'SI'
             GROUP BY b.periodo, b.codigocompania)
     GROUP BY clasif, periodo;
    COMMIT;

    --VENTA/POSTVENTA
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'NUEVOS AFIL ACT' AS Categoria,
           DECODE(NVL(b.codigocompania,'1'),'1','En venta','Post venta') AS Subcategoria, TO_CHAR(ad_fecha,'yyyymm') AS periodo,
           '1' AS base
      FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo a,
           (SELECT codigocompania, count(1) AS regs
              FROM ods_gpf.p_incidentes
             WHERE RESOLUCIONINCIDENTE IN ('ENVIO DE  RECIBO SOLO POR MAIL', 'ENVIO DE RECIBOS POR MAIL Y FISICO',
                   'SE ENVIA RECIBO POR CORREO', 'SE ENVIA RECIBO POR MAIL', 'SE ENVÍA RECIBO POR MAIL')
               AND especificacionincidente IN('ENVIO DE RECIBO POR MAIL', 'ENVÍO DE RECIBOS POR MAIL', 'ENVIO DE RECIBOS POR MAIL')
               AND tipoincidente = 'PEDIDO'
               AND estadoincidente = 'Cerrado'
               AND TO_CHAR(fechaingresoincidente,'yyyymm')=TO_CHAR(ad_fecha,'yyyymm')
             GROUP BY codigocompania) b
     WHERE a.codigocompania=b.codigocompania(+)
       AND a.grafica ='Superior'
       AND a.periodo =TO_CHAR(ad_fecha,'yyyymm')
       AND a.base ='01'
     GROUP BY DECODE(NVL(b.codigocompania,'1'),'1','En venta','Post venta');
    COMMIT;

    --BIFURCADO VENTA/POSTVENTA
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompaniatel) AS cantidad,'ACTIVOS' AS grupo,'NUEVOS AFIL ACT' AS categoria,
           DECODE(a.clasif, 'INTERNET', DECODE(NVL(b.codigocompania,'1'),'1','INTERNET En venta','INTERNET Post venta'),
           DECODE(NVL(b.codigocompania,'1'),'1','MOVILES En venta','MOVILES Post venta')) AS subcategoria,
           TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
      FROM (SELECT a.codigocompaniatel,a.grafica,a.periodo,a.base,nvl(b.clasif,'MOVILES') AS clasif
              FROM (SELECT grafica,base,periodo,TO_NUMBER(codigocompania) AS codigocompaniatel
                      FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
                     WHERE periodo = TO_CHAR(ad_fecha,'yyyymm')
                       AND grafica = 'Superior'--Superior => activo + suspendido // Inferior => desactivado ,
                       AND base = '01') a,
                   (SELECT a.periodo,a.codigocompania,COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                           SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                           CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                                THEN 'INTERNET' ELSE 'MOVILES' END clasif
                      FROM ods_gpf.fotoequipos a,
                           ods_gpf.pm_planes b
                     WHERE a.codigoplantarifariobscs=b.c_plan
                       AND UPPER(a.product) LIKE '%POST%'
                       AND b.t_plan = 'Comercial'
                       AND a.estadocontrato IN ('Activo','Suspendido')
                     GROUP BY a.periodo,a.codigocompania) b
             WHERE a.codigocompaniatel=b.codigocompania(+)) a,
           (SELECT codigocompania, COUNT(1) AS regs
              FROM ods_gpf.p_incidentes
             WHERE resolucionincidente IN ('ENVIO DE  RECIBO SOLO POR MAIL', 'ENVIO DE RECIBOS POR MAIL Y FISICO',
                   'SE ENVIA RECIBO POR CORREO', 'SE ENVIA RECIBO POR MAIL', 'SE ENVÍA RECIBO POR MAIL')
               AND especificacionincidente IN ('ENVIO DE RECIBO POR MAIL', 'ENVÍO DE RECIBOS POR MAIL', 'ENVIO DE RECIBOS POR MAIL')
               AND tipoincidente = 'PEDIDO'
               AND estadoincidente ='Cerrado'
               AND TO_CHAR(fechaingresoincidente,'yyyymm') = TO_CHAR(ad_fecha,'yyyymm')
             GROUP BY codigocompania) b
     WHERE a.codigocompaniatel = b.codigocompania(+)
     GROUP BY DECODE(a.clasif, 'INTERNET', DECODE(NVL(b.codigocompania,'1'),'1','INTERNET En venta','INTERNET Post venta'),
           DECODE(NVL(b.codigocompania,'1'),'1','MOVILES En venta','MOVILES Post venta')) ;
    COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'NUEVOS AFIL ACT' AS Categoria,
           portabilidad AS Subcategoria,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
      FROM (SELECT a.codigocompania,DECODE(NVL(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad
              FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo a,
                   (SELECT b.codigocompania, count(1) AS regs
                       FROM (SELECT *
                               FROM ods_gpf.tnp_portabilidad
                              WHERE mensaje='SPR') a,
                            ods_gpf.fotoequipos b
                      WHERE a.inicio_rango=b.telefono
                      GROUP BY b.codigocompania) b
             WHERE a.codigocompania=b.codigocompania(+)
               AND a.grafica  ='Superior'
               AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
               AND a.base='01')
     GROUP BY portabilidad;
    COMMIT;

    --BIFURCADO PORTA/NO PORTA
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompaniatel) AS cantidad, 'ACTIVOS' AS grupo, 'NUEVOS AFIL ACT' AS categoria,
           DECODE(clasif, 'INTERNET', DECODE(NVL(b.codigocompania, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
           DECODE(NVL(b.codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta')) AS subcategoria,
           TO_CHAR(ad_fecha, 'yyyymm') AS periodo, '1' AS base
      FROM (SELECT a.codigocompaniatel, a.periodo, a.base, nvl(b.clasif,'MOVILES') AS clasif, a.grafica
              FROM (SELECT grafica,base, periodo, TO_NUMBER(codigocompania) AS codigocompaniatel
                      FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
                     WHERE periodo = TO_CHAR(ad_fecha,'yyyymm')
                       AND base  = '01'
                       AND activ = 'SI') a,
                   (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                           SUM(DECODE(a.product, 'Internet Hogar Post', 1, 0)) sumabafi,
                           CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product, 'Internet Hogar Post', 1, 0))
                                THEN 'INTERNET' ELSE 'MOVILES' END clasif
                      FROM ods_gpf.fotoequipos a,
                           ods_gpf.pm_planes b
                     WHERE a.codigoplantarifariobscs = b.c_plan
                       AND UPPER(A.PRODUCT) LIKE '%POST%'
                       AND b.t_plan = 'Comercial'
                       AND a.estadocontrato IN ('Activo', 'Suspendido')
                     GROUP BY a.periodo, a.codigocompania) b
             WHERE a.codigocompaniatel = b.codigocompania(+)) a,
           (SELECT z.codigocompania, count(1) AS regs
              FROM (SELECT *
                      FROM ods_gpf.tnp_portabilidad
                     WHERE mensaje = 'SPR') x,
                   ods_gpf.fotoequipos z
             WHERE x.inicio_rango = z.telefono
             GROUP BY z.codigocompania) b
     WHERE a.codigocompaniatel = b.codigocompania(+)
       AND a.grafica ='Superior'
       AND a.periodo = TO_CHAR(ad_fecha,'yyyymm')
       AND a.base = '01'
     GROUP BY DECODE(clasif, 'INTERNET', DECODE(NVL(b.codigocompania, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
           DECODE(NVL(b.codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta'));
    COMMIT;

    --lima provincias
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'NUEVOS AFIL ACT' AS Categoria,
           DECODE(b.region,'LIMA','LIMA','PROVINCIAS') AS subcategoria, TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
      FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo a,
           ods_gpf.p_compania b
     WHERE a.codigocompania=b.codigocompania
       AND grafica = 'Superior'
       AND periodo = TO_CHAR(ad_fecha,'yyyymm')
       AND base = '01'
     GROUP BY DECODE(b.region,'LIMA','LIMA','PROVINCIAS');
    COMMIT;

    --BIFURCARDO LIMA PROVINCIAS
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS grupo,'NUEVOS AFIL ACT' AS categoria,
           clasif AS subcategoria, periodo, '1' AS BASE
      FROM (SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                   SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                   CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                        THEN DECODE(a.region,'LIMA','INTERNET LIMA', 'INTERNET PROVINCIAS') ELSE
                        DECODE(a.region,'LIMA','MOVILES LIMA','MOVILES PROVINCIAS') END clasif
              FROM ods_gpf.fotoequipos a,
                   ods_gpf.fa_mdl_afiliados_mes_det_nvo b
             WHERE a.codigocompania(+)=b.codigocompania
               AND b.periodo =TO_CHAR(ad_fecha,'yyyymm')
               AND b.base ='01'
               AND b.activ ='SI'
               AND b.grafica ='Superior'
             GROUP BY b.periodo, b.codigocompania, a.region)
     GROUP BY clasif, periodo;
    COMMIT;

    --[3] REMAINING------------------------------------------------------------------------------
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'REMAINING ACT' AS Categoria,
           'TOTAL' AS Subcategoria,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
      FROM ods_gpf.fa_mdl_afiliados_mes_det_rem
     WHERE grafica  = 'Superior'
       AND periodo = TO_CHAR(ad_fecha,'yyyymm')
       AND base = '01';
    COMMIT;

    --BIFURCADO TOTAL REMAINING
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS grupo,'REMAINING ACT' AS categoria,
           clasif AS subcategoria, periodo, '1' AS base
      FROM (SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                   SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                   CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                        THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL'END CLASIF
              FROM ods_gpf.fotoequipos a,
                   ods_gpf.fa_mdl_afiliados_mes_det_rem b
             WHERE a.codigocompania(+)=b.codigocompania
               AND b.periodo =TO_CHAR(ad_fecha,'yyyymm')
               AND b.base ='01'
               AND b.grafica ='Superior'
               AND b.activ ='SI'
             GROUP BY b.periodo, b.codigocompania)
     GROUP BY clasif, periodo;
    COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'REMAINING ACT' AS Categoria,
           portabilidad AS Subcategoria,TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
      FROM (SELECT a.codigocompania,DECODE(NVL(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad
              FROM ods_gpf.fa_mdl_afiliados_mes_det_rem a,
                   (SELECT z.codigocompania, count(1) AS regs
                      FROM (SELECT *
                              FROM ods_gpf.tnp_portabilidad
                             WHERE mensaje = 'SPR') x,
                           ods_gpf.fotoequipos z
                     WHERE x.inicio_rango = z.telefono
                     GROUP BY z.codigocompania) b
            WHERE a.codigocompania = b.codigocompania(+)
              AND a.grafica  ='Superior'
              AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
              AND a.base   ='01')
     GROUP BY portabilidad;
    COMMIT;

    --BIFURCADO PORTA/NO PORTA
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompaniatel) AS cantidad, 'ACTIVOS' AS grupo, 'REMAINING ACT' AS categoria,
           DECODE(clasif, 'INTERNET', DECODE(NVL(b.codigocompania, '1'), '1', 'INTERNET No Porta','INTERNET Porta'),
           DECODE(NVL(b.codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta')) AS subcategoria,
           TO_CHAR(ad_fecha, 'yyyymm') AS periodo, '1' AS base
      FROM (SELECT a.codigocompaniatel, a.periodo, a.base, b.codigocompania, nvl(b.clasif,'MOVILES') AS clasif, a.grafica
              FROM (SELECT grafica,base, periodo, TO_NUMBER(codigocompania) AS codigocompaniatel
                      FROM ods_gpf.fa_mdl_afiliados_mes_det_rem
                     WHERE periodo = TO_CHAR(ad_fecha, 'yyyymm')
                       AND base  = '01'
                       AND activ = 'SI') a,
                   (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                           SUM(DECODE(a.product, 'Internet Hogar Post', 1, 0)) sumabafi,
                           CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product, 'Internet Hogar Post', 1, 0))
                           THEN 'INTERNET' ELSE 'MOVILES' END CLASIF
                      FROM ods_gpf.fotoequipos a,
                           ods_gpf.pm_planes b
                     WHERE a.codigoplantarifariobscs = b.c_plan
                       AND UPPER(a.product) LIKE '%POST%'
                       AND b.t_plan = 'Comercial'
                       AND a.estadocontrato IN ('Activo', 'Suspendido')
                     GROUP BY a.periodo, a.codigocompania) b
             WHERE a.codigocompaniatel = b.codigocompania(+)) A,
           (SELECT z.codigocompania, count(1) AS regs
              FROM (SELECT *
                      FROM ods_gpf.tnp_portabilidad
                     WHERE mensaje = 'SPR') x,
                   ods_gpf.fotoequipos z
             WHERE x.inicio_rango = z.telefono
             GROUP BY z.codigocompania) b
     WHERE a.codigocompania = b.codigocompania(+)
       AND a.grafica='Superior'
       AND a.periodo= TO_CHAR(ad_fecha, 'yyyymm')
       AND a.base= '01'
     GROUP BY DECODE(clasif, 'INTERNET', DECODE(NVL(b.codigocompania, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
           DECODE(NVL(b.codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta'));
    COMMIT;

    --[4] DESAFILIADOS Act
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS Grupo,'DESAFILIADOS ACT' AS Categoria,
           'TOTAL' AS Subcategoria, TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
      FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
     WHERE grafica='Superior'
       AND periodo=TO_CHAR(ad_fecha,'yyyymm')
       AND base='01';
    COMMIT;

    --BIFURCADO TOTAL DESAFILIADOS
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS grupo,'DESAFILIADOS ACT' AS categoria,
           clasif AS subcategoria, periodo, '1' AS BASE
      FROM (SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                   SUM(DECODE(a.product,'Internet Hogar Post',1,0)) SUMABAFI,
                   CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                   THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
              FROM ods_gpf.fotoequipos a,
                   ods_gpf.fa_mdl_afiliados_mes_det_deac b
             WHERE b.codigocompania=a.codigocompania(+)
               AND b.periodo=TO_CHAR(ad_fecha,'yyyymm')
               AND b.base='01'
               AND b.grafica='Superior'
               --AND b.activ='SI'
             GROUP BY b.periodo, b.codigocompania)
     GROUP BY clasif, periodo;
    COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'DESAFILIADOS ACT' AS Categoria,
           portabilidad AS Subcategoria,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
      FROM (SELECT a.codigocompania, DECODE(NVL(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad
              FROM fa_mdl_afiliados_mes_det_deac a,
                   (SELECT z.codigocompania, count(1) AS regs
                      FROM (SELECT *
                              FROM ods_gpf.tnp_portabilidad
                             WHERE mensaje = 'SPR') x,
                           ods_gpf.fotoequipos z
                     WHERE x.inicio_rango = z.telefono
                     GROUP BY z.codigocompania) b
             WHERE a.codigocompania=b.codigocompania(+)
               AND a.grafica = 'Superior'
               AND a.periodo = TO_CHAR(ad_fecha,'yyyymm')
               AND a.base = '01')
     GROUP BY portabilidad;
    COMMIT;

    --BIFURCADO PORTA/NO PORTA
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT a.codigocompaniatel) AS cantidad, 'ACTIVOS' AS grupo, 'DESAFILIADOS ACT' AS categoria,
           DECODE(clasif, 'INTERNET', DECODE(NVL(b.codigocompania, '1'), '1', 'INTERNET No Porta','INTERNET Porta'),
           DECODE(NVL(b.codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta')) AS subcategoria,
           TO_CHAR(ad_fecha, 'yyyymm') AS periodo, '1' AS base
      FROM (SELECT a.codigocompaniatel, a.periodo, a.base, b.codigocompania, nvl(b.clasif,'MOVILES') AS clasif, a.grafica
              FROM (SELECT grafica,base, periodo, TO_NUMBER(codigocompania) AS codigocompaniatel
                      FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
                     WHERE periodo = TO_CHAR(ad_fecha, 'yyyymm')
                       AND grafica ='Superior'
                       AND base  = '01') a,
                   (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                           SUM(DECODE(a.product, 'Internet Hogar Post', 1, 0)) sumabafi,
                           CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product, 'Internet Hogar Post', 1, 0))
                           THEN 'INTERNET' ELSE 'MOVILES' END CLASIF
                      FROM ods_gpf.fotoequipos a,
                           ods_gpf.pm_planes b
                     WHERE a.codigoplantarifariobscs = b.c_plan
                       AND UPPER(a.product) LIKE '%POST%'
                       AND b.t_plan = 'Comercial'
                       AND a.estadocontrato IN ('Activo', 'Suspendido')
                     GROUP BY a.periodo, a.codigocompania) b
             WHERE a.codigocompaniatel = b.codigocompania(+)) a,
           (SELECT z.codigocompania, count(1) AS regs
              FROM (SELECT *
                      FROM ods_gpf.tnp_portabilidad
                     WHERE mensaje = 'SPR') x,
                   ods_gpf.fotoequipos z
             WHERE x.inicio_rango = z.telefono
             GROUP BY z.codigocompania) b
     WHERE a.codigocompaniatel = b.codigocompania(+)
     GROUP BY DECODE(CLASIF, 'INTERNET', DECODE(NVL(B.CODIGOCOMPANIA, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
           DECODE(NVL(B.CODIGOCOMPANIA, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta'));
    COMMIT;

    --LIMA/PROVINCIAS
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT a.codigocompania) AS cantidad, 'ACTIVOS' AS Grupo, 'DESAFILIADOS ACT' AS Categoria,
            DECODE(b.region,'LIMA','LIMA','PROVINCIAS') AS Subcategoria, TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_deac a, ods_gpf.fotoequipos b
     WHERE a.codigocompania=b.codigocompania (+)
       AND grafica ='Superior'
       AND a.periodo =TO_CHAR(ad_fecha,'yyyymm')
       AND base ='01'
     GROUP BY DECODE(b.region,'LIMA','LIMA','PROVINCIAS');
     COMMIT;

    --BIFURCADO LIMA PROVINCIAS DESAFILIADOS
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS grupo,'DESAFILIADOS ACT' AS categoria, clasif AS subcategoria,
           periodo, '1' AS base
        FROM (SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
              CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                   THEN DECODE(a.region,'LIMA','INTERNET LIMA', 'INTERNET PROVINCIAS') ELSE DECODE(a.region,'LIMA','MOVILES LIMA','MOVILES PROVINCIAS')
              END clasif
                 FROM ods_gpf.fotoequipos a, ods_gpf.fa_mdl_afiliados_mes_det_deac b
                 WHERE a.codigocompania(+)=b.codigocompania
                   AND B.periodo =TO_CHAR(ad_fecha,'yyyymm')
                   AND B.base ='01'
                   AND b.grafica ='Superior'
                 GROUP BY b.periodo, b.codigocompania, a.region)
     GROUP BY periodo,clasif;
     COMMIT;

    --[5] AFILIADOS Desact (a inicio de mes)
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS Grupo, 'AFILIADOS DESACT' AS Categoria, 'TOTAL' AS Subcategoria,
           TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo, '1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_b01
    WHERE activ='NO'
      AND periodo=TO_CHAR(ad_fecha,'yyyymm');
    COMMIT;

    --BIFURCADO AFILIADOS DESACT TOTAL
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompaniatel) AS CANTIDAD, 'DESACTIVADOS'  AS grupo,   'AFILIADOS DESACT' AS categoria,
           DECODE(NVL(c_compan, '1'),'1', 'MOVILES TOTAL', DECODE(clasif, 'INTERNET', 'INTERNET TOTAL', 'MOVILES TOTAL')) AS subcategoria,
           TO_CHAR(add_months(ad_fecha,1),'yyyymm')AS PERIODO,'1' AS BASE
        FROM (SELECT a.codigocompaniatel, a.periodo, a.base, c.c_compan, c.clasif
                FROM (SELECT base, periodo, TO_NUMBER(codigocompania) AS codigocompaniatel
                        FROM ods_gpf.fa_mdl_afiliados_mes_det_b01
                       WHERE periodo = TO_CHAR(ad_fecha, 'yyyymm')
                         AND base = '01'
                         AND activ = 'NO') A,
             (SELECT codigocompania, COUNT(1) AS regs
                FROM tnp_portabilidad a, fotoequipos b
              WHERE a.inicio_rango = b.telefono
                AND mensaje = 'SPR'
              GROUP BY codigocompania) b,
             (SELECT a.c_compan, COUNT(DISTINCT a.contrato) AS contratos, SUM(DECODE(a.tipo,'Internet Hogar Post',1,0)) sumabafi,
                     CASE WHEN COUNT(DISTINCT a.contrato) = SUM(DECODE(a.tipo,'Internet Hogar Post',1,0)) THEN 'INTERNET' ELSE 'MOVILES' END clasif
                FROM p_inar a
              WHERE UPPER(a.tipo) LIKE '%POST%'
                AND deacs <> 0
              GROUP BY a.c_compan) C
      WHERE a.codigocompaniatel = b.codigocompania (+)
        AND a.codigocompaniatel =c.c_compan(+))
      GROUP BY DECODE(NVL(c_compan, '1'),'1', 'MOVILES TOTAL', DECODE(clasif, 'INTERNET', 'INTERNET TOTAL', 'MOVILES TOTAL'));
      COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS Grupo, 'AFILIADOS DESACT' AS Categoria,
           portabilidad AS Subcategoria, TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo, '1' AS base
        FROM (SELECT a.codigocompania, DECODE(NVL(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad
                FROM ods_gpf.fa_mdl_afiliados_mes_det_b01 a,
                (SELECT z.codigocompania, COUNT(1)
                     FROM ods_gpf.tnp_portabilidad x, ods_gpf.fotoequipos z
                  WHERE x.inicio_rango =z.telefono
                    AND x.mensaje ='SPR'
                  GROUP BY z.codigocompania) b
               WHERE a.codigocompania =b.codigocompania(+)
                 AND a.activ ='NO'
                 AND a.periodo =TO_CHAR(ad_fecha,'yyyymm'))
     GROUP BY PORTABILIDAD;
     COMMIT;

    --BIFURCADO PORTA/NO PORTA DESACTIVADOS
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompaniatel) AS cantidad, 'DESACTIVADOS'  AS grupo,   'AFILIADOS DESACT' AS categoria,
           DECODE(clasif, 'INTERNET', DECODE(NVL(codigocompania, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
           DECODE(NVL(codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta')) AS subcategoria,
           TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'1' AS base
        FROM(SELECT a.codigocompaniatel, a.periodo, a.base, c.c_compan, c.clasif, b.codigocompania
                 FROM (SELECT base, periodo, TO_NUMBER(codigocompania) AS codigocompaniatel
                           FROM ods_gpf.fa_mdl_afiliados_mes_det_b01
                        WHERE periodo = TO_CHAR(ad_fecha, 'yyyymm')
                          AND base = '01'
                          AND activ = 'NO') A,
                      (SELECT codigocompania, COUNT(1) AS regs
                           FROM ods_gpf.tnp_portabilidad a, ods_gpf.fotoequipos b
                        WHERE a.inicio_rango = b.telefono
                          AND mensaje          = 'SPR'
                        GROUP BY codigocompania) B,
                      (SELECT a.c_compan, COUNT(DISTINCT a.contrato) AS contratos, SUM(DECODE(a.tipo,'Internet Hogar Post',1,0)) sumabafi,
                              CASE WHEN COUNT(DISTINCT a.contrato) = SUM(DECODE(a.tipo,'Internet Hogar Post',1,0)) THEN 'INTERNET' ELSE 'MOVILES' END clasif
                           FROM ods_gpf.p_inar A
                        WHERE UPPER(a.tipo) LIKE '%POST%'
                          AND DEACS <> 0
                        GROUP BY A.c_compan) C
              WHERE a.codigocompaniatel = b.codigocompania (+)
                AND a.codigocompaniatel =c.c_compan(+))
     GROUP BY DECODE(clasif, 'INTERNET', DECODE(NVL(codigocompania, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
             DECODE(NVL(codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta'));
     COMMIT;

    --[6] NUEVOS AFIL Desact
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS Grupo, 'NUEVOS AFIL DESACT' AS Categoria, 'TOTAL' AS Subcategoria,
           TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
     WHERE grafica='Inferior'
       AND periodo =TO_CHAR(ad_fecha,'yyyymm')
       AND base ='01';
     COMMIT;

    --BIFURCADO NUEVOS AFIL DESACT TOTAL/NO TOTAL
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'NUEVOS AFIL DESACT' AS categoria, clasif AS subcategoria, periodo, '1' AS base
        FROM (SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                     CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                     THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
                  FROM ods_gpf.fotoequipos a, ods_gpf.fa_mdl_afiliados_mes_det_nvo b
               WHERE A.codigocompania(+)=B.codigocompania
                 AND B.periodo =TO_CHAR(ad_fecha,'yyyymm')
                 AND B.base ='01'
                 AND B.grafica ='Inferior'
               GROUP BY b.periodo, b.codigocompania)
     GROUP BY clasif, periodo;
     COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS Grupo, 'NUEVOS AFIL DESACT' AS Categoria,
           portabilidad AS Subcategoria, TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
        FROM (SELECT a.codigocompania, DECODE(NVL(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo a,
                    (SELECT z.codigocompania, count(1)
                         FROM ods_gpf.tnp_portabilidad x, ods_gpf.fotoequipos z
                      WHERE x.inicio_rango =z.telefono
                        AND x.mensaje='SPR'
                      GROUP BY z.codigocompania) b
               WHERE a.codigocompania =b.codigocompania(+)
                 AND a.grafica ='Inferior'
                 AND a.periodo =TO_CHAR(ad_fecha,'yyyymm')
                 AND a.base ='01')
     GROUP BY portabilidad;
     COMMIT;

    --BIFURCADO PORTA/NO PORTA
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompaniatel) AS cantidad, 'DESACTIVADOS'  AS grupo,   'NUEVOS AFIL DESACT' AS categoria,
           DECODE(clasif, 'INTERNET', DECODE(NVL(codigocompania, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
           DECODE(NVL(codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta')) AS subcategoria,
           TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM(SELECT a.codigocompaniatel, a.periodo, a.base, c.c_compan, c.clasif, b.codigocompania
                 FROM (SELECT base, periodo, TO_NUMBER(codigocompania) AS codigocompaniatel
                           FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
                        WHERE periodo = TO_CHAR(ad_fecha, 'yyyymm')
                          AND grafica ='Inferior'
                          AND base      = '01') a,
                      (SELECT codigocompania, COUNT(1) AS regs
                           FROM ods_gpf.tnp_portabilidad a, ods_gpf.fotoequipos b
                        WHERE a.inicio_rango = b.telefono
                          AND mensaje = 'SPR'
                        GROUP BY codigocompania) b,
                      (SELECT a.c_compan, COUNT(DISTINCT a.contrato) AS contratos, SUM(DECODE(a.tipo,'Internet Hogar Post',1,0)) sumabafi,
                              CASE WHEN COUNT(DISTINCT a.contrato) = SUM(DECODE(a.tipo,'Internet Hogar Post',1,0)) THEN 'INTERNET' ELSE 'MOVILES' END clasif
                           FROM ods_gpf.p_inar a
                        WHERE UPPER(a.tipo) LIKE '%POST%'
                          AND deacs <> 0
                        GROUP BY a.c_compan) c
          WHERE a.codigocompaniatel = b.codigocompania (+)
          AND a.codigocompaniatel =c.c_compan(+))
     GROUP BY DECODE(clasif, 'INTERNET', DECODE(NVL(codigocompania, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
              DECODE(NVL(codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta'));
     COMMIT;

    --[7] REMAINING
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS Grupo, 'REMAINING DESACT' AS Categoria, 'TOTAL' AS Subcategoria,
           TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
        FROM FA_MDL_AFILIADOS_MES_DET_REM
     WHERE grafica ='Inferior'
       AND periodo =TO_CHAR(ad_fecha,'yyyymm')
       AND base ='01';
     COMMIT;

    --BIFURCADO REMAINING TOTAL
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'REMAINING DESACT' AS categoria, nvl(clasif,'MOVILES TOTAL') AS subcategoria,
           periodo, '1' AS base
        FROM (SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                     CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                     THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
                  FROM fotoequipos a, fa_mdl_afiliados_mes_det_rem b
               WHERE A.codigocompania(+)=b.codigocompania
                 AND B.periodo =TO_CHAR(ad_fecha,'yyyymm')
                 AND B.base ='01'
                 AND B.grafica ='Inferior'
                 AND B.activ ='NO'
               GROUP BY b.periodo, b.codigocompania)
     GROUP BY CLASIF, periodo;
     COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS Grupo, 'REMAINING DESACT' AS Categoria, portabilidad AS Subcategoria,
           TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
        FROM (SELECT a.codigocompania, DECODE(NVL(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_rem a,
                       (SELECT b.codigocompania, COUNT(1)
                            FROM ods_gpf.tnp_portabilidad a, ods_gpf.fotoequipos b
                         WHERE a.inicio_rango =b.telefono
                           AND mensaje='SPR'
                         GROUP BY b.codigocompania) b
               WHERE a.codigocompania=b.codigocompania (+)
                 AND a.grafica ='Inferior'
                 AND a.periodo =TO_CHAR(ad_fecha,'yyyymm')
                 AND a.base ='01')
     GROUP BY PORTABILIDAD;
     COMMIT;

    --BIFURCADO PORTA/NO PORTA
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompaniatel) AS cantidad, 'DESACTIVADOS'  AS grupo,   'REMAINING DESACT' AS categoria,
           DECODE(clasif, 'INTERNET', DECODE(NVL(CODIGOCOMPANIA, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
           DECODE(NVL(codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta')) AS subcategoria,
           TO_CHAR(ad_fecha, 'yyyymm') AS periodo,'1'AS base
        FROM(SELECT a.codigocompaniatel, a.periodo, a.base, c.c_compan, c.clasif, b.codigocompania
                 FROM(SELECT base, periodo, TO_NUMBER(codigocompania) AS codigocompaniatel
                          FROM fa_mdl_afiliados_mes_det_rem
                       WHERE periodo = TO_CHAR(ad_fecha, 'yyyymm')
                         AND grafica ='Inferior'
                         AND base      = '01'
                         AND activ     = 'NO') A,
                     (SELECT codigocompania, COUNT(1) AS regs
                          FROM tnp_portabilidad a, fotoequipos b
                       WHERE a.inicio_rango = b.telefono
                         AND mensaje          = 'SPR'
                       GROUP BY codigocompania) B,
                     (SELECT a.c_compan, COUNT(DISTINCT a.contrato) AS contratos, SUM(DECODE(a.tipo,'Internet Hogar Post',1,0)) sumabafi,
                             CASE WHEN COUNT(DISTINCT a.contrato) = SUM(DECODE(a.tipo,'Internet Hogar Post',1,0)) THEN 'INTERNET' ELSE 'MOVILES' END clasif
                          FROM p_inar a
                       WHERE UPPER(a.tipo) LIKE '%POST%'
                         AND deacs <> 0
                       GROUP BY a.c_compan) C
              WHERE a.codigocompaniatel = b.codigocompania (+)
                AND a.codigocompaniatel =c.c_compan(+)
                AND a.periodo = TO_CHAR(ad_fecha, 'yyyymm')
                AND a.base = '01')
     GROUP BY DECODE(clasif, 'INTERNET', DECODE(NVL(codigocompania, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
               DECODE(NVL(codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta'));
     COMMIT;

    --[8] DEACS
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS Grupo, 'DESAFILIADOS DESACT' AS Categoria, 'TOTAL' AS Subcategoria,
           TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
     WHERE grafica='Inferior'
       AND periodo  =TO_CHAR(ad_fecha,'yyyymm')
       AND base     ='01';
     COMMIT;

    --BIFURCADO DESAFILIADOS
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT a.codigocompania) AS cantidad,  'DESACTIVADOS' AS GRUPO,'DESAFILIADOS DESACT' AS CATEGORIA,
           nvl(b.clasif,'MOVILES TOTAL') AS SUBCATEGORIA, a.periodo, '1' AS BASE
      FROM ods_gpf.fa_mdl_afiliados_mes_det_deac a,
           (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                   CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                   THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
              FROM ods_gpf.fotoequipos a
             WHERE upper(a.product) LIKE '%POST%'
             GROUP BY a.periodo, a.codigocompania) b
     WHERE a.codigocompania = b.codigocompania(+)
       AND a.grafica='Inferior'
       AND a.periodo  =TO_CHAR(ad_fecha,'yyyymm')
       AND a.base ='01'
     GROUP BY a.periodo, NVL(b.clasif,'MOVILES TOTAL');
     COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-' ||COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS Grupo, 'DESAFILIADOS DESACT' AS Categoria,
           portabilidad AS Subcategoria, TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
        FROM (SELECT a.codigocompania, DECODE(NVL(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_deac a,
                       (SELECT b.codigocompania, COUNT(1)
                            FROM ods_gpf.tnp_portabilidad a, ods_gpf.fotoequipos b
                         WHERE a.inicio_rango =b.telefono
                           AND mensaje='SPR'
                        GROUP BY b.codigocompania) b
               WHERE a.codigocompania =b.codigocompania(+)
                 AND a.grafica ='Inferior'
                 AND a.periodo =TO_CHAR(ad_fecha,'yyyymm')
                 AND a.base ='01')
     GROUP BY portabilidad;
     COMMIT;

    --BIFURCADO PORTA/NO PORTA
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompaniatel) AS cantidad, 'DESACTIVADOS' AS grupo, 'DESAFILIADOS DESACT' AS categoria,
           DECODE(clasif, 'INTERNET', DECODE(NVL(codigocompania, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
           DECODE(NVL(codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta')) AS subcategoria,
           TO_CHAR(ad_fecha, 'yyyymm') AS periodo,'1'AS base
        FROM(SELECT a.codigocompaniatel, a.periodo, a.base, c.c_compan, c.clasif, b.codigocompania
                 FROM(SELECT base, periodo, TO_NUMBER(codigocompania) AS codigocompaniatel
                          FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
                       WHERE periodo = TO_CHAR(ad_fecha, 'yyyymm')
                        AND grafica ='Inferior'
                        AND base      = '01') a,
            (SELECT codigocompania, COUNT(1) AS regs
                 FROM ods_gpf.tnp_portabilidad a, ods_gpf.fotoequipos b
              WHERE a.inicio_rango = b.telefono
                AND mensaje          = 'SPR'
              GROUP BY codigocompania) b,
            (SELECT a.c_compan, COUNT(DISTINCT a.contrato) AS contratos, SUM(DECODE(a.tipo,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.contrato) = SUM(DECODE(a.tipo,'Internet Hogar Post',1,0)) THEN 'INTERNET' ELSE 'MOVILES' END clasif
                 FROM ods_gpf.p_inar a
              WHERE UPPER(a.tipo) LIKE '%POST%'
                AND deacs <> 0
              GROUP BY a.c_compan) c
             WHERE a.codigocompaniatel = b.codigocompania (+)
               AND a.codigocompaniatel =c.c_compan(+)
               AND a.periodo = TO_CHAR(ad_fecha, 'yyyymm')
               AND a.base = '01')
     GROUP BY DECODE(clasif, 'INTERNET', DECODE(NVL(codigocompania, '1'), '1', 'INTERNET No Porta', 'INTERNET Porta'),
              DECODE(NVL(codigocompania, '1'), '1', 'MOVILES No Porta', 'MOVILES Porta'));
     COMMIT;

    --[9] DESAF Act VS NEWS Desact [si]
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT (DISTINCT codigocompania) AS cantidad, 'IDENTIFICACION DE DESAFILIADOS' AS Grupo, 'DESAF ACT VS NEWS DESACT' AS Categoria,
           'SI' AS Subcategoria, TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
        FROM (SELECT codigocompania
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
               WHERE grafica='Superior'
                 AND periodo  =TO_CHAR(ad_fecha,'yyyymm')
                 AND base     ='01'
              INTERSECT
              SELECT codigocompania
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
               WHERE grafica ='Inferior'
                 AND periodo =TO_CHAR(ad_fecha,'yyyymm')
                 AND base ='01');
     COMMIT;

    --BIFURCADO DESAF ACT SI
    insert into ods_gpf.fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'IDENTIFICACION DE DESAFILIADOS' AS grupo,'DESAF ACT VS NEWS DESACT' AS categoria,
           clasif AS subcategoria, periodo, '1' AS base
        FROM(SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT A.codigocompania) = SUM(DECODE(A.PRODUCT,'Internet Hogar Post',1,0))
                    THEN 'INTERNET SI' ELSE 'MOVILES SI' END CLASIF
                 FROM ods_gpf.fotoequipos a,
                      (SELECT codigocompania, periodo
                           FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
                        WHERE grafica ='Superior'
                          AND periodo =TO_CHAR(ad_fecha,'yyyymm')
                          AND base ='01'
                       INTERSECT
                       SELECT codigocompania, periodo
                           FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
                        WHERE grafica='Inferior'
                          AND periodo  =TO_CHAR(ad_fecha,'yyyymm')
                          AND base     ='01') b
              WHERE a.codigocompania(+)=b.codigocompania
              GROUP BY b.periodo, b.codigocompania)
     GROUP BY CLASIF, periodo;
     COMMIT;

    --[10] DESAF Act VS NEWS Desact [no]
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'IDENTIFICACION DE DESAFILIADOS' AS Grupo, 'DESAF ACT VS NEWS DESACT' AS Categoria,
           'NO' AS Subcategoria, TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1'  AS base
        FROM (SELECT codigocompania
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
               WHERE grafica ='Superior'
                 AND periodo =TO_CHAR(ad_fecha,'yyyymm')
                 AND base ='01'
              MINUS
              SELECT codigocompania
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
               WHERE grafica ='Inferior'
                 AND periodo =TO_CHAR(ad_fecha,'yyyymm')
                 AND base ='01');
     COMMIT;

    --BIFURCADO DESAF NO
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'IDENTIFICACION DE DESAFILIADOS' AS grupo,'DESAF ACT VS NEWS DESACT' AS categoria,
           clasif AS subcategoria, periodo, '1' AS base
        FROM(SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocompania) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET NO' ELSE 'MOVILES NO' END CLASIF
                 FROM ods_gpf.fotoequipos a,
                      (SELECT codigocompania, periodo
                           FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
                        WHERE grafica='Superior'
                          AND periodo  =TO_CHAR(ad_fecha,'yyyymm')
                          AND base     ='01'
                       MINUS
                       SELECT codigocompania, periodo
                           FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
                        WHERE grafica='Inferior'
                          AND periodo  =TO_CHAR(ad_fecha,'yyyymm')
                          AND base     ='01') B
              WHERE A.codigocompania(+)=B.codigocompania
              GROUP BY b.periodo, b.codigocompania)
     GROUP BY clasif, periodo;
     COMMIT;

    --[11] DESAF Act VS Motiv [si]
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT (DISTINCT codigocompania) AS cantidad, 'IDENTIFICACION DE DESAFILIADOS' AS Grupo, 'DESAF ACT VS MOTIV' AS Categoria,
           'SI' AS Subcategoria, TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
        FROM (SELECT codigocompania, COUNT(1)
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
               WHERE grafica ='Superior'
                 AND periodo =TO_CHAR(ad_fecha,'yyyymm')
                 AND base ='01'
               GROUP BY codigocompania,periodo
              INTERSECT
              SELECT codigocompania, COUNT(1)
                  FROM ods_gpf.fa_basedesafiliados_sd
               GROUP BY codigocompania);
     COMMIT;

    --BIFURCADO DESAF SI
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'IDENTIFICACION DE DESAFILIADOS' AS grupo,'DESAF ACT VS MOTIV' AS categoria,
           clasif AS subcategoria, TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
        FROM(SELECT b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocompania) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET SI' ELSE 'MOVILES SI' END clasif
                 FROM fotoequipos a,
                    (SELECT codigocompania, count(1)
                         FROM fa_mdl_afiliados_mes_det_deac
                      WHERE grafica ='Superior'
                        AND periodo =TO_CHAR(ad_fecha,'yyyymm')
                        AND base ='01'
                      GROUP BY codigocompania
                     INTERSECT
                     SELECT codigocompania, count(1)
                         FROM fa_basedesafiliados_sd
                      GROUP BY codigocompania) b
              WHERE A.codigocompania(+)=b.codigocompania
              GROUP BY  b.codigocompania)
     GROUP BY clasif;
     COMMIT;

    --[12] DESAF Act VS Motiv [no]
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT (DISTINCT codigocompania) AS cantidad, 'IDENTIFICACION DE DESAFILIADOS' AS Grupo, 'DESAF ACT VS MOTIV' AS Categoria,
           'NO' AS Subcategoria, TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
        FROM(SELECT codigocompania, COUNT(1)
                 FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
              WHERE grafica ='Superior'
                AND periodo =TO_CHAR(ad_fecha,'yyyymm')
                AND base ='01'
                GROUP BY codigocompania
             MINUS
             SELECT codigocompania, COUNT(1)
                 FROM ods_gpf.fa_basedesafiliados_sd
              GROUP BY codigocompania);
     COMMIT;

    --BIFURCADO DESAF NO
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'IDENTIFICACION DE DESAFILIADOS' AS grupo,'DESAF ACT VS MOTIV' AS categoria,
           nvl(clasif, 'MOVILES NO') AS subcategoria, TO_CHAR(ad_fecha,'yyyymm') as periodo, '1' AS base
        FROM(SELECT a.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocompania) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET NO' ELSE 'MOVILES NO' END CLASIF
                 FROM ods_gpf.fotoequipos a,
                      (SELECT codigocompania, count(1)
                           FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
                        WHERE grafica ='Superior'
                          AND periodo =TO_CHAR(ad_fecha,'yyyymm')
                          AND base ='01'
                       GROUP BY codigocompania
                       MINUS
                       SELECT codigocompania, count(1)
                           FROM ods_gpf.fa_basedesafiliados_sd
                        GROUP BY codigocompania) B
              WHERE a.codigocompania(+)=b.codigocompania
              GROUP BY a.periodo, b.codigocompania)
     GROUP BY clasif;
     COMMIT;

    --[13] Base Activa TOTAL POST
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ENDING' AS Grupo, 'BASE ACTIVA POST' AS Categoria,
           'TOTAL' AS Subcategoria, TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
        FROM(SELECT a.tipodoc, a.periodo, b.product, codigocompania, b.t_plan
                 FROM(SELECT periodo, codigocompania, ruccompania, codigoplantarifariobscs, estadocontrato, obtener_tipodoc_2(ruccompania) AS tipodoc
                          FROM ods_gpf.fotoequipos) a,
                     (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan FROM ods_gpf.pm_planes) B
              WHERE a.codigoplantarifariobscs=b.numeroplan
                AND estadocontrato IN ('Activo','Suspendido')
              GROUP BY a.tipodoc, a.periodo, b.product, codigocompania, t_plan)
     WHERE UPPER(product) LIKE '%POST%'
       AND t_plan = 'Comercial';
     COMMIT;

    --BIFURCADO BASE ACTIVA TOTAL POST
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT (DISTINCT codigocompania) AS cantidad, 'ENDING' AS grupo, 'BASE ACTIVA POST' AS categoria,
           clasif AS subcategoria, periodo, '1' AS base
        FROM (SELECT a.periodo, a.codigocompania, COUNT (DISTINCT a.codigocontratobscs) AS contratos,
                     SUM (DECODE (a.product, 'Internet Hogar Post', 1, 0)) sumabafi,
                     CASE WHEN COUNT (DISTINCT a.codigocontratobscs) = SUM (DECODE (a.product,'Internet Hogar Post', 1,0))
                     THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
                  FROM ods_gpf.fotoequipos a, ods_gpf.pm_planes b
               WHERE a.codigoplantarifariobscs(+) = b.c_plan
                 AND UPPER (a.product) LIKE '%POST%'
                 AND b.t_plan = 'Comercial'
                 AND a.estadocontrato IN ('Activo', 'Suspendido')
               GROUP BY a.periodo, a.codigocompania)
     GROUP BY clasif, periodo;
     COMMIT;

    --[14] Base Activa TOTAL POST DNI
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ENDING' AS Grupo, 'BASE ACTIVA POST' AS Categoria,'DNI' AS Subcategoria,
           TO_CHAR(ad_fecha,'yyyymm') AS periodo, '1' AS base
        FROM(SELECT a.tipodoc,a.periodo,b.product,codigocompania,b.t_plan
                 FROM(SELECT periodo,codigocompania,ruccompania,codigoplantarifariobscs,estadocontrato,obtener_tipodoc_2(ruccompania) as tipodoc
                          FROM ods_gpf.fotoequipos) a,
                     (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan FROM ods_gpf.pm_planes) B
                       WHERE a.codigoplantarifariobscs(+)=b.numeroplan
                         AND estadocontrato IN ('Activo','Suspendido')
                       GROUP BY a.tipodoc,a.periodo,b.product,tipodoc,codigocompania,t_plan)
              WHERE upper(product) LIKE '%POST%'
                AND tipodoc='DNI'
                AND t_plan = 'Comercial';
     COMMIT;

    --BIFURCADO BASE ENDING DNI
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ENDING' AS grupo,'BASE ACTIVA POST' AS categoria,
           clasif AS subcategoria, periodo, '1' AS BASE
        FROM (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                     CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                     THEN 'INTERNET DNI' ELSE 'MOVILES DNI' END clasif
                  FROM ods_gpf.fotoequipos a, ods_gpf.pm_planes b
               WHERE a.codigoplantarifariobscs=b.c_plan
                 AND UPPER(a.product) LIKE '%POST%'
                 AND b.t_plan='Comercial'
                 AND obtener_tipodoc_2(a.ruccompania)='DNI'
                 AND a.estadocontrato IN ('Activo','Suspendido')
               GROUP BY a.periodo, a.codigocompania)
      GROUP BY clasif, periodo;
      COMMIT;

    --[R] Base Activa TOTAL POST DNI - SEGMENTADO LIMA PROVINCIAS
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT CODIGOCOMPANIA) AS CANTIDAD, 'ENDING' AS GRUPO, 'BASE ACTIVA POST DNI' AS CATEGORIA,
           DECODE(REGION,'LIMA','LIMA','PROVINCIAS') AS SUBCATEGORIA, TO_CHAR(ad_fecha,'yyyymm') AS PERIODO, '1' AS BASE
        FROM(SELECT a.tipodoc,a.periodo,b.product,obtener_tipodoc_2(a.ruccompania) tdoc,codigocompania,b.t_plan,a.region
                 FROM(SELECT ruccompania,estadocontrato,codigocompania,region,periodo,codigoplantarifariobscs,obtener_tipodoc_2(ruccompania) AS tipodoc
                          FROM ods_gpf.fotoequipos) a,
                      (SELECT to_number(c_plan) numeroplan,n_plan,product,t_plan FROM ods_gpf.pm_planes) b
              WHERE a.codigoplantarifariobscs=b.numeroplan
                AND estadocontrato IN ('Activo','Suspendido')
              GROUP BY a.tipodoc,a.periodo,b.product,obtener_tipodoc_2(a.ruccompania),codigocompania,t_plan,a.region)
     WHERE upper(product) LIKE '%POST%'
       AND tipodoc='DNI'
       AND t_plan = 'Comercial'
     GROUP BY DECODE(region,'LIMA','LIMA','PROVINCIAS');
     COMMIT;

    --BIFURCADO LIMA/PROVINCIAS ENDING
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ENDING' AS grupo,'BASE ACTIVA POST DNI' AS categoria,
           clasif AS subcategoria, periodo,'1' AS base
        FROM (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                     CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                     THEN DECODE(a.region,'LIMA','INTERNET LIMA', 'INTERNET PROVINCIAS') ELSE DECODE(A.REGION,'LIMA','MOVILES LIMA','MOVILES PROVINCIAS')
                      END clasif
                  FROM ods_gpf.fotoequipos a, ods_gpf.pm_planes b
               WHERE a.codigoplantarifariobscs=b.c_plan
                 AND UPPER(a.product) LIKE '%POST%'
                 AND b.t_plan='Comercial'
                 AND obtener_tipodoc_2(a.ruccompania)='DNI'
                 AND a.estadocontrato IN ('Activo','Suspendido')
               GROUP BY a.periodo, a.codigocompania,a.region)
     GROUP BY clasif, periodo;
     COMMIT;

    --[R1] Base Activa TOTAL POST DNI - SEGMENTADO PORTABILIDAD
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT CODIGOCOMPANIA) AS CANTIDAD, 'ENDING' AS GRUPO, 'BASE ACTIVA POST' AS CATEGORIA, PORTABILIDAD AS SUBCATEGORIA,
           TO_CHAR(ad_fecha,'yyyymm') AS PERIODO,'1' AS base
        FROM(SELECT a.tipodoc,a.periodo,a.product,a.codigocompania,DECODE(c.numero_documento,NULL,'No Porta','Porta') portabilidad,b.t_plan
                 FROM(SELECT periodo,codigocompania,ruccompania,codigoplantarifariobscs,estadocontrato,product,obtener_tipodoc_2(ruccompania) as tipodoc
                          FROM fotoequipos) a,
                     (SELECT to_number(c_plan) numeroplan,n_plan,product,t_plan FROM pm_planes) b,
                     (SELECT numero_documento,periodo
                          FROM(SELECT a.*,row_number () over (PARTITION BY a.numero_documento,a.periodo
                                      ORDER BY to_date(fec_registro_rep,'dd/mm/yyyy hh24:mi:ss') DESC NULLS LAST) AS num_c
                                   FROM ods_gpf.tnp_portabilidad a
                                WHERE mensaje = 'SPR')
                       WHERE num_c = 1) c
              WHERE a.codigoplantarifariobscs=b.numeroplan (+)
                AND a.ruccompania =c.numero_documento (+)
                AND estadocontrato IN ('Activo','Suspendido')
                AND b.t_plan = 'Comercial')
     WHERE UPPER(PRODUCT) LIKE '%POST%'
     GROUP BY portabilidad;
     COMMIT;

    --BIFURCADO ACTIVA POST
    INSERT INTO ods_gpf.fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompania) AS cantidad, 'ENDING' AS grupo, 'BASE ACTIVA POST' AS CATEGORIA,
           DECODE(b.clasif, 'INTERNET', DECODE(a.portabilidad, 'Porta','INTERNET PORTA', 'INTERNET NO PORTA'),
           DECODE(a.portabilidad, 'Porta','MOVILES PORTA','MOVILES NO PORTA')) AS subcategoria,
           TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM(SELECT a.tipodoc,a.periodo,a.product,a.codigocompania,DECODE(c.numero_documento,NULL,'No Porta','Porta') portabilidad,b.t_plan
                     FROM(SELECT periodo,codigocompania,ruccompania,codigoplantarifariobscs,estadocontrato,product,obtener_tipodoc_2(ruccompania) as tipodoc
                              FROM ods_gpf.fotoequipos) a,
                         (SELECT to_number(c_plan) numeroplan,n_plan,product,t_plan FROM pm_planes) b,
                         (SELECT numero_documento,periodo
                              FROM(SELECT a.*,row_number () over (PARTITION BY a.numero_documento,a.periodo
                                          ORDER BY to_date(fec_registro_rep,'dd/mm/yyyy hh24:mi:ss') DESC NULLS LAST) AS num_c
                                       FROM ods_gpf.tnp_portabilidad a
                                    WHERE mensaje = 'SPR')
                           WHERE num_c = 1) c
                  WHERE a.codigoplantarifariobscs=b.numeroplan (+)
                    AND a.ruccompania =c.numero_documento (+)
                    AND estadocontrato IN ('Activo','Suspendido')
                    AND b.t_plan = 'Comercial') a,
                 (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                         CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                         THEN 'INTERNET' ELSE 'MOVILES' END clasif
                      FROM ods_gpf.fotoequipos a, pm_planes b
                  WHERE a.codigoplantarifariobscs=b.c_plan (+)
                    AND UPPER(a.product) LIKE '%POST%'
                    AND b.t_plan = 'Comercial'
                    AND a.estadocontrato IN ('Activo','Suspendido')
                  GROUP BY a.periodo, a.codigocompania) b
     WHERE a.codigocompania = b.codigocompania(+)
       AND UPPER(a.product) LIKE '%POST%'
     GROUP BY DECODE(b.clasif, 'INTERNET', DECODE(a.portabilidad, 'Porta','INTERNET PORTA', 'INTERNET NO PORTA'),
              DECODE(a.portabilidad, 'Porta','MOVILES PORTA','MOVILES NO PORTA'));
     COMMIT;

    --[R2] Base Activa TOTAL POST DNI - SEGMENTADO PORTABILIDAD
    insert into FA_MDL_AFILIADOS_ACUMU_RES_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    select count(distinct codigocompania) as cantidad,'ENDING' as Grupo,'BASE ACTIVA POST DNI' as Categoria,portabilidad as Subcategoria,
           to_char(ad_fecha,'yyyymm') as periodo,'1' as base
        from (select a.tipodoc,a.periodo,a.product,a.codigocompania,decode(c.numero_documento,null,'No Porta','Porta') portabilidad,b.t_plan
                  from (select periodo,codigocompania,ruccompania,codigoplantarifariobscs,estadocontrato,product,obtener_tipodoc_2(ruccompania) as tipodoc
                            from fotoequipos) a,
                       (select to_number(c_plan) numeroplan,n_plan,product,t_plan from pm_planes) b,
                       (SELECT numero_documento,periodo
                            FROM(SELECT a.*,row_number () over (PARTITION BY a.numero_documento,a.periodo
                                        ORDER BY to_date(fec_registro_rep,'dd/mm/yyyy hh24:mi:ss') DESC NULLS LAST) AS num_c
                                     FROM ods_gpf.tnp_portabilidad a
                                  WHERE mensaje = 'SPR')
                         WHERE num_c = 1) c
               where a.codigoplantarifariobscs=b.numeroplan (+)
               AND a.ruccompania=c.numero_documento (+)
               AND estadocontrato in ('Activo','Suspendido') and b.t_plan = 'Comercial')
     WHERE upper(product) like '%POST%'
       AND tipodoc='DNI'
     GROUP BY portabilidad order by portabilidad;
     COMMIT;

    --BIFURCADO TOTAL POST DNI
    insert into FA_MDL_AFILIADOS_ACUMU_RES_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompania) as cantidad,'ENDING' as Grupo,'BASE ACTIVA POST DNI' as Categoria,
           DECODE(B.CLASIF, 'INTERNET', DECODE(A.PORTABILIDAD, 'Porta','INTERNET PORTA', 'INTERNET NO PORTA'),
                DECODE(A.PORTABILIDAD, 'Porta','MOVILES PORTA','MOVILES NO PORTA')) as Subcategoria, TO_CHAR(ad_fecha,'yyyymm') as periodo,'1' as base
      FROM (SELECT a.periodo,a.codigocompania,decode(c.numero_documento,null,'No Porta','Porta') portabilidad
              FROM (SELECT telefono,estadocontrato,codigocontratobscs,codigoplantarifariobscs,tipopersona,ruccompania,codigocompania,
                           nextel,tipoplan,periodo,product,OBTENER_TIPODOC_2(ruccompania) as tipodoc
                      FROM ods_gpf.fotoequipos) a,
                   ods_gpf.pm_planes b,
                   (SELECT numero_documento,periodo
                      FROM (SELECT a.*,row_number () over (PARTITION BY a.numero_documento,a.periodo
                                   ORDER BY to_date(fec_registro_rep,'dd/mm/yyyy hh24:mi:ss') DESC NULLS LAST) AS num_c
                              FROM ods_gpf.tnp_portabilidad a
                             WHERE mensaje = 'SPR')
                     WHERE num_c = 1) c
             WHERE a.codigoplantarifariobscs=b.c_plan(+)
               AND a.ruccompania=c.numero_documento(+)
               AND a.estadocontrato in ('Activo','Suspendido')
               AND upper(a.product) like '%POST%'
               AND OBTENER_TIPODOC_2(a.ruccompania) = 'DNI'
               AND b.t_plan = 'Comercial') a,
           (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                   SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                   CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                   THEN 'INTERNET' ELSE 'MOVILES' END clasif
              FROM fotoequipos a, pm_planes b
             WHERE a.codigoplantarifariobscs=b.c_plan
               AND UPPER(a.product) LIKE '%POST%'
               AND b.t_plan = 'Comercial'
               AND a.estadocontrato IN ('Activo','Suspendido')
             GROUP BY a.periodo, a.codigocompania) b
     WHERE a.codigocompania = b.codigocompania(+)
    GROUP BY DECODE(B.CLASIF, 'INTERNET', DECODE(A.PORTABILIDAD, 'Porta','INTERNET PORTA', 'INTERNET NO PORTA'),
                DECODE(A.PORTABILIDAD, 'Porta','MOVILES PORTA','MOVILES NO PORTA'));
COMMIT;

    ---Hoja base 02
    ------------------------------------------------
    --[1] AFILIADOS Act (a inicio de mes)
    INSERT INTO fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS Grupo, 'AFILIADOS ACT' AS Categoria, 'TOTAL' AS subcategoria,
           TO_CHAR(add_months(sysdate-1,1),'yyyymm') AS periodo, '2' AS base
        FROM fa_mdl_afiliados_mes_det_b02
     WHERE activ='SI'
       AND periodo=TO_CHAR(ad_fecha-1,'yyyymm');
     COMMIT;

    --BIFURCADO TOTAL
    INSERT INTO  fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS grupo,'AFILIADOS ACT' AS categoria,
           NVL(clasif, 'MOVILES TOTAL') AS subcategoria, TO_CHAR(ADD_MONTHS(ad_fecha-1,1),'yyyymm') AS periodo, '2' AS base
        FROM(SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' end clasif
                 FROM fotoequipos a, fa_mdl_afiliados_mes_det_b02 b
              WHERE a.codigocompania(+)=b.codigocompania
                AND b.periodo=TO_CHAR(ad_fecha-1,'yyyymm')
                AND b.base='02'
                AND b.activ='SI'
             GROUP BY b.periodo, b.codigocompania)
     GROUP BY clasif, periodo;
     COMMIT;

    --TOTAL ACT DNI
    INSERT INTO fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS Grupo, 'AFILIADOS ACT DNI' AS Categoria, 'TOTAL' AS subcategoria,
           TO_CHAR(add_months(ad_fecha-1,1),'yyyymm') AS periodo, '2' AS base
        FROM fa_mdl_afiliados_mes_det_b02
     WHERE activ ='SI'
       AND periodo =TO_CHAR(ad_fecha-1,'yyyymm')
       AND tipodocumento ='DNI';
     COMMIT;

    --BIFURCADO TOTAL DNI
    INSERT INTO fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS GRUPO,'AFILIADOS ACT DNI' AS categoria,
           NVL(clasif, 'MOVILES TOTAL') AS subcategoria, TO_CHAR(add_months(ad_fecha-1,1),'yyyymm') as periodo, '2' AS base
      FROM (SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(A.PRODUCT,'Internet Hogar Post',1,0)) sumabafi,
                   CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                   THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
                FROM fotoequipos a, fa_mdl_afiliados_mes_det_b02 b
             WHERE A.codigocompania(+) =B.codigocompania
               AND b.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
               AND b.base ='02'
               AND b.activ ='SI'
               AND b.tipodocumento ='DNI'
             GROUP BY b.periodo, b.codigocompania)
     GROUP BY clasif, periodo;
     COMMIT;

    --TOTAL ACT RUC
    INSERT INTO fa_mdl_afiliados_acumu_res_3(cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS Grupo, 'AFILIADOS ACT RUC' AS Categoria, 'TOTAL' AS subcategoria,
               TO_CHAR(ADD_MONTHS(ad_fecha-1,1),'yyyymm') AS periodo, '2' AS base
        FROM fa_mdl_afiliados_mes_det_b02
     WHERE activ ='SI'
       AND periodo =TO_CHAR(ad_fecha-1,'yyyymm')
       AND tipodocumento like 'RUC%';
     COMMIT;

    --BIFURCADO ACT RUC
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS GRUPO,'AFILIADOS ACT RUC' AS categoria,
               NVL(clasif, 'MOVILES TOTAL') AS subcategoria, TO_CHAR(ADD_MONTHS(ad_fecha-1,1),'yyyymm') as periodo, '2' AS base
        FROM(SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
            CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(A.PRODUCT,'Internet Hogar Post',1,0)) THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
            FROM fotoequipos a, fa_mdl_afiliados_mes_det_b02 b
            WHERE a.codigocompania(+)=b.codigocompania
            AND b.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
            AND b.base='02'
            AND b.activ='SI'
            AND b.tipodocumento like 'RUC%'
            GROUP BY b.periodo, b.codigocompania)
     GROUP BY clasif, periodo;
     COMMIT;

    --RUC 10/RUC 20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS Grupo, 'AFILIADOS ACT RUC' AS Categoria, tdoc AS subcategoria,
           TO_CHAR(add_months(ad_fecha-1,1),'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc
                 FROM fa_mdl_afiliados_mes_det_b02 a, p_compania b
              WHERE a.codigocompania=b.codigocompania
                AND a.activ ='SI'
                AND A.PERIODO =TO_CHAR(AD_FECHA-1,'yyyymm')
                AND a.tipodocumento like 'RUC%')
     WHERE tdoc LIKE 'RUC%'
     GROUP BY tdoc;
     COMMIT;

    --BIFURCADO RUC10/RUC20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS GRUPO,'AFILIADOS ACT RUC' AS categoria,
           DECODE(clasif,'INTERNET',DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
           DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20')) AS subcategoria,
           TO_CHAR(ADD_MONTHS(ad_fecha-1,1),'yyyymm') AS periodo, '2' AS base
        FROM(SELECT b.periodo, b.tdoc, b.codigocompania,COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                    SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET' ELSE 'MOVILES' END clasif
                 FROM fotoequipos a,
                      (SELECT obtener_tipodoc_2(z.ruccompania) tdoc, x.codigocompania, x.periodo
                           FROM fa_mdl_afiliados_mes_det_b02 x, p_compania z
                        WHERE x.codigocompania=z.codigocompania
                          AND x.activ ='SI'
                          AND X.PERIODO =TO_CHAR(AD_FECHA-1,'yyyymm')
                          AND x.tipodocumento like 'RUC%')b
              WHERE b.codigocompania=a.codigocompania (+)
                AND tdoc LIKE 'RUC%'
              GROUP BY b.periodo, b.codigocompania, tdoc)
       GROUP BY DECODE(clasif,'INTERNET',DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
              DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20'));
     COMMIT;

    --ruc10 con y sin negocio
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS Grupo, 'AFILIADOS ACT RUC' AS Categoria,
           NVL(tipodocumento,'DNI') AS subcategoria, TO_CHAR(add_months(ad_fecha-1,1),'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc, c.tipodocumento
                 FROM fa_mdl_afiliados_mes_det_b02 a, p_compania b,
                      (SELECT *
                           FROM(SELECT ruccompania, tipodocumento,
                                       ROW_NUMBER () OVER (PARTITION BY ruccompania ORDER BY npcreateddate DESC) rn
                                    FROM tnp_preevaluacion) WHERE RN=1) c
              WHERE a.codigocompania =b.codigocompania (+)
                AND b.ruccompania =c.ruccompania (+)
                AND a.activ ='SI'
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%')
     WHERE tipodocumento IS NOT NULL
       AND tipodocumento LIKE 'RUC%'
     GROUP BY tipodocumento;
     COMMIT;

    --BIFURCADO RUC10 CON/SIN NEGOCIO
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT CODIGOCOMPANIA) AS CANTIDAD,'ACTIVOS' AS GRUPO,'AFILIADOS ACT RUC' AS CATEGORIA,
           DECODE(clasif,'INTERNET', DECODE(TIPODOCUMENTO, 'RUC10 CON NEGOCIO', 'INTERNET RUC10 CON NEGOCIO', 'INTERNET RUC10 SIN NEGOCIO'),
           DECODE (TIPODOCUMENTO, 'RUC10 CON NEGOCIO', 'MOVILES RUC10 CON NEGOCIO', 'MOVILES RUC10 SIN NEGOCIO')) AS subcategoria,
           TO_CHAR(ADD_MONTHS(ad_fecha-1,1),'yyyymm') AS PERIODO, '2' AS base
        FROM(SELECT b.periodo, b.tipodocumento, b.codigocompania,COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                    SUM(DECODE(A.PRODUCT,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET' ELSE 'MOVILES' END clasif
                 FROM FOTOEQUIPOS A,
                      (SELECT a.codigocompania, b.ruccompania, c.tipodocumento, a.periodo
                           FROM fa_mdl_afiliados_mes_det_b02 a, p_compania b,
                                (SELECT *
                                     FROM(SELECT ruccompania, tipodocumento,ROW_NUMBER () OVER (PARTITION BY ruccompania ORDER BY NPCREATEDDATE DESC) rn
                                              FROM tnp_preevaluacion) WHERE rn=1)C
                        WHERE a.codigocompania=b.codigocompania (+)
                          AND b.ruccompania =c.ruccompania (+)
                          AND a.activ ='SI'
                          AND A.PERIODO =TO_CHAR(AD_FECHA-1,'yyyymm')
                          AND A.TIPODOCUMENTO like 'RUC%')B
              WHERE b.codigocompania=a.codigocompania (+)
                AND tipodocumento LIKE 'RUC%'
              GROUP BY b.periodo, b.codigocompania, tipodocumento)
     GROUP BY DECODE(clasif,'INTERNET', DECODE(tipodocumento, 'RUC10 CON NEGOCIO', 'INTERNET RUC10 CON NEGOCIO', 'INTERNET RUC10 SIN NEGOCIO'),
              DECODE (tipodocumento, 'RUC10 CON NEGOCIO', 'MOVILES RUC10 CON NEGOCIO', 'MOVILES RUC10 SIN NEGOCIO'));
     COMMIT;

    --afiliados activos RUC recibo electronico
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'AFILIADOS ACT RUC' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico','Recibo Electrónico(Ruc10)') AS subcategoria,
           TO_CHAR(ADD_MONTHS(ad_fecha-1,1),'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_b02 a, p_compania b
              WHERE a.codigocompania =b.codigocompania
                AND a.activ ='SI'
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND obtener_tipodoc_2(b.ruccompania)='RUC10'
                AND tiponotificacion ='Recibo Electrónico'
             AND NOT EXISTS
             (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_b02 b
               WHERE b.activ ='SI'
               AND B.PERIODO =TO_CHAR(AD_FECHA-1,'yyyymm')
               AND b.tipodocumento like 'RUC%'
               AND b.tiponotificacion='Recibo Electrónico y Físico'
               AND a.codigocompania  = b.codigocompania))
     WHERE tdoc ='RUC10'
     GROUP BY tiponotificacion;
     COMMIT;

    --BIFURCADO RECIBO ELECTRONICO RUC
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'AFILIADOS ACT RUC' AS categoria,
           DECODE(clasif,'INTERNET', DECODE(tiponotificacion, 'Recibo Electrónico', 'INTERNET Recibo Electrónico RUC10'),
           DECODE(tiponotificacion, 'Recibo Electrónico', 'MOVILES Recibo Electrónico RUC10')) AS subcategoria,
           TO_CHAR(ADD_MONTHS(ad_fecha-1,1),'yyyymm') AS periodo, '2' AS base
        FROM(SELECT b.periodo, b.tiponotificacion, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                    SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET' ELSE 'MOVILES' END clasif
                 FROM FOTOEQUIPOS A,
                      (SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc, a.tiponotificacion, a.periodo
                           FROM fa_mdl_afiliados_mes_det_b02 a, p_compania b
                        WHERE a.codigocompania =b.codigocompania
                          AND a.activ ='SI'
                          AND A.PERIODO =TO_CHAR(AD_FECHA-1,'yyyymm')
                          AND a.tipodocumento like 'RUC%'
                          AND obtener_tipodoc_2(b.ruccompania)='RUC10'
                          AND tiponotificacion ='Recibo Electrónico'
                      AND NOT EXISTS
                      (SELECT codigocompania
                           FROM fa_mdl_afiliados_mes_det_b02 b
                        WHERE b.activ ='SI'
                        AND B.PERIODO =TO_CHAR(AD_FECHA-1,'yyyymm')
                        AND b.tipodocumento like 'RUC%'
                        AND b.tiponotificacion='Recibo Electrónico y Físico'
                        AND a.codigocompania  = b.codigocompania))b
              WHERE b.codigocompania=a.codigocompania (+)
                AND tdoc = 'RUC10'
              GROUP BY b.periodo, b.codigocompania, tiponotificacion)
     GROUP BY DECODE(clasif,'INTERNET', DECODE(tiponotificacion, 'Recibo Electrónico', 'INTERNET Recibo Electrónico RUC10'),
              DECODE(tiponotificacion, 'Recibo Electrónico', 'MOVILES Recibo Electrónico RUC10'));
     COMMIT;

    --afiliados activos RUC Recibo Electrónico y Físico
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT CODIGOCOMPANIA) AS CANTIDAD, 'ACTIVOS' AS GRUPO, 'AFILIADOS ACT RUC' AS CATEGORIA,
           DECODE(tiponotificacion,'Recibo Electrónico y Físico','Recibo Electrónico y Físico(Ruc10)') AS subcategoria,
           TO_CHAR(ADD_MONTHS(ad_fecha-1,1),'yyyymm') AS PERIODO, '2' AS base
        FROM(SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc, a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_b02 a, p_compania B
              WHERE a.codigocompania =b.codigocompania (+)
                AND a.activ ='SI'
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%')
     WHERE tdoc ='RUC10'
       AND tiponotificacion='Recibo Electrónico y Físico'
     GROUP BY tiponotificacion;
     COMMIT;

    --BIFURCADO RUC Recibo Electrónico y Físico
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'AFILIADOS ACT RUC'AS categoria,
           DECODE(b.clasif, 'INTERNET',DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','INTERNET Recibo Electrónico y Físico RUC10'),
           DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','MOVILES Recibo Electrónico y Físico RUC10')) AS subcategoria,
           TO_CHAR(ADD_MONTHS(ad_fecha-1,1),'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_b02 a,p_compania b
              WHERE a.codigocompania=b.codigocompania
                AND a.activ ='SI'
                AND A.PERIODO =TO_CHAR(AD_FECHA-1,'yyyymm')
                AND a.tipodocumento like 'RUC%') a,
             (SELECT a.periodo, a.codigocompania, a.clasif
                  FROM (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                               SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                               CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                               THEN 'INTERNET' ELSE 'MOVILES' END clasif
                            FROM fotoequipos a, pm_planes b
                         WHERE a.codigoplantarifariobscs=b.c_plan
                           AND UPPER(a.product) LIKE '%POST%'
                           AND b.t_plan = 'Comercial'
                           AND a.estadocontrato IN ('Activo','Suspendido')
                         GROUP BY a.periodo, a.codigocompania) a
               GROUP BY a.periodo, a.codigocompania, a.clasif) b
     WHERE a.codigocompania = b.codigocompania(+)
       AND a.tdoc ='RUC10'
       AND a.tiponotificacion ='Recibo Electrónico y Físico'
     GROUP BY DECODE(b.clasif, 'INTERNET',DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','INTERNET Recibo Electrónico y Físico RUC10'),
           DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','MOVILES Recibo Electrónico y Físico RUC10'));
     COMMIT;

    --[2] NUEVOS AFIL Act
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS Grupo, 'NUEVOS AFIL ACT' AS Categoria, 'TOTAL' AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM fa_mdl_afiliados_mes_det_nvo
     WHERE grafica ='Superior'
       AND periodo =TO_CHAR(ad_fecha-1,'yyyymm')
       AND base ='02';
     COMMIT;

    --BIFURCADO TOTAL INTERNET/MOVIL
    INSERT INTO FA_MDL_AFILIADOS_ACUMU_RES_3 (CANTIDAD,GRUPO,CATEGORIA,SUBCATEGORIA,PERIODO,BASE)
    SELECT COUNT(DISTINCT CODIGOCOMPANIA) AS CANTIDAD,'ACTIVOS' AS GRUPO,'NUEVOS AFIL ACT' AS CATEGORIA, CLASIF AS SUBCATEGORIA, PERIODO, '2' AS BASE
        FROM(SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
                 FROM fotoequipos a, fa_mdl_afiliados_mes_det_nvo b
              WHERE A.codigocompania(+)=B.codigocompania
                AND B.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND B.base ='02'
                AND B.grafica ='Superior'
                AND B.activ ='SI'
              GROUP BY b.periodo, b.codigocompania)
     GROUP BY clasif, periodo;
     COMMIT;

    --NUEVOS AFILIADOS RUC10/RUC20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'NUEVOS AFIL ACT' AS categoria, tdoc AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc
                 FROM fa_mdl_afiliados_mes_det_nvo a, p_compania b
              WHERE a.codigocompania=b.codigocompania(+)
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento ='RUC'
                AND base ='02'
                AND grafica ='Superior')
     WHERE tdoc LIKE 'RUC%'
     GROUP BY tdoc;
     COMMIT;

    --BIFURCADO RUC10/RUC20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS grupo,'NUEVOS AFIL ACT' AS categoria,
           DECODE(NVL(clasif,'MOVILES'),'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
           DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20')) AS subcategoria, TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.periodo, b.tdoc, a.codigocompania,COUNT(DISTINCT a.codigocontratobscs) as contratos,
                    SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET' ELSE 'MOVILES' END clasif
                 FROM fotoequipos A,
                      (SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc
                           FROM fa_mdl_afiliados_mes_det_nvo a, p_compania b
                        WHERE a.codigocompania=b.codigocompania
                          AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                          AND a.tipodocumento like 'RUC%'
                          AND base ='02'
                          AND grafica ='Superior')B
             WHERE b.codigocompania=a.codigocompania
               AND tdoc LIKE 'RUC%'
             GROUP BY a.periodo, a.codigocompania, tdoc)
     GROUP BY DECODE(NVL(clasif,'MOVILES'),'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
              DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20'));
     COMMIT;

    --nuevos afiliados act RUC recibo electronico
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'NUEVOS AFIL ACT' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico','Recibo Electrónico(Ruc10)') AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc, a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_nvo a, p_compania b
              WHERE a.codigocompania =b.codigocompania
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND base ='02'
                AND grafica ='Superior'
                AND tiponotificacion ='Recibo Electrónico'
             AND NOT EXISTS
             (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_nvo B
               WHERE B.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                 AND B.tipodocumento like 'RUC%'
                 AND b.base ='02'
                 AND b.grafica ='Superior'
                 AND b.tiponotificacion ='Recibo Electrónico y Físico'
                 AND a.codigocompania = b.codigocompania))
     WHERE tdoc='RUC10'
     GROUP BY tiponotificacion;
     COMMIT;

    --BIFURCADO NUEVOS AFILIADOS ACT RUC RECIBO ELECTRONICO
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'NUEVOS AFIL ACT' AS categoria,
           DECODE(NVL(clasif,'MOVILES'),'INTERNET', DECODE(tiponotificacion, 'Recibo Electrónico', 'INTERNET Recibo Electrónico RUC10'),
           DECODE(tiponotificacion, 'Recibo Electrónico', 'MOVILES Recibo Electrónico RUC10')) AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.periodo, b.tiponotificacion, A.codigocompania,COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                    SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET' ELSE 'MOVILES'END clasif
                 FROM fotoequipos a,
            (SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc, a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_nvo a, p_compania b
              WHERE a.codigocompania =b.codigocompania
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND base ='02'
                AND grafica ='Superior'
                AND tiponotificacion ='Recibo Electrónico'
             AND NOT EXISTS
             (SELECT codigocompania
                  FROM fa_mdl_afiliados_mes_det_nvo b
               WHERE b.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                 AND b.tipodocumento like 'RUC%'
                 AND b.base ='02'
                 AND b.grafica ='Superior'
                 AND b.tiponotificacion ='Recibo Electrónico y Físico'
                 AND a.codigocompania = b.codigocompania))b
              WHERE b.codigocompania=a.codigocompania
                AND tdoc = 'RUC10'
              GROUP BY a.periodo, a.codigocompania, tiponotificacion)
     GROUP BY DECODE(NVL(clasif,'MOVILES'),'INTERNET', DECODE(tiponotificacion, 'Recibo Electrónico', 'INTERNET Recibo Electrónico RUC10'),
              DECODE(tiponotificacion, 'Recibo Electrónico', 'MOVILES Recibo Electrónico RUC10'));
     COMMIT;

    --nuevos afiliados act RUC recibo electronico Y FISICO
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT CODIGOCOMPANIA) AS CANTIDAD, 'ACTIVOS' AS GRUPO, 'NUEVOS AFIL ACT' AS CATEGORIA,
           DECODE(tiponotificacion,'Recibo Electrónico y Físico','Recibo Electrónico y Físico(Ruc10)') AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc, a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_nvo a, p_compania b
              WHERE a.codigocompania=b.codigocompania (+)
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND base ='02'
                AND grafica ='Superior')
     WHERE tdoc ='RUC10'
       AND tiponotificacion='Recibo Electrónico y Físico'
     GROUP BY tiponotificacion;
     COMMIT;

    --BIFURADOS AFILIADOS ACT RU RECIBO ELECTRONICO Y FISICO
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT b.codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'NUEVOS AFIL ACT' AS categoria,
           DECODE(NVL(b.clasif,'MOVILES'), 'INTERNET',DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','INTERNET Recibo Electrónico y Físico RUC10'),
           DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','MOVILES Recibo Electrónico y Físico RUC10')) AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_nvo a, p_compania b
              WHERE a.codigocompania=b.codigocompania
                AND a.activ ='SI'
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento ='RUC') a,
            (SELECT a.periodo, a.codigocompania, a.clasif
                 FROM (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                              SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                              CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                              THEN 'INTERNET' ELSE 'MOVILES' END clasif
                           FROM fotoequipos a, pm_planes b
                        WHERE a.codigoplantarifariobscs=b.c_plan
                          AND UPPER(a.product) LIKE '%POST%'
                          AND b.t_plan = 'Comercial'
                          AND a.estadocontrato IN ('Activo','Suspendido')
                        GROUP BY a.periodo, a.codigocompania) a
              GROUP BY a.periodo, a.codigocompania, a.clasif) b
              WHERE a.codigocompania = b.codigocompania(+)
                AND a.tdoc ='RUC10'
                AND a.tiponotificacion ='Recibo Electrónico y Físico'
     GROUP BY DECODE(NVL(b.clasif,'MOVILES'), 'INTERNET',DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','INTERNET Recibo Electrónico y Físico RUC10'),
           DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','MOVILES Recibo Electrónico y Físico RUC10'));
     COMMIT;

    --[3] REMAINING
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'REMAINING ACT' AS categoria, 'TOTAL' AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM fa_mdl_afiliados_mes_det_rem
     WHERE grafica ='Superior'
       AND periodo =TO_CHAR(ad_fecha-1,'yyyymm')
       AND base ='02';
     COMMIT;

    --BIFURCADO REMAINGIN TOTAL
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS grupo,'REMAINING ACT' AS categoria,
           NVL(clasif, 'MOVILES TOTAL') AS subcategoria, periodo, '2' AS base
        FROM(SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
                 FROM fotoequipos a, fa_mdl_afiliados_mes_det_rem b
              WHERE a.codigocompania(+)=b.codigocompania
                AND b.periodo =TO_CHAR(sysdate-1,'yyyymm')
                AND b.base ='02'
                AND b.grafica ='Superior'
              GROUP BY b.periodo, b.codigocompania)
     GROUP BY NVL(clasif,'MOVILES TOTAL'), periodo;
     COMMIT;

    --RAMINING RUC10 / RUC 20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'REMAINING ACT' AS categoria, tdoc AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc
                 FROM fa_mdl_afiliados_mes_det_rem a, p_compania b
              WHERE a.codigocompania=b.codigocompania(+)
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND base ='02'
                AND grafica ='Superior')
     WHERE tdoc LIKE 'RUC%'
     GROUP BY tdoc;
     COMMIT;

    --BIFURCADO REMAINING RUC10/RUC20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS grupo,'REMAINING ACT' AS categoria,
           DECODE(clasif,'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
           DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20')) AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo,'2' AS base
        FROM(SELECT b.periodo, b.tdoc, b.codigocompania,COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                    SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET' ELSE 'MOVILES' END clasif
                 FROM fotoequipos a,
                      (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc, a.periodo
                            FROM fa_mdl_afiliados_mes_det_rem a, p_compania b
                        WHERE a.codigocompania=b.codigocompania(+)
                          AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                          AND a.tipodocumento like 'RUC%'
                          AND grafica ='Superior'
                          AND base ='02')b
              WHERE b.codigocompania=a.codigocompania (+)
                AND tdoc LIKE 'RUC%'
              GROUP BY b.periodo, b.codigocompania, tdoc)
     GROUP BY DECODE(clasif,'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
              DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20'));
     COMMIT;

    -- REMAINING recibo electronico
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'REMAINING ACT' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico','Recibo Electrónico(Ruc10)') AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc, a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_rem a, p_compania b
              WHERE a.codigocompania =b.codigocompania (+)
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND base ='02'
                AND grafica ='Superior'
            AND NOT EXISTS
            (SELECT codigocompania
                 FROM fa_mdl_afiliados_mes_det_rem b
              WHERE b.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND b.tipodocumento like 'RUC%'
                AND b.base ='02'
                AND b.grafica ='Superior'
                AND b.tiponotificacion ='Recibo Electrónico y Físico'
                AND a.codigocompania = b.codigocompania))
     WHERE tdoc ='RUC10'
      AND tiponotificacion ='Recibo Electrónico'
     GROUP BY tiponotificacion;
     COMMIT;

    --BIFURCADO REMAINING RECIBO ELECTRONICO
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'REMAINING ACT' AS categoria,
           DECODE ( b.clasif, 'INTERNET', DECODE(a.tiponotificacion,'Recibo Electrónico','INTERNET Recibo Electrónico'),
           DECODE(a.tiponotificacion,'Recibo Electrónico','MOVILES Recibo Electrónico')) AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc, a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_rem a, p_compania b
              WHERE a.codigocompania =b.codigocompania (+)
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND base ='02'
                AND grafica ='Superior'
            AND NOT EXISTS
            (SELECT codigocompania
                 FROM fa_mdl_afiliados_mes_det_rem b
              WHERE b.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND b.tipodocumento like 'RUC%'
                AND b.base ='02'
                AND b.grafica ='Superior'
                AND b.tiponotificacion ='Recibo Electrónico y Físico'
                AND a.codigocompania = b.codigocompania)) a,
            (SELECT a.periodo, a.codigocompania, a.clasif
                 FROM(SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                             SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                             CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                             THEN 'INTERNET' ELSE 'MOVILES' END clasif
                          FROM fotoequipos a,pm_planes b
                       WHERE a.codigoplantarifariobscs =b.c_plan
                         AND UPPER(a.product) LIKE '%POST%'
                         AND b.t_plan = 'Comercial'
                         AND a.estadocontrato IN ('Activo','Suspendido')
                       GROUP BY a.periodo,a.codigocompania) a
            GROUP BY a.periodo,a.codigocompania,a.clasif) b
            WHERE a.codigocompania = b.codigocompania(+)
            AND a.tdoc ='RUC10'
            AND a.tiponotificacion ='Recibo Electrónico'
     GROUP BY DECODE ( b.clasif, 'INTERNET', DECODE(a.tiponotificacion,'Recibo Electrónico','INTERNET Recibo Electrónico'),
              DECODE(a.tiponotificacion,'Recibo Electrónico','MOVILES Recibo Electrónico'));
     COMMIT;

    -- REMAINING recibo electronico y fisico
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'REMAINING ACT' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico y Físico','Recibo Electrónico y Físico(Ruc10)') AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_rem a, p_compania b
              WHERE a.codigocompania =b.codigocompania
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND base ='02'
                AND grafica ='Superior')
     WHERE tdoc ='RUC10'
      AND tiponotificacion ='Recibo Electrónico y Físico'
     GROUP BY tiponotificacion;
     COMMIT;

    --BIFURCACION RECIBO ELECTRONICO Y FISICO
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'REMAINING ACT' AS categoria,
           DECODE ( b.clasif, 'INTERNET', DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','INTERNET Recibo Electrónico y Físico'),
           DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','MOVILES Recibo Electrónico y Físico')) AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_rem a, p_compania b
              WHERE a.codigocompania =b.codigocompania (+)
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND base ='02'
                AND grafica ='Superior') a,
             (SELECT a.periodo, a.codigocompania, a.clasif
                  FROM(SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                              SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                              CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                              THEN 'INTERNET' ELSE 'MOVILES' END clasif
                           FROM fotoequipos a, pm_planes b
                        WHERE a.codigoplantarifariobscs =b.c_plan
                          AND UPPER(a.product) LIKE '%POST%'
                          AND b.t_plan = 'Comercial'
                          AND a.estadocontrato IN ('Activo','Suspendido')
                        GROUP BY a.periodo, a.codigocompania) a
               GROUP BY a.periodo, a.codigocompania, a.clasif) b
     WHERE a.codigocompania = b.codigocompania(+)
       AND a.tdoc ='RUC10'
       AND a.tiponotificacion='Recibo Electrónico y Físico'
     GROUP BY DECODE ( b.clasif, 'INTERNET', DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','INTERNET Recibo Electrónico y Físico'),
              DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','MOVILES Recibo Electrónico y Físico'));
     COMMIT;

    --[4] DESAFILIADOS Act
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'DESAFILIADOS ACT' AS categoria, 'TOTAL' AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM fa_mdl_afiliados_mes_det_deac
     WHERE grafica ='Superior'
       AND periodo  =TO_CHAR(ad_fecha-1,'yyyymm')
       AND base ='02';
     COMMIT;

    --BIFURCACION DESAFILIADOS TOTAL
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT a.codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'DESAFILIADOS ACT' AS categoria,
           NVL(b.clasif,'MOVILES TOTAL') AS subcategoria, a.periodo, '2' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_deac a,
            (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                    SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
                 FROM ods_gpf.fotoequipos a
              WHERE upper(a.product) LIKE '%POST%'
              GROUP BY a.periodo, a.codigocompania) b
     WHERE a.codigocompania = b.codigocompania(+)
       AND a.grafica ='Superior'
       AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
       AND a.base ='02'
     GROUP BY a.periodo,NVL(b.clasif,'MOVILES TOTAL');
     COMMIT;

    --DESAFILIADOS RU10/RUC20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'DESAFILIADOS ACT' AS categoria, tdoc AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc
                 FROM fa_mdl_afiliados_mes_det_deac a, p_compania b
              WHERE a.codigocompania=b.codigocompania (+)
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND base ='02'
                AND grafica ='Superior')
     WHERE tdoc LIKE 'RUC%'
     GROUP BY tdoc;
     COMMIT;

    --BIFURCACION RUC10/RUC20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS grupo,'DESAFILIADOS ACT' AS categoria,
           DECODE(clasif,'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
           DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20')) AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT b.periodo, b.tdoc, b.codigocompania,COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                    SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET' ELSE 'MOVILES' END clasif
                 FROM fotoequipos a,
                      (SELECT a.codigocompania,a.periodo,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc
                           FROM fa_mdl_afiliados_mes_det_deac a, p_compania b
                        WHERE a.codigocompania=b.codigocompania(+)
                          AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                          AND a.tipodocumento like 'RUC%'
                          AND base ='02'
                          AND grafica ='Superior')b
              WHERE b.codigocompania=a.codigocompania(+)
                AND tdoc LIKE 'RUC%'
              GROUP BY b.periodo, b.codigocompania, tdoc)
     GROUP BY DECODE(clasif,'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
              DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20'));
     COMMIT;

    -- DESAFILIADOS Act recibo electronico
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'DESAFILIADOS ACT' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico','Recibo Electrónico(Ruc10)') AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_deac a, p_compania b
              WHERE a.codigocompania =b.codigocompania(+)
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND base ='02'
                AND grafica ='Superior'
            AND NOT EXISTS
            (SELECT codigocompania
                 FROM fa_mdl_afiliados_mes_det_deac b
              WHERE b.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND b.tipodocumento like 'RUC%'
                AND b.base ='02'
                AND b.grafica ='Superior'
                AND b.tiponotificacion ='Recibo Electrónico y Físico'
                AND a.codigocompania = b.codigocompania))
     WHERE tdoc ='RUC10'
       AND tiponotificacion='Recibo Electrónico'
     GROUP BY tiponotificacion;
     COMMIT;

    --BIFURCADO DESAFILIADOS RECIBO ELECTRONICO
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT a.codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'DESAFILIADOS ACT' AS categoria,
           DECODE ( b.clasif, 'INTERNET', DECODE(a.tiponotificacion,'Recibo Electrónico','INTERNET Recibo Electrónico'),
           DECODE(a.tiponotificacion,'Recibo Electrónico','MOVILES Recibo Electrónico')) AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_deac a, p_compania b
              WHERE a.codigocompania =b.codigocompania(+)
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND base ='02'
                AND grafica ='Superior'
            AND NOT EXISTS
            (SELECT codigocompania
                 FROM fa_mdl_afiliados_mes_det_deac b
              WHERE b.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND b.tipodocumento like 'RUC%'
                AND b.base ='02'
                AND b.grafica ='Superior'
                AND b.tiponotificacion ='Recibo Electrónico y Físico'
                AND a.codigocompania = b.codigocompania)) a,
            (SELECT a.periodo, a.codigocompania, a.clasif
              FROM (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                           SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                           CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                           THEN 'INTERNET' ELSE 'MOVILES' END clasif
                      FROM fotoequipos a, pm_planes b
                     WHERE a.codigoplantarifariobscs=b.c_plan
                       AND UPPER(a.product) LIKE '%POST%'
                       AND b.T_PLAN = 'Comercial'
                       GROUP BY a.periodo, a.codigocompania) a
              GROUP BY a.periodo, a.codigocompania, a.clasif) b
     WHERE a.codigocompania = b.codigocompania(+)
       AND a.tdoc ='RUC10'
       AND a.tiponotificacion ='Recibo Electrónico'
     GROUP BY DECODE ( b.clasif, 'INTERNET', DECODE(a.tiponotificacion,'Recibo Electrónico','INTERNET Recibo Electrónico'),
              DECODE(a.tiponotificacion,'Recibo Electrónico','MOVILES Recibo Electrónico'));
     COMMIT;

    -- DESAFILIADOS Act recibo electronico y fisico
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'DESAFILIADOS ACT' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico y Físico','Recibo Electrónico y Físico(Ruc10)') AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_deac a, p_compania b
              WHERE a.codigocompania=b.codigocompania
                AND A.PERIODO =TO_CHAR(AD_FECHA-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND base ='02'
                AND grafica ='Superior')
     WHERE tdoc ='RUC10'
       AND tiponotificacion='Recibo Electrónico y Físico'
     GROUP BY tiponotificacion;
     COMMIT;

    --BIFURCADO RECIBO ELECTRONICO Y FISICO
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT a.codigocompania) AS cantidad, 'ACTIVOS' AS grupo, 'DESAFILIADOS ACT' AS categoria,
           DECODE ( b.clasif, 'INTERNET', DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','INTERNET Recibo Electrónico y Físico'),
           DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','MOVILES Recibo Electrónico y Físico')) AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion
                 FROM fa_mdl_afiliados_mes_det_deac a, p_compania b
              WHERE a.codigocompania=b.codigocompania
                AND A.PERIODO =TO_CHAR(AD_FECHA-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND base ='02'
                AND grafica ='Superior') a,
            (SELECT a.periodo, a.codigocompania, a.clasif
                 FROM (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                              SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                              CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                              THEN 'INTERNET' ELSE 'MOVILES' END clasif
                           FROM fotoequipos a, pm_planes b
                        WHERE a.codigoplantarifariobscs=b.c_plan
                          AND UPPER(a.product) LIKE '%POST%'
                          AND b.T_PLAN = 'Comercial'
                        GROUP BY a.periodo, a.codigocompania) a
              GROUP BY a.periodo, a.codigocompania, a.clasif) b
     WHERE a.codigocompania = b.codigocompania(+)
      AND a.tdoc ='RUC10'
      AND a.tiponotificacion='Recibo Electrónico y Físico'
     GROUP BY DECODE ( b.clasif, 'INTERNET', DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','INTERNET Recibo Electrónico y Físico'),
              DECODE(a.tiponotificacion,'Recibo Electrónico y Físico','MOVILES Recibo Electrónico y Físico'));
     COMMIT;

    --[5] AFILIADOS Desact (a inicio de mes)
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS grupo,'AFILIADOS DESACT' AS categoria, 'TOTAL' AS subcategoria,
           TO_CHAR(add_months(ad_fecha-1,1),'yyyymm') AS periodo, '2' AS base
        FROM fa_mdl_afiliados_mes_det_b02
     WHERE activ='NO'
       AND periodo=TO_CHAR(ad_fecha-1,'yyyymm');
     COMMIT;

    --BIFURCADO AFILIADOS DESACT TOTAL
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'AFILIADOS DESACT' AS categoria,
           NVL(clasif,'MOVILES TOTAL') AS subcategoria, TO_CHAR(add_months(ad_fecha-1,1),'yyyymm') as periodo, '2' AS base
        FROM (SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                     CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                     THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
                  FROM fotoequipos a, fa_mdl_afiliados_mes_det_b02 b
               WHERE a.codigocompania(+)=b.codigocompania
                 AND b.periodo=TO_CHAR(ad_fecha-1,'yyyymm')
                 AND b.base='02'
                 AND b.activ='NO'
               GROUP BY b.periodo, b.codigocompania)
     GROUP BY NVL(clasif,'MOVILES TOTAL'), periodo;
     COMMIT;

    --AFILIADOS DESACT RUC10/RU20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS grupo, 'AFILIADOS DESACT' AS categoria,
           tdoc AS subcategoria, TO_CHAR(add_months(ad_fecha-1,1),'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania, b.ruccompania, obtener_tipodoc_2(b.ruccompania) tdoc
                 FROM fa_mdl_afiliados_mes_det_b02 a, p_compania b
              WHERE a.codigocompania=b.codigocompania
                AND a.ACTIV ='NO'
                AND A.PERIODO =TO_CHAR(AD_FECHA-1,'yyyymm')
                AND a.tipodocumento like 'RUC%')
     WHERE tdoc LIKE 'RUC%'
     GROUP BY tdoc;
     COMMIT;

    --BIFURCADOS RUC10/RUC20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'AFILIADOS DESACT' AS categoria,
           DECODE(clasif,'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
           DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20')) AS subcategoria,
           TO_CHAR(ADD_MONTHS(ad_fecha-1,1),'yyyymm') AS periodo, '2' AS base
        FROM(SELECT b.periodo, b.tdoc, b.codigocompania,COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                    SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET' ELSE 'MOVILES' END clasif
                 FROM fotoequipos a,
                 (SELECT obtener_tipodoc_2(z.ruccompania) tdoc, x.codigocompania, x.periodo
                      FROM fa_mdl_afiliados_mes_det_b02 x, p_compania z
                   WHERE X.codigocompania=Z.codigocompania (+)
                     AND X.ACTIV ='NO'
                     AND X.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                     AND X.tipodocumento like 'RUC%')b
              WHERE b.codigocompania=a.codigocompania (+)
                AND tdoc LIKE 'RUC%'
              GROUP BY b.periodo, b.codigocompania, tdoc)
     GROUP BY DECODE(clasif,'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
              DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20'));
     COMMIT;

    --[6] NUEVOS AFIL Desact
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS grupo, 'NUEVOS AFIL DESACT' AS categoria, 'TOTAL' AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM fa_mdl_afiliados_mes_det_nvo
     WHERE grafica ='Inferior'
       AND periodo =TO_CHAR(ad_fecha-1,'yyyymm')
       AND base ='02';
     COMMIT;

    --BIFURCADO NUEVOS AFIL DESACT TOTAL
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS grupo, 'NUEVOS AFIL DESACT' AS categoria,
           NVL(clasif, 'MOVILES TOTAL') AS subcategoria, periodo, '2' AS base
        FROM(SELECT b.periodo,b.codigocompania,COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
                 FROM fotoequipos a, fa_mdl_afiliados_mes_det_nvo b
              WHERE a.codigocompania(+)=b.codigocompania
                AND b.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND b.base ='02'
                AND b.grafica ='Inferior'
              GROUP BY b.periodo,b.codigocompania)
     GROUP BY NVL(clasif,'MOVILES TOTAL'),periodo;
     COMMIT;

    --NUEVOS AFIL RUC10/RUC20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS grupo, 'NUEVOS AFIL DESACT' AS categoria, tdoc AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc
                 FROM fa_mdl_afiliados_mes_det_nvo a, p_compania b
              WHERE a.codigocompania =b.codigocompania (+)
                AND A.PERIODO =TO_CHAR(AD_FECHA-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND grafica ='Inferior'
                AND base ='02')
     WHERE tdoc LIKE 'RUC%'
     GROUP BY tdoc;
     COMMIT;

    --BIFURCADO NUEVOS AFIL RUC10/RUC20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'NUEVOS AFIL DESACT' AS categoria,
           DECODE(clasif,'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
           DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20')) AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.periodo, b.tdoc, a.codigocompania,COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                    SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET' ELSE 'MOVILES' END clasif
                 FROM fotoequipos a,
                 (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc
                      FROM fa_mdl_afiliados_mes_det_nvo a, p_compania b
                   WHERE a.codigocompania =b.codigocompania (+)
                     AND A.PERIODO =TO_CHAR(AD_FECHA-1,'yyyymm')
                     AND a.tipodocumento like 'RUC%'
                     AND grafica ='Inferior'
                     AND base ='02')b
              WHERE b.codigocompania=a.codigocompania
                AND tdoc LIKE 'RUC%'
              GROUP BY a.periodo, a.codigocompania, tdoc)
     GROUP BY DECODE(clasif,'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
             DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20'));
     COMMIT;

    --[7] REMAINING
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS grupo,'REMAINING DESACT' AS categoria,'TOTAL' AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo,'2' AS base
        FROM fa_mdl_afiliados_mes_det_rem
     WHERE grafica ='Inferior'
       AND periodo =TO_CHAR(ad_fecha-1,'yyyymm')
       AND base ='02';
     COMMIT;

    --BIFURCADOS REMAINING TOTAL
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'REMAINING DESACT' AS categoria,
           NVL(clasif, 'MOVILES TOTAL') AS subcategoria, periodo, '2' AS base
        FROM(SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
                 FROM fotoequipos a, fa_mdl_afiliados_mes_det_rem b
              WHERE a.codigocompania(+)=b.codigocompania
                AND b.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND b.base ='02'
                AND b.grafica ='Inferior'
              GROUP BY a.periodo, a.codigocompania)
     GROUP BY NVL(clasif,'MOVILES TOTAL'), periodo;
     COMMIT;

     --REMAINING RUC10/20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS grupo, 'REMAINING DESACT' AS categoria, tdoc AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc
                 FROM fa_mdl_afiliados_mes_det_rem a, p_compania b
              WHERE a.codigocompania=b.codigocompania(+)
                AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND a.tipodocumento like 'RUC%'
                AND grafica ='Inferior'
                AND base ='02')
     WHERE tdoc LIKE 'RUC%'
     GROUP BY tdoc;
     COMMIT;

    --BIFURCADO RUC10/RUC20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'REMAINING DESACT' AS categoria,
           DECODE(clasif,'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
           DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20')) AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo,'2' AS base
        FROM(SELECT a.periodo, b.tdoc, a.codigocompania,COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                    SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET' ELSE 'MOVILES' END clasif
                 FROM fotoequipos a,
                      (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc
                            FROM fa_mdl_afiliados_mes_det_rem a, p_compania b
                        WHERE a.codigocompania=b.codigocompania(+)
                          AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                          AND a.tipodocumento like 'RUC%'
                          AND grafica ='Inferior'
                          AND base ='02')b
              WHERE b.codigocompania=a.codigocompania (+)
                AND tdoc LIKE 'RUC%'
              GROUP BY a.periodo, a.codigocompania, tdoc)
     GROUP BY DECODE(clasif,'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
              DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20'));
     COMMIT;

    --[8] DEACS
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'DESAFILIADOS DESACT' AS categoria, 'TOTAL' AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo,'2' AS base
        FROM fa_mdl_afiliados_mes_det_deac
     WHERE grafica ='Inferior'
       AND periodo =TO_CHAR(ad_fecha-1,'yyyymm')
       AND base ='02';
     COMMIT;

    --BIFURCADO TOTAL DEACS
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT a.codigocompania) AS cantidad, 'DESACTIVADOS' AS grupo,'DESAFILIADOS DESACT' AS categoria,
           NVL(b.clasif,'MOVILES TOTAL') AS subcategoria,a.periodo,'2' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_deac a,
            (SELECT a.periodo,a.codigocompania,COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                    SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
                 FROM ods_gpf.fotoequipos a
              WHERE upper(a.product) LIKE '%POST%'
              GROUP BY a.periodo,a.codigocompania) b
     WHERE a.codigocompania = b.codigocompania(+)
       AND a.grafica ='Inferior'
       AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
       AND a.base ='02'
     GROUP BY a.periodo,NVL(b.clasif,'MOVILES TOTAL');
     COMMIT;

    --DEACS RUC10/RUC20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS grupo,'DESAFILIADOS DESACT' AS categoria,
           tdoc AS subcategoria, TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc
                 FROM fa_mdl_afiliados_mes_det_deac a, p_compania b
                 WHERE a.codigocompania=b.codigocompania(+)
                  AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                  AND a.tipodocumento like 'RUC%'
                  AND grafica ='Inferior'
                  AND base ='02')
     WHERE tdoc LIKE 'RUC%'
     GROUP BY tdoc;
     COMMIT;

    --BIFURCADO RUC10/RUC20
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad, 'DESACTIVADOS' AS grupo,'DESAFILIADOS DESACT' AS categoria,
           DECODE(clasif,'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
           DECODE (TDOC, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20')) AS SUBCATEGORIA, TO_CHAR(AD_FECHA-1,'yyyymm') AS PERIODO, '2' AS BASE
         FROM(SELECT b.periodo,b.tdoc,b.codigocompania,COUNT(DISTINCT a.codigocontratobscs) AS contratos,
                     SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                     CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                     THEN 'INTERNET' ELSE 'MOVILES' END clasif
                  FROM FOTOEQUIPOS A,
             (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc, periodo
                      FROM fa_mdl_afiliados_mes_det_deac a, p_compania b
                      WHERE a.codigocompania=b.codigocompania
                        AND a.periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                        AND a.tipodocumento like 'RUC%'
                        AND grafica ='Inferior'
                        AND BASE ='02')B
               WHERE a.codigocompania(+) = b.codigocompania
                 AND tdoc LIKE 'RUC%'
               GROUP BY b.periodo,b.codigocompania,tdoc)
     GROUP BY DECODE(clasif,'INTERNET', DECODE(tdoc, 'RUC10', 'INTERNET RUC10', 'INTERNET RUC20'),
              DECODE (tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20'));
     COMMIT;

    --[9] DESAF Act VS NEWS Desact
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT (1) AS cantidad, 'IDENTIFICACION DE DESAFILIADOS' AS grupo,'DESAF ACT VS NEWS DESACT' AS categoria, 'SI' AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT codigocompania
                 FROM fa_mdl_afiliados_mes_det_deac
              WHERE grafica='Superior'
                AND periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND base ='02'
            INTERSECT
            SELECT codigocompania
                FROM fa_mdl_afiliados_mes_det_nvo
             WHERE grafica='Inferior'
               AND periodo  =TO_CHAR(ad_fecha-1,'yyyymm')
               AND base     ='02');
     COMMIT;

     --BIFURCADO DESAF ACT VS NEWS DESACT
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'IDENTIFICACION DE DESAFILIADOS' AS grupo,'DESAF ACT VS NEWS DESACT' AS categoria,
           clasif AS subcategoria, periodo, '2' AS base
        FROM(SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                    CASE WHEN COUNT(DISTINCT a.codigocompania) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET SI' ELSE 'MOVILES SI' END clasif
                 FROM fotoequipos a,
                      (SELECT codigocompania, periodo
                           FROM fa_mdl_afiliados_mes_det_deac
                        WHERE grafica='Superior'
                          AND periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                          AND base ='02'
                      INTERSECT
                      SELECT codigocompania, periodo
                          FROM fa_mdl_afiliados_mes_det_nvo
                       WHERE grafica='Inferior'
                         AND periodo  =TO_CHAR(ad_fecha-1,'yyyymm')
                         AND base     ='02') b
              WHERE a.codigocompania=b.codigocompania
              GROUP BY b.periodo, b.codigocompania)
     GROUP BY clasif, periodo;
     COMMIT;

    --[10] DESAF Por Desact
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT (1) AS cantidad,'IDENTIFICACION DE DESAFILIADOS' AS grupo, 'DESAF ACT VS NEWS DESACT' AS categoria, 'NO' AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT codigocompania
                 FROM fa_mdl_afiliados_mes_det_deac
              WHERE grafica ='Superior'
                AND periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                AND base ='02'
            MINUS
            SELECT codigocompania
                FROM fa_mdl_afiliados_mes_det_nvo
             WHERE grafica ='Inferior'
               AND periodo =TO_CHAR(ad_fecha-1,'yyyymm')
               AND base ='02');
     COMMIT;

    --BIFURCADO DESAF POR DESACT
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'IDENTIFICACION DE DESAFILIADOS' AS grupo,'DESAF ACT VS NEWS DESACT' AS categoria,
           CLASIF AS SUBCATEGORIA, PERIODO, '2' AS BASE
        FROM (SELECT b.periodo, b.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                     CASE WHEN COUNT(DISTINCT a.codigocompania) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                     THEN 'INTERNET NO' ELSE 'MOVILES NO' END clasif
                  FROM FOTOEQUIPOS A,
                       (SELECT codigocompania, periodo
                            FROM fa_mdl_afiliados_mes_det_deac
                         WHERE grafica ='Superior'
                           AND periodo =TO_CHAR(ad_fecha-1,'yyyymm')
                           AND base ='02'
                       MINUS
                       SELECT codigocompania, periodo
                           FROM fa_mdl_afiliados_mes_det_nvo
                        WHERE grafica ='Inferior'
                          AND PERIODO =TO_CHAR(AD_FECHA-1,'yyyymm')
                          AND BASE ='02') B
               WHERE A.CODIGOCOMPANIA(+)=B.CODIGOCOMPANIA
               GROUP BY b.periodo, b.codigocompania)
     GROUP BY clasif, periodo;
     COMMIT;

    --[11] base Activa TOTAL POST
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ENDING' AS grupo, 'BASE ACTIVA POST' AS categoria, 'TOTAL' AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.tipodoc,a.periodo,b.product,codigocompania,b.t_plan
                 FROM(SELECT codigocompania,periodo,codigoplantarifariobscs,product,estadocontrato,obtener_tipodoc_2(ruccompania) AS TIPODOC
                          FROM fotoequipos) a,
                     (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan FROM pm_planes) b
                       WHERE a.codigoplantarifariobscs=b.numeroplan(+)
                         AND estadocontrato IN ('Activo','Suspendido')
                       GROUP BY a.tipodoc,a.periodo,b.product,codigocompania,t_plan)
     WHERE upper(product) LIKE '%POST%'
     AND t_plan = 'Comercial';
     COMMIT;

    --BIFURCADO base ACTIVA POST
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT (DISTINCT codigocompania) AS cantidad, 'ENDING' AS grupo, 'BASE ACTIVA POST' AS categoria,
           clasif AS subcategoria,periodo,'2' AS base
        FROM (SELECT a.periodo,a.codigocompania,COUNT (DISTINCT a.codigocontratobscs) AS contratos,
                     SUM (DECODE (a.product, 'Internet Hogar Post', 1, 0)) sumabafi,
                     CASE WHEN COUNT (DISTINCT a.codigocontratobscs) = SUM (DECODE (a.product,'Internet Hogar Post', 1,0))
                     THEN 'INTERNET TOTAL' ELSE 'MOVILES TOTAL' END clasif
                  FROM fotoequipos a, pm_planes b
               WHERE a.codigoplantarifariobscs(+) = b.c_plan
                 AND UPPER (a.product) LIKE '%POST%'
                 AND b.t_plan = 'Comercial'
                 AND a.estadocontrato IN ('Activo', 'Suspendido')
               GROUP BY a.periodo, a.codigocompania)
     GROUP BY clasif, periodo;
     COMMIT;

    --[12] base Activa TOTAL POST DNI
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ENDING' AS grupo, 'BASE ACTIVA POST' AS categoria, 'DNI' AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT a.tipodoc,a.periodo,b.product,obtener_tipodoc_2(a.ruccompania) tdoc,codigocompania, b.t_plan
                 FROM(SELECT estadocontrato,codigocompania,codigoplantarifariobscs,ruccompania,periodo,product,obtener_tipodoc_2(ruccompania) AS tipodoc
                          FROM fotoequipos) a,
                      (SELECT TO_NUMBER(C_PLAN) NUMEROPLAN,N_PLAN,product,T_PLAN FROM PM_PLANES) b
                        WHERE a.CODIGOPLANTARIFARIOBSCS=b.NUMEROPLAN
                          AND ESTADOCONTRATO IN ('Activo','Suspendido')
                        GROUP BY a.TIPODOC,a.periodo,b.product,obtener_tipodoc_2(a.ruccompania),codigocompania,t_plan)
     WHERE upper(product) LIKE '%POST%'
       AND TIPODOC='DNI'
       AND T_PLAN = 'Comercial';
     COMMIT;

    --BIFURCADO base ACTIVA TOAL POST DNI
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ENDING' AS grupo,'BASE ACTIVA POST' AS categoria,
           clasif AS subcategoria, periodo,'2' AS base
        FROM (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                     CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                     THEN 'INTERNET DNI' ELSE 'MOVILES DNI' END clasif
                  FROM fotoequipos a, PM_PLANES b
               WHERE a.CODIGOPLANTARIFARIOBSCS=b.C_PLAN
                 AND UPPER(a.product) LIKE '%POST%'
                 AND b.T_PLAN='Comercial'
                 AND OBTENER_TIPODOC_2(a.ruccompania)='DNI'
                 AND a.ESTADOCONTRATO IN ('Activo','Suspendido')
               GROUP BY a.periodo, a.codigocompania)
     GROUP BY clasif, periodo;
     COMMIT;

    --[13] base Activa TOTAL POST RUC
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ENDING' AS grupo,'BASE ACTIVA POST' AS categoria,'RUC' AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo,'2' AS base
        FROM(SELECT a.tipodoc,a.periodo,b.product,codigocompania,b.t_plan
                 FROM(SELECT estadocontrato,codigocompania,codigoplantarifariobscs,ruccompania,periodo,product,obtener_tipodoc_2(ruccompania) AS tipodoc
                          FROM fotoequipos) a,
                     (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan FROM pm_planes) b
              WHERE a.codigoplantarifariobscs=b.numeroplan
                AND estadocontrato IN ('Activo','Suspendido'))
     WHERE upper(product) LIKE '%POST%'
       AND tipodoc LIKE 'RUC%'
       AND t_plan = 'Comercial';
     COMMIT;

    --BIFURCADO base ACTIVA POST RUC
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ENDING' AS grupo,'BASE ACTIVA POST' AS categoria,
           clasif AS subcategoria, periodo,'2' AS base
        FROM (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos, SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                     CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                     THEN 'INTERNET RUC' ELSE 'MOVILES RUC' END clasif
                  FROM fotoequipos a, pm_planes b
               WHERE a.codigoplantarifariobscs=b.c_plan
                 AND UPPER(a.product) LIKE '%POST%'
                 AND b.T_PLAN='Comercial'
                 AND obtener_tipodoc_2(a.ruccompania) like 'RUC%'
                 AND a.estadocontrato IN ('Activo','Suspendido')
               GROUP BY a.periodo, a.codigocompania)
     GROUP BY clasif, periodo;
     COMMIT;

    --[R] base Activa TOTAL POST RUC - SEGMENTADO
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad, 'ENDING' AS grupo,'BASE ACTIVA POST RUC' AS categoria,
           tdoc AS subcategoria, TO_CHAR(ad_fecha-1,'yyyymm') AS periodo,'2' AS base
        FROM(SELECT a.tipodoc,a.periodo,b.product,obtener_tipodoc_2(a.ruccompania) tdoc,codigocompania,b.t_plan
                 FROM(SELECT estadocontrato,codigocompania,codigoplantarifariobscs,ruccompania,periodo,product,obtener_tipodoc_2(ruccompania) AS TIPODOC
                          FROM fotoequipos) a,
                     (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan FROM pm_planes) b
                       WHERE a.codigoplantarifariobscs=b.numeroplan
                       AND estadocontrato IN ('Activo','Suspendido')
              GROUP BY a.tipodoc,a.periodo,b.product,obtener_tipodoc_2(a.ruccompania),codigocompania,t_plan)
     WHERE upper(product) LIKE '%POST%'
       AND tipodoc LIKE 'RUC%'
       AND t_plan = 'Comercial'
     GROUP BY tdoc;
     COMMIT;

    --BIFURCADO RUC10/RUC20 base ACTIVA POST
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ENDING' AS grupo,'BASE ACTIVA POST RUC' AS categoria,
           DECODE(clasif,'INTERNET', DECODE(tdoc,'RUC10', 'INTERNET RUC10','INTERNET RUC20'),
           DECODE(tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20' )) AS subcategoria, periodo, '2' AS base
        FROM (SELECT a.periodo, a.codigocompania, COUNT(DISTINCT a.codigocontratobscs) AS contratos,obtener_tipodoc_2(a.ruccompania) AS tdoc,
                     SUM(DECODE(a.product,'Internet Hogar Post',1,0)) sumabafi,
                     CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                     THEN 'INTERNET' ELSE 'MOVILES' END clasif
                  FROM fotoequipos a, pm_planes b
               WHERE a.codigoplantarifariobscs=b.c_plan
                 AND UPPER(a.product) LIKE '%POST%'
                 AND b.t_plan='Comercial'
                 AND obtener_tipodoc_2(a.ruccompania) like 'RUC%'
                 AND a.estadocontrato IN ('Activo','Suspendido')
               GROUP BY a.periodo, a.codigocompania, obtener_tipodoc_2(a.ruccompania))
     GROUP BY DECODE(clasif,'INTERNET', DECODE(tdoc,'RUC10', 'INTERNET RUC10','INTERNET RUC20'),
              DECODE(tdoc, 'RUC10', 'MOVILES RUC10', 'MOVILES RUC20' )), periodo;
     COMMIT;

    --ruc10 con y sin negocio
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ENDING' AS grupo,'BASE ACTIVA POST RUC' AS categoria,
           tipodocumento AS subcategoria,TO_CHAR(ad_fecha-1,'yyyymm') AS periodo,'2' AS base
        FROM(SELECT c.tipodocumento,a.periodo,b.product,codigocompania,b.t_plan
                 FROM(SELECT ruccompania,codigocompania,periodo,codigoplantarifariobscs,estadocontrato
                          FROM fotoequipos) a,
                     (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan FROM pm_planes) b,
                     (SELECT *
                          FROM(SELECT ruccompania,tipodocumento,ROW_NUMBER () OVER (PARTITION BY ruccompania ORDER BY NPCREATEDDATE DESC) rn
                                   FROM tnp_preevaluacion)WHERE RN=1) C
                       WHERE a.codigoplantarifariobscs=b.numeroplan(+)
                         AND a.ruccompania =c.ruccompania
                         AND estadocontrato IN ('Activo','Suspendido')
                       GROUP BY c.tipodocumento, a.periodo,b.product,codigocompania,t_plan)
     WHERE upper(product) LIKE '%POST%'
       AND tipodocumento LIKE 'RUC%'
       AND t_plan = 'Comercial'
     GROUP BY tipodocumento;
     COMMIT;

    --BIFURCADO RUC10 CON/SIN NEGOCIO
    INSERT INTO fa_mdl_afiliados_acumu_res_3 (cantidad,grupo,categoria,subcategoria,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ENDING' AS grupo,'BASE ACTIVA POST RUC' AS categoria,
           DECODE(clasif,'INTERNET', DECODE(tipodocumento, 'RUC10 CON NEGOCIO', 'INTERNET RUC10 CON NEGOCIO', 'INTERNET RUC10 SIN NEGOCIO'),
           DECODE (tipodocumento, 'RUC10 CON NEGOCIO', 'MOVILES RUC10 CON NEGOCIO', 'MOVILES RUC10 SIN NEGOCIO')) AS subcategoria,
           TO_CHAR(ad_fecha-1,'yyyymm') AS periodo, '2' AS base
        FROM(SELECT c.tipodocumento,a.periodo,b.product,a.codigocompania,b.t_plan,
                    CASE WHEN COUNT(DISTINCT a.codigocontratobscs) = SUM(DECODE(a.product,'Internet Hogar Post',1,0))
                    THEN 'INTERNET' ELSE 'MOVILES' END clasif
                 FROM (SELECT ruccompania,codigocompania,codigoplantarifariobscs,periodo,product,codigocontratobscs,estadocontrato
                           FROM fotoequipos) a,
                       (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan FROM pm_planes) b,
                       (SELECT *
                            FROM(SELECT ruccompania,tipodocumento,ROW_NUMBER () OVER (PARTITION BY ruccompania ORDER BY NPCREATEDDATE DESC) rn
                                     FROM tnp_preevaluacion)WHERE RN=1) C
              WHERE a.codigoplantarifariobscs=b.numeroplan(+)
                AND a.ruccompania =c.ruccompania
                AND ESTADOCONTRATO IN ('Activo','Suspendido')
              GROUP BY c.tipodocumento,a.periodo,b.product,a.codigocompania,b.t_plan)
     WHERE upper(product) LIKE '%POST%'
      AND tipodocumento LIKE 'RUC%'
      AND t_plan = 'Comercial'
     GROUP BY DECODE(clasif,'INTERNET', DECODE(tipodocumento, 'RUC10 CON NEGOCIO', 'INTERNET RUC10 CON NEGOCIO', 'INTERNET RUC10 SIN NEGOCIO'),
           DECODE (tipodocumento, 'RUC10 CON NEGOCIO', 'MOVILES RUC10 CON NEGOCIO', 'MOVILES RUC10 SIN NEGOCIO')) ;
     COMMIT;

    --[F]INTERNET POST
    DELETE FROM FA_INT_CONCILIACION WHERE periodo=TO_CHAR(ad_fecha-1,'yyyymm') AND base='1';
    DELETE FROM FA_INT_CONCILIACION WHERE periodo=to_char(ad_fecha-1,'yyyymm') AND base='2';

    --base 1
    INSERT INTO FA_INT_CONCILIACION(PERIODO, CANTIDAD, BASE, PRODUCT)
    SELECT periodo, COUNT( DISTINCT codigocompaniatel) AS cantidad, '1' AS BASE, PRODUCT
        FROM(SELECT periodo,codigocompaniatel,product
                    FROM (SELECT to_char(SYSDATE-1,'yyyymm') AS periodo,a.codigocompaniatel,b.product,
                                 row_number () over (PARTITION BY codigocompaniatel ORDER BY fechaactivacioncontrato DESC) AS rn
                              FROM(SELECT to_number(codigocompania) AS codigocompaniatel
                                       FROM fa_mdl_afiliados_mes_det_nvo
                                    where periodo=to_char(SYSDATE-1,'yyyymm')
                                    and base='01'
                                    AND activ='SI') a,
                         (SELECT codigocompania, product, fechaactivacioncontrato
                              FROM p_fotoequipos_historico
                           WHERE periodo>to_char(ADD_MONTHS(SYSDATE-1-1,-24),'yyyymm')
                         UNION ALL
                          SELECT codigocompania, product, fechaactivacioncontrato
                              FROM fotoequipos) b
              WHERE a.codigocompaniatel=b.codigocompania(+))
     WHERE RN=1
     AND product='Internet Hogar Post')
     GROUP BY periodo, product;
     COMMIT;
    --base 2
    INSERT INTO FA_INT_CONCILIACION(PERIODO, CANTIDAD, BASE, PRODUCT)
    SELECT periodo, COUNT( DISTINCT codigocompaniatel) AS cantidad, '2' AS BASE, PRODUCT
        FROM(SELECT periodo,codigocompaniatel,product
                    FROM (SELECT to_char(SYSDATE-1,'yyyymm') AS periodo,a.codigocompaniatel,b.product,
                                 row_number () over (PARTITION BY codigocompaniatel ORDER BY fechaactivacioncontrato DESC) AS rn
                              FROM(SELECT to_number(codigocompania) AS codigocompaniatel
                                       FROM fa_mdl_afiliados_mes_det_nvo
                                    where periodo=to_char(SYSDATE-1,'yyyymm')
                                    and base='02'
                                    AND activ='SI') a,
                         (SELECT codigocompania, product, fechaactivacioncontrato
                              FROM p_fotoequipos_historico
                           WHERE periodo>to_char(ADD_MONTHS(SYSDATE-1-1,-24),'yyyymm')
                         UNION ALL
                          SELECT codigocompania, product, fechaactivacioncontrato
                              FROM fotoequipos) b
              WHERE a.codigocompaniatel=b.codigocompania(+))
     WHERE RN=1
     AND product='Internet Hogar Post')
     GROUP BY periodo, product;
     COMMIT;

END GENERAREPORTEAFILIADOSCONCIL2;

PROCEDURE GENERAREPORTEREGIONESCONCIL2(ad_fecha DATE)
IS
BEGIN
---Base Regiones
    ------------------------------------------------
    ---Hoja base 01
    ------------------------------------------------
    DELETE FROM ods_gpf.fa_mdl_afilia_acumuladoreg_res WHERE periodo=TO_CHAR(add_months(ad_fecha,1),'yyyymm');
    DELETE FROM ods_gpf.fa_mdl_afilia_acumuladoreg_res WHERE periodo=TO_CHAR(ad_fecha,'yyyymm') AND categoria not LIKE 'AFILIADOS%';
    COMMIT;

    --[1] AFILIADOS Act (a INicio de mes)
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'AFILIADOS ACT' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END AS region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_b01
      WHERE activ='SI'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --lima provINciAS
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'AFILIADOS ACT' AS Categoria,DECODE(b.region,'LIMA','LIMA','PROVINCIAS')AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END AS region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_b01 a,p_compania b
     WHERE a.codigocompania=b.codigocompania
        AND a.activ='SI'
        AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
      GROUP BY DECODE(b.region,'LIMA','LIMA','PROVINCIAS'),CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
                  WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
                  WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
                  ELSE 'LIMA' END;
    COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'AFILIADOS ACT' AS Categoria,portabilidad,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END AS region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'1'
        FROM (SELECT a.codigocompania,DECODE(NVL(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_b01 a,
                       (SELECT b.codigocompania
                            FROM (SELECT *
                                      FROM ods_gpf.tnp_portabilidad
                                    WHERE mensaje='SPR')a, ods_gpf.fotoequipos b
                          WHERE a.INicio_rango=b.telefono
                          GROUP BY b.codigocompania) b
                WHERE a.codigocompania=b.codigocompania(+)
                   AND a.activ='SI'
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm'))
      GROUP BY portabilidad,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[2] NUEVOS AFIL Act
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'NUEVOS AFIL ACT' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
      WHERE grafica='Superior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='01'
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --venta postventa
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'NUEVOS AFIL ACT' AS Categoria,
           DECODE(NVL(b.codigocompania,'1'),'1','En venta','Post venta') AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo a,
             (SELECT codigocompania
                  FROM ods_gpf.p_INcidentes
                WHERE resolucionINcidente
                       IN ('ENVIO DE  RECIBO SOLO POR MAIL',
                           'ENVIO DE RECIBOS POR MAIL Y FISICO',
                           'SE ENVIA RECIBO POR CORREO',
                           'SE ENVIA RECIBO POR MAIL',
                           'SE ENVÍA RECIBO POR MAIL')
                   AND especificacionINcidente
                       IN('ENVIO DE RECIBO POR MAIL',
                          'ENVÍO DE RECIBOS POR MAIL',
                          'ENVIO DE RECIBOS POR MAIL')
                   AND tipoINcidente = 'PEDIDO'
                   AND estadoINcidente='Cerrado'
                   AND TO_CHAR(fechaINgresoINcidente,'yyyymm')=TO_CHAR(ad_fecha,'yyyymm')
                GROUP BY codigocompania) b
      WHERE a.codigocompania=b.codigocompania(+)
         AND a.grafica='Superior'
         AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND a.base='01'
      GROUP BY DECODE(NVL(b.codigocompania,'1'),'1','En venta','Post venta'),
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'NUEVOS AFIL ACT' AS Categoria,portabilidad AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM(SELECT a.codigocompania,DECODE(NVL(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad,ubicacion
                 FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo a,
                     (SELECT b.codigocompania
                          FROM (SELECT *
                                    FROM ods_gpf.tnp_portabilidad
                                  WHERE mensaje='SPR')a, ods_gpf.fotoequipos b
                        WHERE a.INicio_rango=b.telefono
                        GROUP BY b.codigocompania) b
               WHERE a.codigocompania=b.codigocompania(+)
                  AND a.grafica='Superior'
                  AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                  AND a.base='01')
      GROUP BY portabilidad,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --lima provINciAS
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT a.codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'NUEVOS AFIL ACT' AS Categoria,
           DECODE(b.region,'LIMA','LIMA','PROVINCIAS')  AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo a, ods_gpf.p_compania b
      WHERE a.codigocompania=b.codigocompania
         AND grafica='Superior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='01'
      GROUP BY DECODE(b.region,'LIMA','LIMA','PROVINCIAS'),
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;

    --[3] REMAINING
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'REMAINING ACT' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm')AS periodo,'1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_rem
      WHERE grafica='Superior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='01'
    GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
             WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
             WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
             ELSE 'LIMA' END;
     COMMIT;

     --porta
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'REMAINING ACT' AS Categoria,portabilidad AS Subcategoria,CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM (SELECT a.codigocompania,DECODE(NVL(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_rem a,
                       (SELECT DISTINCT b.codigocompania
                            FROM (SELECT *
                                      FROM ods_gpf.tnp_portabilidad
                                    WHERE mensaje='SPR')a, ods_gpf.fotoequipos b
                          WHERE a.INicio_rango=b.telefono) b
                WHERE a.codigocompania=b.codigocompania(+)
                   AND a.grafica='Superior'
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.base='01')
      GROUP BY portabilidad,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[4] DESAFILIADOS Act
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'DESAFILIADOS ACT' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region, TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
      WHERE grafica='Superior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='01'
    GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
             WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
             WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
             ELSE 'LIMA' END;
    COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'DESAFILIADOS ACT' AS Categoria,portabilidad AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM (SELECT a.codigocompania,decode(nvl(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_deac a,
                       (SELECT DISTINCT b.codigocompania
                            FROM (SELECT * FROM ods_gpf.tnp_portabilidad
                                    WHERE mensaje='SPR')a ,
                                    ods_gpf.fotoequipos b
                          WHERE a.INicio_rango=b.telefono) b
                WHERE a.codigocompania=b.codigocompania (+)
                   AND a.grafica='Superior'
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.base='01')
      GROUP BY PORTABILIDAD,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --lima provINciAS
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT '-'||COUNT(DISTINCT a.codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'DESAFILIADOS ACT' AS Categoria,
           DECODE(b.region,'LIMA','LIMA','PROVINCIAS')  AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_deac a,p_compania b
      WHERE a.codigocompania=b.codigocompania
         AND grafica='Superior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='01'
      GROUP BY DECODE(b.region,'LIMA','LIMA','PROVINCIAS'),
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[5] AFILIADOS Desact (a INicio de mes)
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS Grupo,'AFILIADOS DESACT' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_b01
      WHERE activ='NO'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
    GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
             WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
             WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
             ELSE 'LIMA' END;
    COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS Grupo,'AFILIADOS DESACT' AS Categoria,portabilidad AS Subcategoria,CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
                  WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
                  WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
                  ELSE 'LIMA' END region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'1' AS base
        FROM (SELECT a.codigocompania,decode(nvl(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_b01 a,
                       (SELECT DISTINCT b.codigocompania
                            FROM (SELECT *
                                      FROM ods_gpf.tnp_portabilidad
                                    WHERE mensaje='SPR')a, ods_gpf.fotoequipos b
                          WHERE a.INicio_rango=b.telefono) b
                WHERE a.codigocompania=b.codigocompania(+)
                   AND a.activ='NO'
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm'))
      GROUP BY portabilidad,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[6] NUEVOS AFIL Desact
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS Grupo,'NUEVOS AFIL DESACT' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
      WHERE grafica='INferior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='01'
    GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
             WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
             WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
             ELSE 'LIMA' END;
    COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS Grupo,'NUEVOS AFIL DESACT' AS Categoria,portabilidad AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM (SELECT a.codigocompania,decode(nvl(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo a,
                       (SELECT DISTINCT b.codigocompania
                            FROM (SELECT *
                                      FROM ods_gpf.tnp_portabilidad
                                    WHERE mensaje='SPR')a , ods_gpf.fotoequipos b
                          WHERE a.INicio_rango=b.telefono) b
                WHERE a.codigocompania=b.codigocompania
                   AND a.grafica='INferior'
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.base='01')
      GROUP BY portabilidad,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[7] REMAINING
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS Grupo,'REMAINING DESACT' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_rem
      WHERE grafica='INferior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='01'
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS Grupo,'REMAINING DESACT' AS Categoria,portabilidad AS Subcategoria,CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
                  WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
                  WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
                  ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM (SELECT a.codigocompania,decode(nvl(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_rem a,
                       (SELECT DISTINCT b.codigocompania
                            FROM (SELECT *
                                      FROM ods_gpf.tnp_portabilidad
                                    WHERE mensaje='SPR')a, ods_gpf.fotoequipos b
                          WHERE a.INicio_rango=b.telefono) b
                WHERE a.codigocompania=b.codigocompania(+)
                   AND a.grafica='INferior'
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.base='01')
      GROUP BY portabilidad,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[8] DEACS
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS Grupo,'DESAFILIADOS DESACT' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
      WHERE grafica='INferior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='01'
    GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
             WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
             WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
             ELSE 'LIMA' END;
    COMMIT;

    --porta
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT '-'||COUNT(DISTINCT codigocompania) AS cantidad,'DESACTIVADOS' AS Grupo,'DESAFILIADOS DESACT' AS Categoria,portabilidad AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm')  AS periodo,'1' AS base
        FROM (SELECT a.codigocompania,decode(nvl(b.codigocompania,-1),-1,'No Porta','Porta') portabilidad,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_deac a,
                       (SELECT b.codigocompania
                            FROM (SELECT *
                                      FROM ods_gpf.tnp_portabilidad
                                    WHERE mensaje='SPR')a , ods_gpf.fotoequipos b
                          WHERE a.INicio_rango=b.telefono
                          GROUP BY b.codigocompania ) b
                WHERE a.codigocompania=b.codigocompania
                   AND a.grafica='INferior'
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.base='01')
      GROUP BY portabilidad,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[9] DESAF Act VS NEWS Desact [si]
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT (DISTINCT codigocompania) AS cantidad,'IDENTIFICACION DE DESAFILIADOS' AS Grupo,'DESAF ACT VS NEWS DESACT' AS Categoria,'SI' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm')  AS periodo,'1' AS base
        FROM(SELECT codigocompania,ubicacion
                 FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
               WHERE grafica='Superior'
                  AND periodo=TO_CHAR(ad_fecha,'yyyymm')
                  AND base='01'
           INTERSECT
             SELECT codigocompania,ubicacion
                 FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
               WHERE grafica='INferior'
                  AND periodo=TO_CHAR(ad_fecha,'yyyymm')
                  AND base='01')
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[10] DESAF Act VS NEWS Desact [no]
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'IDENTIFICACION DE DESAFILIADOS' AS Grupo,'DESAF ACT VS NEWS DESACT' AS Categoria,'NO' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm')  AS periodo,'1' AS base
        FROM(SELECT codigocompania,ubicacion
                 FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
               WHERE grafica='Superior'
                  AND periodo=TO_CHAR(ad_fecha,'yyyymm')
                  AND base='01'
           MINUS
             SELECT codigocompania,ubicacion
                 FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
               WHERE grafica='INferior'
                  AND periodo=TO_CHAR(ad_fecha,'yyyymm')
                  AND base='01')
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[11] DESAF Act VS Motiv [si]
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT (DISTINCT codigocompania) AS cantidad,'IDENTIFICACION DE DESAFILIADOS' AS Grupo,'DESAF ACT VS MOTIV' AS Categoria,
           'SI' AS Subcategoria,'PERU' region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM(SELECT DISTINCT codigocompania
                 FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
               WHERE grafica='Superior'
                  AND periodo=TO_CHAR(ad_fecha,'yyyymm')
                  AND base='01'
           INTERSECT
             SELECT DISTINCT codigocompania
                 FROM ods_gpf.fa_bASedesafiliados_sd);
     COMMIT;

     --[12] DESAF Act VS Motiv [no]
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT (DISTINCT codigocompania) AS cantidad,'IDENTIFICACION DE DESAFILIADOS' AS Grupo,'DESAF ACT VS MOTIV' AS Categoria,'NO' AS Subcategoria,
           'PERU' region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM(SELECT DISTINCT codigocompania
                 FROM ods_gpf.fa_mdl_afiliados_mes_det_deac
               WHERE grafica='Superior'
                 AND periodo=TO_CHAR(ad_fecha,'yyyymm')
                 AND base='01'
           MINUS
             SELECT DISTINCT codigocompania
                 FROM ods_gpf.fa_bASedesafiliados_sd);
    COMMIT;

    --[13] base Activa TOTAL POST
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ENDING' AS Grupo,'base ACTIVA POST' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM (SELECT a.tipodoc,a.periodo,b.product,codigocompania,b.t_plan,a.departamento
                  FROM (SELECT codigoplantarifariobscs,departamento, codigocompania,periodo, estadocontrato, obtener_tipodoc_2(ruccompania) AS tipodoc
                            FROM ods_gpf.fotoequipos) a,
                                (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan
                                     FROM ods_gpf.pm_planes) b
                WHERE a.codigoplantarifariobscs=b.numeroplan(+)
                   AND estadocontrato IN ('Activo','Suspendido')
                GROUP BY a.tipodoc,a.periodo,b.product,codigocompania,t_plan,a.departamento)
      WHERE product IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','IN Post')
         AND t_plan = 'Comercial'
      GROUP BY CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[14] base Activa TOTAL POST DNI
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ENDING' AS Grupo,'base ACTIVA POST' AS Categoria,'DNI' AS Subcategoria,
           CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM (SELECT a.tipodoc,a.periodo,b.product,codigocompania,b.t_plan,a.departamento
                  FROM (SELECT codigoplantarifariobscs,departamento, codigocompania,periodo, estadocontrato, obtener_tipodoc_2(ruccompania) AS tipodoc
                            FROM ods_gpf.fotoequipos) a,
                       (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan
                                  FROM ods_gpf.pm_planes) b
                WHERE a.codigoplantarifariobscs=b.numeroplan(+)
                   AND estadocontrato IN ('Activo','Suspendido')
                GROUP BY a.tipodoc,a.periodo,b.product,codigocompania,b.t_plan,a.departamento)
      WHERE product IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','IN Post')
         AND tipodoc='DNI'
         AND t_plan = 'Comercial'
    GROUP BY CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
                  WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
                  WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
                  ELSE 'LIMA' END;
    COMMIT;

    --[R] base Activa TOTAL POST DNI - SEGMENTADO LIMA PROVINCIAS
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ENDING' AS Grupo,'base ACTIVA POST DNI' AS Categoria,DECODE(region,'LIMA','LIMA','PROVINCIAS') AS Subcategoria,
           CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM (SELECT a.tipodoc,a.periodo,b.product,codigocompania,b.t_plan,a.region,a.departamento,estadocontrato
                  FROM (SELECT codigocompania,region,periodo,codigoplantarifariobscs,obtener_tipodoc_2(ruccompania) AS tipodoc,departamento, estadocontrato
                            FROM ods_gpf.fotoequipos) a,
                       (SELECT to_number(c_plan) numeroplan,n_plan,product,t_plan
                            FROM ods_gpf.pm_planes) b
                WHERE a.codigoplantarifariobscs=b.numeroplan(+)
                   AND estadocontrato IN ('Activo','Suspendido')
                GROUP BY  a.tipodoc,a.periodo,b.product,codigocompania,b.t_plan,a.region,a.departamento, estadocontrato)
      WHERE product IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','IN Post')
         AND tipodoc='DNI'
         AND t_plan = 'Comercial'
      GROUP BY DECODE(region,'LIMA','LIMA','PROVINCIAS'),
               CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[R1] base Activa TOTAL POST DNI - SEGMENTADO PORTABILIDAD
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ENDING' AS Grupo,'base ACTIVA POST' AS Categoria,portabilidad AS Subcategoria,
           CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM (SELECT a.tipodoc,a.periodo,a.product,a.codigocompania,decode(c.numero_documento,null,'No Porta','Porta') portabilidad,b.t_plan,a.departamento
                  FROM (SELECT obtener_tipodoc_2(ruccompania) AS tipodoc, periodo, product, codigocompania, departamento, estadocontrato, codigoplantarifariobscs, ruccompania
                            FROM ods_gpf.fotoequipos) a,
                       (SELECT to_number(c_plan) numeroplan,n_plan,product,t_plan
                            FROM ods_gpf.pm_planes) b,
                       (SELECT NUMERO_DOCUMENTO,PERIODO
                            FROM(SELECT a.*,row_number() over (PARTITION BY a.numero_documento,a.periodo
                                        ORDER BY to_date(fec_registro_rep,'dd/mm/yyyy hh24:mi:ss') desc nulls lASt) AS num_c
                                     FROM ods_gpf.tnp_portabilidad a
                                   WHERE mensaje = 'SPR')
                          WHERE num_c = 1) c
                WHERE a.ruccompania=c.numero_documento(+)
                   AND a.codigoplantarifariobscs=b.numeroplan(+)
                   AND estadocontrato IN ('Activo','Suspendido')
                   AND b.t_plan = 'Comercial')
      WHERE product IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','IN Post')
      GROUP BY portabilidad,
               CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END
      ORDER BY portabilidad;
    COMMIT;

    --[R2] base Activa TOTAL POST DNI - SEGMENTADO PORTABILIDAD
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ENDING' AS Grupo,'base ACTIVA POST DNI' AS Categoria,portabilidad AS Subcategoria,
           CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'1' AS base
        FROM (SELECT A.TIPODOC,A.PERIODO,A.PRODUCT,A.CODIGOCOMPANIA,DECODE(C.NUMERO_DOCUMENTO,NULL,'No Porta','Porta') PORTABILIDAD,B.T_PLAN,A.DEPARTAMENTO
                  FROM (SELECT obtener_tipodoc_2(ruccompania) AS tipodoc, periodo, product, codigocompania, departamento, estadocontrato, ruccompania, codigoplantarifariobscs
                            FROM ods_gpf.fotoequipos) a,
                       (SELECT to_number(c_plan) numeroplan,n_plan,product,t_plan
                            FROM pm_planes) b,
                       (SELECT numero_documento,periodo
                            FROM(SELECT a.*,row_number () over (PARTITION BY a.numero_documento,a.periodo
                                        ORDER BY to_date(fec_registro_rep,'dd/mm/yyyy hh24:mi:ss') DESC NULLS LAST) AS num_c
                                     FROM ods_gpf.tnp_portabilidad a
                                   WHERE mensaje = 'SPR')
                          WHERE num_c = 1) c
                WHERE a.codigoplantarifariobscs=b.numeroplan(+)
                   AND a.ruccompania=c.numero_documento(+)
                   AND estadocontrato IN ('Activo','Suspendido')
                   AND b.t_plan = 'Comercial')
      WHERE product IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','IN Post')
         AND tipodoc='DNI'
    GROUP BY portabilidad,
             CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
             WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
             WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
             ELSE 'LIMA' END order by portabilidad;
    COMMIT;

    ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ---Hoja base 02
    ------------------------------------------------
    --[1] AFILIADOS Act (a INicio de mes)
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'AFILIADOS ACT' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'2' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_b02
      WHERE activ='SI'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[1.1] AFILIADOS ACT DNI
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'AFILIADOS ACT DNI' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'2' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_b02
      WHERE activ='SI'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND tipodocumento='DNI'
    GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
             WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
             WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
             ELSE 'LIMA' END;
    COMMIT;

    --[1.2] AFILIADOS ACT RUC
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'AFILIADOS ACT RUC' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'2' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_b02
      WHERE activ='SI'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND tipodocumento='RUC'
    GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
                  WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
                  WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
                  ELSE 'LIMA' END;
    COMMIT;

    --[1.3] AFILIADOS ACT RUC (Ruc10/Ruc20)
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'AFILIADOS ACT RUC' AS Categoria,tdoc AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'2' AS base
        FROM (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_b02 a, ods_gpf.p_compania b
                WHERE a.codigocompania=b.codigocompania(+)
                   AND a.ACTIV='SI'
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC')
      WHERE tdoc LIKE 'RUC%'
      GROUP BY tdoc,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --ruc10 con y sin negocio
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'AFILIADOS ACT RUC' AS Categoria,tipodocumento AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'2' AS base
        FROM (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc , c.tipodocumento,a.ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_b02 a,ods_gpf.p_compania b,
                       (SELECT *
                            FROM (SELECT ruccompania,tipodocumento, row_number () over (PARTITION BY ruccompania ORDER BY npcreateddate desc) rn
                                      FROM ods_gpf.tnp_preevaluacion)
                          WHERE rn=1) c
                WHERE a.codigocompania=b.codigocompania (+)
                   AND b.ruccompania=c.ruccompania(+)
                   AND a.activ='SI'
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC')
      WHERE tipodocumento IS NOT NULL
         AND tipodocumento LIKE 'RUC%'
      GROUP BY tipodocumento,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --afiliados activos RUC recibo electronico
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS grupo,'AFILIADOS ACT RUC' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico','Recibo Electrónico(Ruc10)') AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'2' AS base
        FROM (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion,a.ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_b02 a,ods_gpf.p_compania b
                WHERE a.codigocompania=b.codigocompania
                   AND a.activ='SI'
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')  AND a.tipodocumento='RUC'
                   AND Obtener_tipodoc_2(b.ruccompania)='RUC10'
                   AND tiponotificacion='Recibo Electrónico'
                   AND NOT EXISTS (SELECT codigocompania
                                       FROM ods_gpf.fa_mdl_afiliados_mes_det_b02 b
                                     WHERE b.activ='SI'
                                        AND b.periodo=TO_CHAR(ad_fecha,'yyyymm')
                                        AND b.tipodocumento='RUC'
                                        AND b.tiponotificacion='Recibo Electrónico y Físico'
                                        AND a.codigocompania = b.codigocompania))
      WHERE tdoc='RUC10'
      GROUP BY tiponotificacion,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --afiliados activos RUC Recibo Electrónico y Físico
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS grupo,'AFILIADOS ACT RUC' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico y Físico','Recibo Electrónico y Físico(Ruc10)') AS SUBCATEGORIA,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'2' AS base
        FROM (select a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion,a.ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_b02 a, ods_gpf.p_compania b
                WHERE a.codigocompania=b.codigocompania(+)
                   AND a.activ='SI'
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC')
      WHERE tdoc='RUC10'
         AND tiponotificacion='Recibo Electrónico y Físico'
      GROUP BY tiponotificacion,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[2] NUEVOS AFIL Act
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'NUEVOS AFIL ACT' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo
      WHERE grafica='Superior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='02'
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[2.1] NUEVOS AFIL Act (Ruc10/Ruc20)
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'NUEVOS AFIL ACT' AS Categoria,tdoc AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo a, ods_gpf.p_compania b
                WHERE a.codigocompania=b.codigocompania(+)
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC'
                   AND base='02'
                   AND grafica='Superior')
      WHERE tdoc LIKE 'RUC%'
      GROUP BY tdoc,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --nuevos afiliados act RUC recibo electronico
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS grupo,'NUEVOS AFIL ACT' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico','Recibo Electrónico(Ruc10)') AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (select a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo a, ods_gpf.p_compania b
                WHERE a.codigocompania=b.codigocompania
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC'
                   AND base='02'
                   AND grafica='Superior'
                   AND tiponotificacion='Recibo Electrónico'
                   AND not exists  (select codigocompania
                                        FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo b
                                      WHERE b.periodo=TO_CHAR(ad_fecha,'yyyymm')
                                         AND b.tipodocumento='RUC'
                                         AND b.base='02'
                                         AND b.grafica='Superior'
                                         AND b.tiponotificacion='Recibo Electrónico y Físico'
                                         AND a.codigocompania = b.codigocompania))
      WHERE tdoc='RUC10'
      GROUP BY tiponotificacion,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --nuevos afiliados act RUC recibo electronico
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS GRUPO,'NUEVOS AFIL ACT' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico y Físico','Recibo Electrónico y Físico(Ruc10)')AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (select a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_nvo a, ods_gpf.p_compania b
                WHERE a.codigocompania=b.codigocompania
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC'
                   AND base='02'
                   AND grafica='Superior')
      WHERE tdoc='RUC10'
         AND tiponotificacion='Recibo Electrónico y Físico'
      GROUP BY tiponotificacion,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[3] REMAINING
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'REMAINING ACT' AS Categoria,'TOTAL' AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
         FROM ods_gpf.fa_mdl_afiliados_mes_det_rem
      WHERE grafica='Superior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='02'
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[3.1] REMAINING (Ruc10/Ruc20)
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(DISTINCT codigocompania) AS cantidad,'ACTIVOS' AS Grupo,'REMAINING ACT' AS Categoria,tdoc AS Subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_rem a,ods_gpf.p_compania b
                WHERE a.codigocompania=b.codigocompania
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC'
                   AND base='02'
                   AND grafica='Superior')
      WHERE tdoc LIKE 'RUC%'
      GROUP BY tdoc,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    -- REMAINING recibo electronico
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(distinct codigocompania) AS cantidad,'ACTIVOS' AS grupo,'REMAINING ACT' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico','Recibo Electrónico(Ruc10)') AS subcategoria,CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm')  AS periodo,'2' AS base
        FROM (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_rem a, ods_gpf.p_compania b
                WHERE a.codigocompania=b.codigocompania
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC'
                   AND base='02'
                   AND grafica='Superior'
                   AND NOT EXISTS  (SELECT codigocompania
                                        FROM ods_gpf.fa_mdl_afiliados_mes_det_rem b
                                      WHERE b.periodo=TO_CHAR(ad_fecha,'yyyymm')
                                         AND b.tipodocumento='RUC'
                                         AND b.base='02'
                                         AND b.grafica='Superior'
                                         AND b.tiponotificacion='Recibo Electrónico y Físico'
                                         AND a.codigocompania = b.codigocompania))
      WHERE tdoc='RUC10'
         AND tiponotificacion='Recibo Electrónico'
      GROUP BY tiponotificacion,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    -- REMAINING recibo electronico y fisico
    INSERT INTO ods_gpf.fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(distinct codigocompania) AS cantidad,'ACTIVOS' AS grupo,'REMAINING ACT' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico y Físico','Recibo Electrónico y Físico(Ruc10)') AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm')  AS periodo,'2' AS base
        FROM (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion,ubicacion
                  FROM ods_gpf.fa_mdl_afiliados_mes_det_rem a, ods_gpf.p_compania b
                WHERE a.codigocompania=b.codigocompania
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC'
                   AND base='02'
                   AND grafica='Superior')
      WHERE tdoc='RUC10'
         AND tiponotificacion='Recibo Electrónico y Físico'
      GROUP BY tiponotificacion,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;


    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT '-'||COUNT(distinct codigocompania) AS cantidad,'ACTIVOS' AS grupo,'DESAFILIADOS ACT' AS categoria,'TOTAL' AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM fa_mdl_afiliados_mes_det_deac
      WHERE grafica='Superior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='02'
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
                  WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
                  WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
                  ELSE 'LIMA' END;
    COMMIT;

    --[4.1] DESAFILIADOS Act (Ruc10/Ruc20)
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT '-'||count(distinct codigocompania) AS cantidad,'ACTIVOS' AS grupo,'DESAFILIADOS ACT' AS categoria,tdoc AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (SELECT  a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,ubicacion
                  FROM fa_mdl_afiliados_mes_det_deac a, p_compania b
                WHERE a.codigocompania=b.codigocompania
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC'
                   AND base='02'
                   AND grafica='Superior')
      WHERE tdoc LIKE 'RUC%'
      GROUP BY tdoc,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    -- DESAFILIADOS Act recibo electronico
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT '-'||COUNT(distinct codigocompania) AS cantidad,'ACTIVOS' AS grupo,'DESAFILIADOS ACT' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico','Recibo Electrónico(Ruc10)') AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (SELECT  a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion,ubicacion
                  FROM fa_mdl_afiliados_mes_det_deac a,p_compania b
                WHERE a.codigocompania=b.codigocompania
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC'
                   AND base='02'
                   AND grafica='Superior'
                   AND NOT EXISTS (SELECT codigocompania
                                       FROM fa_mdl_afiliados_mes_det_deac b
                                     WHERE b.periodo=TO_CHAR(ad_fecha,'yyyymm')
                                        AND b.tipodocumento='RUC'
                                        AND b.base='02'
                                        AND b.grafica='Superior'
                                        AND b.tiponotificacion='Recibo Electrónico y Físico'
                                        AND a.codigocompania = b.codigocompania))
      WHERE tdoc='RUC10'
         AND tiponotificacion='Recibo Electrónico'
      GROUP BY tiponotificacion,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    -- DESAFILIADOS Act recibo electronico y fisico
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT '-'||COUNT(distinct codigocompania) AS cantidad,'ACTIVOS' AS grupo,'DESAFILIADOS ACT' AS categoria,
           DECODE(tiponotificacion,'Recibo Electrónico y Físico','Recibo Electrónico y Físico(Ruc10)') AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (SELECT  a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,a.tiponotificacion,ubicacion
                  FROM fa_mdl_afiliados_mes_det_deac a,p_compania b
                WHERE a.codigocompania=b.codigocompania
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC'
                   AND base='02'
                   AND grafica='Superior')
      WHERE tdoc='RUC10'
         AND tiponotificacion='Recibo Electrónico y Físico'
      GROUP BY tiponotificacion,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[5] AFILIADOS Desact (a inicio de mes)
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT count(distinct codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'AFILIADOS DESACT' AS categoria,'TOTAL' AS subcategoria,CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
                  WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
                  WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
                  ELSE 'LIMA' END region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'2' AS base
        FROM fa_mdl_afiliados_mes_det_b02
      WHERE activ='NO'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[5.1] AFILIADOS Desact (Ruc10/Ruc20)
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(distinct codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'AFILIADOS DESACT' AS categoria,TDOC AS subcategoria,CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
                  WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
                  WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
                  ELSE 'LIMA' END region,TO_CHAR(add_months(ad_fecha,1),'yyyymm') AS periodo,'2' AS base
        FROM (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,ubicacion
                  FROM fa_mdl_afiliados_mes_det_b02 a,p_compania b
                WHERE a.codigocompania=b.codigocompania(+)
                   AND a.ACTIV='NO'
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC')
        WHERE tdoc LIKE 'RUC%'
        GROUP BY TDOC,
                 CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
                 WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
                 WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
                 ELSE 'LIMA' END;
    COMMIT;

    --[6] NUEVOS AFIL Desact
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT count(distinct codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'NUEVOS AFIL DESACT' AS categoria,'TOTAL' AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM fa_mdl_afiliados_mes_det_nvo
      WHERE grafica='Inferior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='02'
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[6.1] NUEVOS AFIL Desact (Ruc10/Ruc20)
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(distinct codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'NUEVOS AFIL DESACT' AS categoria,TDOC AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,ubicacion
                  FROM fa_mdl_afiliados_mes_det_nvo a LEFT JOIN p_compania b ON a.codigocompania=b.codigocompania
                WHERE a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC'
                   AND grafica='Inferior'
                   AND base='02')
      WHERE tdoc LIKE 'RUC%'
      GROUP BY TDOC,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[7] REMAINING
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT count(distinct codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'REMAINING DESACT' AS categoria,'TOTAL' AS subcategoria,CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM fa_mdl_afiliados_mes_det_rem
      WHERE grafica='Inferior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='02'
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[7.1] REMAINING (Ruc10/Ruc20)
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(distinct codigocompania) AS cantidad,'DESACTIVADOS' AS grupo,'REMAINING DESACT' AS categoria,TDOC AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,ubicacion
                  FROM fa_mdl_afiliados_mes_det_rem a,p_compania b
                WHERE a.codigocompania=b.codigocompania
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC'
                   AND grafica='Inferior'
                   AND base='02')
      WHERE tdoc LIKE 'RUC%'
      GROUP BY TDOC,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[8] DEACS
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT '-'||COUNT(1) AS cantidad,'DESACTIVADOS' AS grupo,'DESAFILIADOS DESACT' AS categoria,'TOTAL' AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM fa_mdl_afiliados_mes_det_deac
      WHERE grafica='Inferior'
         AND periodo=TO_CHAR(ad_fecha,'yyyymm')
         AND base='02'
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[8.1] DEACS (Ruc10/Ruc20)
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT '-'||COUNT(1) AS cantidad,'DESACTIVADOS' AS grupo,'DESAFILIADOS DESACT' AS categoria,TDOC AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (SELECT a.codigocompania,b.ruccompania,obtener_tipodoc_2(b.ruccompania) tdoc,ubicacion
                  FROM fa_mdl_afiliados_mes_det_deac a,p_compania b
                WHERE a.codigocompania=b.codigocompania
                   AND a.periodo=TO_CHAR(ad_fecha,'yyyymm')
                   AND a.tipodocumento='RUC'
                   AND grafica='Inferior'
                   AND base='02')
      WHERE TDOC LIKE 'RUC%'
      GROUP BY TDOC,
               CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[9] DESAF Act VS NEWS Desact
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT (1) AS cantidad,'IDENTIFICACION DE DESAFILIADOS' AS grupo,'DESAF ACT VS NEWS DESACT' AS categoria,'SI' AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM(SELECT codigocompania,ubicacion
                 FROM fa_mdl_afiliados_mes_det_deac
               WHERE grafica='Superior'
                  AND periodo=TO_CHAR(ad_fecha,'yyyymm')
                  AND base='02'
            INTERSECT
             SELECT codigocompania,ubicacion
                 FROM fa_mdl_afiliados_mes_det_nvo
               WHERE grafica='Inferior'
                  AND periodo=TO_CHAR(ad_fecha,'yyyymm')
                  AND base='02')
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[10] DESAF Por Desact
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT (1) AS cantidad,'IDENTIFICACION DE DESAFILIADOS' AS grupo,'DESAF ACT VS NEWS DESACT' AS categoria,'NO' AS subcategoria,
           CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM(SELECT codigocompania,ubicacion
                 FROM fa_mdl_afiliados_mes_det_deac
               WHERE grafica='Superior'
                  AND periodo=TO_CHAR(ad_fecha,'yyyymm')
                  AND base='02'
            MINUS
             SELECT codigocompania,ubicacion
                 FROM fa_mdl_afiliados_mes_det_nvo
               WHERE grafica='Inferior'
                  AND periodo=TO_CHAR(ad_fecha,'yyyymm')
                  AND base='02')
      GROUP BY CASE WHEN UPPER(TRIM(ubicacion)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(ubicacion)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(ubicacion)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[11] base Activa TOTAL POST
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(distinct codigocompania) AS cantidad,'ENDING' AS grupo,'base ACTIVA POST' AS categoria,'TOTAL' AS subcategoria,
           CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (SELECT a.tipodoc,a.periodo,b.product,codigocompania,b.t_plan,a.departamento
                  FROM (SELECT obtener_tipodoc_2(ruccompania) AS tipodoc, periodo, codigocompania, departamento, estadocontrato, codigoplantarifariobscs
                            FROM fotoequipos) a,
                       (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan
                            FROM pm_planes) b
                WHERE a.codigoplantarifariobscs=b.numeroplan(+)
                   AND estadocontrato IN ('Activo','Suspendido')
                GROUP BY a.Tipodoc,a.periodo,b.product,codigocompania,t_plan,departamento)
      WHERE product IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','IN Post')
         AND t_plan = 'Comercial'
      GROUP BY CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[12] base Activa TOTAL POST DNI
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(distinct codigocompania) AS cantidad,'ENDING' AS grupo,'base ACTIVA POST' AS categoria,'DNI' AS subcategoria,
           CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (SELECT a.tipodoc,a.periodo,b.product,obtener_tipodoc_2(a.ruccompania) tdoc,codigocompania,b.t_plan,a.departamento
                  FROM (SELECT obtener_tipodoc_2(ruccompania) AS tipodoc, periodo, codigocompania, departamento, estadocontrato, codigoplantarifariobscs, ruccompania
                            FROM fotoequipos) a,
                       (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan
                            FROM pm_planes) b
                WHERE a.codigoplantarifariobscs=b.numeroplan (+)
                   AND estadocontrato IN ('Activo','Suspendido')
                GROUP BY a.tipodoc,a.periodo,b.product,obtener_tipodoc_2(a.ruccompania),codigocompania,t_plan,departamento)
      WHERE product IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','IN Post') AND tipodoc='DNI' AND T_PLAN = 'Comercial'
      GROUP BY CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[13] base Activa TOTAL POST RUC
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(distinct codigocompania) AS cantidad,'ENDING' AS grupo,'base ACTIVA POST' AS categoria,'RUC' AS subcategoria,
           CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (SELECT A.TIPODOC,A.PERIODO,B.PRODUCT,CODIGOCOMPANIA,B.T_PLAN,A.DEPARTAMENTO
                  FROM (SELECT obtener_tipodoc_2(ruccompania) AS tipodoc, periodo, codigocompania, departamento, estadocontrato, codigoplantarifariobscs
                            FROM fotoequipos) a,
                       (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan
                            FROM pm_planes) b
                WHERE a.codigoplantarifariobscs=b.numeroplan(+)
                AND estadocontrato IN ('Activo','Suspendido'))
      WHERE product IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','IN Post') AND tipodoc like 'RUC%' AND t_plan = 'Comercial'
      GROUP BY CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
    COMMIT;

    --[R] base Activa TOTAL POST RUC - SEGMENTADO
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(distinct codigocompania) AS cantidad,'ENDING' AS Grupo,'BASE ACTIVA POST RUC' AS Categoria,TDOC AS Subcategoria,
           CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'REGION SUR'
           WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'REGION NORTE'
           WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'REGION CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (SELECT a.tipodoc,a.periodo,b.product,obtener_tipodoc_2(a.ruccompania) tdoc,codigocompania,b.t_plan,a.departamento
                  FROM (SELECT obtener_tipodoc_2(ruccompania) AS tipodoc, periodo, codigocompania, departamento, ruccompania, estadocontrato, codigoplantarifariobscs
                            FROM fotoequipos) a,
                   (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan
                            FROM pm_planes) B
                WHERE a.codigoplantarifariobscs=b.numeroplan
                   AND estadocontrato IN ('Activo','Suspendido')
                GROUP BY a.tipodoc,a.periodo,b.product,obtener_tipodoc_2(a.ruccompania),codigocompania,b.t_plan,a.departamento)
      WHERE product IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','IN Post')
         AND tipodoc like 'RUC%'
         AND t_plan = 'Comercial'
     GROUP BY tdoc,
              CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'REGION SUR'
              WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'REGION NORTE'
              WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'REGION CENTRO'
              ELSE 'LIMA' END;
    COMMIT;

    --ruc10 con y sin negocio
    INSERT INTO fa_mdl_afilia_acumuladoreg_res (cantidad,grupo,categoria,subcategoria,region,periodo,base)
    SELECT COUNT(distinct codigocompania) AS cantidad,'ENDING' AS grupo,'base ACTIVA POST RUC' AS categoria,tipodocumento AS subcategoria,
           CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
           WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
           WHEN UPPER(TRIM(departamento)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
           ELSE 'LIMA' END region,TO_CHAR(ad_fecha,'yyyymm') AS periodo,'2' AS base
        FROM (SELECT c.tipodocumento,a.periodo,b.product,codigocompania,b.t_plan,a.departamento
                  FROM (SELECT ruccompania,codigocompania,periodo,CODIGOPLANTARIFARIOBSCS,estadocontrato,departamento
                            FROM fotoequipos) a,
                       (SELECT TO_NUMBER(c_plan) numeroplan,n_plan,product,t_plan
                            FROM pm_planes) b,
                       (SELECT *
                            FROM (SELECT ruccompania, tipodocumento,row_number () over (PARTITION BY ruccompania ORDER BY npcreateddate desc) rn
                                      FROM TNP_PREEVALUACION)
                                    WHERE RN=1) c
                 WHERE a.codigoplantarifariobscs=b.numeroplan(+)
                    AND a.ruccompania=c.ruccompania
                    AND estadocontrato IN ('Activo','Suspendido')
                 GROUP BY c.tipodocumento,a.periodo,b.product,codigocompania,t_plan,departamento)
      WHERE product IN ('HP PTT Post','iDen Post','IN Post','Non PTT Post','IN Post')
         AND tipodocumento LIKE 'RUC%'
         AND t_plan = 'Comercial'
      GROUP BY tipodocumento,
               CASE WHEN UPPER(TRIM(departamento)) IN ('AREQUIPA','CUSCO','ICA','AYACUCHO','APURIMAC','PUNO','MADRE DE DIOS','TACNA','MOQUEGUA') THEN 'region SUR'
               WHEN UPPER(TRIM(departamento)) IN ('ANCASH','LA LIBERTAD','LAMBAYEQUE','PIURA','TUMBES','CAJAMARCA') THEN 'region NORTE'
               WHEN UPPER(TRIM(DEPARTAMENTO)) IN ('HUANCAVELICA','JUNIN','PASCO','HUANUCO','SAN MARTIN','AMAZONAS','LORETO','UCAYALI') THEN 'region CENTRO'
               ELSE 'LIMA' END;
     COMMIT;
END GENERAREPORTEREGIONESCONCIL2;

PROCEDURE PROCESARREPORTEPENALIDADES(SANHO VARCHAR2,SMES VARCHAR2, SCICLO VARCHAR2)
IS
BEGIN
update FA_INPUT_PENALIDAD set code=RPAD(code,10,'0') where substr(code,1,1)='1' and length(code)<10;
update FA_INPUT_PENALIDAD set code=RPAD(code,4,'0') where substr(code,1,1)='2' and length(code)<4;
update FA_INPUT_PENALIDAD set code=RPAD(code,5,'0') where substr(code,1,1)='3' and length(code)<5;
update FA_INPUT_PENALIDAD set code=RPAD(code,7,'0') where substr(code,1,1)='5' and length(code)<7;
commit;
DELETE FROM FA_INPUT_PENALIDAD_PROCES WHERE PERIODO=(SANHO||SMES)  and ciclo = SCICLO;
commit;
INSERT INTO FA_INPUT_PENALIDAD_PROCES
select A.*,B.motivodesactivacion
from
(
    select code,company,valid_from,description,REGEXP_SUBSTR(description, '\d\d\d\d\d\d\d\d\d') as telefono,amount,occ_date,
                type,username,usuario,aplicado,reason_code,sncode,periodo,ciclo,id, FN_DECODIFICA_CUENTA(CODE)||'-'||REGEXP_SUBSTR(description, '\d\d\d\d\d\d\d\d\d') as llave
    from FA_INPUT_PENALIDAD
) A,
(
    SELECT codigocuentacompania, telefono, motivodesactivacion, fechadesactivacioncontrato,codigocuentacompania||'-'||telefono as llave
              FROM
                (SELECT codigocuentacompania, SUBSTR(telefono,-9) telefono, motivodesactivacion, fechadesactivacioncontrato
                     , row_number()OVER (PARTITION BY codigocuentacompania, SUBSTR(telefono,-9)
                                             ORDER BY fechadesactivacioncontrato desc) RN
                  FROM FA_OCC_MOTIV_DESACTIVACION )
    WHERE RN = 1
) B
where A.llave = B.llave(+);
commit;
END PROCESARREPORTEPENALIDADES;

PROCEDURE PROCESARREPORTESOCIOSTPF(SANHO VARCHAR2,SMES VARCHAR2, SCICLO VARCHAR2, SSOCIO VARCHAR2)
IS
BEGIN
   --
   -- exec PROCESARREPORTESOCIOSTPF('2018','01','01','GAMAEL');
   -- Purpose: Este procedimiento permite la organizacion de la informacion
   --
   -- MODIFICATION HISTORY
   -- Person      Date        Comments
   -- ---------   ----------  -------------------------------------------
   -- cchahuas     07/02/2018  Creación.
DELETE FROM FA_FACTURASOCIOS_AUTO WHERE SOCIONEGOCIO='SOCIONEGOCIO';
COMMIT;
DELETE FROM FA_FACTURASOCIOS_AUTO WHERE FECHACREACIONORDEN IS NULL;
COMMIT;

UPDATE FA_FACTURASOCIOS_AUTO SET PACK=0 WHERE PACK is null;
UPDATE FA_FACTURASOCIOS_AUTO SET PACKIGV=0 WHERE PACKIGV is null;
UPDATE FA_FACTURASOCIOS_AUTO SET EQ=0 WHERE EQ is null;
UPDATE FA_FACTURASOCIOS_AUTO SET EQIGV=0 WHERE EQIGV is null;
UPDATE FA_FACTURASOCIOS_AUTO SET SS=0 WHERE SS is null;
UPDATE FA_FACTURASOCIOS_AUTO SET SSIGV=0 WHERE SSIGV is null;
COMMIT;

DELETE FROM FA_FACTURASOCIOS_AUTO WHERE VOUCHER IS NULL AND ORDEN IS NULL;
COMMIT;

EXECUTE IMMEDIATE 'TRUNCATE TABLE ods_gpf.FA_FACTURASOCIOS_RESULT';
COMMIT;

INSERT INTO FA_FACTURASOCIOS_RESULT
select N.column1 as inicio1,N.column2 as inicio2,N.column3 as inicio3,N.column4 as inicio4,N.column5 as inicio5,N.column6 as inicio6,N.column7 as inicio7,N.column8 as inicio8,N.column9 as inicio9,N.column10 as inicio10,N.column11 as inicio11,N.column12 as inicio12,N.column13 as inicio13,
            M.column1 as cuerpo1,M.column2 as cuerpo2,M.column3 as cuerpo3,M.codigo_arti,M.column4 as cuerpo4,M.column5 as cuerpo5,M.columnadd as cuerpo6,M.column6 as cuerpo7,M.column7 as cuerpo8,M.column8 as cuerpo9,M.column9 as cuerpo10,M.q,M.column10 as cuerpo11,
            M.column11 as cuerpo12,M.eqigv2,M.column12 as cuerpo13,M.column13 as cuerpo14,M.column14 as cuerpo15,M.column15 as cuerpo16,M.column16 as cuerpo17,M.column17 as cuerpo18,M.column18 as cuerpo19,M.cta_contable,M.column19 as cuerpo20,M.column20 as cuerpo21,
            M.column21 as cuerpo22,M.column22 as cuerpo23,M.column23 as cuerpo24,M.column24 as cuerpo25,DECODE(M.rn2,1,'\^{F4}',M.column25)  as cuerpo26,M.column26 as cuerpo27,
            O.column1 as fin1,O.column2 as fin2,O.column3 as fin3,O.column4 as fin4,O.column5 as fin5,O.column6 as fin6,O.column7 as fin7,O.column8 as fin8,O.column9 as fin9,O.column10 as fin10,O.column11 as fin11,O.column12 as fin12,O.column13 as fin13,O.column14 as fin14,O.column15 as fin15,
            O.column16 as fin16,O.column17 as fin17,O.column18 as fin18,O.column19 as fin19,O.column20 as fin20,O.column21 as fin21,O.column22 as fin22,M.rn
  from (
  --Envio a dataload Line 10
  select rownum as rn,ROW_NUMBER() OVER(ORDER BY rownum desc) as RN2,column1,column2,column3,codigo_arti,column4,column5,columnadd,column6,column7,column8,column9,q,column10,column11,eqigv2,column12,column13,column14,column15,column16,column17,
            column18,cta_contable,column19,column20,column21,column22,column23,column24,column25,column26
  from (
  select '*sl1' as column1,'\{TAB 1}' as column2,'*sl1' as column3,CODIGO_ARTI,'tab' as column4,'*sl1' as column5,'*sl1' as columnadd,'tab' as column6,'*sl1' as column7,'tab' as column8,'*sl1' as column9,Q,'tab' as column10,'*sl1' as column11,
             EQIGV2,'\{TAB 2}' as column12,'*sl1' as column13,'IGV 18' as column14,'tab' as column15,'*sl1' as column16,'*AD' as column17,'*sl1' as column18,cta_contable,'tab' as column19,'*sl1' as column20,'*SAVE' as column21,
             '*sl1' as column22,'\^{F4}' as column23,'*sl1' as column24,'*DN' as column25,'*sl1' as column26
  from (
  select X.CODIGO_ARTI,X.Q,X.EQIGV2,Y.cta_contable
  from (
  select solucion,CODIGO_ARTI,EQIGV2,count(1) Q from (
  select A.*,to_number(REPLACE(EQIGV,',')) as EQIGV2,B.CODIGO_ARTI from FA_FACTURASOCIOS_AUTO A,(SELECT report_cobranzas,codigo_arti,descripcion FROM (
  select report_cobranzas,codigo_arti,descripcion,ROW_NUMBER () OVER (PARTITION BY REPORT_COBRANZAS ORDER BY LENGTH(DESCRIPCION) DESC) RN from FA_FACTURASOCIOS_P_EQ
  ) WHERE RN=1) B where A.modelo=B.report_cobranzas(+) and A.FUENTE=SSOCIO||'1'
  )
  group by solucion,CODIGO_ARTI,EQIGV2
  order by solucion,CODIGO_ARTI,EQIGV2
  ) X,
  (
  select report_cobranzas,cta_contable,canal from FA_FACTURASOCIOS_P_CTA_E where canal='EQUIPO'
  ) Y
  where X.solucion=Y.report_cobranzas(+) and
  Y.report_cobranzas is not null
  )
  union all
  --Envio a dataload Line 11 SERV_TELE
  select '*sl1' as column1,'\{TAB 1}' as column2,'*sl1' as column3,origen,'tab' as column4,'*sl1' as column5,descripcion,'tab' as column6,'*sl1' as column7,'tab' as column8,'*sl1' as column9,Q,'tab' as column10,'*sl1' as column11,
            SSIGV2,'\{TAB 2}' as column12,'*sl1' as column11,'IGV 18' as column12,'tab' as column13,'*sl1' as column14,'*AD' as column15,'*sl1' as column16,cta_contable,'tab' as column17,'*sl1' as column18,'*SAVE' as column19,
             '*sl1' as column20,'\^{F4}' as column21,'*sl1' as column22,'*DN' as column23,'*sl1' as column24
  from (
  select 'SERV_TELE' as origen,descripcion,q,to_number(ssigv2) as ssigv2,cta_contable from (
  select X.solucion,X.plantarifario,Y.descripcion,X.Q,X.SSIGV2,Z.cta_contable
  from (
  select solucion,plantarifario,SSIGV2,count(1) Q from (
  select A.*,REPLACE(SSIGV,',') as SSIGV2,B.CODIGO_ARTI from FA_FACTURASOCIOS_AUTO A,(SELECT report_cobranzas,codigo_arti,descripcion FROM (
  select report_cobranzas,codigo_arti,descripcion,ROW_NUMBER () OVER (PARTITION BY REPORT_COBRANZAS ORDER BY LENGTH(DESCRIPCION) DESC) RN from FA_FACTURASOCIOS_P_EQ
  ) WHERE RN=1) B where A.modelo=B.report_cobranzas(+) and A.FUENTE=SSOCIO||'1'
  )
  where SSIGV2<>'0'
  group by solucion,plantarifario,SSIGV2
  order by solucion,plantarifario,SSIGV2
  ) X,
  (
  select report_cobranzas,descripcion from FA_FACTURASOCIOS_P_SERV_E where canal='EQUIPO'
  ) Y,
  (
  select report_cobranzas,cta_contable,canal from FA_FACTURASOCIOS_P_CTA_E where canal='SERVICIO'
  ) Z
  where X.plantarifario=Y.report_cobranzas (+) and
  X.solucion=Z.report_cobranzas (+)
  )
  union all
  --Envio a dataload Line 11 ITEM_VARIOS
  select 'ITEM_VARIOS' as origen,DESCRIPCION||ORDEN,to_number('1') as dummy,mtototal/1.18 as mtosinigv,'080-1000-4182-001-86-000000' as cta_contable from (
  select A.*,NVL(B.DESCRIPCION,'COBRO POR ORDEN/') as DESCRIPCION,B.CTA_CONTABLE from FA_FACTURASOCIOS_AUTO A,(select * from FA_FACTURASOCIOS_P_SERV_E where canal='SERVICIOS') B where A.producto=B.report_cobranzas(+) and A.FUENTE<>SSOCIO||'1'
  )
  )
  )
  order by rn asc
  ) M,
  (
  select llave,column1,column2,column3,column4,column5,column6,column7,column8,column9,column10,column11,column12,column13 from (
  select 1 as llave,'FA ELECTR F007' as column1,'\{TAB 1}' as column2,'*sl1' as column3,to_char(sysdate,'dd/mm/yyyy') as column4,'\{TAB 1}' as column5,to_char(sysdate,'dd/mm/yyyy') as column6,
              '*sl1' as column7,'*ML(176,352)' as column8,'*sl1' as column9,UPPER(sys_context('USERENV','SERVER_HOST')) as column10,'\{TAB 1}' as column11,'*sl1' as column12,'*Al' as column13
  from dual
  )
  ) N,
  (
  select llave,column1,column2,column3,column4,column5,column6,column7,column8,column9,column10,column11,column12,column13,column14,column15,column16,column17,column18,column19,column20,column21,column22
  from(
  select 1 as llave,'*AF' as column1,'*sl1' as column2,'*ML(354,178)' as column3,'*sl1' as column4,'LIQUIDACION DEL  '||'<DATO> '||'AL '||'<DATO2> ' as column5,'*SAVE' as column6,'*sl1' as column7,'\^{F4}' as column8,
  '*sl1' as column9,'*As' as column10,'*sl1' as column11,'080-1000-1103-000-27-000000' as column12,'tab' as column13,'*sl1' as column14,'*SAVE' as column15,'*sl1' as column16,'\^{F4}' as column17,'*sl1' as column18,
  '' as column19,'*DN' as column20,'*sl1' as column21,'*sl1' as column22 from dual
  )
  ) O
  where m.rn=n.llave(+) and
  rn2=o.llave(+)
  order by rn;
  commit;
  END PROCESARREPORTESOCIOSTPF;

 PROCEDURE BUSCAR_BASE_MAIL(v_campo varchar2, v_tabla varchar2, pcursor OUT t_cursor)
  AS
  sentencia varchar2(2500);
  BEGIN
  if (v_tabla LIKE 'FOTOEQUIPOS') THEN
    sentencia :=   'SELECT
        NVL(A.CUENTA,''-'')CUENTA,
        NVL(A.RAZONSOCIAL,''-'')RAZONSOCIAL,
        NVL(A.TELEFONO,''-'')TELEFONO,
        NVL(CAST(A.FECHA_BASE AS VARCHAR2(15)),''-'')FECHA_BASE,
        NVL(A.TIPODOCUMENTO,''-'')TIPODOCUMENTO,
        NVL(CAST(A.DOCUMENTO  AS VARCHAR2(30)),''-'')DOCUMENTO,        
        NVL(A.GRUPO,''-'')GRUPO,
        NVL(A.TERRITORIO,''-'')TERRITORIO,
        NVL(CAST(CODIGOCONTRATOBSCS  AS VARCHAR2(30)),''-'')CODIGOCONTRATOBSCS
        FROM FA_BASEMAILREPORTEDIARIO A, '|| v_tabla || ' C , TEMP_BUSQUEDA_BASEMAIL D
        WHERE a.'|| v_campo ||' = d.campo        
        AND A.CODIGOCOMPANIA=C.CODIGOCOMPANIA
        AND TO_CHAR(FECHA_BASE,''yyyymm'')=TO_CHAR(SYSDATE,''yyyymm'')';
  ELSE
    sentencia :=   'SELECT
        NVL(A.CUENTA,''-'')CUENTA,
        NVL(A.RAZONSOCIAL,''-'')RAZONSOCIAL,
        NVL(A.TELEFONO,''-'')TELEFONO,
        NVL(CAST(A.FECHA_BASE AS VARCHAR2(15)),''-'')FECHA_BASE,
        NVL(A.TIPODOCUMENTO,''-'')TIPODOCUMENTO,
        NVL(CAST(A.DOCUMENTO  AS VARCHAR2(30)),''-'')DOCUMENTO
        NVL(A.GRUPO,''-'')GRUPO,
        NVL(A.TERRITORIO,''-'')TERRITORIO,,
        NVL(CAST(CODIGOCONTRATOBSCS  AS VARCHAR2(30)),''-'')CODIGOCONTRATOBSCS
        FROM FA_BASEMAILREPORTEDIARIO A, '|| v_tabla || ' C , TEMP_BUSQUEDA_BASEMAIL D
        WHERE a.'|| v_campo ||' = d.campo        
        AND A.CODIGOCOMPANIA=C.CODIGOCOMPANIA
        AND TO_CHAR(FECHA_BASE,''yyyymm'')=TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1),''MM'') ,''yyyymm'')';
      
  END IF;
    OPEN pcursor FOR sentencia;
  END BUSCAR_BASE_MAIL;

  PROCEDURE INSERTAR_TEMPBM(v_param varchar2)
  AS
  BEGIN
  INSERT INTO TEMP_BUSQUEDA_BASEMAIL VALUES (v_param);
  COMMIT;
  END INSERTAR_TEMPBM;

  PROCEDURE VACIAR_TEMPBM
  AS
  BEGIN
  DELETE FROM TEMP_BUSQUEDA_BASEMAIL;
  COMMIT;
  END VACIAR_TEMPBM;

END PAQUETE_FACTURACION;