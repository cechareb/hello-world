create or replace 
PACKAGE BODY         paquete_fraudes AS

  PROCEDURE BUSCAR_FOTOEQUIPOS(v_campo varchar2, v_tabla varchar2, pcursor OUT t_cursor)
  AS
  sentencia varchar2(2500);
  BEGIN
  if (v_tabla LIKE 'FOTOEQUIPOS') THEN
    sentencia :=   'SELECT
        NVL(COMPANIA,''-'')COMPANIA,
        NVL(TELEFONO,''-'')TELEFONO,
        NVL(ESTADOCONTRATO,''-'')ESTADOCONTRATO,
        NVL(CAST(FECHADESACTIVACIONCONTRATO AS VARCHAR2(15)),''-'')FECHADESACTIVACIONCONTRATO,
        NVL(CAST(FECHACARGACONTRATO AS VARCHAR2(15)),''-'')FECHACARGACONTRATO,
        NVL(CICLOFACTURACIONCONTRATO,''-'')CICLOFACTURACIONCONTRATO,
        NVL(CAST(CODIGOCONTRATOBSCS  AS VARCHAR2(30)),''-'')CODIGOCONTRATOBSCS,
        NVL(PLANTARIFARIO,''-'')PLANTARIFARIO,
        NVL(CAST(CODIGOPLANTARIFARIOBSCS AS VARCHAR2(30)),''-'')CODIGOPLANTARIFARIOBSCS,
        NVL(NUMEROCUENTARESPONSABLE,''-'')NUMEROCUENTARESPONSABLE,
        NVL(CAST(FECHAACTIVACIONCONTRATO AS VARCHAR2(15)),''-'')FECHAACTIVACIONCONTRATO,
        NVL(TIPOPERSONA ,''-'')TIPOPERSONA,
        NVL(RUCCOMPANIA,''-'')RUCCOMPANIA,
        NVL(DISTRITO,''-'')DISTRITO,
        NVL(CAST(CODIGOCOMPANIA AS VARCHAR2(30)) ,''-'')CODIGOCOMPANIA,
        NVL(GIROCOMPANIA ,''-'')GIROCOMPANIA,
        NVL(SUBGIROCOMPANIA ,''-'')SUBGIROCOMPANIA,
        NVL(SCORECREDITICIO ,''-'')SCORECREDITICIO,
        NVL(REGION,''-'')REGION,
        NVL(SUPERVISADO,''-'')SUPERVISADO,
        NVL(TIPOCUENTA ,''-'')TIPOCUENTA,
        NVL(IMEI ,''-'')IMEI,
        NVL(SIM ,''-'')SIM,
        NVL(CAST(CODIGOCUENTARESPONSABLE AS VARCHAR2(25)) ,''-'')CODIGOCUENTARESPONSABLE,
        NVL(IDENTIFICADORCONSULTOR ,''-'')IDENTIFICADORCONSULTOR,
        NVL(CANALVENTA,''-'')CANALVENTA,
        NVL(IDENTIFICADORDEALER ,''-'')IDENTIFICADORDEALER,
        NVL(PRODUCTO ,''-'')PRODUCTO,
        NVL(MOTIVOMOVIMIENTO ,''-'')MOTIVOMOVIMIENTO,
        NVL(SOLUCION ,''-'')SOLUCION,
        NVL(DIVISION , ''-'')DIVISION,
        NVL(ESTADOCOBRANZACUENTA,''-'')ESTADOCOBRANZACUENTA,
        NVL(NEXTEL ,''-'')NEXTEL,
        NVL(SEGMENTO ,''-'')SEGMENTO,
        NVL(CAST(RENTABASICA  AS VARCHAR2(15)) ,''-'')RENTABASICA,
        NVL(CAST(FECHAPROCESO  AS VARCHAR2(10)),''-'')FECHAPROCESO,
        NVL(ZONA,''-'')ZONA,
        NVL(TIPOPLAN ,''-'')TIPOPLAN,
        NVL(CANALVENTACONTRATO ,''-'')CANALVENTACONTRATO,
        NVL(CONSULTORCONTRATO,''-'')CONSULTORCONTRATO,
        NVL(DEALERCONTRATO ,''-'')DEALERCONTRATO,
        NVL(NUMEROCUENTACOMPANIA, ''-'')NUMEROCUENTACOMPANIA,
        NVL(RIESGOFINANCIERO,''-'')RIESGOFINANCIERO,
        NVL(TIPOMOTIVOMOVIMIENTO, ''-'')MOTIVOSUSPENSION
        FROM '|| v_tabla || ' a , TEMP_BUSQUEDA_FOTOEQUIPOS b WHERE a.'|| v_campo ||' = b.campo';
  ELSE
    sentencia :=   'SELECT
        NVL(COMPANIA,''-'')COMPANIA,
        NVL(TELEFONO,''-'')TELEFONO,
        NVL(ESTADOCONTRATO,''-'')ESTADOCONTRATO,
        NVL(CAST(FECHADESACTIVACIONCONTRATO AS VARCHAR2(15)),''-'')FECHADESACTIVACIONCONTRATO,
        NVL(CAST(FECHACARGACONTRATO AS VARCHAR2(15)),''-'')FECHACARGACONTRATO,
        NVL(CICLOFACTURACIONCONTRATO,''-'')CICLOFACTURACIONCONTRATO,
        NVL(CAST(CODIGOCONTRATOBSCS  AS VARCHAR2(30)),''-'')CODIGOCONTRATOBSCS,
        NVL(PLANTARIFARIO,''-'')PLANTARIFARIO,
        NVL(CAST(CODIGOPLANTARIFARIOBSCS AS VARCHAR2(30)),''-'')CODIGOPLANTARIFARIOBSCS,
        NVL(NUMEROCUENTARESPONSABLE,''-'')NUMEROCUENTARESPONSABLE,
        NVL(CAST(FECHAACTIVACIONCONTRATO AS VARCHAR2(15)),''-'')FECHAACTIVACIONCONTRATO,
        NVL(TIPOPERSONA ,''-'')TIPOPERSONA,
        NVL(RUCCOMPANIA,''-'')RUCCOMPANIA,
        NVL(DISTRITO,''-'')DISTRITO,
        NVL(CAST(CODIGOCOMPANIA AS VARCHAR2(30)) ,''-'')CODIGOCOMPANIA,
        NVL(GIROCOMPANIA ,''-'')GIROCOMPANIA,
        NVL(SUBGIROCOMPANIA ,''-'')SUBGIROCOMPANIA,
        NVL(SCORECREDITICIO ,''-'')SCORECREDITICIO,
        NVL(REGION,''-'')REGION,
        NVL(SUPERVISADO,''-'')SUPERVISADO,
        NVL(TIPOCUENTA ,''-'')TIPOCUENTA,
        NVL(IMEI ,''-'')IMEI,
        NVL(SIM ,''-'')SIM,
        NVL(CAST(CODIGOCUENTARESPONSABLE AS VARCHAR2(25)) ,''-'')CODIGOCUENTARESPONSABLE,
        NVL(IDENTIFICADORCONSULTOR ,''-'')IDENTIFICADORCONSULTOR,
        NVL(CANALVENTA,''-'')CANALVENTA,
        NVL(IDENTIFICADORDEALER ,''-'')IDENTIFICADORDEALER,
        NVL(PRODUCTO ,''-'')PRODUCTO,
        NVL(MOTIVOMOVIMIENTO ,''-'')MOTIVOMOVIMIENTO,
        NVL(SOLUCION ,''-'')SOLUCION,
        NVL(DIVISION , ''-'')DIVISION,
        NVL(ESTADOCOBRANZACUENTA,''-'')ESTADOCOBRANZACUENTA,
        NVL(NEXTEL ,''-'')NEXTEL,
        NVL(SEGMENTO ,''-'')SEGMENTO,
        NVL(CAST(RENTABASICA  AS VARCHAR2(15)) ,''-'')RENTABASICA,
        ''-''FECHAPROCESO,
        NVL(ZONA,''-'')ZONA,
        ''-'' TIPOPLAN,
        ''-'' CANALVENTACONTRATO,
        ''-'' CONSULTORCONTRATO,
        ''-'' DEALERCONTRATO,
        ''-'' NUMEROCUENTACOMPANIA,
        ''-'' RIESGOFINANCIERO,
        ''-'' TIPOMOTIVOMOVIMIENTO
        FROM '|| v_tabla || ' a , TEMP_BUSQUEDA_FOTOEQUIPOS b WHERE a.'|| v_campo ||' = b.campo';
  END IF;
    OPEN pcursor FOR sentencia;
  END BUSCAR_FOTOEQUIPOS;

  PROCEDURE INSERTAR_TEMPBFE(v_param varchar2)
  AS
  BEGIN
  INSERT INTO TEMP_BUSQUEDA_FOTOEQUIPOS VALUES (v_param);
  COMMIT;
  END INSERTAR_TEMPBFE;

  PROCEDURE VACIAR_TEMPBFE
  AS
  BEGIN
  DELETE FROM TEMP_BUSQUEDA_FOTOEQUIPOS;
  COMMIT;
  END VACIAR_TEMPBFE;

PROCEDURE BUSCAR_PCOMPANIA (vXML IN VARCHAR2, vCAMPO IN VARCHAR2, pCursor OUT t_cursor)
IS
    -- El XML recibido como varchar, lo pasamos a una variable de tipo XMLTYPE
    -- El parámetro 'vXML' deberá recibir un varchar con la siguiente estructura:
    --  <?xml version="1.0"?>
    --  <Campos>
    --  <a>data</a><a>data</a><a>data</a>...
    --  </Campos>
    -- Reemplazar 'data' por el valor del excel. El resto queda
    xmldoc xmltype := xmltype(vXML);

    tieneDatos number;

    -- Variable para almacenar el query de búsqueda
    vQuery varchar2(4000);
BEGIN

    -- Validar que la tabla temporal esté vacía
    SELECT  COUNT(1)
            INTO tieneDatos
    FROM    TEMP_BUSQUEDA_PCOMPANIA
    WHERE   rownum <= 1;

    IF tieneDatos > 0 THEN
        DELETE FROM TEMP_BUSQUEDA_PCOMPANIA;
        COMMIT;
    END IF;

    -- Insertar el la tabla temporal los datos del XML
    INSERT INTO TEMP_BUSQUEDA_PCOMPANIA (campo)
    SELECT x.valorcampo
    FROM XMLTable(
           '/Campos/*'
           passing xmldoc
           columns valorcampo varchar2(200) path 'text()'
         ) x ;
    COMMIT;

    -- Armar el query para la búsqueda
    vQuery := '
        SELECT  NVL(CAST(c.CODIGOCOMPANIA AS VARCHAR2(15)),''-'') AS CODIGOCOMPANIA
                , NVL(c.RAZONSOCIAL,''-'') AS RAZONSOCIAL
                , NVL(c.CUENTACOMPANIA,''-'') AS CUENTACOMPANIA
                , NVL(c.REGION,''-'') AS REGION
                , NVL(c.DEPARTAMENTO,''-'') AS DEPARTAMENTO
                , NVL(c.PROVINCIA,''-'') AS PROVINCIA
                , NVL(c.DISTRITO,''-'') AS DISTRITO
                , NVL(CAST(c.UNIDADES AS VARCHAR2(13)),''-'') AS UNIDADES
                , NVL(CAST(c.EQUIPOSACTIVOSPOSTPAGO AS VARCHAR2(6)),''-'') AS EQUIPOSACTIVOSPOSTPAGO
                , NVL(CAST(c.EQUIPOSACTIVOSPREPAGO AS VARCHAR2(6)),''-'') AS EQUIPOSACTIVOSPREPAGO
                , NVL(CAST(c.DESACTIVACIONESMES AS VARCHAR2(13)),''-'') AS DESACTIVACIONESMES
                , NVL(CAST(c.SUSPENSIONES AS VARCHAR2(13)),''-'') AS SUSPENSIONES
                , NVL(c.GIRO,''-'') AS GIRO
                , NVL(c.SUBGIRO,''-'') AS SUBGIRO
                , NVL(c.INDICE,''-'') AS INDICE
                , NVL(c.UBIGEO,''-'') AS UBIGEO
                , NVL(CAST(c.FECHACREACION AS VARCHAR2(15)),''-'') AS FECHACREACION
                , NVL(CAST(c.FECHAINGRESO AS VARCHAR2(15)),''-'') AS FECHAINGRESO
                , NVL(c.DEMPLEADOS,''-'') AS DEMPLEADOS
                , NVL(CAST(c.NUMEROEMPLEADOS AS VARCHAR2(6)),''-'') AS NUMEROEMPLEADOS
                , NVL(c.SEGMENTO,''-'') AS SEGMENTO
                , NVL(c.NUMEROEMPLEADOSINTERNOS,''-'') AS NUMEROEMPLEADOSINTERNOS
                , NVL(c.CONSULTOR,''-'') AS CONSULTOR
                , NVL(c.DEALER,''-'') AS DEALER
                , NVL(c.CANALVENTA,''-'') AS CANALVENTA
                , NVL(c.RUCCOMPANIA,''-'') AS RUCCOMPANIA
                , NVL(c.TIPOCUENTA,''-'') AS TIPOCUENTA
                , NVL(c.CICLO,''-'') AS CICLO
                , NVL(c.ESTADOCOBRANZA,''-'') AS ESTADOCOBRANZA
                , NVL(c.RIESGOFINANCIERO,''-'') AS RIESGOFINANCIERO
                , NVL(c.TIPOPERSONA,''-'') AS TIPOPERSONA
                , NVL(CAST(c.DEUDACASTIGADA AS VARCHAR2(17)),''-'') AS DEUDACASTIGADA
                , NVL(c.TELEFONO,''-'') AS TELEFONO
                , NVL(c.DIRECCION,''-'') AS DIRECCION
                , NVL(c.MAILCOMPANIA,''-'') AS MAILCOMPANIA
                , NVL(c.CREADOPOR,''-'') AS CREADOPOR
                , NVL(c.CONSULTOR2,''-'') AS CONSULTOR2
                , NVL(c.TIPOCOMPANIA,''-'') AS TIPOCOMPANIA
                , NVL(c.TIPODOCUMENTO,''-'') AS TIPODOCUMENTO
                , NVL(CAST(c.ANTIGUEDAD_CTA AS VARCHAR2(15)),''-'') AS ANTIGUEDAD_CTA
        FROM    P_COMPANIA c, TEMP_BUSQUEDA_PCOMPANIA t
        WHERE   c.'|| vCAMPO || ' = t.campo
        ';

        -- Ejecutar el query y almacenar el resultado
        OPEN pCursor FOR vQuery;

END BUSCAR_PCOMPANIA;

PROCEDURE BUSCAR_ORDENES(pXML IN VARCHAR2, pCampo IN VARCHAR2, pTablaFoto IN VARCHAR2, pCursor OUT t_cursor)
IS
    -- El XML recibido como varchar, lo pasamos a una variable de tipo XMLTYPE
    -- El parámetro 'pXML' deberá recibir un varchar con la siguiente estructura:
    --  <?xml version="1.0"?>
    --  <Campos>
    --  <a>data</a><a>data</a><a>data</a>...
    --  </Campos>
    -- Reemplazar 'data' por el valor del excel. El resto queda
    xmldoc xmltype := xmltype(pXML);

    tieneDatos number;

    -- Variable para almacenar el query de búsqueda
    vQuery VARCHAR(4000);

BEGIN

    -- Validar que la tabla temporal esté vacía
    SELECT  COUNT(1)
            INTO tieneDatos
    FROM    TEMP_BUSQUEDA_ORDENES
    WHERE   rownum <= 1;

    IF tieneDatos > 0 THEN
        DELETE FROM TEMP_BUSQUEDA_ORDENES;
        COMMIT;
    END IF;

    -- Insertar el la tabla temporal los datos del XML
    INSERT INTO TEMP_BUSQUEDA_ORDENES (campo)
    SELECT x.valorcampo
    FROM XMLTable(
           '/Campos/*'
           passing xmldoc
           columns valorcampo varchar2(200) path 'text()'
         ) x ;
    COMMIT;

    vQuery := '
        SELECT  NVL(o.fecha,''-'') fecha
                , NVL(o.codigoorden,''-'') AS codigoorden
                , NVL(u.codigoconsultor,''-'') AS codigoconsultor
                , NVL(u.codigoproducto,''-'') AS codigoproducto
                , NVL(u.codigocontratofuente,''-'')AS codigocontratofuente
                , NVL(o.codigocompania,''-'') AS codigocompania
                , NVL(u.preciolista,''-'') AS preciolista
                , NVL(u.preciopagado,''-'') AS preciopagado
                , NVL(u.subtotal,''-'') AS subtotal
                , NVL(u.montodescuento,''-'') AS montodescuento
                , NVL(u.preciooriginal,''-'') AS preciooriginal
                , NVL(u.costooracledestino,''-'') AS costooracledestino
                , NVL(f.telefono,''-'') AS telefono
                , NVL(f.compania,''-'') AS compania
                , NVL(f.fechadesactivacioncontrato,''-'') AS fechadesactivacioncontrato
                , NVL(f.plantarifario,''-'') AS plantarifario
                , NVL(f.codigoplantarifariobscs,''-'') AS codigoplantarifariobscs
                , NVL(f.producto,''-'') AS producto
                , NVL(f.product,''-'') AS product
                , NVL(f.numerocuentaresponsable,''-'') AS numerocuentaresponsable
                , NVL(f.identificadorconsultor,''-'') AS identificadorconsultor
                , NVL(f.identificadordealer,''-'') AS identificadordealer
        FROM    dmartsys.ordenes@dmart_lm o,
                dmartsys.unidadesorden@dmart_lm u,
                ' || pTablaFoto || ' f, TEMP_BUSQUEDA_ORDENES t
        WHERE   o.codigoorden = u.codigoorden
                AND u.codigocontratofuente = f.codigocontratobscs(+)
                AND o.' || pCampo || ' = t.campo
        ';

        -- Ejecutar el query y almacenar el resultado
        OPEN pCursor FOR vQuery;

END BUSCAR_ORDENES;

PROCEDURE BUSCAR_TNP_MENSUAL(pXML IN VARCHAR2, pCampo IN VARCHAR2, pCursor OUT t_cursor)
IS
    -- El XML recibido como varchar, lo pasamos a una variable de tipo XMLTYPE
    -- El parámetro 'pXML' deberá recibir un varchar con la siguiente estructura:
    --  <?xml version="1.0"?>
    --  <Campos>
    --  <a>data</a><a>data</a><a>data</a>...
    --  </Campos>
    -- Reemplazar 'data' por el valor del excel. El resto queda
    xmldoc xmltype := xmltype(pXML);

    tieneDatos number;

    -- Variable para almacenar el query de búsqueda
    vQuery varchar2(4000);

BEGIN

    -- Validar que la tabla temporal esté vacía
    SELECT  COUNT(1)
            INTO tieneDatos
    FROM    TEMP_BUSQUEDA_TNP_MENSUAL
    WHERE   rownum <= 1;

    IF tieneDatos > 0 THEN
        DELETE FROM TEMP_BUSQUEDA_TNP_MENSUAL;
        COMMIT;
    END IF;

    -- Insertar el la tabla temporal los datos del XML
    INSERT INTO TEMP_BUSQUEDA_TNP_MENSUAL (campo)
    SELECT x.valorcampo
    FROM XMLTable(
           '/Campos/*'
           passing xmldoc
           columns valorcampo varchar2(200) path 'text()'
         ) x ;
    COMMIT;

    -- Armar el query para la búsqueda
    vQuery := '
        SELECT  ''RUC'' AS tipodocumento
                ,NVL(CAST(e.periodo AS VARCHAR2(6)),''-'') AS periodo
                , NVL(CAST(e.fecha AS VARCHAR2(15)),''-'') AS fecha
                , NVL(CAST(e.codigocompania AS VARCHAR2(30)),''-'') AS codigocompania
                , NVL(CAST(e.contrato AS VARCHAR2(15)),''-'') AS contrato
                , NVL(CAST(e.ciclo AS VARCHAR2(2)),''-'') AS ciclo
                , e.fecha_facturacion
                , NVL(CAST(e.monto_facturacion AS VARCHAR2(16)),''-'') AS monto_facturacion
                , NVL(CAST(e.monto_total_deuda AS VARCHAR2(16)),''-'') AS monto_total_deuda
                , e.fecha_vencimiento
                , NVL(CAST(e.pago_vencimiento AS VARCHAR2(15)),''-'') AS pago_vencimiento
                , NVL(CAST(e.flagpago_vencimiento AS VARCHAR2(15)),''-'') AS flagpago_vencimiento
                , NVL(CAST(e.pago_30 AS VARCHAR2(11)),''-'') AS pago_30
                , NVL(CAST(e.flagpago_30 AS VARCHAR2(1)),''-'') AS flagpago_30
                , NVL(CAST(e.pago_60 AS VARCHAR2(11)),''-'') AS pago_60
                , NVL(CAST(e.flagpago_60 AS VARCHAR2(1)),''-'') AS flagpago_60
                , NVL(CAST(e.pago_90 AS VARCHAR2(11)),''-'') AS pago_90
                , NVL(CAST(e.flagpago_90 AS VARCHAR2(1)),''-'') AS flagpago_90
        FROM    tnp_resumen_empresas e, TEMP_BUSQUEDA_TNP_MENSUAL t
        WHERE   to_char(e.' || pCampo || ') = t.campo
        UNION ALL
        SELECT  ''DNI'' AS tipodocumento
                ,NVL(CAST(p.periodo AS VARCHAR2(6)),''-'') AS periodo
                , NVL(CAST(p.fecha AS VARCHAR2(15)),''-'') AS fecha
                , NVL(CAST(p.codigocompania AS VARCHAR2(30)),''-'') AS codigocompania
                , NVL(CAST(p.contrato AS VARCHAR2(15)),''-'') AS contrato
                , NVL(CAST(p.ciclo AS VARCHAR2(2)),''-'') AS ciclo
                , p.fecha_facturacion
                , NVL(CAST(p.monto_facturacion AS VARCHAR2(16)),''-'') AS monto_facturacion
                , NVL(CAST(p.monto_total_deuda AS VARCHAR2(16)),''-'') AS monto_total_deuda
                , p.fecha_vencimiento
                , NVL(CAST(p.pago_vencimiento AS VARCHAR2(15)),''-'') AS pago_vencimiento
                , NVL(CAST(p.flagpago_vencimiento AS VARCHAR2(15)),''-'') AS flagpago_vencimiento
                , NVL(CAST(p.pago_30 AS VARCHAR2(11)),''-'') AS pago_30
                , NVL(CAST(p.flagpago_30 AS VARCHAR2(1)),''-'') AS flagpago_30
                , NVL(CAST(p.pago_60 AS VARCHAR2(11)),''-'') AS pago_60
                , NVL(CAST(p.flagpago_60 AS VARCHAR2(1)),''-'') AS flagpago_60
                , NVL(CAST(p.pago_90 AS VARCHAR2(11)),''-'') AS pago_90
                , NVL(CAST(p.flagpago_90 AS VARCHAR2(1)),''-'') AS flagpago_90
        FROM    tnp_resumen_personas p, TEMP_BUSQUEDA_TNP_MENSUAL t
        WHERE   to_char(p.' || pCampo || ') = t.campo
    ';

    -- Ejecutar el query y almacenar el resultado
    OPEN pCursor FOR vQuery;

END BUSCAR_TNP_MENSUAL;
/*
  PROCEDURE PROCESAR_RECARGAS_PREPAGO (vfecha in varchar2) AS
    -- fecha en formato 'yyyymmdd'
    vResultado number;
    P_TO VARCHAR2(200);
    P_To2 Varchar2(200);
    P_TO3 VARCHAR2(200);
    P_TO4 VARCHAR2(200);
    P_TO5 VARCHAR2(200);
    P_TO6 VARCHAR2(200);
    P_TO7 VARCHAR2(200);
    P_TO8 VARCHAR2(200);
    P_FROM VARCHAR2(200);
    P_SUBJECT VARCHAR2(200);
    P_TEXT VARCHAR2(200);
    P_HTML VARCHAR2(200);
    P_SMTP_HOSTNAME VARCHAR2(200);
    P_SMTP_PORTNUM VARCHAR2(200);

    BEGIN
      INSERT INTO PF_RECARGAS_PREPAGO
      select  x.USER_NAME USUARIO, x.DN_NUM DNI, x.NOMBRE EMPLEADO, X.COMPANIA CLIENTE_RECARGA, x.PROCESS_DATE DIA_RECARGA, x.AMOUNT MONTO,
    x. BALANCE_INIT SALDO_INI, x.BALANCE_END SALDO_FIN, x.TYPE_ADJ TIPO_RECARGA from
      (
      select a.*, b.user_name usr, b.nombre, c.compania from
      (SELECT dn_num, user_name, process_date, amount, balance_init, balance_end, type_adj
      FROM ats_prepay.pmp_adj_account_ccard@pbscs_lm where process_date>=to_date(vfecha,'yyyymmdd') AND process_date<(to_date(vfecha,'yyyymmdd')+1) ) a
      left join
      (select nombre,concat(substr(trim(substr(nombre,instr(nombre,',')+1)),1,1),substr(nombre,1,instr(nombre,' '))) user_name from dmartsys.empleado@dmart_lm) b
      on replace(replace(replace(replace(upper(trim(a.user_name)),'CCP',''),'1',''),'2',''),'3','') = trim(b.user_name)
      left join fotoequipos c
      on substr(a.dn_num,3) = c.telefono
      ) x
      where x.nombre is not null and compania is not null
        and (instr(compania,substr(usr,2)) > 1 OR
            ( instr(compania,SUBSTR(x.nombre,INSTR(x.nombre, ' '), INSTR(x.nombre, ',')-INSTR(x.nombre, ' ') ))>0
              and INSTR(x.nombre, ',')-INSTR(x.nombre, ' ')>1 ) );
      commit;
      select count(1) into vResultado from PF_RECARGAS_PREPAGO where dia_recarga = to_date(vfecha,'yyyymmdd');
      IF (vRESULTADO > 0 ) then
            P_TO := 'daniel.delzo@nextel.com.pe';
            P_To2 := 'alejandra.linares@nextel.com.pe';
            P_To3 := 'jimmy.robles@nextel.com.pe';
            P_TO4 := 'fanny.higinio@nextel.com.pe';
            P_To5 := 'miguel.pebes@nextel.com.pe';
            P_FROM := 'control@nextel.com.pe';
            P_SUBJECT := 'Alerta: Recargas prepago';
            P_TEXT := ' ' ;
            P_HTML := 'Se ha(n) detectado ' || vRESULTADO || ' alertas(s) en las activaciones de recargas prepago. Puede verificarlas el portal de fraudes';
            P_SMTP_HOSTNAME := 'pelma1w8pms04.nextelperu.net';
            --P_SMTP_HOSTNAME := '172.20.1.104';
            P_SMTP_PORTNUM := '25';

            HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,    P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  );
            HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,    P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  );
            Html_Email(    P_To => P_To3,    P_From => P_From,    P_Subject => P_Subject,    P_Text => P_Text,    P_Html => P_Html,    P_Smtp_Hostname => P_Smtp_Hostname,    P_Smtp_Portnum => P_Smtp_Portnum  );
            HTML_EMAIL(    P_TO => P_TO4,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,    P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  );
            Html_Email(    P_To => P_To5,    P_From => P_From,    P_Subject => P_Subject,    P_Text => P_Text,    P_Html => P_Html,    P_Smtp_Hostname => P_Smtp_Hostname,    P_Smtp_Portnum => P_Smtp_Portnum  );
        ELSE
            P_To2 := 'alejandra.linares@nextel.com.pe';
            P_FROM := 'control@nextel.com.pe';
            P_SUBJECT := 'Recargas prepago - ' || vfecha;
            P_TEXT := '' ;
            P_HTML := 'Carga exitosa';
            P_SMTP_HOSTNAME := 'pelma1w8pms04.nextelperu.net';
            --P_SMTP_HOSTNAME := '172.20.1.104';
            P_SMTP_PORTNUM := '25';

            HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,    P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  );
        END IF;

  END PROCESAR_RECARGAS_PREPAGO;

  PROCEDURE OBTENER_RECARGAS_PREPAGO (vfecha in varchar2, pcursor  OUT t_cursor) AS
  BEGIN
   OPEN pcursor FOR
   SELECT  NVL(USUARIO,' ') USUARIO,
     NVL(DNI,' ') DNI,
     NVL(EMPLEADO,' ') EMPLEADO,
     NVL(CLIENTE_RECARGA,' ') CLIENTE_RECARGA,
     NVL(CAST(DIA_RECARGA as VARCHAR2(10)),' ') DIA_RECARGA,
     NVL(CAST(MONTO as varchar2(10)),' ') MONTO,
     NVL(CAST(SALDO_INI as varchar2(10)),' ') SALDO_INI,
     NVL(CAST(SALDO_FIN as varchar2(10)),' ') SALDO_FIN,
     NVL(TIPO_RECARGA,' ') TIPO_RECARGA
   from pf_recargas_prepago a
   WHERE DIA_RECARGA >= to_date(vfecha,'yyyymmdd')
   ORDER BY a.DIA_RECARGA ASC;

  END OBTENER_RECARGAS_PREPAGO;*/


PROCEDURE ILIMITADOS_NOTIFICAR(v_proceso DATE) IS
  HTML CLOB;
  HTML2 CLOB;
  P_TO VARCHAR2(200);
  P_TO2 VARCHAR2(200);
  P_TO3 VARCHAR2(200);
  P_TO4 VARCHAR2(200);
  P_TO5 VARCHAR2(200);
  P_TO6 VARCHAR2(200);
  P_TO7 VARCHAR2(200);
  P_TO8 VARCHAR2(200);
  P_TO9 VARCHAR2(200);
  P_TO10 VARCHAR2(200);
  P_FROM VARCHAR2(200);
  P_SUBJECT VARCHAR2(200);
  P_TEXT VARCHAR2(200);
  P_HTML CLOB;
  P_SMTP_HOSTNAME VARCHAR2(200);
  P_SMTP_PORTNUM VARCHAR2(200);
  vfecha varchar2(8) := TO_CHAR(V_PROCESO,'YYYYMMDD');
  BEGIN
    P_HTML :='';

     HTML := '<h1 style = "font-size:20px;font-family:sans-serif; ">ALERTA: Control de planes ilimitados (Fecha: '|| TO_CHAR(v_proceso,'DD/MM/YYYY') ||')' ||
            '</h1>'||
             '<style>'||
                '  table { margin:0px;padding:0px;'||
                     '   border:1px solid #000000;'||
                     '   border-collapse: collapse;'||
                      '   border-spacing: 0;'||
                     '   height:100%;'||
                     '   margin:0px;padding:0px;'||
                   ' } .fr td{ '||
                       ' background-color:#3177e0;'||
                       ' text-align:center;'||
                       ' border-width:0px 0px 1px 1px;'||
                       ' font-size:12px;'||
                       ' font-family:sans-serif;'||
                       ' font-weight:bold;'||
                       ' color:#ffffff;'||
                   ' }  td{'||
                    '    vertical-align:middle;'||
                    '    background-color:#ffffff;'||
                    '    border:1px solid #000000;'||
                     '   border-width:0px 1px 1px 0px;'||
                     '   text-align:left;'||
                     '   padding:5px;'||
                     '   font-size:10px;'||
                      '  font-family:sans-serif;'||
                      '  color:#000000;'||
                   ' } p { font-size:14px;font-family:sans-serif; }' ||
             '</style>' ||
                '<p>Par&aacute;metros de alertas : </br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 1. M&aacute;s de 2000 minutos salientes</br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 2. Menos de 16 d&iacute;as de tr&aacute;fico</br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 3. M&aacute;s del 50% de tr&aacute;fico en la misma celda</br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 4. Menos de 100 minutos entrantes</br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 5. M&aacute;s de 80% de dispersi&oacute;n</p>'||

             '<table  border="1" >'||
                '<tr class=''fr''>'||
                --style="width:50px;text-align:center"
                    '<td >Fecha activaci&oacute;n</td>'||
                    '<td >Fecha &nbsp de carga contrato</td>'||
                    '<td >Fecha &nbsp ini. an&aacute;lisis</td>'||
                    '<td >D&iacute;as </td>'||
                    '<td >Contrato</td>'||
                    '<td >C&oacute;digo&nbsp cuenta</td>'||
                    '<td >Raz&oacute;n &nbsp social &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</td>'||
                    '<td >Nro documento</td>'||
                    '<td >Tipo documento</td>'||
                    '<td >Entel</td>'||
                    '<td >Periodo fact.</td>'||
                    '<td >Ciclo fact.</td>'||
                    '<td >C&oacute;digo plan</td>'||
                    '<td >Plan Tarifario</td>'||
                    '<td >Equipo</td>'||
                    '<td >Minutos salientes</td>'||
                    '<td >Llamadas salientes</td>'||
                    '<td >Destinos salientes</td>'||
                    '<td >Dispersi&oacute;n saliente</td>'||
                    '<td >Minutos entrantes</td>'||
                    '<td >Llamadas entrantes</td>'||
                    '<td >Celdas salientes</td>'||
                    '<td >Celda max</td>'||
                    '<td >Porcentaje en cel. max</td>'||
                    '<td >Minutos celdas riesgo</td>'||
                    '<td >Ratio de riesgo</td>'||
                    '<td >Minutos sal onnet</td>'||
                    '<td >Minutos sal offnet</td>'||
                    '<td >Minutos sal ldi</td>'||
                    '<td >Condici&oacute;n</td>'||
                    '<td >Fecha Proceso</td>'||
                    '<td >D&iacute;as tr&aacute;fico</td>'||
                    '<td >Validaci&oacuten</td>'||
               ' </tr>';
    FOR REC IN
      (
          SELECT f_activacion_contrato, f_carga_contrato, fecha_ini, dias,
               a.contrato, cod_cuenta, razon_social, nro_documento,
               tipo_documento, entel, periodo_fact, ciclo_fact,
               cod_plan, plan_tarifario, min_salientes, llam_salientes,
               dest_salientes, disp_saliente, min_entrantes,
               llam_entrantes, cant_celdas_sal, celda_max,
               porc_max_celda_sal, min_celda_riesgo, ratio_riesgo,
               min_sal_onnet, min_sal_offnet, min_sal_ldi, condicion,
               TO_CHAR(fecha_proceso,'DD/MM/YYYY') fecha_proceso, dias_trafico, equipo
               , NVL(validacion.validacion, 'ACTIV. ANTES DE BIO') validacion
          FROM PF_ILIMITADOS_HISTORICO A
           LEFT JOIN
                        (SELECT contrato
                             , DECODE(validacion_identidad,'NOT BIOMETRIC','NO BIO: ','BIOMETRIC','BIO: ',validacion_identidad)
                             ||DECODE(resultado_validacion,'NO VALIDADO','',resultado_validacion) VALIDACION
                        FROM p_inar
                        WHERE estadoinar in ('NEWS','ADDS','REAC')) validacion
              ON A.contrato = validacion.contrato
          where TRUNC(fecha_proceso) = TRUNC(v_proceso)
          and a.contrato||periodo_fact not in (
            select contrato||periodo_fact
            from PF_ILIMITADOS_HISTORICO
            where TRUNC(fecha_proceso) <= TRUNC(v_proceso-1)
          )
          and ROWNUM<50
          ORDER BY condicion desc
      )
    LOOP
      HTML := HTML  || '<tr><td>' ||  REC.f_activacion_contrato ||
                        '</td><td>' || REC.f_carga_contrato ||
                        '</td><td>' || REC.fecha_ini ||
                        '</td><td align="right">' || REC.dias ||
                        '</td><td>' || REC.contrato ||
                        '</td><td>' || rec.cod_cuenta ||
                        '</td><td>' || REC.razon_social ||
                        '</td><td>' || REC.nro_documento ||
                        '</td><td>' || rec.tipo_documento ||
                        '</td><td>' || REC.entel ||
                        '</td><td>' || REC.periodo_fact ||
                        '</td><td>' || rec.ciclo_fact ||
                        '</td><td>' || REC.cod_plan ||
                        '</td><td>' || REC.plan_tarifario ||
                        '</td><td align="right">' || REC.equipo ||
                        '</td><td align="right">' || rec.min_salientes ||
                        '</td><td align="right">' || REC.llam_salientes ||
                        '</td><td align="right">' || REC.dest_salientes ||
                        '</td><td align="right">' || rec.disp_saliente ||
                        '</td><td align="right">' || REC.min_entrantes ||
                        '</td><td align="right">' || REC.llam_entrantes ||
                        '</td><td align="right">' || REC.cant_celdas_sal ||
                        '</td><td>' || REC.celda_max ||
                        '</td><td align="right">' || REC.porc_max_celda_sal ||
                        '</td><td align="right">' || REC.min_celda_riesgo ||
                        '</td><td align="right">' || REC.ratio_riesgo ||
                        '</td><td align="right">' || REC.min_sal_onnet ||
                        '</td><td align="right">' || REC.min_sal_offnet ||
                        '</td><td align="right">' || REC.min_sal_ldi ||
                        '</td><td align="right">' || REC.condicion ||
                        '</td><td align="right">' || REC.fecha_proceso ||
                        '</td><td align="right">' || REC.dias_trafico ||
                        '</td><td align="right">' || REC.validacion ||
                        '</td></tr>';
      --DBMS_OUTPUT.PUT_LINE(length(html));
    END LOOP;
    HTML := HTML || '</table><br/>';

    P_TO := 'alejandra.linares@entel.pe';
    P_TO2 := 'pamela.pimentel@entel.pe';
    P_TO3 := 'francisco.espinoza@entel.pe';
    P_TO4 := 'ana.muedas@entel.pe';
    P_TO5 := 'jimmy.robles@entel.pe';
    --P_TO6 := 'cynthia.barrera@entel.pe';
    p_TO7 := 'dora.moncada@entel.pe';
    --p_TO8 := 'gabriela.gonzales@entel.pe';
    p_TO9 := 'daniel.delzo@entel.pe';
    --p_TO10 := 'denis.lopez@entel.pe';


    P_FROM := 'ip_alertas@entel.pe';
    P_SUBJECT := 'Control de planes ilimitados';
    P_TEXT := 'msg';
    P_HTML := HTML;
    --P_SMTP_HOSTNAME := 'relay-alertas.entel.pe';
    P_SMTP_HOSTNAME := 'relay-procesos.entel.pe';
    P_SMTP_PORTNUM := '25';

    BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO3,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    --BEGIN HTML_EMAIL(    P_TO => P_TO4,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO5,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    --BEGIN HTML_EMAIL(    P_TO => P_TO6,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO7,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    --BEGIN HTML_EMAIL(    P_TO => P_TO8,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO9,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    --BEGIN HTML_EMAIL(    P_TO => P_TO10,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;

END ILIMITADOS_NOTIFICAR;

PROCEDURE ILIMITADOS_OBTENER_ALERTAS(vfecha varchar2,pcursor  OUT t_cursor) AS
    v_proceso date := TRUNC(to_date(vfecha,'DD/MM/YYYY'));
BEGIN
OPEN pcursor FOR
   /* SELECT a.periodo, a.contrato, a.ciclo, a.c_plan, a.n_plan, a.telefono,
           a.fechaactivacioncontrato, a.ruccompania, a.codigocompania,
           a.fecha_min_trafico, a.fecha_max_trafico, a.min_sal, a.llam_sal,
           a.dest_sal, a.disp_sal, a.min_ent, a.llam_ent, a.min_123,
           a.llam_123, a.cant_celdas, a.celda_max, a.porc_celda_max,
           a.min_cel_riesgo, a.rat_cel_riesgo, a.alerta, a.min_sal_onnet,
           a.min_sal_offnet, a.min_sal_ldi, a.ll_sal_onnet, a.ll_sal_offnet,
           a.ll_sal_ldi, a.dest_sal_onnet, a.dest_sal_offnet,
           a.dest_sal_ldi, a.dias_trafico, a.dias, a.fecha_ini,
           a.fecha_proceso, a.fecha_carga, a.tipo_venta, a.mou,
           a.estado_mou
      FROM pf_ilimitados_mes_alertas  a
     WHERE a.fecha_proceso = TRUNC(v_proceso)
       AND contrato||periodo NOT IN (
                SELECT contrato||periodo
                  FROM pf_ilimitados_mes_alertas
                 WHERE TRUNC(fecha_proceso) BETWEEN TRUNC(v_proceso)-30 AND TRUNC(v_proceso)-1 );
*/
    SELECT TO_CHAR(a.f_activacion_contrato,'DD/MM/YYYY'),
            TO_CHAR(a.f_carga_contrato,'DD/MM/YYYY'),
            TO_CHAR(a.fecha_ini,'DD/MM/YYYY'),
            a.dias,
            a.contrato,
            a.cod_cuenta,
            a.razon_social,
            a.nro_documento,
            a.tipo_documento,
            a.entel,
            a.periodo_fact,
            a.ciclo_fact,
            a.cod_plan,
            a.plan_tarifario,
            a.min_salientes,
            a.llam_salientes,
            a.dest_salientes,
            a.disp_saliente,
            a.min_entrantes,
            a.llam_entrantes,
            a.cant_celdas_sal,
            a.celda_max,
            a.porc_max_celda_sal,
            a.min_celda_riesgo,
            a.ratio_riesgo,
            a.min_sal_onnet,
            a.min_sal_offnet,
            a.min_sal_ldi,
            a.condicion,
            a.Ranking,
            TO_CHAR(a.fecha_proceso,'DD/MM/YYYY'),
            TO_CHAR(a.fecha_carga,'DD/MM/YYYY'),
            a.dias_trafico,
            a.equipo,
            DECODE(d.portabilidad,'1','PORTADO','NO PORTADO'),
            c.identificadorconsultor,
            d.canal_de_venta,
            d.socio_negocio,
            -------------
            d.tienda,
            d.cadena_dealer,
            d.gerencia_territorio,
            d.tipo_tienda
            ,d.gama_equipo
            ,d.rentabasica
            ,d.tipo_renta
            ,d.port_origen
            --
            ,e.numcontratos
           -- ,CASE WHEN a.min_celda_riesgo >=1000 THEN 'RIESGO' ELSE NULL END CELDA_RIESGO
            ,CASE WHEN a.celda_max IN (SELECT celda_max FROM
                                            (SELECT celda_max,ROUND(SUM(MIN_SALIENTES),2)
                                             FROM
                                                (select contrato, MIN_SALIENTES,CELDA_MAX, DISP_SALIENTE
                                                    , rank () OVER (PARTITION BY contrato ORDER BY  FECHA_PROCESO DESC) RN
                                                    from pf_ilimitados_historico) A
                                            WHERE RN = 1 AND CELDA_MAX is not null
                                            group by celda_max
                                            ORDER BY ROUND(SUM(MIN_SALIENTES),2) DESC)
                                            WHERE ROWNUM <= 10)
                THEN 'RIESGO' ELSE NULL END CELDA_RIESGO
          FROM PF_ILIMITADOS_HISTORICO a
          LEFT JOIN (SELECT *
                       FROM ( SELECT a.*
                                   , rank() over (PARTITION BY telefono
                                                      ORDER BY  DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC,fechacargacontrato desc) rn
                                FROM fotoequipos a )
                      WHERE rn = 1 ) c
          ON a.contrato = c.codigocontratobscs
          LEFT JOIN (
            select  contrato,canal_de_venta,socio_negocio, tienda, cadena_dealer,gerencia_territorio,tipo_tienda,portabilidad
                        , gama_equipo, rentabasica, tipo_renta, modalidad_origen port_origen
                         from tnp_inar_personas_ods
            UNION ALL
            SELECT contrato, canal_venta,dealer,canal,zona_detallada,zona_global,tipo_consultor,portabilidad
                    , gama_equipo, rentabasica, tipo_renta, modalidad_origen
                        from tnp_inar_empresas_ods
            ) d
          ON a.contrato = d.contrato
          LEFT JOIN
          ( select codigocompania, count(distinct codigocontratobscs) numcontratos
                        from fotoequipos
                       where estadocontrato in ('Activo','Suspendido')
                         and product not like '%Pre%'
                    group by codigocompania ) e
          ON c.codigocompania = e.codigocompania
          where TRUNC(a.fecha_proceso) = TRUNC(v_proceso)
          and a.contrato||a.periodo_fact not in (
            select contrato||periodo_fact from PF_ILIMITADOS_HISTORICO where
             TRUNC(fecha_proceso) <= TRUNC(v_proceso-1));

END ILIMITADOS_OBTENER_ALERTAS;

PROCEDURE ILIMITADOS_GENERAR_RESUMEN (vfecha varchar2) AS
 v_proceso date := to_date(vfecha,'yyyymmdd');

BEGIN
    DELETE FROM PF_ILIMITADOS_RESUMEN WHERE FECHA = v_proceso;

    INSERT INTO PF_ILIMITADOS_RESUMEN
    SELECT a.*, b.ALERTAS, v_proceso FECHA FROM
    (SELECT CODIGOPLANTARIFARIOBSCS C_PLAN,
            PLANTARIFARIO PLAN_TARIFARIO,
            COUNT(DISTINCT CODIGOCONTRATOBSCS) CONTRATOS
    FROM (SELECT *
           FROM ( SELECT a.*
                       , rank() over (PARTITION BY telefono
                                          ORDER BY  DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC,fechacargacontrato desc) rn
                    FROM fotoequipos a
                   WHERE CODIGOPLANTARIFARIOBSCS IN (SELECT C_PLAN FROM pf_ilimitados_planes))
          WHERE rn = 1 )
    GROUP BY CODIGOPLANTARIFARIOBSCS, PLANTARIFARIO) a
    LEFT JOIN (SELECT cod_plan, count(DISTINCT CONTRATO) ALERTAS FROM PF_ILIMITADOS_HISTORICO
                WHERE contrato||periodo_fact not in (
                select contrato||periodo_fact from PF_ILIMITADOS_HISTORICO where TO_CHAR(fecha_proceso,'YYYYMMDD') <= TO_CHAR(v_proceso-1,'YYYYMMDD'))
                group by cod_plan
            ) b
    ON a.c_plan=b.cod_plan;

END ILIMITADOS_GENERAR_RESUMEN;


PROCEDURE TRAFICO_CERO_NOTIFICAR (v_fecha in date) AS
  HTML CLOB;
  HTML2 CLOB;
  P_TO VARCHAR2(200);
  P_TO2 VARCHAR2(200);
  P_TO3 VARCHAR2(200);
  P_TO4 VARCHAR2(200);
  P_TO5 VARCHAR2(200);
  P_TO6 VARCHAR2(200);
  P_TO7 VARCHAR2(200);
  P_TO8 VARCHAR2(200);
  P_TO9 VARCHAR2(200);
  P_FROM VARCHAR2(200);
  P_SUBJECT VARCHAR2(200);
  P_TEXT VARCHAR2(200);
  P_HTML CLOB;
  P_SMTP_HOSTNAME VARCHAR2(200);
  P_SMTP_PORTNUM VARCHAR2(200);
  P_VALIDAR_TEL NUMBER;
  P_VALIDAR_INT NUMBER;
  BEGIN

    HTML := '<style>p,a { font-size:14px;font-family:sans-serif; }</style> <p>El reporte de tr&aacute;fico cero se encuentra actualizado al d&iacute;a '||TO_CHAR(v_fecha,'DD/MM/YYYY') ||'</p>' ||
                '<a href="file:///\\nxnpewpap021\X\Inteligencia_de_Procesos\02_Procesos\Planeamiento%20Estrat&eacute;gico\02%20Analisis\29%20Tr&aacute;fico%20Cero">Ruta de archivos</a>';

    P_TO := 'alejandra.linares@entel.pe';
    P_TO2 := 'cynthia.barrera@entel.pe';
    P_TO3 := 'francisco.espinoza@entel.pe';
    P_FROM := 'ip_alertas@entel.pe';
    P_SUBJECT := 'Tráfico Cero';
    P_TEXT := 'msg';
    P_HTML := HTML;
    --P_SMTP_HOSTNAME := 'relay-alertas.entel.pe';
    P_SMTP_HOSTNAME := 'relay-procesos.entel.pe';
    P_SMTP_PORTNUM := '25';

    SELECT CASE WHEN COUNT(1)>400000 THEN 1 ELSE 0 END INTO P_VALIDAR_TEL FROM temp_trafico_tel3g WHERE fecha = TO_CHAR(v_fecha,'YYYYMMDD');

    /*SELECT CASE WHEN COUNT(1)>350000 THEN 1 ELSE 0 END INTO P_VALIDAR_INT FROM TEMP_TRAFICO_INTERNET WHERE periodo = TO_CHAR(v_fecha,'YYYYMM') and dia = TO_CHAR(v_fecha,'DD') ;*/

    IF P_VALIDAR_TEL + P_VALIDAR_INT = 2 THEN
        BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        BEGIN HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        BEGIN HTML_EMAIL(    P_TO => P_TO3,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    ELSE
        BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => 'VERIFICAR FUENTES TRÁFICO CERO',    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    END IF;


END TRAFICO_CERO_NOTIFICAR;

PROCEDURE ILIMITADOS_OBTENER_MONITOREO(vfecha varchar2,pcursor  OUT t_cursor) AS
    v_proceso date := to_date(vfecha,'DD/MM/YYYY');
BEGIN

OPEN pcursor FOR
         SELECT CONTRATO, RAZON_SOCIAL, CICLO_FACT ||' - ' ||PERIODO_FACT, ENTEL
       ,MIN(FECHA_PROCESO) FECHA_ALERTA
       ,SUM(DECODE(RN,1,MIN_SALIENTES,0)) MIN_ALERTA
       ,CASE WHEN SUM(DECODE(RN,2,MIN_SALIENTES,0))=0 THEN 0 ELSE SUM(DECODE(RN,2,MIN_SALIENTES,0)-DECODE(RN,1,MIN_SALIENTES,0)) END MIN_AD_2
       ,CASE WHEN SUM(DECODE(RN,3,MIN_SALIENTES,0))=0 THEN 0 ELSE SUM(DECODE(RN,3,MIN_SALIENTES,0)-DECODE(RN,2,MIN_SALIENTES,0)) END MIN_AD_3
       ,CASE WHEN SUM(DECODE(RN,4,MIN_SALIENTES,0))=0 THEN 0 ELSE SUM(DECODE(RN,4,MIN_SALIENTES,0)-DECODE(RN,3,MIN_SALIENTES,0)) END MIN_AD_4
       ,CASE WHEN SUM(DECODE(RN,5,MIN_SALIENTES,0))=0 THEN 0 ELSE SUM(DECODE(RN,5,MIN_SALIENTES,0)-DECODE(RN,4,MIN_SALIENTES,0)) END MIN_AD_5
       ,CASE WHEN SUM(DECODE(RN,6,MIN_SALIENTES,0))=0 THEN 0 ELSE SUM(DECODE(RN,6,MIN_SALIENTES,0)-DECODE(RN,5,MIN_SALIENTES,0)) END MIN_AD_6
       ,CASE WHEN SUM(DECODE(RN,7,MIN_SALIENTES,0))=0 THEN 0 ELSE SUM(DECODE(RN,7,MIN_SALIENTES,0)-DECODE(RN,6,MIN_SALIENTES,0)) END MIN_AD_7
       ,CASE WHEN SUM(DECODE(RN,8,MIN_SALIENTES,0))=0 THEN 0 ELSE SUM(DECODE(RN,8,MIN_SALIENTES,0)-DECODE(RN,7,MIN_SALIENTES,0)) END MIN_AD_8
       ,CASE WHEN SUM(DECODE(RN,9,MIN_SALIENTES,0))=0 THEN 0 ELSE SUM(DECODE(RN,9,MIN_SALIENTES,0)-DECODE(RN,8,MIN_SALIENTES,0)) END MIN_AD_9
       ,CASE WHEN SUM(DECODE(RN,10,MIN_SALIENTES,0))=0 THEN 0 ELSE SUM(DECODE(RN,10,MIN_SALIENTES,0)-DECODE(RN,9,MIN_SALIENTES,0)) END MIN_AD_10
    FROM
        (SELECT RANK() OVER (PARTITION BY contrato ORDER BY FECHA_PROCESO ASC)  RN
                , a.*
        FROM PF_ILIMITADOS_HISTORICO a
        WHERE FECHA_PROCESO >= v_proceso - 30)--v_proceso
    GROUP BY CONTRATO, RAZON_SOCIAL, CICLO_FACT ||' - ' ||PERIODO_FACT, ENTEL
    ORDER BY MIN(FECHA_PROCESO) DESC, SUM(DECODE(RN,1,MIN_SALIENTES,0)) DESC;

END ILIMITADOS_OBTENER_MONITOREO;

PROCEDURE LDI_GENERAR_REPORTE (V_FECHA IN DATE) IS
    C_FECHA VARCHAR2(12) := TO_CHAR(V_FECHA,'YYMMDD')||'000000';

BEGIN

EXECUTE IMMEDIATE 'TRUNCATE TABLE PF_LDI_BASE';
INSERT INTO PF_LDI_BASE (servedmsisdn)
    select distinct a.telefono
      from (select telefono
              from cc_ldi_resumen_ciclo
             where (precio_telefono >= DECODE(tipo_plan,'Prepago',15,125)
                    OR min_telefono >= DECODE(tipo_plan,'Prepago',30,60))
               and  TRUNC(V_FECHA) BETWEEN TRUNC(FECHA_INICIAL) and trunc(FECHA_FINAL)) a
      join (select telefono
              from cc_ldi_resumen_diario
             where TRUNC(fecha) in (TRUNC(V_FECHA),TRUNC(V_FECHA-1)) ) b
        on a.telefono = b.telefono;
commit;
--CELDA DEBE SER NODO
EXECUTE IMMEDIATE 'TRUNCATE TABLE PF_LDI_TRAFICO';
INSERT INTO PF_LDI_TRAFICO
select TRUNC(V_FECHA) FECHA_PROCeso
     , TO_DATE(a.fechaproceso,'YYYYMMDD') fecha_trafico
     , a.recordtype
     , a.servedmsisdn
     , a.callingnumbercdr
     , a.callednumbercdr
     , a.celda c_celda
     , NVL(SUBSTR(c.site_name,INSTR(c.site_name,'_')+1,100), a.celda) celda
     , a.llamadas
     , a.callduration
     , DECODE(a.recordtype, '0', obtener_tipo_destino(a.callednumbercdr, a.callednumberwns) ) tipo_traf
     , DECODE(recordtype, '0', obtener_pais(a.callednumbercdr) ) pais
  from temp_res_tel3g a
  join pf_ldi_base b
    on a.servedmsisdn = b.servedmsisdn
  left join p_datafill_site c
    on a.celda = c.site_id
 where a.fechaproceso between TO_CHAR(V_FECHA-6,'YYYYMMDD') and TO_CHAR(V_FECHA,'YYYYMMDD');

COMMIT;

--MÉTRICAS
DELETE FROM PF_LDI_METRICAS WHERE TRUNC(FECHA_REPORTE) = TRUNC(V_FECHA);
INSERT INTO PF_LDI_METRICAS
SELECT
    ---FOTO
    T_FOTO.CODIGOCONTRATOBSCS
    ,TO_CHAR(V_FECHA-6,'DD/MM/YYYY') FECHA_INICIO
    ,TO_CHAR(V_FECHA,'DD/MM/YYYY') FECHA_FIN
    ,TRUNC(V_FECHA) FECHA_REPORTE
    ,T_DIAS.DIAS_TRAFICO
    ,T_FOTO.COMPANIA
    ,T_TOTAL.servedMSISDN TELEFONO
    ,T_PAIS.PAIS PAIS
    ,T_FOTO.CODIGOCOMPANIA
    ,T_TOTAL.LLAM_SAL + T_TOTAL.LLAM_ENT LLAM_TOT
    ,T_TOTAL.LLAM_ENT
    ,T_LDI.LLAM_SAL_LDI
    ,T_TOTAL.LLAM_SAL - T_LDI.LLAM_SAL_LDI LLAM_SAL_X
    ,ROUND(T_TOTAL.LLAM_SAL /DECODE(T_TOTAL.LLAM_ENT + T_TOTAL.LLAM_SAL,0,0.0001,T_TOTAL.LLAM_ENT + T_TOTAL.LLAM_SAL) ,4)RAT_SAL_LLAM_TOT
    ,ROUND(T_LDI.LLAM_SAL_LDI /DECODE(T_TOTAL.LLAM_SAL,0,0.0001,T_TOTAL.LLAM_SAL) ,4) RATIO_SAL_LLAM_LDI
    ,ROUND(T_TOTAL.MIN_ENT,2) MIN_ENT
    ,ROUND(T_TOTAL.MIN_SAL,2) MIN_SAL
    ,T_TOTAL.MIN_SAL - T_LDI.MIN_SAL_LDI MIN_SAL_X
    ,ROUND(T_LDI.MIN_SAL_LDI,2) MIN_SAL_LDI
    ,ROUND(T_TOTAL.MIN_SAL /DECODE(T_TOTAL.MIN_ENT + T_TOTAL.MIN_SAL,0,0.0001,T_TOTAL.MIN_ENT + T_TOTAL.MIN_SAL) ,4)RAT_SAL_MIN_TOT
    ,ROUND(T_LDI.MIN_SAL_LDI /DECODE(T_TOTAL.MIN_SAL,0,0.0001,T_TOTAL.MIN_SAL) ,4) RATIO_SAL_MIN_LDI
    ,T_TOTAL_DD.DESTINOS_TOTAL
    ,T_LDI.DESTINOS_LDI
    ,ROUND(T_TOTAL_DD.DESTINOS_TOTAL /DECODE(T_TOTAL.LLAM_SAL,0,0.0001,T_TOTAL.LLAM_SAL) ,4) DISP_TOT
    ,ROUND(T_LDI.DESTINOS_LDI /DECODE(T_LDI.LLAM_SAL_LDI,0,0.0001,T_LDI.LLAM_SAL_LDI) ,4) DISP_LDI
    ,obtener_tipodoc (T_FOTO.RUCCOMPANIA) TIPO_DOC
    ,T_FOTO.RUCCOMPANIA NRO_DOC
    --******************************** FIN REPORTE OSIPTEL
    ,T_FOTO.PLANTARIFARIO
    ,T_FOTO.PRODUCTO MODELO
    --VARIACIONES LDI
    ,ROUND(T_LDI.MIN_LDI_1,2) MIN_LDI_1
    ,ROUND(T_LDI.MIN_LDI_2,2) MIN_LDI_2
    ,TO_CHAR(V_FECHA-1,'DD/MM/YYYY') FECHA_1
    ,TO_CHAR(V_FECHA,'DD/MM/YYYY') FECHA_2
    ,ROUND(ABS(T_LDI.MIN_LDI_2-T_LDI.MIN_LDI_1)*(ABS(T_LDI.MIN_LDI_2-T_LDI.MIN_LDI_1)/CASE WHEN T_LDI.MIN_LDI_1 = 0 THEN 0.001 ELSE T_LDI.MIN_LDI_1 END)*100
        /0.5*(T_LDI.MIN_LDI_2+T_LDI.MIN_LDI_1),2) PIBS
    ,ROUND(T_LDI.MIN_LDI_2 - T_LDI.MIN_LDI_1 /CASE WHEN T_LDI.MIN_LDI_1 = 0 THEN 0.001 ELSE T_LDI.MIN_LDI_1 END ,2) VARIAC_PORC
    --TRÁFICO TOTAL
    ,T_TOTAL.LLAM_SAL
    -----PAIS
    ,ROUND(T_PAIS.MIN_PAIS /T_LDI.MIN_SAL_LDI ,4) PORC_PAIS
    ---CELDA
    ,T_CELDA.CELDA
    ,ROUND(T_CELDA.MIN_SAL_CELDA,2)
    ,ROUND(T_CELDA.MIN_SAL_CELDA/T_TOTAL.MIN_SAL,2) PORC_CELDA
    , CASE WHEN (T_LDI.DESTINOS_LDI >= 20
            and T_LDI.DESTINOS_LDI /T_LDI.LLAM_SAL_LDI >=0.75)
            THEN 1 ELSE 2 END PRIORIDAD
    ,ROUND(T_TARIFA.PRECIO_LDI,2) precio_ldi
    ,ROUND(T_TARIFA.COSTO_AVG,2) costo_avg
    ,ROUND(T_TARIFA.COSTO_MIN,2) costo_min
    ,ROUND(T_TARIFA.COSTO_MAX,2) costo_max
    ,T_CONSUMOS.PERIODO1
    ,T_CONSUMOS.MINUTOS1
    ,T_CONSUMOS.PERIODO2
    ,T_CONSUMOS.MINUTOS2
FROM
    ---TRÁFICO TOTAL
    (SELECT servedmsisdn
          , SUM(DECODE(RECORDTYPE, '0', LLAMADAS, 0)) LLAM_SAL
          , SUM(DECODE(RECORDTYPE, '0', CALLDURATION, 0))/60  MIN_SAL
          , SUM(DECODE(RECORDTYPE, '1', LLAMADAS, 0)) LLAM_ENT
          , SUM(DECODE(RECORDTYPE, '1', CALLDURATION, 0))/60  MIN_ENT
       FROM PF_LDI_TRAFICO
      GROUP BY servedmsisdn) T_TOTAL
LEFT JOIN
    ---TRÁFICO LDI SALIENTE
    (SELECT servedmsisdn
        --DETECCION VARIACION
        ,SUM(DECODE(FECHA_TRAFICO, TRUNC(V_FECHA-1), CALLDURATION , 0)) /60 MIN_LDI_1
        ,SUM(DECODE(FECHA_TRAFICO, TRUNC(V_FECHA), CALLDURATION , 0)) /60  MIN_LDI_2
        --SALIENTES LDI
        ,SUM(LLAMADAS) LLAM_SAL_LDI
        ,SUM(CALLDURATION)/60  MIN_SAL_LDI
        ,COUNT(DISTINCT calledNumberCDR) DESTINOS_LDI
    FROM PF_LDI_TRAFICO
    WHERE tipo_traf = 'LDI'
    GROUP BY servedMSISDN) T_LDI
ON T_TOTAL.servedMSISDN = T_LDI.servedMSISDN
LEFT JOIN
    --DESTINOS TOTAL
    (SELECT servedMSISDN
        ,COUNT(DISTINCT DECODE(tipo_traf,'LDI',callingnumbercdr,substr(calledNumberCDR,-9)))  DESTINOS_TOTAL
        FROM PF_LDI_TRAFICO
        WHERE recordtype = '0'
        GROUP BY servedMSISDN
    ) T_TOTAL_DD
ON T_TOTAL.servedMSISDN = T_TOTAL_DD.servedMSISDN
LEFT JOIN
    --PAISES
    (SELECT servedMSISDN, PAIS, MIN_PAIS
       FROM (SELECT servedMSISDn
                  , PAIS
                  , SUM(callDuration)/60  MIN_PAIS
                  , ROW_NUMBER() OVER (PARTITION BY servedMSISDN ORDER BY SUM(callDuration)/60  DESC) as RN
               FROM PF_LDI_TRAFICO
              WHERE tipo_traf = 'LDI'
              GROUP BY servedMSISDN, PAIS)
       WHERE RN = 1) T_PAIS
ON T_TOTAL.servedMSISDN = T_PAIS.servedMSISDN
LEFT JOIN
    --DIAS ANÁLISIS
    (SELECT servedMSISDN
          , COUNT(DISTINCT FECHA_TRAFICO) DIAS_TRAFICO
       FROM PF_LDI_TRAFICO
      GROUP BY servedMSISDN) T_DIAS
ON T_TOTAL.servedMSISDN = T_DIAS.servedMSISDN
LEFT JOIN
    --CELDAS
    (SELECT a.servedMSISDN
          , a.CELDA
          , a.MIN_SAL_CELDA
      FROM  (SELECT servedMSISDN
                  , CELDA
                  , SUM (callDuration)/60  MIN_SAL_CELDA
                  , ROW_NUMBER() OVER (PARTITION BY servedMSISDN ORDER BY SUM (callDuration)/60  DESC) as RN
               FROM PF_LDI_TRAFICO
              WHERE recordtype = '0'
              GROUP BY servedMSISDN
                     , CELDA )a
      WHERE RN=1) T_CELDA
ON T_TOTAL.servedMSISDN = T_CELDA.servedMSISDN
LEFT JOIN (SELECT *
              FROM ( SELECT a.*
                          , row_number() over (PARTITION BY telefono
                                                   ORDER BY DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC
                                                          , fechacargacontrato desc) rn
                       FROM fotoequipos a)
             WHERE rn = 1) T_FOTO
ON T_TOTAL.servedMSISDN = '51'||T_FOTO.TELEFONO
LEFT JOIN
   ( SELECT A.servedMSISDN,
            SUM((callduration / 60.00) * PRECIO ) PRECIO_LDI,
            SUM((callduration / 60.00) * COSTO_MIN ) COSTO_MIN ,
            SUM((callduration / 60.00) * COSTO_MAX ) COSTO_MAX ,
            SUM((callduration / 60.00) * COSTO_AVG ) COSTO_AVG
       FROM PF_LDI_TRAFICO A
       LEFT JOIN (SELECT *
                    FROM ( SELECT a.*, NVL(g_osiptel2,   CASE WHEN UPPER(g_osiptel)LIKE '%CONTROL%' THEN 'Control'
                                                                 WHEN UPPER(g_osiptel)LIKE '%PRE%' THEN 'Prepago'
                                                                 WHEN UPPER(g_osiptel)LIKE '%POST%' THEN 'Postpago'
                                                                 ELSE 'Otros'
                                                                 END ) TIPO_PLAN
                              , row_number() over (PARTITION BY telefono
                                                       ORDER BY DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC
                                                              , fechacargacontrato desc) rn
                           FROM fotoequipos a
                           LEFT JOIN pm_planes b
                                ON a.codigoplantarifariobscs = b.c_plan)
                    WHERE rn = 1) F
         ON a.servedMSISDN = '51'||F.TELEFONO
       LEFT JOIN ID_PAIS_PLAN b
         ON A.PAIS = b.PAIS AND  F.TIPO_PLAN= B.TIPO_PLAN
      WHERE a.tipo_traf ='LDI'
      GROUP BY a.servedMSISDN ) T_TARIFA
ON T_TOTAL.servedMSISDN = T_TARIFA.servedMSISDN
LEFT JOIN
    (SELECT telefono,
            AVG(DECODE(RN,1,periodo_facturacion)) PERIODO1, AVG(DECODE(RN,1,minutos)) MINUTOS1
           ,AVG(DECODE(RN,2,periodo_facturacion)) PERIODO2, AVG(DECODE(RN,2,minutos)) MINUTOS2
    FROM
        (select periodo_facturacion, telefono, sum(minutos) MINUTOS,
                RANK() OVER (PARTITION BY TELEFONO ORDER BY periodo_facturacion desc) RN
        from cc_ldi_resumen_ciclo
        group by periodo_facturacion, telefono)
    WHERE RN in (1,2)
    group by telefono) T_CONSUMOS
ON T_TOTAL.servedMSISDN = T_CONSUMOS.telefono
WHERE
    T_LDI.DESTINOS_LDI >= 20
    and T_LDI.DESTINOS_LDI /T_LDI.LLAM_SAL_LDI >=0.75;

commit;

--ACTUALIZAR TELEFONOS SIN CONTRATO

MERGE INTO pf_ldi_metricas t_met
USING  (SELECT *
              FROM ( SELECT a.*
                          , row_number() over (PARTITION BY telefono
                                                   ORDER BY DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC
                                                          , fechacargacontrato desc) rn
                       FROM fotoequipos a)
             WHERE rn = 1) t_foto
ON (t_met.TELEFONO = '51'||t_foto.telefono)
WHEN MATCHED THEN UPDATE SET  t_met.CODIGOCONTRATOBSCS = t_foto.CODIGOCONTRATOBSCS
                             ,t_met.NRO_DOC = t_foto.RUCCOMPANIA
                             ,t_met.PLAN_TARIFARIO = t_foto.PLANTARIFARIO
                             ,t_met.EQUIPO = t_foto.PRODUCTO
WHERE t_met.codigocontratobscs is null ;

/*UPDATE /*+BYPASS_UJVC
( SELECT
     t_met.CODIGOCONTRATOBSCS M_CONT
    ,t_met.NRO_DOC M_DOC
    ,t_met.PLAN_TARIFARIO M_PLAN
    ,t_met.EQUIPO M_EQUIPO
    ,T_FOTO.CODIGOCONTRATOBSCS F_CONT
    ,T_FOTO.RUCCOMPANIA F_DOC
    ,T_FOTO.PLANTARIFARIO F_PLAN
    ,T_FOTO.PRODUCTO F_EQUIPO
    FROM pf_ldi_metricas t_met
    LEFT JOIN (SELECT *
               FROM ( SELECT a.*
                           , rank() over (PARTITION BY telefono
                                              ORDER BY  DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC,fechacargacontrato desc) rn
                        FROM fotoequipos a )
              WHERE rn = 1 ) t_foto
    ON t_met.TELEFONO = '51'||t_foto.telefono
    WHERE t_met.codigocontratobscs is null
  )
SET   m_cont = f_cont
     ,m_doc = f_doc
     ,m_plan = f_plan
     ,m_equipo = f_equipo ;*/
COMMIT;

DELETE FROM PF_LDI_MONITOREO WHERE FECHA_DETECCION >= V_FECHA - 7;
INSERT INTO PF_LDI_MONITOREO
    SELECT    T_METR.CODIGOCONTRATOBSCS
            , T_METR.COMPANIA
            , T_METR.TELEFONO
            , T_METR.PAIS
            , TRUNC(MIN(T_METR.FECHA_REPORTE)) FECHA_DETECCION
            , MIN(T_METR.MIN_SAL_LDI) MINUTOS_DETECCION
            , ROUND(SUM(DECODE (ABS(TRUNC(FECHA_REPORTE)-TRUNC(T_TRAF.FECHA)),1,minutos,0)),2) MIN_LDI_D2
            , ROUND(SUM(DECODE (ABS(TRUNC(FECHA_REPORTE)-TRUNC(T_TRAF.FECHA)),2,minutos,0)),2) MIN_LDI_D3
            , ROUND(SUM(DECODE (ABS(TRUNC(FECHA_REPORTE)-TRUNC(T_TRAF.FECHA)),3,minutos,0)),2) MIN_LDI_D4
            , ROUND(SUM(DECODE (ABS(TRUNC(FECHA_REPORTE)-TRUNC(T_TRAF.FECHA)),4,minutos,0)),2) MIN_LDI_D5
            , ROUND(SUM(DECODE (ABS(TRUNC(FECHA_REPORTE)-TRUNC(T_TRAF.FECHA)),5,minutos,0)),2) MIN_LDI_D6
            , ROUND(SUM(DECODE (ABS(TRUNC(FECHA_REPORTE)-TRUNC(T_TRAF.FECHA)),6,minutos,0)),2) MIN_LDI_D7
            , ROUND(SUM(T_TRAF.PRECIO),2) PRECIO_LDI
            , ROUND(SUM(T_TRAF.COSTO_AVG),2) COSTO_PROM
            , ROUND(SUM(T_TRAF.COSTO_MIN),2) COSTO_MIN
            , ROUND(SUM(T_TRAF.COSTO_MAX),2) COSTO_MAX
    FROM
     (SELECT a.*, RANK()OVER (PARTITION BY CODIGOCONTRATOBSCS, TELEFONO ORDER BY FECHA_REPORTE) RN
        FROM PF_LDI_METRICAS a
       WHERE FECHA_REPORTE >= V_FECHA-7
         AND PRIORIDAD = 1) T_METR
    LEFT JOIN
    (  SELECT telefono
            , fecha
            , sum(minutos) minutos
            , sum(precio) precio
            , sum(costo_min) costo_min
            , sum(costo_max) costo_max
            , sum(costo_avg) costo_avg
         FROM cc_ldi_resumen_diario a
         LEFT JOIN ID_PAIS b
           ON a.pais = b.pais
        WHERE fecha >= V_FECHA-10
        GROUP BY telefono
               , fecha
     ) T_TRAF
    ON  T_METR.TELEFONO = T_TRAF.telefono
    WHERE TRUNC(T_METR.FECHA_REPORTE) < TRUNC(T_TRAF.FECHA)
      AND T_METR.RN = 1
      AND T_METR.TELEFONO is not null
    GROUP BY T_METR.CODIGOCONTRATOBSCS, T_METR.COMPANIA, T_METR.TELEFONO, T_METR.PAIS;
COMMIT;

END LDI_GENERAR_REPORTE;

PROCEDURE LDI_OBTENER_METRICAS (C_FECHA IN VARCHAR2,pcursor OUT t_cursor) IS
BEGIN
    OPEN pcursor FOR
    SELECT    NVL(a.CODIGOCONTRATOBSCS,'')
          ,NVL(FECHA_INICIO,'')
          ,NVL(FECHA_FIN,'')
          ,NVL(TO_CHAR(FECHA_REPORTE,'DD/MM/YYYY'),'')
          ,NVL(DIAS_TRAFICO,'')
          ,NVL(a.COMPANIA,'')
          ,NVL(a.TELEFONO,'')
          ,NVL(PAIS,'')
          ,NVL(a.CODIGOCOMPANIA,'')
          ,NVL(LLAM_TOT,'')
          ,NVL(LLAM_ENT,'')
          ,NVL(LLAM_SAL_LDI,'')
          ,NVL(LLAM_SAL_X,'')
          ,ROUND(RATIO_SAL_LLAM_TOT,2)
          ,ROUND(RATIO_SAL_LLAM_LDI,2)
          ,ROUND(MIN_ENT,2)
          ,ROUND(MIN_SAL,2)
          ,ROUND(MIN_SAL_X,2)
          ,ROUND(MIN_SAL_LDI,2)
          ,ROUND(RATIO_SAL_MIN_TOT,2)
          ,ROUND(RATIO_SAL_MIN_LDI,2)
          ,NVL(DESTINOS_TOTAL,'')
          ,NVL(DESTINOS_LDI,'')
          ,NVL(ROUND(DISP_TOT,2),'')
          ,NVL(ROUND(DISP_LDI,2),'')
          ,NVL(TIPO_DOC,'')
          ,NVL(NRO_DOC,'')
          ,NVL(ROUND(MIN_LDI_1,2),'')
          ,NVL(ROUND(MIN_LDI_2,2),'')
          ,NVL(FECHA_1,'')
          ,NVL(FECHA_2,'')
          ,NVL(ROUND(PIBS,2),'')
          ,NVL(ROUND(VARIAC_PORC,2),'')
          ,NVL(LLAM_SAL,'')
          ,NVL(ROUND(PORC_PAIS,2),'')
          ,NVL(a.CELDA,'')
          ,NVL(ROUND(MIN_SAL_CELDA,2),'')
          ,NVL(ROUND(PORC_CELDA,2),'')
          ,NVL(PRIORIDAD,'')
          ,NVL(PLAN_TARIFARIO,'')
          ,NVL(EQUIPO,'')
          ,NVL(ROUND(PRECIO_LDI,2),'')
          ,NVL(ROUND(COSTO_AVG,2),'')
          ,NVL(ROUND(COSTO_MIN,2),'')
          ,NVL(ROUND(COSTO_MAX,2),'')
          ---------------------------
          ,NVL(TO_CHAR(d.FECHAACTIVACION),NVL(TO_CHAR(f.FECHAACTIVACIONCONTRATO), ''))
          ,NVL( DECODE(d.portabilidad,'1','PORTADO'),'')
            --,  c.identificadorconsultor --foto
          ,NVL(  d.canal_de_venta,'')
          ,NVL(  d.socio_negocio,'')
          ,NVL(  d.tienda,'')
          ,NVL(  d.cadena_dealer,'')
          ,NVL(  d.gerencia_territorio,'')
          ,NVL(  d.tipo_tienda,'')
          ,NVL(d.gama_equipo,'')
          ,NVL(d.rentabasica,'')
          ,NVL(d.tipo_renta,'')
          ,NVL(d.port_origen,'')
          ---------
          ,e.numcontratos
          ,CASE WHEN a.CELDA IN (SELECT a.celda FROM
                                    (select celda, count(1) cant
                                                from pf_ldi_metricas where prioridad = 1
                                                group by celda
                                        ORDER BY COUNT(1) DESC ) A
                                    WHERE ROWNUM <= 5)
                THEN 'RIESGO' ELSE '' END CELDA_RIESGO
          , a.consumo_periodo1
          , a.consumo_p1_minutos
          , a.consumo_periodo2
          , a.consumo_p2_minutos
          ---nuevos campos
          , FECHA_REPORTE-f.FECHAACTIVACIONCONTRATO dias_activo
          , DECODE(CICLOFACTURACIONCONTRATO ,
                 '01', TO_CHAR(FECHA_REPORTE,'yyyymm'),
                 '03', CASE WHEN TO_CHAR(FECHA_REPORTE, 'dd')>='16' THEN TO_CHAR(ADD_MONTHS(FECHA_REPORTE,1),'yyyymm') ELSE TO_CHAR(FECHA_REPORTE,'yyyymm') END,
                 '04', CASE WHEN TO_CHAR(FECHA_REPORTE, 'dd')>='09' THEN TO_CHAR(ADD_MONTHS(FECHA_REPORTE,1),'yyyymm') ELSE TO_CHAR(FECHA_REPORTE,'yyyymm') END,
                 '05', CASE WHEN TO_CHAR(FECHA_REPORTE, 'dd')>='23' THEN TO_CHAR(ADD_MONTHS(FECHA_REPORTE,1),'yyyymm') ELSE TO_CHAR(FECHA_REPORTE,'yyyymm') END) periodo_fact
          ,TO_CHAR(DECODE(CICLOFACTURACIONCONTRATO ,
                 '01', TO_DATE(TO_CHAR(ADD_MONTHS(FECHA_REPORTE,1),'yyyymm')||'01','YYYYMMDD')-1,
                 '03', CASE WHEN TO_CHAR(FECHA_REPORTE, 'dd')>='16' THEN TO_DATE(TO_CHAR(ADD_MONTHS(FECHA_REPORTE,1),'yyyymm')||'15','YYYYMMDD') ELSE TO_DATE(TO_CHAR(FECHA_REPORTE,'yyyymm')||'15','YYYYMMDD') END,
                 '04', CASE WHEN TO_CHAR(FECHA_REPORTE, 'dd')>='09' THEN TO_DATE(TO_CHAR(ADD_MONTHS(FECHA_REPORTE,1),'yyyymm')||'08','YYYYMMDD') ELSE TO_DATE(TO_CHAR(FECHA_REPORTE,'yyyymm')||'08','YYYYMMDD') END,
                 '05', CASE WHEN TO_CHAR(FECHA_REPORTE, 'dd')>='23' THEN TO_DATE(TO_CHAR(ADD_MONTHS(FECHA_REPORTE,1),'yyyymm')||'22','YYYYMMDD') ELSE TO_DATE(TO_CHAR(FECHA_REPORTE,'yyyymm')||'22','YYYYMMDD') END)) ultimo_dia_fact
         , DECODE(CICLOFACTURACIONCONTRATO ,
                 '01', TO_DATE(TO_CHAR(ADD_MONTHS(FECHA_REPORTE,1),'yyyymm')||'01','YYYYMMDD')-1,
                 '03', CASE WHEN TO_CHAR(FECHA_REPORTE, 'dd')>='16' THEN TO_DATE(TO_CHAR(ADD_MONTHS(FECHA_REPORTE,1),'yyyymm')||'15','YYYYMMDD') ELSE TO_DATE(TO_CHAR(FECHA_REPORTE,'yyyymm')||'15','YYYYMMDD') END,
                 '04', CASE WHEN TO_CHAR(FECHA_REPORTE, 'dd')>='09' THEN TO_DATE(TO_CHAR(ADD_MONTHS(FECHA_REPORTE,1),'yyyymm')||'08','YYYYMMDD') ELSE TO_DATE(TO_CHAR(FECHA_REPORTE,'yyyymm')||'08','YYYYMMDD') END,
                 '05', CASE WHEN TO_CHAR(FECHA_REPORTE, 'dd')>='23' THEN TO_DATE(TO_CHAR(ADD_MONTHS(FECHA_REPORTE,1),'yyyymm')||'22','YYYYMMDD') ELSE TO_DATE(TO_CHAR(FECHA_REPORTE,'yyyymm')||'22','YYYYMMDD') END) - FECHA_REPORTE dias_fin_fact
       FROM PF_LDI_METRICAS a
       LEFT JOIN (
            select contrato,FECHAACTIVACION,canal_de_venta,socio_negocio, tienda, cadena_dealer,gerencia_territorio,tipo_tienda,portabilidad
                , gama_equipo, rentabasica, tipo_renta, modalidad_origen port_origen
                from tnp_inar_personas_ods
            UNION ALL
            SELECT contrato,FECHAACTIVACION, canal_venta,dealer,canal,zona_detallada,zona_global,tipo_consultor,portabilidad
                , gama_equipo, rentabasica, tipo_renta, modalidad_origen port_origen
            from tnp_inar_empresas_ods
          ) d
        ON a.CODIGOCONTRATOBSCS = d.contrato
       LEFT JOIN
          ( select codigocompania, count(distinct codigocontratobscs) numcontratos
                        from fotoequipos
                       where estadocontrato in ('Activo','Suspendido')
                         and product not like '%Pre%'
                    group by codigocompania ) e
          ON a.codigocompania = e.codigocompania
      left join(SELECT *
                  FROM ( SELECT a.*
                              , row_number() over (PARTITION BY telefono
                                                       ORDER BY DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC
                                                              , fechacargacontrato desc) rn
                           FROM fotoequipos a)
                 WHERE rn = 1) f
        on a.codigocontratobscs = f.codigocontratobscs
      WHERE TO_CHAR(FECHA_REPORTE,'DD/MM/YYYY') = C_FECHA;

END LDI_OBTENER_METRICAS;

PROCEDURE LDI_OBTENER_MONITOREO (C_FECHA IN VARCHAR2,pcursor OUT t_cursor) IS
BEGIN
    OPEN pcursor FOR
  --OBTEENR MONITOREO
    SELECT CODIGOCONTRATOBSCS
      ,COMPANIA
      ,TELEFONO
      ,PAIS
      ,TO_CHAR(FECHA_DETECCION,'DD/MM/YYYY')
      ,MINUTOS_DETECCION
      ,MIN_LDI_D2
      ,MIN_LDI_D3
      ,MIN_LDI_D4
      ,MIN_LDI_D5
      ,MIN_LDI_D6
      ,MIN_LDI_D7
      ,PRECIO_LDI
      ,COSTO_PROM
      ,COSTO_MIN
      ,COSTO_MAX
  FROM PF_LDI_MONITOREO
  WHERE FECHA_DETECCION >= TO_DATE(C_FECHA,'DD/MM/YYYY') - 7 ;

END LDI_OBTENER_MONITOREO;

PROCEDURE LDI_ENVIAR_CORREO(v_fecha DATE, vprioridad number) IS
  HTML CLOB;
  HTML2 CLOB;
  P_TO VARCHAR2(200);
  P_TO2 VARCHAR2(200);
  P_TO3 VARCHAR2(200);
  P_TO4 VARCHAR2(200);
  P_TO5 VARCHAR2(200);
  P_TO6 VARCHAR2(200);
  P_TO7 VARCHAR2(200);
  P_TO8 VARCHAR2(200);
  P_TO9 VARCHAR2(200);
  P_FROM VARCHAR2(200);
  P_SUBJECT VARCHAR2(200);
  P_TEXT VARCHAR2(200);
  P_HTML CLOB;
  P_SMTP_HOSTNAME VARCHAR2(200);
  P_SMTP_PORTNUM VARCHAR2(200);
  BEGIN
    P_HTML :='';

     HTML :=
             '<style>'||
                            '  table { '||
                                 '   border:1px solid #000000;'||
                                 '   border-spacing: 0;'||
                                 '   border-collapse: collapse;'||
                                 '   height:100%;'||
                                 '   margin:0px;padding:0px;'||
                               ' } .fr td{ '||
                                   ' background-color:#0E8E4C;'||
                                   ' text-align:center;'||
                                   ' border-width:0px 0px 1px 1px;'||
                                   ' font-size:12px;'||
                                   ' font-family:sans-serif;'||
                                   ' font-weight:bold;'||
                                   ' color:#ffffff;'||
                               ' }  td{'||
                                '    vertical-align:middle;'||
                                '    background-color:#ffffff;'||
                                '    border:1px solid #000000;'||
                                 '   border-width:0px 1px 1px 0px;'||
                                 '   text-align:left;'||
                                 '   padding:5px;'||
                                 '   font-size:10px;'||
                                  '  font-family:sans-serif;'||
                                  '  color:#000000;'||
                               ' } h2,p {font-family:sans-serif;}' ||
                         '</style>';


            IF vprioridad = 1 THEN
                html := html || '<h2>Alerta - Fraude Larga Distancia Internacional (Fecha : ' ||TO_CHAR(v_fecha, 'DD/MM/YYYY')|| ')</h2>'||
                        '<p>Usuarios con m&aacutes de 20 destinos LDI y más de 75% de disperi&oacuten ( 7 d&iacuteas de tr&aacutefico )</p>';
            ELSIF vprioridad = 2 THEN
                html := html || '<h2>Alerta - Control de consumos Larga Distancia Internacional </h2>'||
                        '<p>Top 100 de usuarios con m&aacutes de 80 minutos LDI ( 7 d&iacuteas de tr&aacutefico )</p>';
            END IF;

            html := html ||
                   '<table>'||
                        '<tr class=''fr''>'||
                            '<td>Contrato</td>'||
                            '<td>Fecha reporte</td>'||
                            '<td>Días tr&aacutefico</td>'||
                            '<td>Raz&oacuten Social</td>'||
                            '<td>Tel&eacutefono</td>'||
                            '<td>Plan Tarifario</td>'||
                            '<td>Pa&iacutes</td>'||
                            '<td>Minutos Salientes</td>'||
                            '<td>Minutos Salientes LDI</td>'||
                            '<td>Destinos LDI</td>'||
                            '<td>Dispersi&oacuten LDI</td>'||
                            '<td>Ratio minutos LDI</td>'||
                            '<td>Consumo LDI (S/.)</td>'||
                            '<td>L&iacutemite de cr&eacutedito (S/.)</td>'||
                            '<td>Costo promedio (S./)</td>'||
                            '<td>Costo m&iacutenimo (S./)</td>'||
                            '<td>Costo m&aacuteximo (S./)</td>'||
                            '<td >Validaci&oacuten</td>'||
                        '</tr>';


    FOR REC IN
      (
        SELECT * FROM
        (SELECT t_metricas.CODIGOCONTRATOBSCS, t_metricas.FECHA_REPORTE,
                    t_metricas.DIAS_TRAFICO , t_metricas.COMPANIA,
                    t_metricas.TELEFONO, plan_tarifario, t_metricas.PAIS, t_metricas.MIN_SAL,
                    t_metricas.MIN_SAL_LDI ,t_metricas.DESTINOS_LDI, t_metricas.DISP_LDI,
                    t_metricas.RATIO_SAL_MIN_LDI, t_metricas.precio_ldi, t_credito.limitecreditocuenta
                    , ROUND(t_metricas.costo_avg,2) costo_avg, ROUND(t_metricas.costo_min,2) costo_min
                    , ROUND(t_metricas.costo_max,2) costo_max
                    , NVL(validacion.validacion, 'ACTIV. ANTES DE BIO') validacion
               FROM PF_LDI_METRICAS t_metricas
               LEFT JOIN (SELECT *
                              FROM ( SELECT a.*
                                          , row_number() over (PARTITION BY telefono
                                                                   ORDER BY DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC
                                                                          , fechacargacontrato desc) rn
                                       FROM fotoequipos a)
                             WHERE rn = 1) t_foto
                ON t_metricas.codigocontratobscs = t_foto.codigocontratobscs
               LEFT JOIN temp_credito_disponible /*dmartsys.cuentaresponsable@dmart_lm*/ t_credito
                ON t_foto.numerocuentaresponsable = t_credito.numerocuentaresponsable
               LEFT JOIN
                        (SELECT contrato
                             , DECODE(validacion_identidad,'NOT BIOMETRIC','NO BIO: ','BIOMETRIC','BIO: ',validacion_identidad)
                             ||DECODE(resultado_validacion,'NO VALIDADO','',resultado_validacion) VALIDACION
                        FROM p_inar
                        WHERE estadoinar in ('NEWS','ADDS','REAC')) validacion
              ON t_metricas.codigocontratobscs = validacion.contrato
               WHERE TRUNC(t_metricas.FECHA_REPORTE) = TRUNC(V_FECHA)
               AND t_metricas.PRIORIDAD=vprioridad
               AND t_metricas.PRIORIDAD||t_metricas.TELEFONO NOT IN
                   (select '1'||telefono
                        from PF_LDI_METRICAS
                        WHERE  PRIORIDAD = 1
                        AND MIN_LDI_2 = 0
                        AND TRUNC(fecha_reporte) = TRUNC(V_FECHA))
               ORDER BY MIN_SAL_LDI DESC)
           where rownum <= 100
      )
    LOOP
      HTML := HTML  || '<tr><td>' ||  REC.CODIGOCONTRATOBSCS ||
                        '</td><td>' || REC.FECHA_REPORTE ||
                        '</td><td>' || REC.DIAS_TRAFICO ||
                        '</td><td>' || REC.COMPANIA ||
                        '</td><td>' || REC.TELEFONO ||
                        '</td><td>' || rec.plan_tarifario ||
                        '</td><td>' || REC.PAIS ||
                        '</td><td>' || REC.MIN_SAL ||
                        '</td><td>' || rec.MIN_SAL_LDI ||
                        '</td><td>' || REC.DESTINOS_LDI ||
                        '</td><td>' || REC.DISP_LDI ||
                        '</td><td>' || rec.RATIO_SAL_MIN_LDI ||
                        '</td><td>' || REC.precio_ldi ||
                        '</td><td>' || REC.limitecreditocuenta ||
                        '</td><td>' || rec.costo_avg ||
                        '</td><td>' || REC.costo_min ||
                        '</td><td>' || REC.costo_max ||
                        '</td><td>' || REC.validacion ||
                        '</td></tr>';
      --DBMS_OUTPUT.PUT_LINE(length(html));
    END LOOP;
    HTML := HTML || '</table><br/> <p>Se considera tipo de cambio de S./3 para los costos IX </p> ';

    --IP
    P_TO := 'alejandra.linares@entel.pe';
    P_TO2 := 'miguel.pebes@entel.pe';
    P_TO3 := 'pamela.pimentel@entel.pe';
    --FRAUDES
    P_TO4 := 'daniel.delzo@entel.pe';
    P_TO5 := 'jimmy.robles@entel.pe';
    --p_TO8 := 'denis.lopez@entel.pe';
    --CONTROL DE CONSUMOS
    P_TO6 := 'angelica.valdes@entel.pe';
    p_TO7 := 'luis.perez@entel.pe';

    P_FROM := 'ip_alertas@entel.pe';
    P_SUBJECT := 'Alerta de consumos LDI';
    P_TEXT := 'msg';
    P_HTML := HTML;
    --P_SMTP_HOSTNAME := 'relay-alertas.entel.pe';
    P_SMTP_HOSTNAME := 'relay-procesos.entel.pe';
    P_SMTP_PORTNUM := '25';

    IF vprioridad = 1 THEN
        --IP
        BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        --BEGIN HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        BEGIN HTML_EMAIL(    P_TO => P_TO3,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        --FRAUDES
        BEGIN HTML_EMAIL(    P_TO => P_TO4,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        BEGIN HTML_EMAIL(    P_TO => P_TO5,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        --BEGIN HTML_EMAIL(    P_TO => P_TO8,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
  ELSIF vprioridad = 2 THEN
        --IP
        BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        BEGIN HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        BEGIN HTML_EMAIL(    P_TO => P_TO3,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        --CONTROL DE CONSUMOS
        BEGIN HTML_EMAIL(    P_TO => P_TO6,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        --BEGIN HTML_EMAIL(    P_TO => P_TO7,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
   END IF;

END LDI_ENVIAR_CORREO;

PROCEDURE ILIMITADOS_GENERAR_REPORTE (V_FECHA DATE) IS
c_part number;

BEGIN

    --CARGAR TABLA DE TRÁFICO ILIMITADOS
    BEGIN PAQUETE_FRAUDES.ILIMITADOS_DESCARGAR_TRAFICO(V_FECHA-2); END;
    BEGIN PAQUETE_FRAUDES.ILIMITADOS_DESCARGAR_TRAFICO(V_FECHA-1); END;
    BEGIN PAQUETE_FRAUDES.ILIMITADOS_DESCARGAR_TRAFICO(V_FECHA); END;

    --MÉTRICAS
    DELETE FROM pf_ilimitados_metricas
    WHERE periodo_facturacion = obtener_periodo_fact_actual(CICLO_FACTURACION, V_FECHA);

     BEGIN
       EXECUTE IMMEDIATE 'DROP INDEX idx_ilim_fecha_p';

        EXCEPTION
            WHEN OTHERS THEN
                    DBMS_OUTPUT.put_line( 'ÍNDICE NO EXISTE' );

      END;


    INSERT /*+APPEND*/ INTO pf_ilimitados_metricas(periodo_facturacion, contrato, ciclo_facturacion, c_plan,
                                       telefono, min_sal, llam_sal, dest_sal, disp_sal,
                                       min_ent, llam_ent, c_celdas, celda_max, porc_celda,
                                       min_c_riesgo, rat_riesgo, condicion,
                                       sal_onnet, sal_offnet, sal_ldi, fecha_proceso,
                                       dias_trafico, dias_analisis, fecha_ini, fecha_carga,
                                       tipo_venta, mou)
        SELECT /*+PARALLEL(4)*/ base.periodo_facturacion
             , base.contrato
             , base.ciclo
             , base.c_plan
             , base.telefono
             , ROUND(NVL(b.MIN_SAL,0),2)
             , NVL(b.LLAM_SAL,0) LLAM_SAL
             , NVL(b.DEST_SAL,0) DEST_SAL
             , ROUND((b.DEST_SAL/DECODE(NVL(b.LLAM_SAL,0),0,0.001,b.LLAM_SAL)),4) DISP_SAL
             , ROUND(base.MIN_ENT,2)
             , base.LLAM_ENT
             , b.C_CELDAS
             , e.nodo
             , ROUND(e.MAX_MIN_CELDA /DECODE(NVL(b.MIN_SAL,0),0,0.001,b.MIN_SAL) ,3) PORC_CELDA
             , ROUND(b.MIN_C_RIESGO,2)
             , ROUND(b.MIN_C_RIESGO /DECODE(NVL(b.MIN_SAL,0),0,0.001,b.MIN_SAL) ,3) RAT_RIESGO
             ,  CASE WHEN (     b.MIN_SAL> base.MOU
                           AND (b.DEST_SAL/DECODE(NVL(b.LLAM_SAL,0),0,0.001,b.LLAM_SAL)) >= 0.75
                           AND (e.MAX_MIN_CELDA /DECODE(NVL(b.MIN_SAL,0),0,0.001,b.MIN_SAL)) >= 0.5
                           AND base.MIN_ENT/(base.MIN_ENT + b.MIN_SAL) <= 0.05
                           AND b.dias_trafico < 16
                         ) THEN 'ALERTA 4'
                    WHEN (     b.MIN_SAL> base.MOU
                           AND (b.DEST_SAL/DECODE(NVL(b.LLAM_SAL,0),0,0.001,b.LLAM_SAL)) >= 0.75
                           AND (e.MAX_MIN_CELDA /DECODE(NVL(b.MIN_SAL,0),0,0.001,b.MIN_SAL)) >= 0.5
                           AND base.MIN_ENT/(base.MIN_ENT + b.MIN_SAL) <= 0.05
                         ) THEN 'ALERTA 3'
                    WHEN (     b.MIN_SAL> base.MOU
                           AND (b.DEST_SAL/DECODE(NVL(b.LLAM_SAL,0),0,0.001,b.LLAM_SAL)) >= 0.75
                           AND (e.MAX_MIN_CELDA /DECODE(NVL(b.MIN_SAL,0),0,0.001,b.MIN_SAL)) >= 0.5
                         ) THEN 'ALERTA 2'
                    WHEN (     b.MIN_SAL> base.MOU
                           AND (b.DEST_SAL/DECODE(NVL(b.LLAM_SAL,0),0,0.001,b.LLAM_SAL)) >= 0.75
                         ) THEN 'ALERTA 1'
                   ELSE NULL
                   END ALERTA
             , ROUND(b.SAL_ONNET,2)
             , ROUND(b.SAL_OFFNET,2)
             , ROUND(b.SAL_LDI,2)
             , V_FECHA fecha_proceso
             , b.dias_trafico
             , ABS(TRUNC(TO_DATE(DECODE(ciclo,
                      '01', TO_CHAR(V_FECHA,'yyyymm')||'01',
                      '03', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='16' THEN TO_CHAR(V_FECHA,'yyyymm')||'16' ELSE TO_CHAR(ADD_MONTHS(V_FECHA,-1),'yyyymm')||'16' END,
                      '04', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='09' THEN TO_CHAR(V_FECHA,'yyyymm')||'09' ELSE TO_CHAR(ADD_MONTHS(V_FECHA,-1),'yyyymm')||'09' END,
                      '05', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='23' THEN TO_CHAR(V_FECHA,'yyyymm')||'23' ELSE TO_CHAR(ADD_MONTHS(V_FECHA,-1),'yyyymm')||'23' END),'YYYYMMDD'))
               - TRUNC(V_FECHA))  DIAS
             , TO_DATE(DECODE(ciclo,
                      '01', TO_CHAR(V_FECHA,'yyyymm')||'01',
                      '03', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='16' THEN TO_CHAR(V_FECHA,'yyyymm')||'16' ELSE TO_CHAR(ADD_MONTHS(V_FECHA,-1),'yyyymm')||'16' END,
                      '04', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='09' THEN TO_CHAR(V_FECHA,'yyyymm')||'09' ELSE TO_CHAR(ADD_MONTHS(V_FECHA,-1),'yyyymm')||'09' END,
                      '05', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='23' THEN TO_CHAR(V_FECHA,'yyyymm')||'23' ELSE TO_CHAR(ADD_MONTHS(V_FECHA,-1),'yyyymm')||'23' END),'YYYYMMDD') FECHA_INI
             , SYSDATE fecha_Carga
             , base.tipo_venta
             , base.mou
          FROM
        (--BASE DE CLIENTES CON TRÁFICO
          SELECT X.periodo_facturacion
               , X.contrato
               , X.ciclo
               , X.c_plan
               , X.servedmsisdn telefono
               , NVL(NVL(tnp_per.t_venta,tnp_emp.t_venta),'CDP') tipo_venta
               , DECODE(NVL(NVL(tnp_per.t_venta,tnp_emp.t_venta),'CDP')
                            , 'Portabilidad', pl.mou_porta, mou_venta) MOU
               , SUM(llamadas) llamadas
               , SUM(DECODE(recordtype,'1',llamadas,0)) LLAM_ENT
               , SUM (DECODE(recordtype,'1',callDuration,0))/60 MIN_ENT
            FROM pf_ilimitados_trafico X
            LEFT JOIN pf_ilimitados_planes PL
              ON X.c_plan = PL.c_plan
            LEFT JOIN (SELECT contrato, DECODE(portabilidad,1,'Portabilidad','Venta') t_venta,fechaactivacion FROM tnp_inar_personas_ods) tnp_per
              ON X.contrato = tnp_per.contrato
            LEFT JOIN (SELECT contrato, DECODE(portabilidad,1,'Portabilidad','Venta') t_venta, fechaactivacion FROM tnp_inar_empresas_ods) tnp_emp
              ON X.contrato = tnp_emp.contrato
           WHERE periodo_facturacion = obtener_periodo_fact_actual(ciclo, V_FECHA)
           GROUP BY X.periodo_facturacion
               , X.contrato
               , X.ciclo
               , X.c_plan
               , X.servedmsisdn
               , NVL(NVL(tnp_per.t_venta,tnp_emp.t_venta),'CDP')
               , DECODE(NVL(NVL(tnp_per.t_venta,tnp_emp.t_venta),'CDP')
                            , 'Portabilidad', pl.mou_porta, mou_venta)  ) base
         LEFT JOIN
          (--SALIENTES
          SELECT contrato
               , SUM(llamadas) LLAM_SAL
               , SUM(callDuration)/60 MIN_SAL
               , COUNT (DISTINCT DECODE(tipo_destino,'LDI',callingnumbercdr,substr(calledNumberCDR,-9)) ) DEST_SAL
               , COUNT(DISTINCT nodo) C_CELDAS
               , SUM(CASE WHEN nodo IN ('197','215','128','82','52','41','507','1201','631','510')
                          THEN CALLDURATION ELSE 0 END)/60 MIN_C_RIESGO
               , COUNT(distinct fecha) dias_trafico
               , SUM( CASE tipo_destino WHEN 'ONNET' THEN callDuration ELSE 0 END ) /60 SAL_ONNET
               , SUM( CASE tipo_destino WHEN 'OFFNET' THEN callDuration ELSE 0 END ) /60 SAL_OFFNET
               , SUM( CASE tipo_destino WHEN 'LDI' THEN callDuration ELSE 0 END ) /60 SAL_LDI
           FROM pf_ilimitados_trafico
          WHERE recordtype = '0'
            AND periodo_facturacion = obtener_periodo_fact_actual(ciclo, V_FECHA)
          GROUP BY contrato ) b
         ON base.contrato=b.contrato
         LEFT JOIN
          (--MINUTOS POR CELDA
                 SELECT a.contrato
                      , a.nodo
                      , a.MAX_MIN_CELDA
                  FROM  (SELECT contrato
                              , nodo
                              , SUM (callDuration)/60  MAX_MIN_CELDA
                              , ROW_NUMBER() OVER (PARTITION BY contrato ORDER BY SUM (callDuration)/60  DESC) as RN
                           FROM pf_ilimitados_trafico
                          WHERE recordtype = '0'
                            AND periodo_facturacion = obtener_periodo_fact_actual(ciclo, V_FECHA)
                          GROUP BY contrato
                                 , nodo )a
                  WHERE RN=1
          )e
          ON base.contrato=e.contrato;


    COMMIT;

    BEGIN
    EXECUTE IMMEDIATE 'CREATE INDEX idx_ilim_fecha_p ON pf_ilimitados_metricas (fecha_proceso) TABLESPACE  ods_gpf_index';
    EXCEPTION
       WHEN OTHERS THEN
                DBMS_OUTPUT.put_line( 'ÍNDICE NO EXISTE' );
    END;

    ---GUARDAR HISOTRIAL
    DELETE FROM pf_ilimitados_historico WHERE TRUNC(FECHA_PROCESO) = TRUNC(V_FECHA);

    INSERT /*+APPEND*/ INTO pf_ilimitados_historico
    SELECT  b.FECHAACTIVACIONCONTRATO F_ACTIVACION_CONTRATO
                      ,b.FECHACARGACONTRATO F_CARGA_CONTRATO
                      ,a.FECHA_INI
                      ,a.dias_analisis
                      ,a.contrato
                      ,b.CODIGOCUENTARESPONSABLE
                      ,b.COMPANIA
                      ,b.RUCCOMPANIA
                      ,OBTENER_TIPODOC( b.RUCCOMPANIA)
                      ,B.TELEFONO
                      ,a.periodo_facturacion
                      ,a.CICLO_FACTURACION
                      ,a.c_plan
                      ,b.PLANTARIFARIO
                      ,a.MIN_SAL
                      ,a.LLAM_SAL
                      ,a.DEST_SAL
                      ,a.DISP_SAL
                      ,a.MIN_ENT
                      ,a.LLAM_ENT
                      ,a.C_CELDAS
                      ,a.CELDA_MAX
                      ,a.PORC_CELDA
                      ,a.MIN_C_RIESGO
                      ,a.RAT_RIESGO
                      ,a.SAL_ONNET
                      ,a.SAL_OFFNET
                      ,a.SAL_LDI
                      ,a.CONDICION
                      ,a.RANKING
                      ,a.fecha_proceso
                      , a.dias_trafico
                     ,a.fecha_carga
                     ,b.producto
                   FROM pf_ilimitados_metricas a
                   LEFT JOIN (SELECT *
                                  FROM ( SELECT a.*
                                              , row_number() over (PARTITION BY telefono
                                                                       ORDER BY DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC
                                                                              , fechacargacontrato desc) rn
                                           FROM fotoequipos a
                                           WHERE CODIGOPLANTARIFARIOBSCS IN (SELECT C_PLAN FROM pf_ilimitados_planes))
                                 WHERE rn = 1) b
                   ON a.contrato=b.CODIGOCONTRATOBSCS
                 WHERE TRUNC(FECHA_PROCESO) = TRUNC(V_FECHA) and
                 CONDICION LIKE '%ALERTA%';
    COMMIT;
    --GENERAR RESUMEN
    DELETE FROM PF_ILIMITADOS_RESUMEN WHERE TRUNC(FECHA) = TRUNC(V_FECHA);

    INSERT INTO PF_ILIMITADOS_RESUMEN
    SELECT a.*, b.ALERTAS, V_FECHA FECHA FROM
    (SELECT CODIGOPLANTARIFARIOBSCS C_PLAN,
            PLANTARIFARIO PLAN_TARIFARIO,
            COUNT(DISTINCT CODIGOCONTRATOBSCS) CONTRATOS
    FROM (SELECT *
              FROM ( SELECT a.*
                          , row_number() over (PARTITION BY telefono
                                                   ORDER BY DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC
                                                          , fechacargacontrato desc) rn
                       FROM fotoequipos a
                       WHERE CODIGOPLANTARIFARIOBSCS IN (SELECT C_PLAN FROM pf_ilimitados_planes) )
             WHERE rn = 1)
    GROUP BY CODIGOPLANTARIFARIOBSCS, PLANTARIFARIO) a
    LEFT JOIN (SELECT cod_plan, count(DISTINCT CONTRATO) ALERTAS FROM PF_ILIMITADOS_HISTORICO
                WHERE contrato||periodo_fact not in (
                select contrato||periodo_fact from PF_ILIMITADOS_HISTORICO where TRUNC(FECHA_PROCESO) <= TRUNC(V_FECHA-1))
                group by cod_plan
            ) b
    ON a.c_plan=b.cod_plan;

COMMIT;

    BEGIN PAQUETE_FRAUDES.ILIMITADOS_DESTINOS_ADIC(V_FECHA); END;

END ILIMITADOS_GENERAR_REPORTE;

PROCEDURE ILIMITADOS_OBTENER_RESUMEN(C_FECHA varchar2,pcursor  OUT t_cursor) AS
    V_FECHA date := to_date(C_FECHA,'DD/MM/YYYY');
BEGIN

OPEN pcursor FOR
     SELECT C_PLAN, PLAN_TARIFARIO, CONTRATOS, ALERTAS, TO_CHAR(FECHA,'DD/MM/YYYY') FECHA
        FROM PF_ILIMITADOS_RESUMEN
        WHERE FECHA >= V_FECHA-20;

END ILIMITADOS_OBTENER_RESUMEN;

PROCEDURE ILIMITADOS_OBTENER_METRICAS(C_FECHA varchar2,pcursor  OUT t_cursor) AS
    V_FECHA date := to_date(C_FECHA,'DD/MM/YYYY');
BEGIN

OPEN pcursor FOR
    SELECT TO_CHAR(b.FECHAACTIVACIONCONTRATO) F_ACTIVACION_CONTRATO
           ,TO_CHAR(b.FECHACARGACONTRATO) F_CARGA_CONTRATO
           ,TO_CHAR(a.FECHA_INI) FECHA_INI
            ,a.dias_analisis
           ,a.contrato CONTRATO
           ,b.CODIGOCUENTARESPONSABLE COD_CUENTA
           ,b.COMPANIA RAZON_SOCIAL
           ,b.RUCCOMPANIA NRO_DOCUMENTO
           ,OBTENER_TIPODOC(b.RUCCOMPANIA) TIPO_DOCUMENTO
           ,B.TELEFONO ENTEL
           ,a.periodo_facturacion PERIODO_FACT
              ,a.ciclo_facturacion CICLO_FACT
              ,a.c_plan COD_PLAN
              ,b.PLANTARIFARIO  PLAN_TARIFARIO
              ,a.MIN_SAL MIN_SALIENTES
              ,a.LLAM_SAL LLAM_SALIENTES
              ,a.DEST_SAL DEST_SALIENTES
              ,a.DISP_SAL DISP_SALIENTE
              ,a.MIN_ENT MIN_ENTRANTES
              ,a.LLAM_ENT LLAM_ENTRANTES
              ,a.C_CELDAS CANT_CELDAS_SAL
              ,a.CELDA_MAX
              ,a.PORC_CELDA PORC_MAX_CELDA_SAL
              ,a.MIN_C_RIESGO  MIN_CELDA_RIESGO
              ,a.RAT_RIESGO RATIO_RIESGO
           ,a.SAL_ONNET MIN_SAL_ONNET
           ,a.SAL_OFFNET MIN_SAL_OFFNET
           ,a.SAL_LDI MIN_SAL_LDI
              ,a.CONDICION CONDICION
              ,a.RANKING RANKING
              ,TO_CHAR(a.fecha_proceso) FECHA_PROCESO
        ,TO_CHAR(a.FECHA_CARGA)
        ,a.dias_trafico DIAS_TRAFICO
        ,b.PRODUCTO
        ,a.DURACION_P_D
        ,a.LLAM_PROM
        ,a.DURACION_PROM
        ,a.DURACION_PROM_R
          FROM pf_ilimitados_metricas a
          LEFT JOIN (SELECT *
                      FROM ( SELECT a.*
                                  , row_number() over (PARTITION BY telefono
                                                           ORDER BY DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC
                                                                  , fechacargacontrato desc) rn
                               FROM fotoequipos a)
                     WHERE rn = 1) b
          ON a.contrato=b.CODIGOCONTRATOBSCS
          WHERE periodo_facturacion  = DECODE(ciclo_facturacion,
                      '01', TO_CHAR(V_FECHA,'yyyymm'),
                      '03', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='16' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
                      '04', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='09' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END,
                      '05', CASE WHEN TO_CHAR(V_FECHA, 'dd')>='23' THEN TO_CHAR(ADD_MONTHS(V_FECHA,1),'yyyymm') ELSE TO_CHAR(V_FECHA,'yyyymm') END)
            and a.MIN_SAL>2000 and a.DISP_SAL>0.5
           -- AND a.fecha_proceso = V_FECHA
          ORDER BY RANKING DESC;

END ILIMITADOS_OBTENER_METRICAS;

PROCEDURE ILIMITADOS_DESCARGAR_TRAFICO (V_FECHA DATE) IS
c_part number;
BEGIN

    --MANEJAR PARTICIONES
    SELECT COUNT(1) INTO c_part
      FROM user_tab_partitions
     WHERE table_name = UPPER('pf_ilimitados_trafico')
       AND PARTITION_NAME = 'P_'||TO_CHAR(V_FECHA,'YYYYMMDD');
    IF c_part = 0 THEN
        EXECUTE IMMEDIATE 'ALTER TABLE ods_gpf.pf_ilimitados_trafico ADD PARTITION P_' || TO_CHAR(V_FECHA,'YYYYMMDD') || ' VALUES LESS THAN (TO_DATE('''|| TO_CHAR(V_FECHA+1,'YYYYMMDD') ||''',''YYYYMMDD''))' ;
    END IF;

 --1. CARGAR TRÁFICO 3G DE LOS CONTRATOS CON LOS PLANES CORRESPONDIENTES
    EXECUTE IMMEDIATE 'ALTER TABLE PF_ILIMITADOS_TRAFICO NOLOGGING';

    --DELETE FROM pf_ilimitados_trafico WHERE fecha = TRUNC(v_fecha);
    EXECUTE IMMEDIATE 'ALTER TABLE PF_ILIMITADOS_TRAFICO TRUNCATE PARTITION P_' || TO_CHAR(V_FECHA,'YYYYMMDD') || ' REUSE STORAGE';

    INSERT /*+APPEND PARALLEL(3)*/ INTO pf_ilimitados_trafico
    SELECT TO_DATE(A.fechaproceso,'YYYYMMDD') fecha
         , A.recordtype
         , A.servedimsi
         , A.servedmsisdn
         , A.callingnumbercdr
         , A.callednumbercdr
         , A.llamadas
         , A.callduration
         , obtener_tipo_destino(A.callednumbercdr, A.callednumberwns) tipo_destino
         , NVL(SUBSTR(c.site_name,INSTR(c.site_name,'_')+1,100), A.celda) celda
         , B.CODIGOCONTRATOBSCS
         , B.CICLOFACTURACIONCONTRATO
         , B.ESTADOCONTRATO
         , B.CODIGOPLANTARIFARIOBSCS
         , obtener_periodo_fact_actual(B.CICLOFACTURACIONCONTRATO,TO_DATE(A.fechaproceso,'YYYYMMDD') ) periodo_fact
      FROM temp_res_tel3g A
      LEFT JOIN p_datafill_site C
        ON A.celda = c.site_id
      JOIN (SELECT TELEFONO, CODIGOCONTRATOBSCS, CICLOFACTURACIONCONTRATO, ESTADOCONTRATO, CODIGOPLANTARIFARIOBSCS
              FROM ( SELECT a.*
                          , row_number() over (PARTITION BY telefono
                                             ORDER BY  DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC,fechacargacontrato desc) rn
                       FROM fotoequipos a
                       JOIN pf_ilimitados_planes b
                         ON a.codigoplantarifariobscs = b.c_plan )
             WHERE rn = 1) B
        ON A.servedmsisdn = '51'||B.TELEFONO
     WHERE A.fechaproceso = TO_CHAR(V_FECHA,'YYYYMMDD')
       AND NOT(SUBSTR(A.callednumbercdr,1,2)='19' AND NOT
              (SUBSTR(A.callednumbercdr,5,4)='0056' OR SUBSTR(A.callednumbercdr,5,3)='001')) ; -- Tráfico local, Chile o US

COMMIT;
END ILIMITADOS_DESCARGAR_TRAFICO;

PROCEDURE TECH_OLDIES_PROCESAR (V_FECHA IN DATE) AS
BEGIN

DELETE FROM PF_TECH_OLDIES WHERE TRUNC(fechaactivacion) = TRUNC(V_FECHA) ;

INSERT INTO PF_TECH_OLDIES (   codigocuenta, razonsocial, ruccompania, fechanacimiento,
                               edad, sexo, c_contrato, fechaactivacion, modeloequipo,
                               gama, telefono, estadoinar, vendedor, c_plan, n_plan,
                               giro_negoc, cantactivados, tipocuenta, imei_bscs,
                               codigocompania, orden)
SELECT distinct   t_inar.codigocuenta
                    , t_inar.razonsocial
                    , t_inar.ruccompania
                    , t_reniec.fechanacimiento
                    , FLOOR(MONTHS_BETWEEN(t_inar.fechaactivacion, t_reniec.fechanacimiento) /12) EDAD
                    , t_reniec.sexo
                    , t_inar.c_contrato contrato
                    , t_inar.fechaactivacion
                    , t_inar.modeloequipo
                    , t_equipos.gamma gama
                    , t_inar.nextel telefono
                    , t_inar.estadoinar
                    , t_inar.vendedor
                    , t_inar.c_plan
                    , t_inar.n_plan
                    , t_inar.giro_negoc
                    , t_inar.cantactivados
                    , t_inar.tipocuenta
                    , t_inar.imei_bscs
                    , t_inar.codigocompania
                    , t_inar.nro_orden
            FROM
            (SELECT *
                FROM ods_gpf.w_med_inar
                WHERE TRUNC(fechaactivacion) >= TRUNC(V_FECHA)
                AND ESTADOINAR IN ('ADDS','NEWS','REAC')) t_inar
            LEFT JOIN (select * from
                     (select nombre_inar,nombre_comercial,gamma
                            ,rank() over(partition by UPPER(nombre_inar) order by periodo desc)  rn
                      from ods_gpf.tnp_equipos)
                  where rn = 1) t_equipos
            ON UPPER(t_inar.modeloequipo) = UPPER(t_equipos.nombre_inar)
            JOIN (SELECT DNI, SEXO
                   ,TO_DATE(SUBSTR(FECHA_NACIMIENTO,1,6)||'19'||SUBSTR(FECHA_NACIMIENTO,7,2) ,'DD/MM/YYYY')FECHANACIMIENTO
                  FROM nextel_base
                  WHERE FECHA_NACIMIENTO is not null) t_reniec
            ON t_inar.ruccompania = t_reniec.DNI
            WHERE t_equipos.gamma in ('High','Premium','6. Premium','5. High')
                AND FLOOR(MONTHS_BETWEEN(t_inar.fechaactivacion, t_reniec.fechanacimiento) /12)>=66

           UNION ALL

            SELECT  distinct  t_inar.codigocuenta
                    , 'CASO ESPECIAL!! ' || t_inar.razonsocial
                    , t_inar.ruccompania
                    , t_reniec.fechanacimiento
                    , FLOOR(MONTHS_BETWEEN(t_inar.fechaactivacion, t_reniec.fechanacimiento) /12) EDAD
                    , t_reniec.sexo
                    , t_inar.c_contrato
                    , t_inar.fechaactivacion
                    , t_inar.modeloequipo
                    , t_equipos.gamma gama
                    , t_inar.nextel telefono
                    , t_inar.estadoinar
                    , t_inar.vendedor
                    , t_inar.c_plan
                    , t_inar.n_plan
                    , t_inar.giro_negoc
                    , t_inar.cantactivados
                    , t_inar.tipocuenta
                    , t_inar.imei_bscs
                    , t_inar.codigocompania
                    , t_inar.nro_orden
            FROM
            (SELECT *
                FROM w_med_inar
                WHERE TRUNC(fechaactivacion) = TRUNC(V_FECHA)
                AND ESTADOINAR IN ('ADDS','NEWS','REAC')
                AND RUCCOMPANIA IN (SELECT documento FROM PF_TECH_OLDIES_ESPECIALES
                                    /*'10450333226','45033322',
                                    '10424402104', '42440210',
                                    '10178528101','17852810',
                                    '09849563', '08020089',
                                    '41964068','09537333','00488967'
                                    , '44936062','01232178'
                                    ,'07524336','43258562', '03471692'*/) ) t_inar
            LEFT JOIN (select * from
                     (select nombre_inar,nombre_comercial,gamma
                            ,rank() over(partition by UPPER(nombre_inar) order by periodo desc)  rn
                      from ods_gpf.tnp_equipos)
                  where rn = 1) t_equipos
            ON UPPER(t_inar.modeloequipo) = UPPER(t_equipos.nombre_inar)
            LEFT JOIN (SELECT DNI, SEXO
                   ,TO_DATE(SUBSTR(FECHA_NACIMIENTO,1,6)||'19'||SUBSTR(FECHA_NACIMIENTO,7,2) ,'DD/MM/YYYY')FECHANACIMIENTO
                  FROM nextel_base
                  WHERE FECHA_NACIMIENTO is not null) t_reniec
            ON t_inar.ruccompania = t_reniec.DNI;

COMMIT;

END TECH_OLDIES_PROCESAR;


PROCEDURE TECH_OLDIES_NOTIFICAR(V_FECHA DATE) IS
  HTML CLOB;
  P_TO VARCHAR2(200);
  P_TO2 VARCHAR2(200);
  P_TO3 VARCHAR2(200);
  P_TO4 VARCHAR2(200);
  P_TO5 VARCHAR2(200);
  P_TO6 VARCHAR2(200);
  P_TO7 VARCHAR2(200);
  P_TO8 VARCHAR2(200);
  P_TO9 VARCHAR2(200);
  P_TO10 VARCHAR2(200);
  P_FROM VARCHAR2(200);
  P_SUBJECT VARCHAR2(200);
  P_TEXT VARCHAR2(200);
  P_HTML CLOB;
  P_SMTP_HOSTNAME VARCHAR2(200);
  P_SMTP_PORTNUM VARCHAR2(200);

  BEGIN
    P_HTML :='';

     HTML := '<h1 style = "font-size:15px;font-family:sans-serif; ">Tech Oldies: Equipos gama alta y premium adquiridos por clientes con m&aacute;s de 65 a&ntilde;os' ||
            '</h1>'||
            '<h2 style = "font-size:12px;font-family:sans-serif; ">Fecha de activación : ' || TO_CHAR(V_FECHA,'DD/MM/YYYY')||
            '</h3>'||
             '<style>'||
                '  table { margin:0px;padding:0px;'||
                     '   border:1px solid #000000;'||
                     '   border-collapse: collapse;'||
                      '   border-spacing: 0;'||
                     '   height:100%;'||
                     '   margin:0px;padding:0px;'||
                   ' } .fr td{ '||
                       ' background-color:#3177e0;'||
                       ' text-align:center;'||
                       ' border-width:0px 0px 1px 1px;'||
                       ' font-size:12px;'||
                       ' font-family:sans-serif;'||
                       ' font-weight:bold;'||
                       ' color:#ffffff;'||
                   ' }  td{'||
                    '    vertical-align:middle;'||
                    '    background-color:#ffffff;'||
                    '    border:1px solid #000000;'||
                     '   border-width:0px 1px 1px 0px;'||
                     '   text-align:left;'||
                     '   padding:5px;'||
                     '   font-size:10px;'||
                      '  font-family:sans-serif;'||
                      '  color:#000000;'||
                   ' } p { font-size:14px;font-family:sans-serif; }' ||
             '</style>' ||

             '<table  border="1" >'||
                '<tr class=''fr''>'||
                    '<td >Raz&oacute;n &nbsp social &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</td>'||
                    '<td >Nro documento</td>'||
                    '<td >Edad</td>'||
                    '<td >Fecha activaci&oacute;n</td>'||
                    '<td >Contrato</td>'||
                    '<td >Entel</td>'||
                    '<td >Modelo</td>'||
                    '<td >Gama</td>'||
                    '<td >Tipo plan</td>'||
                    '<td >Validaci&oacuten'||
                    '<td >Orden'||
                    '<td >Orden creado por'||
                    '<td >Orden cerrado por'||
                    '<td >Solicitud'||
                    '<td >Vendedor'||
                    '<td >Tienda'||
                    '<td >Departamento'||
                    '<td >Provincia'||
                    '<td >Ciudad'||
                    '<td >Distrito'||
                    '<td >Mercado'||
                    '<td >Gerencia canal'||
                    '<td >Canal venta'||
                    '<td >KAM'||
                    '<td >Gerencia territorio'||
                    '<td >Divisi&oacute;n territorio'||
                    '<td >Tipo tienda'||
                    '<td >Cadena dealer'||
                    '<td >Socio negocio'||
               ' </tr>';
    FOR REC IN
      (
            SELECT     razonsocial
                         , ruccompania
                         , edad
                         , fechaactivacion
                         , c_contrato
                         , telefono
                         , modeloequipo
                         , gama
                         , DECODE(a.orden,'0',o.codigoorden,null,o.codigoorden,a.orden) orden
                         , o.ordencreadopor
                         , o.ordencerradopor
                         , o.solicitud
                         , b.vendedor
                         , b.tienda
                         , b.departamento
                         , b.provincia
                         , b.ciudad
                         , b.distrito
                         , b.mercado
                         , b.gerencia_canal
                         , b.canal_venta
                         , b.kam
                         , b.gerencia_territorio
                         , b.division_territorio
                         , b.tipo_tienda
                         , b.cadena_dealer
                         , b.socio_negocio
                         , NVL(validacion.validacion, 'ACTIV. ANTES DE BIO') validacion
                         , CASE WHEN UPPER(planes.PRODUCT) LIKE '%POST%' THEN 'Postpago'
                                WHEN UPPER(planes.PRODUCT) LIKE '%PRE%' THEN 'Prepago'
                                ELSE planes.product END tipoplan
               FROM PF_TECH_OLDIES a
               LEFT JOIN tnp_canal_persona b
               on a.vendedor = b.vendedor
               left join (SELECT * FROM
                            (select distinct codigoorden, codigocontratofuente, solicitud, ordencreadopor, ordencerradopor
                            , subcategoria, tipoprocesoorden
                            ,fechacreacionorden, nombreconsultor
                            , rank () over (partition by codigoorden order by fechacarga desc,codigocontratofuente  desc ) rank
                            from p_ordenes
                            WHERE tipoprocesoorden in ('VENTA MOVILES','PORTABILIDAD')
                            --AND codigocontratofuente <> '0'
                            AND estadoorden <> 'Anulada')
                          WHERE RANK = 1) o
               on /*a.orden = o.codigoorden and */ DECODE(a.orden,'0',a.c_contrato,null,a.c_contrato,a.orden) = DECODE(a.orden,'0',o.codigocontratofuente,null,o.codigocontratofuente,o.codigoorden)
               left join pm_planes planes
               on a.c_plan = planes.c_plan
               LEFT JOIN
                        (SELECT contrato
                             , DECODE(validacion_identidad,'NOT BIOMETRIC','NO BIO: ','BIOMETRIC','BIO: ',validacion_identidad)
                             ||DECODE(resultado_validacion,'NO VALIDADO','',resultado_validacion) VALIDACION
                        FROM p_inar
                        WHERE estadoinar in ('NEWS','ADDS','REAC')) validacion
              ON a.c_contrato = validacion.contrato
               where TRUNC(fechaactivacion) = TRUNC(V_FECHA)
      )
    LOOP
      HTML := HTML  ||  '<tr><td>' ||  REC.razonsocial ||
                        '</td><td>' || REC.ruccompania ||
                        '</td><td>' || REC.edad ||
                        '</td><td>' || REC.fechaactivacion ||
                        '</td><td>' || REC.c_contrato ||
                        '</td><td>' || rec.telefono ||
                        '</td><td>' || REC.modeloequipo ||
                        '</td><td>' || REC.gama ||
                        '</td><td>' || REC.tipoplan ||
                        '</td><td>' || REC.validacion||
                        '</td><td>' || REC.orden||
                        '</td><td>' || REC.ordencreadopor||
                        '</td><td>' || REC.ordencerradopor||
                        '</td><td>' || REC.solicitud||
                        '</td><td>' || REC.vendedor||
                        '</td><td>' || REC.tienda||
                        '</td><td>' || REC.departamento||
                        '</td><td>' || REC.provincia||
                        '</td><td>' || REC.ciudad||
                        '</td><td>' || REC.distrito||
                        '</td><td>' || REC.mercado||
                        '</td><td>' || REC.gerencia_canal||
                        '</td><td>' || REC.canal_venta||
                        '</td><td>' || REC.kam||
                        '</td><td>' || REC.gerencia_territorio||
                        '</td><td>' || REC.division_territorio||
                        '</td><td>' || REC.tipo_tienda||
                        '</td><td>' || REC.cadena_dealer||
                        '</td><td>' || REC.socio_negocio||
                        '</td></tr>';
      --DBMS_OUTPUT.PUT_LINE(length(html));
    END LOOP;
    HTML := HTML || '</table><br/>';

    P_TO := 'alejandra.linares@entel.pe';
    P_TO2 := 'nathali.vega@entel.pe';
    P_TO3 := 'francisco.espinoza@entel.pe';
    --P_TO4 := 'vanessa.paredes@entel.pe';
    P_TO5 := 'jimmy.robles@entel.pe';
    P_TO6 := 'ivan.castillo@entel.pe';
    --p_TO7 := 'dora.moncada@entel.pe';
    p_TO8 := 'gabriela.gonzales@entel.pe';
    p_TO9 := 'daniel.delzo@entel.pe';
    p_TO10 := 'manuel.tello@entel.pe';


    P_FROM := 'ip_alertas@entel.pe';
    P_SUBJECT := 'Alerta: Tech Oldies';
    P_TEXT := 'msg';
    P_HTML := HTML;
    P_SMTP_HOSTNAME := 'relay-procesos.entel.pe';
    P_SMTP_PORTNUM := '25';

    BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO3,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    --BEGIN HTML_EMAIL(    P_TO => P_TO4,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO5,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO6,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    --BEGIN HTML_EMAIL(    P_TO => P_TO7,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO8,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO9,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO10,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;

END TECH_OLDIES_NOTIFICAR;

PROCEDURE TECH_OLDIES_OBTENER_ALERTAS (V_PERIODO varchar2,pcursor  OUT t_cursor) AS
BEGIN
OPEN pcursor FOR
SELECT a.codigocuenta, a.razonsocial, a.ruccompania, TO_CHAR(a.fechanacimiento,'DD-mon-YYYY'),
       a.edad, a.sexo, a.c_contrato, TO_CHAR(a.fechaactivacion,'DD-mon-YYYY'), a.modeloequipo,
       a.gama, a.telefono, a.estadoinar, a.vendedor, a.c_plan, a.n_plan,
       a.giro_negoc, a.cantactivados, a.tipocuenta, a.imei_bscs,
       a.codigocompania
  FROM pf_tech_oldies a
  WHERE TO_CHAR(fechaactivacion,'YYYYMM') = V_PERIODO;

END TECH_OLDIES_OBTENER_ALERTAS;

PROCEDURE MENSAJERIA_ALERTA(V_PROCESO  DATE) AS
  HTML CLOB;
  HTML2 CLOB;
  P_TO VARCHAR2(200);
  P_TO2 VARCHAR2(200);
  P_TO3 VARCHAR2(200);
  P_TO4 VARCHAR2(200);
  P_TO5 VARCHAR2(200);
  P_TO6 VARCHAR2(200);
  P_TO7 VARCHAR2(200);
  P_TO8 VARCHAR2(200);
  P_TO9 VARCHAR2(200);
  P_TO10 VARCHAR2(200);
  P_FROM VARCHAR2(200);
  P_SUBJECT VARCHAR2(200);
  P_TEXT VARCHAR2(200);
  P_HTML CLOB;
  P_SMTP_HOSTNAME VARCHAR2(200);
  P_SMTP_PORTNUM VARCHAR2(200);
  vfecha varchar2(8) := TO_CHAR(V_PROCESO,'YYYYMMDD');
  f_real date:= trunc(v_proceso);
  correlativo number:=0;
  BEGIN
    P_HTML :='';

     HTML := '<h1 style = "font-size:20px;font-family:sans-serif; ">ALERTA: Control de Mensajeria del ' || to_char(f_real,'dd/mm/yyyy')||
            '</h1>'||
             '<style>'||
                '  table { margin:0px;padding:0px;'||
                     '   border:1px solid #000000;'||
                     '   border-collapse: collapse;'||
                      '   border-spacing: 0;'||
                     '   height:100%;'||
                     '   margin:0px;padding:0px;'||
                   ' } .fr td{ '||
                       ' background-color:#3177e0;'||
                       ' text-align:center;'||
                       ' border-width:0px 0px 1px 1px;'||
                       ' font-size:12px;'||
                       ' font-family:sans-serif;'||
                       ' font-weight:bold;'||
                       ' color:#ffffff;'||
                   ' }  td{'||
                    '    vertical-align:middle;'||
                    '    background-color:#ffffff;'||
                    '    border:1px solid #000000;'||
                     '   border-width:0px 1px 1px 0px;'||
                     '   text-align:left;'||
                     '   padding:5px;'||
                     '   font-size:10px;'||
                      '  font-family:sans-serif;'||
                      '  color:#000000;'||
                   ' } p { font-size:14px;font-family:sans-serif; }' ||
             '</style>' ||
                '<p>Par&aacute;metros de alertas : </br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 1. M&aacute;s de 500 mensajes salientes</br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 2. Dispersion mayor o igual a 80%</br>'||


             '<table  border="1" >'||
                '<tr class=''fr''>'||
                --style="width:50px;text-align:center"
                   -- '<td >Fecha Carga</td>'||
                    '<td >Nro.</td>'||
                    '<td >Telefono</td>'||
                    '<td >Contrato</td>'||
                  --  '<td >Codigo cuenta</td>'||
                    '<td >Razon social</td>'||
                    '<td >Nro documento</td>'||
                    '<td >Tipo Persona</td>'||
                    '<td >Equipo</td>'||
                    '<td >Entel</td>'||
                   -- '<td >Periodo fact.</td>'||
                   -- '<td >Ciclo fact.</td>'||
                    --'<td >C&oacute;digo plan</td>'||
                    '<td >Plan Tarifario</td>'||
                    '<td style="background-color:red">Minutos salientes</td>'||
                    '<td style="background-color:red">Llamadas salientes</td>'||
                    '<td style="background-color:red">Destinos salientes</td>'||
                    '<td style="background-color:red">Dispersi&oacute;n saliente llam</td>'||
                    --'<td >Minutos entrantes</td>'||
                    --'<td >Llamadas entrantes</td>'||
                    --'<td >Celdas salientes</td>'||
                   -- '<td >Celda max</td>'||
                   -- '<td >Porcentaje en cel. max</td>'||
                    '<td >Mensajes Salientes</td>'||
                    '<td >Mensajes Entrantes</td>'||
                    '<td >Mensajes Destinos</td>'||
                    '<td >Dispersion</td>'||
                  --  '<td >Gini Frec</td>'||
                    '<td >Moda Frec</td>'||
                   -- '<td >Gini Dist</td>'||
                    '<td >Moda Dist</td>'||
                    '<td >Validaci&oacuten</td>'||
                  --  '<td >Cant Moda</td>'||
                   -- '<td >Cant Dist</td>'||
               ' </tr>';
    FOR REC IN
      (
      select * from (
          select fecha_carga,fecha,telefono,a.contrato,cod_cuenta,razon_social,nro_documento,tipo_persona,equipo,entel,periodo_fact,ciclo_fact,
          cod_plan,plan_tarifario,min_salientes,llam_saliente,dest_salientes,disp_saliente,min_entrantes,llam_entrantes,cant_celdas_sal,celda_max,
          porc_max_celda_sal,cantidad_sal,cantidad_ent,cant_destinos,dispersion,ginifrec,modafrec,ginidist,modadist,
          cantidmodafrec,cantmodadist, NVL(validacion.validacion, 'ACTIV. ANTES DE BIO') validacion
          from pf_mensajeria_control a
           LEFT JOIN
                        (SELECT contrato
                             , DECODE(validacion_identidad,'NOT BIOMETRIC','NO BIO- ','BIOMETRIC','BIO- ',validacion_identidad)
                             ||DECODE(resultado_validacion,'NO VALIDADO','',resultado_validacion) VALIDACION
                        FROM p_inar
                        WHERE estadoinar in ('NEWS','ADDS','REAC')) validacion
              ON a.contrato = validacion.contrato
          where alerta='ALERTA'
          and  TRUNC(fecha) = TRUNC(f_real)
          order by cantidad_sal desc) where rownum<100
      )
    LOOP
    correlativo:=correlativo+1;
      HTML := HTML  || '<tr><td>' ||  correlativo ||
                      --  '</td><td>' || REC.fecha ||
                        '</td><td>' || REC.telefono ||
                        '</td><td>' || REC.contrato ||
                       -- '</td><td>' || REC.cod_cuenta ||
                        '</td><td>' || trim(REC.razon_social) ||
                        '</td><td>' || REC.nro_documento ||
                        '</td><td>' || REC.tipo_persona ||
                        '</td><td>' || REC.equipo ||
                        '</td><td>' || REC.entel ||
                       -- '</td><td>' || REC.periodo_fact ||
                       --'</td><td>' || REC.ciclo_fact ||
                        --'</td><td>' || REC.cod_plan ||
                        '</td><td>' || REC.plan_tarifario ||
                        '</td><td>' || nvl(rec.min_salientes,'') ||
                        '</td><td>' || nvl(REC.llam_saliente,'') ||
                        '</td><td>' || nvl(REC.dest_salientes,'') ||
                        '</td><td>' || nvl(rec.disp_saliente,'') ||
                        --'</td><td>' || nvl(REC.min_entrantes,'') ||
                        --'</td><td>' || nvl(REC.llam_entrantes,'') ||
                        --'</td><td>' || REC.cant_celdas_sal ||
                       -- '</td><td>' ||NVL( REC.celda_max,'') ||
                        --'</td><td>' || REC.porc_max_celda_sal ||
                        '</td><td>' || nvl(REC.cantidad_sal,0) ||
                        '</td><td>' || nvl(REC.cantidad_ent,0) ||
                      --  '</td><td>' || nvl(to_char(REC.cant_destinos),'0') ||
                        '</td><td>' || REC.cant_destinos||
                        '</td><td>' || REC.dispersion ||
                       -- '</td><td>' || '' ||
                        '</td><td>' || REC.modafrec ||
                       -- '</td><td>' || '' ||
                        '</td><td>' || REC.modadist ||
                        '</td><td>' || REC.validacion ||
                      --  '</td><td>' || REC.cantidmodafrec ||
                      --  '</td><td>' || REC.cantmodadist ||
                        '</td></tr>';
      DBMS_OUTPUT.PUT_LINE(trim(REC.razon_social));
     -- DBMS_OUTPUT.PUT_LINE('telefono : ' || REC.telefono );
    --  DBMS_OUTPUT.PUT_LINE('valor : ' || REC.cant_celdas_sal );
    END LOOP;
    HTML := HTML || '</table><br/>';

    P_TO := 'alejandra.linares@entel.pe';
    P_TO2 := 'miguel.pebes@entel.pe';
    P_TO3 := 'francisco.espinoza@entel.pe';
    P_TO4 := 'vanessa.paredes@entel.pe';
    P_TO5 := 'jimmy.robles@entel.pe';
    P_TO6 := 'pamela.pimentel@entel.pe';
   -- p_TO7 := 'dora.moncada@entel.pe';
   -- p_TO8 := 'gabriela.gonzales@entel.pe';
    p_TO9 := 'daniel.delzo@entel.pe';
    p_TO10 := 'percy.rojas@entel.pe';


    P_FROM := 'ip_alertas@entel.pe';
    P_SUBJECT := 'Control de Mensajeria';
    P_TEXT := 'msg';
    P_HTML := HTML;
    --P_SMTP_HOSTNAME := 'relay-alertas.entel.pe';
    P_SMTP_HOSTNAME := 'relay-procesos.entel.pe';
    P_SMTP_PORTNUM := '25';

    BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
   -- BEGIN HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO3,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
   -- BEGIN HTML_EMAIL(    P_TO => P_TO4,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO5,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO6,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    --BEGIN HTML_EMAIL(    P_TO => P_TO7,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
   -- BEGIN HTML_EMAIL(    P_TO => P_TO8,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO9,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO10,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
  EXCEPTION
        When Others Then
        DBMS_OUTPUT.put_line ('FIN ERROR: '||sqlerrm);


END MENSAJERIA_ALERTA;

PROCEDURE BUSCAR_MENSAJERIA(C_FECHA VARCHAR2,pcursor OUT t_cursor) IS
BEGIN

OPEN pcursor FOR
select fecha_carga,fecha,telefono,contrato,cod_cuenta,razon_social,nro_documento,tipo_persona,equipo,entel,periodo_fact,ciclo_fact,
          cod_plan,plan_tarifario,min_salientes,llam_saliente,dest_salientes,disp_saliente,min_entrantes,llam_entrantes,cant_celdas_sal,celda_max,
          porc_max_celda_sal,cantidad_sal,cantidad_ent,cant_destinos,dispersion,ginifrec,modafrec,ginidist,modadist,
          cantidmodafrec,cantmodadist
          from pf_mensajeria_control where alerta='ALERTA' and  TO_CHAR(fecha,'dd/mm/yyyy') = C_FECHA order by cantidad_sal desc;


END BUSCAR_MENSAJERIA;


PROCEDURE BUSCAR_INAR(pcursor OUT t_cursor) IS
BEGIN
OPEN pcursor FOR
     select contrato,periodo,telefono,tech,n_plan,c_plan,tipo_plan,rtabasic,producto,
            gama,region,c_compan,ruccompania,c_cuenta,razonsocial,fechaactivacion,
            estadoinar,vendedor,tipodoc,canal_venta,socio_negocio,tienda,cadena_dealer,
            gerencia_territorio,tipo_tienda,orden,solicitud,creado_por,cerrado_por
            from (
select contrato,periodo,telefono,tech,n_plan,c_plan,tipo_plan,rtabasic,producto,
            gama,region,c_compan,ruccompania,c_cuenta,razonsocial,fechaactivacion,
            estadoinar,vendedor,tipodoc,canal_venta,socio_negocio,tienda,cadena_dealer,
            gerencia_territorio,tipo_tienda,orden,solicitud,creado_por,cerrado_por,row_number () over (partition by contrato order by solicitud desc) rn
from (
SELECT   nvl(t_contratos.campo,'-')contrato
        ,nvl(t_inar.periodo,'-')periodo
        ,nvl(t_inar.telefono,'-')telefono
        ,nvl(t_inar.tech,'-')tech
        ,nvl(t_inar.n_plan,'-')n_plan
        ,nvl(to_char(t_inar.c_plan),'-')c_plan
        ,nvl(t_inar.tipo,'-')tipo_plan
        ,nvl(to_char(t_plan.rtabasic),'-')rtabasic
        ,nvl(t_inar.producto,'-')producto
        ,nvl(t_inar.gama,'-')gama
        ,nvl(t_inar.region,'-')region
        ,nvl(to_char(t_inar.c_compan),'-')c_compan
        ,nvl(t_inar.ruccompania,'-')ruccompania
        ,nvl(t_inar.c_cuenta,'-')c_cuenta
        ,nvl(t_inar.razonsocial,'-')razonsocial
        ,nvl(to_char(t_inar.fechaactivacion),'-')fechaactivacion
        ,nvl(t_inar.estadoinar,'-')estadoinar
        ,nvl(t_inar.vendedor,'-')vendedor
        ,nvl(t_inar.tipodoc,'-')tipodoc
        ,nvl(t_vendedor.canal_venta,'-')canal_venta
        ,nvl(t_vendedor.socio_negocio,'-')socio_negocio
        ,nvl(t_vendedor.tienda,'-')tienda
        ,nvl(t_vendedor.cadena_dealer,'-')cadena_dealer
        ,nvl(t_vendedor.gerencia_territorio,'-')gerencia_territorio
        ,nvl(t_vendedor.tipo_tienda,'-')tipo_tienda
        ,nvl(TO_CHAR(t_inar.orden),'-')orden
        ,nvl(t_inar.solicitud,'-')solicitud
        ,nvl(t_inar.ordencreadopor,nvl(t_orden.ordencreadopor,'-')) creado_por
        ,nvl(t_inar.ordencerradopor,nvl(t_orden.ordencerradopor,'-')) cerrado_por
FROM busqueda_inar t_contratos,
            p_inar t_inar,
(SELECT tipodoc,vendedor,canal_venta,socio_negocio,tienda,cadena_dealer,gerencia_territorio,tipo_tienda,vendedor||tipodoc as clave FROM
(SELECT  'DNI' tipodoc, vendedor,  canal_venta,socio_negocio
        , tienda, cadena_dealer,gerencia_territorio,tipo_tienda
        , RANK() OVER(PARTITION BY VENDEDOR ORDER BY PERIODO DESC) RN
FROM ods_gpf.tnp_canal_persona b
UNION ALL
SELECT  'RUC' , vendedor,zona_global,vendedor_detallado,canal,zona_detallada,supervisor_dealer,tipo_consultor
        , RANK() OVER(PARTITION BY VENDEDOR ORDER BY PERIODO DESC) RN
FROM ods_gpf.tnp_canal_empresa b)
WHERE RN = 1) t_vendedor,
pm_planes t_plan,
(SELECT * FROM
(SELECT ROW_NUMBER() OVER (PARTITION BY CODIGOORDEN ORDER BY ORDENCREADOPOR NULLS LAST) AS R,
        p_ordenes.*
FROM p_ordenes)
WHERE R = 1) t_orden
where t_contratos.campo=t_inar.contrato (+) and
t_inar.vendedor||t_inar.tipodoc = t_vendedor.clave (+) and
t_inar.c_plan = t_plan.c_plan(+) and
t_inar.orden = t_orden.codigoorden (+)
)
) where rn=1;
/*where t_inar.gross = 1*/


END BUSCAR_INAR;

PROCEDURE BUSCAR_INAR_PERSONAS(pcursor OUT t_cursor) IS
BEGIN
OPEN pcursor FOR
    select   nvl(to_char(periodo),'-')periodo
        ,nvl(to_char(fecha),'-')fecha
        ,nvl(codigocuenta,'-')codigocuenta
        ,nvl(to_char(fechaactivacion),'-')fechaactivacion
        ,nvl(to_char(fechaingresocliente),'-')fechaingresocliente
        ,nvl(to_char(codigocompania),'-')codigocompania
        ,nvl(ruccompania,'-')ruccompania
        ,nvl(razonsocial,'-')razonsocial
        ,nvl(to_char(contrato),'-')contrato
        ,nvl(nextel,'-')nextel
        ,nvl(modeloequipo,'-')modeloequipo
        ,nvl(gama_equipo,'-')gama_equipo
        ,nvl(to_char(c_plan),'-')c_plan
        ,nvl(n_plan,'-')n_plan
        ,nvl(product,'-')product
        ,nvl(estadoinar,'-')estadoinar
        ,nvl(metrica,'-')metrica
        ,nvl(vendedor,'-')vendedor
        ,nvl(tipodoc,'-')tipodoc
        ,nvl(giro_negoc,'-')giro_negoc
        ,nvl(to_char(cantactivados),'-')cantactivados
        ,nvl(to_char(null),'-')cantsuspendidos
        ,nvl(imei_bscs,'-')imei_bscs
        ,nvl(to_char(ciclo),'-')ciclo
        ,nvl(region,'-')region
        ,nvl(tipo_renta,'-')tipo_renta
        ,nvl(canal_venta,'-')canal_venta
        ,nvl(tienda,'-')tienda
        ,nvl(kam,'-')kam
        ,nvl(division_territorio,'-')division_territorio
        ,nvl(cadena_dealer,'-')cadena_dealer
        ,nvl(canal_de_venta,'-')canal_de_venta
        ,nvl(portabilidad,'-')portabilidad
        ,nvl(cedente,'-')cedente
        ,nvl(modalidad_origen,'-')modalidad_origen
        ,nvl(jerarquia_distrito,'-')jerarquia_distrito
        ,nvl(socio_negocio,'-')socio_negocio
        ,nvl(null,'-')gerencia_canal
        ,nvl(gerencia_territorio,'-')gerencia_territorio
        ,nvl(tipo_tienda,'-')tipo_tienda
FROM tnp_inar_personas_ods a
join busqueda_inar b
on TO_CHAR(a.contrato) = (b.campo);
END BUSCAR_INAR_PERSONAS;

PROCEDURE BUSCAR_INAR_EMPRESAS(pcursor OUT t_cursor) IS
BEGIN
OPEN pcursor FOR
   select   nvl(to_char(periodo),'-')periodo
        ,nvl(to_char(fecha),'-')fecha
        ,nvl(codigocuenta,'-')codigocuenta
        ,nvl(to_char(fechaactivacion),'-')fechaactivacion
        ,nvl(to_char(fechaingresocliente),'-')fechaingresocliente
        ,nvl(to_char(codigocompania),'-')codigocompania
        ,nvl(ruccompania,'-')ruccompania
        ,nvl(razonsocial,'-')razonsocial
        ,nvl(to_char(contrato),'-')contrato
        ,nvl(nextel,'-')nextel
        ,nvl(modeloequipo,'-')modeloequipo
        ,nvl(gama_equipo,'-')gama_equipo
        ,nvl(to_char(c_plan),'-')c_plan
        ,nvl(n_plan,'-')n_plan
        ,nvl(product,'-')product
        ,nvl(estadoinar,'-')estadoinar
        ,nvl(metrica,'-')metrica
        ,nvl(vendedor,'-')vendedor
        ,nvl(zona,'-')zona
        ,nvl(tipodoc,'-')tipodoc
        ,nvl(giro_negoc,'-')giro_negoc
        ,nvl(tipocuenta,'-')tipocuenta
        ,nvl(to_char(cantactivados),'-')cantactivados
        ,nvl(to_char(cantsuspendidos),'-')cantsuspendidos
        ,nvl(imei_bscs,'-')imei_bscs
        ,nvl(to_char(ciclo),'-')ciclo
        ,nvl(region,'-')region
        ,nvl(tipo_renta,'-')tipo_renta
        ,nvl(portabilidad,'-')portabilidad
        ,nvl(cedente,'-')cedente
        ,nvl(modalidad_origen,'-')modalidad_origen
        ,nvl(dealer,'-')dealer
        ,nvl(canal_venta,'-')canal_venta
        ,nvl(canalventacliente,'-')canalventacliente
        ,nvl(canal,'-')canal
        ,nvl(zona_detallada,'-')zona_detallada
        ,nvl(supervisor_dealer,'-')supervisor_dealer
        ,nvl(tipo_consultor,'-')tipo_consultor
        ,nvl(vendedor_detallado,'-')vendedor_detallado
        ,nvl(zona_global,'-')zona_global
FROM tnp_inar_empresas_ods a
  join busqueda_inar b
on TO_CHAR(a.contrato) = b.campo;


END BUSCAR_INAR_EMPRESAS;
/*
PROCEDURE BUSCAR_SUBARRIENDO(C_COMPAN VARCHAR2,pcursor OUT t_cursor) IS
BEGIN
OPEN pcursor FOR
select
Periodo ,
Origen ,
C_Compan_O ,
Cant_Eq ,
Llam_Onred ,
Llam_Ofred ,
Llam_Total ,
Cant_Dest ,
Dest_Comun ,
Dispersion ,
Cta ,
Contrato ,
Subarriendo ,
Cant_Dest_Onred ,
Post_Pre
from PF_PT_DISPATCH_RES
where c_compan_o = C_COMPAN
and SUBARRIENDO='SI';
END BUSCAR_SUBARRIENDO;
*/
PROCEDURE BUSCAR_TRAFICO_CERO( pcursor OUT t_cursor)
AS
BEGIN
OPEN pcursor FOR
    SELECT NVL(RFT.contrato,T0.contrato) Contrato
        , DECODE(RFT.T_RFT,1,'IMEI realizó tráfico', 0, 'Fuga de terminal','No analizado') FUGA_DE_TERMINAL
        , DECODE(T0.T_T0,1,'Línea realizó tráfico', 0, 'Tráfico cero','No analizado') TRAFICO_CERO FROM
    (select a.contrato, max(a.trafico) T_RFT from pf_t0_imei_detalle  a
    join BUSQUEDA_TRAFICO_CERO b
    on a.contrato = TO_NUMBER(b.campo)
    group by a.contrato
    UNION ALL
    select a.contrato, max(a.trafico) T_RFT from pf_t0_imei_detalle_prepago  a
    join BUSQUEDA_TRAFICO_CERO b
    on a.contrato = TO_NUMBER(b.campo)
    group by a.contrato) RFT
    full outer join
    (select a.contrato, max(a.trafico) T_T0 from pf_t0_detalle  a
    join BUSQUEDA_TRAFICO_CERO b
    on a.contrato = TO_NUMBER(b.campo)
    group by a.contrato
    UNION ALL
    select a.contrato, max(a.trafico) T_T0 from pf_t0_detalle_prepago  a
    join BUSQUEDA_TRAFICO_CERO b
    on a.contrato = TO_NUMBER(b.campo)
    group by a.contrato) T0
    ON RFT.contrato  = t0.contrato;

DELETE FROM BUSQUEDA_TRAFICO_CERO;
COMMIT;

END BUSCAR_TRAFICO_CERO;

PROCEDURE MULTISELLER_PERSONAS_PROCESAR (V_FECHA  DATE) IS
BEGIN

DELETE FROM PF_MULTISELLER_PERSONAS WHERE fechaactivacion = V_FECHA;

INSERT INTO PF_MULTISELLER_PERSONAS
SELECT     t_metrica.ventas
         , t_metrica.vendedores
         , t_metrica.tiendas
         , t_inar.razonsocial
         , t_inar.ruccompania
         , t_inar.fechaactivacion
         , t_inar.contrato
         , t_inar.telefono
         , t_inar.producto
         , t_inar.gama
         , t_inar.orden
         , t_inar.ordencreadopor
         , t_inar.ordencerradopor
         , t_inar.vendedor
         , t_vendedor.tienda
         , t_vendedor.departamento
         , t_vendedor.provincia
         , t_vendedor.distrito
         , t_vendedor.mercado
         , t_vendedor.gerencia_canal
         , t_vendedor.canal_venta
         , t_vendedor.kam
         , t_vendedor.gerencia_territorio
         , t_vendedor.division_territorio
         , t_vendedor.tipo_tienda
         , t_vendedor.cadena_dealer
         , t_vendedor.socio_negocio
         , NVL(t_preev.tipodocumento,t_inar.tipodoc) tipodocumento
         , t_preev.capacidadendeudamiento
         , t_preev.resultadoevaluacion
         , t_preev.bancarizacion
         , t_inar.c_plan

FROM
(select   c_compan codigocompania
        , count(1) ventas
        , count(distinct a.vendedor) VENDEDORES
        , count(distinct b.tienda) TIENDAS
 from p_inar a
 left join
    (SELECT *
     FROM (SELECT  x.*
                 , RANK() OVER(PARTITION BY VENDEDOR ORDER BY PERIODO DESC) RN
           FROM ods_gpf.tnp_canal_persona x)
     WHERE RN =1 ) b
on a.vendedor = b.vendedor
where TRUNC(fechaactivacion) = TRUNC(V_FECHA)
      and estadoinar in ('REAC','NEWS','ADDS')
      and TIPODOC = 'DNI'
group by  c_compan
having  count(distinct a.vendedor) > 1) t_metrica
JOIN
(SELECT * FROM p_inar
           WHERE estadoinar in ('REAC','NEWS','ADDS')
             AND TIPODOC = 'DNI'
             AND TRUNC(fechaactivacion) = TRUNC(V_FECHA)) t_inar
on t_metrica.codigocompania = t_inar.c_compan
LEFT JOIN  (SELECT distinct *
             FROM (SELECT  x.*
                         , RANK() OVER(PARTITION BY VENDEDOR ORDER BY PERIODO DESC) RN
                   FROM ods_gpf.tnp_canal_persona x)
             WHERE RN =1) t_vendedor
on t_inar.vendedor = t_vendedor.vendedor
LEFT JOIN ( SELECT * FROM
                (select    compania
                        , tipodocumento
                        , capacidadendeudamiento
                        , resultadoevaluacion
                        , bancarizacion
                        , RANK() OVER (PARTITION BY compania ORDER BY npcreateddate DESC) RN
                FROM TNP_PREEVALUACION )
            WHERE RN = 1 ) t_preev
on t_metrica.codigocompania = t_preev.compania;

COMMIT;

END MULTISELLER_PERSONAS_PROCESAR;

PROCEDURE MULTISELLER_EMPRESAS_PROCESAR (V_FECHA  DATE) IS
BEGIN

DELETE FROM PF_MULTISELLER_EMPRESAS WHERE fechaactivacion = V_FECHA;

INSERT INTO PF_MULTISELLER_EMPRESAS
SELECT     t_metrica.ventas
         , t_metrica.vendedores
         , t_inar.razonsocial
         , t_inar.ruccompania
         , t_inar.fechaactivacion
         , t_inar.contrato
         , t_inar.telefono
         , t_inar.producto
         , t_inar.gama
         , t_inar.orden
         , t_inar.ordencreadopor
         , t_inar.ordencerradopor
         , t_inar.vendedor
         , t_vendedor.zona_global
         , t_vendedor.vendedor_detallado
         , t_vendedor.canal
         , t_vendedor.zona_detallada
         , t_vendedor.supervisor_dealer
         , t_vendedor.tipo_consultor
         , t_vendedor.dealer
         , NVL(t_preev.tipodocumento,t_inar.tipodoc) tipodocumento
         , t_preev.capacidadendeudamiento
         , t_preev.resultadoevaluacion
         , t_preev.bancarizacion
         , t_inar.c_plan
FROM
(select   c_compan codigocompania
        , count(1) ventas
        , count(distinct a.vendedor) VENDEDORES
from p_inar a
where TRUNC(fechaactivacion) = TRUNC(V_FECHA)
      and estadoinar in ('REAC','NEWS','ADDS')
      and tipodoc = 'RUC'
group by  c_compan
having count(distinct a.vendedor) > 1 ) t_metrica
JOIN
(SELECT * FROM p_inar
           WHERE estadoinar in ('REAC','NEWS','ADDS')
             AND TIPODOC = 'RUC'
             AND TRUNC(fechaactivacion) = TRUNC(V_FECHA)  ) t_inar
on t_metrica.codigocompania = t_inar.c_compan
LEFT JOIN  (SELECT distinct * FROM
                (SELECT  x.*
                    , RANK() OVER(PARTITION BY VENDEDOR ORDER BY PERIODO DESC) RN
                 FROM ods_gpf.tnp_canal_empresa x ) WHERE RN = 1) t_vendedor
on t_inar.vendedor = t_vendedor.vendedor
LEFT JOIN ( SELECT * FROM
                (select    compania
                        , tipodocumento
                        , capacidadendeudamiento
                        , resultadoevaluacion
                        , bancarizacion
                        , RANK() OVER (PARTITION BY compania ORDER BY npcreateddate DESC) RN
                FROM TNP_PREEVALUACION )
            WHERE RN = 1 ) t_preev
on t_metrica.codigocompania = t_preev.compania;

COMMIT;
END MULTISELLER_EMPRESAS_PROCESAR;

PROCEDURE DUO_DOCUMENTO_PROCESAR (V_FECHA DATE) AS
BEGIN

DELETE FROM PF_DUO_DOCUMENTO WHERE TRUNC(FECHA_PROCESO) = TRUNC(V_FECHA);

INSERT INTO PF_DUO_DOCUMENTO ( razonsocial, ruccompania, tipodoc, dni_origen,
                               fechaactivacion, contrato, telefono, producto, gama,
                               orden, ordencreadopor, ordencerradopor, vendedor,
                               zglobal_tienda, vdetallado_departamento, canal,
                               zdetallada_gcanal, sdealer_kam, tconsultor_gterritorio,
                               dealer_divterritorio, tipo_tienda, cadena_dealer,
                               socio_negocio, tipodocumento, capacidadendeudamiento,
                               resultadoevaluacion, bancarizacion, fecha_proceso,
                               fecha_ini, product)
SELECT     t_inar.razonsocial
         , t_inar.ruccompania
         , t_inar.tipodoc
         , DECODE (t_inar.tipodoc,'DNI',ruccompania,'RUC',SUBSTR(t_inar.ruccompania,3,LENGTH(t_inar.ruccompania)-3)) DNI_ORIGEN
         , t_inar.fechaactivacion
         , t_inar.contrato
         , t_inar.telefono
         , t_inar.producto
         , t_inar.gama
         , t_inar.orden
         , t_inar.ordencreadopor
         , t_inar.ordencerradopor
         , t_inar.vendedor
         , t_vendedor.zglobal_tienda
         , t_vendedor.vdetallado_departamento
         , t_vendedor.canal
         , t_vendedor.zdetallada_gcanal
         , t_vendedor.sdealer_kam
         , t_vendedor.tconsultor_gterritorio
         , t_vendedor.dealer_divterritorio
         , t_vendedor.tipo_tienda
         , t_vendedor.cadena_dealer
         , t_vendedor.socio_negocio
         , t_preev.tipodocumento
         , t_preev.capacidadendeudamiento
         , t_preev.resultadoevaluacion
         , t_preev.bancarizacion
         , TRUNC(V_FECHA) FECHA_PROCESO
         , TRUNC(V_FECHA) -29 FECHA_INI
         , t_inar.tipo product
FROM
(SELECT distinct
           i.razonsocial
         , i.ruccompania
         , i.c_compan
         , i.fechaactivacion
         , i.contrato
         , i.telefono
         , i.producto
         , i.gama
         , i.orden
         , i.ordencreadopor
         , i.ordencerradopor
         , i.vendedor
         , i.tipodoc
         , i.tipo
FROM P_INAR i
join
(SELECT t_ruc.contrato c1, t_dni.contrato c2  FROM
    (select contrato, ruccompania from p_inar
    where fechaactivacion > TRUNC(V_FECHA) - 30
        and fechaactivacion <= TRUNC(V_FECHA)
        and TIPODOC = 'RUC'
        and estadoinar in ('REAC','NEWS','ADDS')) t_ruc
    JOIN
    (select contrato, ruccompania from p_inar
    where fechaactivacion> TRUNC(V_FECHA) - 30
        and fechaactivacion <= TRUNC(V_FECHA)
        and TIPODOC = 'DNI'
        and estadoinar in ('REAC','NEWS','ADDS')) t_dni
 ON SUBSTR(t_ruc.ruccompania,3,LENGTH(t_ruc.ruccompania)-3) = t_dni.ruccompania) base
ON i.contrato = base.c1 or i.contrato = base.c2
WHERE fechaactivacion> TRUNC(V_FECHA)-30
        and fechaactivacion <= TRUNC(V_FECHA)
        and estadoinar in ('REAC','NEWS','ADDS') ) t_inar

LEFT JOIN  (SELECT distinct * FROM
                (SELECT 'RUC' documento
                        , x.vendedor
                        , x.zona_global zglobal_tienda
                        , x.vendedor_detallado  vdetallado_departamento
                        , x.canal
                        , x.zona_detallada zdetallada_gcanal
                        , x.supervisor_dealer  sdealer_kam
                        , x.tipo_consultor   tconsultor_gterritorio
                        , x.dealer  dealer_divterritorio
                        , null tipo_tienda
                        , null cadena_dealer
                        , null socio_negocio

                    , RANK() OVER(PARTITION BY VENDEDOR ORDER BY PERIODO DESC) RN
                 FROM ods_gpf.tnp_canal_empresa x
                 UNION ALL
                 SELECT   'DNI'
                        , y.vendedor
                        , y.tienda
                        , y.departamento
                        , y.canal_venta
                        , y.gerencia_canal
                        , y.kam
                        , y.gerencia_territorio
                        , y.division_territorio
                        , y.tipo_tienda
                        , y.cadena_dealer
                        , y.socio_negocio
                 , RANK() OVER(PARTITION BY VENDEDOR ORDER BY PERIODO DESC) RN
                FROM ods_gpf.tnp_canal_persona y
                 ) WHERE RN = 1) t_vendedor
on t_inar.vendedor = t_vendedor.vendedor and t_inar.TIPODOC = t_vendedor.documento
LEFT JOIN ( SELECT * FROM
                (select    compania
                        , tipodocumento
                        , capacidadendeudamiento
                        , resultadoevaluacion
                        , bancarizacion
                        , RANK() OVER (PARTITION BY compania ORDER BY npcreateddate DESC) RN
                FROM TNP_PREEVALUACION )
            WHERE RN = 1 ) t_preev
on t_inar.c_compan = t_preev.compania;

--COMPLETAR ACTIVACIONES POR DNI Y RUC
MERGE INTO PF_DUO_DOCUMENTO A
USING (select     dni_origen
                , SUM(DECODE(tipodoc,'DNI',1,0)) ACT_DNI
                , SUM(DECODE(tipodoc,'RUC',1,0)) ACT_RUC
        from PF_DUO_DOCUMENTO
        WHERE TRUNC(fecha_proceso) = trunc(V_FECHA)
        group by dni_origen) met
ON (A.dni_origen = met.dni_origen)
WHEN MATCHED THEN UPDATE SET A.ACT_DNI = met.ACT_DNI
                           , A.ACT_RUC = met.ACT_RUC
WHERE TRUNC(A.fecha_proceso) = trunc(V_FECHA);

/*UPDATE /*+BYPASS_UJVC
(SELECT base.ACT_DNI DNI_1,base.ACT_RUC RUC_1, ACT_RUC DNI_2, met.ACT_RUC RUC_2
FROM
    (SELECT * FROM PF_DUO_DOCUMENTO WHERE TRUNC(fecha_proceso) = trunc(V_FECHA) )base
join
    (select  dni_origen
            , SUM(DECODE(tipodoc,'DNI',1,0)) ACT_DNI
            , SUM(DECODE(tipodoc,'RUC',1,0)) ACT_RUC
    from PF_DUO_DOCUMENTO
    WHERE TRUNC(fecha_proceso) = trunc(V_FECHA)
    group by dni_origen) met
on base.dni_origen = met.dni_origen)
SET   DNI_1 = DNI_2
    , RUC_1 = RUC_2; */


DELETE FROM PF_DUO_DOCUMENTO WHERE TRUNC(fecha_proceso) = trunc(V_FECHA) AND act_dni + act_ruc < 2;

DELETE FROM PF_DUO_DOCUMENTO
      WHERE TRUNC(fecha_proceso) = trunc(V_FECHA)
        AND dni_origen not in ( select distinct dni_origen
                                FROM PF_DUO_DOCUMENTO
                                WHERE TRUNC(fechaactivacion) =  trunc(V_FECHA));

COMMIT;

END DUO_DOCUMENTO_PROCESAR;

PROCEDURE DUO_DOCUMENTO_NOTIFICAR(V_FECHA DATE) IS
  HTML CLOB;
  P_TO VARCHAR2(200);
  P_TO2 VARCHAR2(200);
  P_TO3 VARCHAR2(200);
  P_TO4 VARCHAR2(200);
  P_TO5 VARCHAR2(200);
  P_TO6 VARCHAR2(200);
  P_TO7 VARCHAR2(200);
  P_TO8 VARCHAR2(200);
  P_TO9 VARCHAR2(200);
  P_TO10 VARCHAR2(200);
  P_FROM VARCHAR2(200);
  P_SUBJECT VARCHAR2(200);
  P_TEXT VARCHAR2(200);
  P_HTML CLOB;
  P_SMTP_HOSTNAME VARCHAR2(200);
  P_SMTP_PORTNUM VARCHAR2(200);

  FEC_INI DATE;
  REGISTROS NUMBER;

  BEGIN

    SELECT DISTINCT FECHA_INI INTO FEC_INI FROM PF_DUO_DOCUMENTO WHERE TRUNC(FECHA_PROCESO) = TRUNC(V_FECHA);
    SELECT COUNT(1) INTO REGISTROS FROM PF_DUO_DOCUMENTO WHERE TRUNC(FECHA_PROCESO) = TRUNC(V_FECHA);

    P_HTML :='';

     HTML := '<h1 style = "font-size:15px;font-family:sans-serif; ">DUO Documento: Personas que compraron con DNI y RUC ('|| TO_CHAR(FEC_INI,'DD/MM/YYYY')|| ' al ' || TO_CHAR(V_FECHA,'DD/MM/YYYY')||')' ||
            '</h1>'||
            '<h3 style = "font-size:13px;font-family:sans-serif;color:red; ">Se encontraron ' ||registros || ' casos. Ingresar al Risk Inspector para visualizar el detalle completo.' ||
            '</h3>'||
            '<style>'||
                '  table { margin:0px;padding:0px;'||
                     '   border:1px solid #000000;'||
                     '   border-collapse: collapse;'||
                      '   border-spacing: 0;'||
                     '   height:100%;'||
                     '   margin:0px;padding:0px;'||
                   ' } .fr td{ '||
                       ' background-color:#04B4AE;'||
                       ' text-align:center;'||
                       ' border-width:0px 0px 1px 1px;'||
                       ' font-size:10px;'||
                       ' font-family:sans-serif;'||
                       ' font-weight:bold;'||
                       ' color:#ffffff;'||
                   ' }  td{'||
                    '    vertical-align:middle;'||
                    '    background-color:#ffffff;'||
                    '    border:1px solid #000000;'||
                     '   border-width:0px 1px 1px 0px;'||
                     '   text-align:left;'||
                     '   padding:5px;'||
                     '   font-size:9px;'||
                      '  font-family:sans-serif;'||
                      '  color:#000000;'||
                   ' } p { font-size:10px;font-family:sans-serif; }' ||
             '</style>' ||

             '<table  border="1" >'||
                '<tr class=''fr''>'||
                    '<td>Raz&oacuten Social'||
                    '</td><td>Nro documento'||
                    '</td><td>Tipo doc'||
                    '</td><td>DNI origen'||
                    '</td><td>Fecha activaci&oacuten'||
                    '</td><td>Contrato'||
                    '</td><td>Tel&eacutefono'||
                    '</td><td>Producto'||
                    '</td><td>Gama'||
                    '</td><td>Tipo de plan'||
                    '</td><td>&Oacuterden'||
                    '</td><td>Tipo &oacuterden'||
                    '</td><td>Subcategor&iacutea &oacuterden'||
                    '</td><td>Fecha &oacuterden'||
                    '</td><td>&Oacuterden creado por'||
                    '</td><td>&Nombre creado por'||
                    '</td><td>&Oacuterden cerrado por'||
                    '</td><td>Solicitud'||
                    '</td><td>Vendedor'||
                    '</td><td>Zon.Global - Tienda'||
                    '</td><td>Vend. det - Departamento'||
                    '</td><td>Canal'||
                   -- '</td><td>Zon. detallada - Ger. canal'||
                   -- '</td><td>Sup. dealer - KAM'||
                   -- '</td><td>Tipo consultor - Ger.territorio'||
                   -- '</td><td>Dealer - Div.Territorio'||
                   -- '</td><td>Tipo Tienda'||
                   -- '</td><td>Cadena Dealer'||
                    '</td><td>Socio negocio'||
                   -- '</td><td>Tipo doc 2'||
                    '</td><td>Cap. endeudamiento'||
                    '</td><td>Evaliaci&oacuten'||
                    '</td><td>Bancarizaci&oacuten'||
                    '</td><td>Activaciones DNI'||
                    '</td><td>Activaciones RUC</td>' ||
                    '</td><td>Validaci&oacuten</td>' ||
               ' </tr>';
    FOR REC IN
      (   select * from
            (SELECT razonsocial
                    , ruccompania
                    , NVL(tipodocumento,tipodoc) tipodoc
                    , dni_origen
                    , fechaactivacion
                    , a.contrato
                    , telefono
                    , producto
                    , gama
                    , orden
                    , a.ordencreadopor
                    , a.ordencerradopor
                    , b.solicitud
                    , vendedor
                    , zglobal_tienda
                    , vdetallado_departamento
                    , canal
                    , zdetallada_gcanal
                    , sdealer_kam
                    , tconsultor_gterritorio
                    , dealer_divterritorio
                    , tipo_tienda
                    , cadena_dealer
                    , socio_negocio
                    , tipodocumento
                    , capacidadendeudamiento
                    , resultadoevaluacion
                    , bancarizacion
                    , act_dni
                    , act_ruc
                    , b.subcategoria
                    , b.tipoprocesoorden
                    , b.fechacreacionorden
                    , b.nombreconsultor
                    ,CASE WHEN UPPER(PRODUCT) LIKE '%POST%' THEN 'Postpago'
                          WHEN UPPER(PRODUCT) LIKE '%PRE%' THEN 'Prepago'
                          ELSE product END tipoplan
                    , NVL(validacion.validacion, 'ACTIV. ANTES DE BIO') validacion
               FROM pf_duo_documento a
               left join (SELECT * FROM
                            (select distinct codigoorden, codigocontratofuente, solicitud
                            , subcategoria, tipoprocesoorden
                            ,fechacreacionorden, nombreconsultor
                            , rank () over (partition by codigoorden order by fechacarga desc,codigocontratofuente  desc ) rank
                            from p_ordenes
                            WHERE tipoprocesoorden in ('VENTA MOVILES','PORTABILIDAD')
                            --AND codigocontratofuente <> '0'
                            AND estadoorden <> 'Anulada')
                          WHERE RANK = 1) b
               on TRIM(a.orden) = TRIM(TO_CHAR(b.codigoorden))
               LEFT JOIN
                (SELECT contrato
                     , DECODE(validacion_identidad,'NOT BIOMETRIC','NO BIO: ','BIOMETRIC','BIO: ',validacion_identidad)
                     ||DECODE(resultado_validacion,'NO VALIDADO','',resultado_validacion) VALIDACION
                FROM p_inar
                WHERE estadoinar in ('NEWS','ADDS','REAC')) VALIDACION
               ON a.contrato = validacion.contrato
               WHERE TRUNC(FECHA_PROCESO) = TRUNC(V_FECHA)
               ORDER BY act_ruc+act_dni desc, dni_origen , tipodoc)
           where ROWNUM<=50
      )
    LOOP
      HTML := HTML      || '<tr> <td>' || REC.razonsocial
                        || '</td><td>' || REC.ruccompania
                        || '</td><td>' || REC.tipodoc
                        || '</td><td>' || REC.dni_origen
                        || '</td><td>' || REC.fechaactivacion
                        || '</td><td>' || REC.contrato
                        || '</td><td>' || REC.telefono
                        || '</td><td>' || REC.producto
                        || '</td><td>' || REC.gama
                        || '</td><td>' || REC.tipoplan
                        || '</td><td>' || REC.orden
                        || '</td><td>' || REC.tipoprocesoorden
                        || '</td><td>' || REC.subcategoria
                        || '</td><td>' || REC.fechacreacionorden
                        || '</td><td>' || REC.ordencreadopor
                        || '</td><td>' || REC.nombreconsultor
                        || '</td><td>' || REC.ordencerradopor
                        || '</td><td>' || REC.solicitud
                        || '</td><td>' || REC.vendedor
                        || '</td><td>' || REC.zglobal_tienda
                        || '</td><td>' || REC.vdetallado_departamento
                        || '</td><td>' || REC.canal
                       -- || '</td><td>' || REC.zdetallada_gcanal
                       -- || '</td><td>' || REC.sdealer_kam
                       -- || '</td><td>' || REC.tconsultor_gterritorio
                       -- || '</td><td>' || REC.dealer_divterritorio
                       -- || '</td><td>' || REC.tipo_tienda
                       -- || '</td><td>' || REC.cadena_dealer
                        || '</td><td>' || REC.socio_negocio
                       -- || '</td><td>' || REC.tipodocumento
                        || '</td><td>' || REC.capacidadendeudamiento
                        || '</td><td>' || REC.resultadoevaluacion
                        || '</td><td>' || REC.bancarizacion
                        || '</td><td>' || REC.act_dni
                        || '</td><td>' || REC.act_ruc
                        || '</td><td>' || REC.VALIDACION
                        || '</td></tr>';


    DBMS_OUTPUT.PUT_LINE(length(html));

    END LOOP;
    HTML := HTML || '</table><br/>';

    P_TO := 'alejandra.linares@entel.pe';
    --P_TO2 := 'miguel.pebes@entel.pe';
    P_TO3 := 'francisco.espinoza@entel.pe';
    --P_TO4 := 'vanessa.paredes@entel.pe';
    P_TO5 := 'jimmy.robles@entel.pe';
    P_TO6 := 'luis.perez@entel.pe';
    p_TO7 := 'dora.moncada@entel.pe';
    --p_TO8 := 'gabriela.gonzales@entel.pe';
    p_TO9 := 'daniel.delzo@entel.pe';
    p_TO10 := 'manuel.tello@entel.pe';


    P_FROM := 'ip_alertas@entel.pe';
    P_SUBJECT := 'Alerta: DUO Documento ('|| TO_CHAR(FEC_INI,'DD/MM/YYYY')|| ' al ' || TO_CHAR(V_FECHA,'DD/MM/YYYY') || ')';
    P_TEXT := 'msg';
    P_HTML := HTML;
    P_SMTP_HOSTNAME := 'relay-procesos.entel.pe';
    P_SMTP_PORTNUM := '25';

    BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    --BEGIN HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO3,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    --BEGIN HTML_EMAIL(    P_TO => P_TO4,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO5,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    --BEGIN HTML_EMAIL(    P_TO => P_TO6,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO7,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
   -- BEGIN HTML_EMAIL(    P_TO => P_TO8,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;

    BEGIN HTML_EMAIL(    P_TO => P_TO9,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO10,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;

END DUO_DOCUMENTO_NOTIFICAR;

PROCEDURE MULTISELLER_NOTIFICAR(V_FECHA DATE) IS
  HTML CLOB;
  P_TO VARCHAR2(200);
  P_TO2 VARCHAR2(200);
  P_TO3 VARCHAR2(200);
  P_TO4 VARCHAR2(200);
  P_TO5 VARCHAR2(200);
  P_TO6 VARCHAR2(200);
  P_TO7 VARCHAR2(200);
  P_TO8 VARCHAR2(200);
  P_TO9 VARCHAR2(200);
  P_TO10 VARCHAR2(200);
  P_FROM VARCHAR2(200);
  P_SUBJECT VARCHAR2(200);
  P_TEXT VARCHAR2(200);
  P_HTML CLOB;
  P_SMTP_HOSTNAME VARCHAR2(200);
  P_SMTP_PORTNUM VARCHAR2(200);
  CASOS_EMP NUMBER;
  CASOS_PER NUMBER;
  BEGIN

    SELECT count(distinct ruccompania) INTO CASOS_EMP FROM pf_multiseller_empresas WHERE TRUNC(fechaactivacion) = TRUNC(V_FECHA);
    SELECT count(distinct ruccompania) INTO CASOS_PER FROM pf_multiseller_personas WHERE TRUNC(fechaactivacion) = TRUNC(V_FECHA);

     P_HTML :='';

     HTML := '<h1 style = "font-size:15px;font-family:sans-serif; ">Multiseller: Clientes que hicieron una activación con más de un vendedor en el mismo día' ||
            '</h1>'||
            '<h3 style = "margin:0;font-size:13px;font-family:sans-serif;color:red; ">Se encontraron ' ||CASOS_EMP || ' empresas y ' || CASOS_PER || ' personas. Ingresar al Risk Inspector para visualizar el detalle completo.' ||
            '</h3>'||
             '<style>'||
                '  table { margin
            padding:0px;'||
                     '   border:1px solid #000000;'||
                     '   border-collapse: collapse;'||
                      '   border-spacing: 0;'||
                     '   height:100%;'||
                     '   margin:0px;padding:0px;'||
                   ' } .fr td{ '||
                       ' background-color:#088A4B;'||
                       ' text-align:center;'||
                       ' border-width:0px 0px 1px 1px;'||
                       ' font-size:12px;'||
                       ' font-family:sans-serif;'||
                       ' font-weight:bold;'||
                       ' color:#ffffff;'||
                       ' width:auto;'||
                   ' }  td{'||
                    '    vertical-align:middle;'||
                    '    background-color:#ffffff;'||
                    '    border:1px solid #000000;'||
                     '   border-width:0px 1px 1px 0px;'||
                     '   text-align:left;'||
                     '   padding:5px;'||
                     '   font-size:10px;'||
                      '  font-family:sans-serif;'||
                      '  color:#000000;'||
                   ' } p { font-size:14px;font-family:sans-serif; }' ||
             '</style>' ;

--------------------------------------------------------------------------------------------------------
    IF CASOS_PER>0 THEN
      HTML := HTML || '<h3 style = "font-size:13px;font-family:sans-serif; ">Personas</h3>'||
                '<table  border="1" >'||
                '<tr class=''fr''>'
                       || '     <td>Ventas'
                       || '</td><td>Vendedores'
                       || '</td><td>Tiendas'
                       || '</td><td>Raz&oacuten Social'
                       || '</td><td>Nro documento'
                       || '</td><td>Fecha activaci&oacuten'
                       || '</td><td>Contrato'
                       || '</td><td>Tel&eacutefono'
                       || '</td><td>Producto'
                       || '</td><td>Gama'
                       || '</td><td>Tipo plan'
                       || '</td><td>&oacuterden'
                       || '</td><td>&Oacuterden creada por'
                       || '</td><td>&Oacuterden cerrada por'
                       || '</td><td>Solicitud'
                       || '</td><td>Vendedor'
                       || '</td><td>Tienda'
                       || '</td><td>Departamento'
                       || '</td><td>Provincia'
                       || '</td><td>Distrito'
                       || '</td><td>Mercado'
                       || '</td><td>Gerencia canal'
                       || '</td><td>Canal venta'
                       || '</td><td>KAM'
                       || '</td><td>Ger. territorio'
                       || '</td><td>Div. territorio'
                       || '</td><td>Tipo tienda'
                       || '</td><td>Cadena dealer'
                       || '</td><td>Socio negocio'
                       || '</td><td>Tipo documento'
                       || '</td><td>Capacidad de endeudamiento'
                       || '</td><td>Evaluaci&oacuten'
                       || '</td><td>Bancarizaci&oacuten'
                       || '</td><td>Validaci&oacuten'
                       || '</td></tr>';

   FOR REC_PER IN
      (    SELECT * FROM
            (SELECT a.ventas, a.vendedores, a.tiendas, a.razonsocial, a.ruccompania,
                   a.fechaactivacion, a.contrato, a.telefono, a.producto, a.gama,
                   a.orden, a.ordencreadopor, a.ordencerradopor, a.vendedor,
                   a.tienda, a.departamento, a.provincia, a.distrito, a.mercado,
                   a.gerencia_canal, a.canal_venta, a.kam, a.gerencia_territorio,
                   a.division_territorio, a.tipo_tienda, a.cadena_dealer,
                   a.socio_negocio, a.tipodocumento, a.capacidadendeudamiento,
                   a.resultadoevaluacion, a.bancarizacion, b.solicitud
                   , NVL(validacion.validacion, 'ACTIV. ANTES DE BIO') validacion
                   ,CASE WHEN UPPER(planes.PRODUCT) LIKE '%POST%' THEN 'Postpago'
                        WHEN UPPER(planes.PRODUCT) LIKE '%PRE%' THEN 'Prepago'
                        ELSE planes.product END  tipoplan
              FROM pf_multiseller_personas a
              left join (SELECT * FROM
                            (select distinct codigoorden, codigocontratofuente, solicitud
                            , subcategoria, tipoprocesoorden
                            ,fechacreacionorden, nombreconsultor
                            , rank () over (partition by codigoorden order by fechacarga desc,codigocontratofuente  desc ) rank
                            from p_ordenes
                            WHERE tipoprocesoorden in ('VENTA MOVILES','PORTABILIDAD')
                            --AND codigocontratofuente <> '0'
                            AND estadoorden <> 'Anulada')
                          WHERE RANK = 1) b
              on TRIM(a.orden) = TRIM(TO_CHAR(b.codigoorden)) --a.contrato = b. codigocontratofuente
              left join pm_planes planes
              on a.c_plan = planes.c_plan
              LEFT JOIN
                (SELECT contrato
                     ,DECODE(validacion_identidad,'NOT BIOMETRIC','NO BIO: ','BIOMETRIC','BIO: ',validacion_identidad)
                     ||DECODE(resultado_validacion,'NO VALIDADO','',resultado_validacion) VALIDACION
                FROM p_inar
                WHERE estadoinar in ('NEWS','ADDS','REAC')) VALIDACION
              ON a.contrato = validacion.contrato
              WHERE TRUNC(fechaactivacion) = TRUNC(V_FECHA)
              ORDER BY vendedores desc, ruccompania )
                --AND a.vendedores>2
            WHERE ROWNUM < 20
      )
    LOOP
      HTML := HTML     || '<tr> <td>' || REC_PER.ventas
                       || '</td><td>' || REC_PER.vendedores
                       || '</td><td>' || REC_PER.tiendas
                       || '</td><td>' || REC_PER.razonsocial
                       || '</td><td>' || REC_PER.ruccompania
                       || '</td><td>' || REC_PER.fechaactivacion
                       || '</td><td>' || REC_PER.contrato
                       || '</td><td>' || REC_PER.telefono
                       || '</td><td>' || REC_PER.producto
                       || '</td><td>' || REC_PER.gama
                       || '</td><td>' || REC_PER.tipoplan
                       || '</td><td>' || REC_PER.orden
                       || '</td><td>' || REC_PER.ordencreadopor
                       || '</td><td>' || REC_PER.ordencerradopor
                       || '</td><td>' || REC_PER.solicitud
                       || '</td><td>' || REC_PER.vendedor
                       || '</td><td>' || REC_PER.tienda
                       || '</td><td>' || REC_PER.departamento
                       || '</td><td>' || REC_PER.provincia
                       || '</td><td>' || REC_PER.distrito
                       || '</td><td>' || REC_PER.mercado
                       || '</td><td>' || REC_PER.gerencia_canal
                       || '</td><td>' || REC_PER.canal_venta
                       || '</td><td>' || REC_PER.kam
                       || '</td><td>' || REC_PER.gerencia_territorio
                       || '</td><td>' || REC_PER.division_territorio
                       || '</td><td>' || REC_PER.tipo_tienda
                       || '</td><td>' || REC_PER.cadena_dealer
                       || '</td><td>' || REC_PER.socio_negocio
                       || '</td><td>' || REC_PER.tipodocumento
                       || '</td><td>' || REC_PER.capacidadendeudamiento
                       || '</td><td>' || REC_PER.resultadoevaluacion
                       || '</td><td>' || REC_PER.bancarizacion
                       || '</td><td>' || REC_PER.validacion
                       || '</td></tr>';

    --DBMS_OUTPUT.PUT_LINE(length(html));

    END LOOP;
        HTML := HTML || '</table><br/>';
    END IF;
--------------------------------------------------------------------------------------------------------
    IF CASOS_EMP>0 THEN
      HTML := HTML || '<h3 style = "font-size:13px;font-family:sans-serif;">Empresas</h3>'||
                '<table  border="1" >'||
                '<tr class=''fr''>'
                       || '     <td>Ventas'
                       || '</td><td>Vendedores'
                       || '</td><td>Raz&oacuten Social'
                       || '</td><td>Nro documento'
                       || '</td><td>Fecha activaci&oacuten'
                       || '</td><td>Contrato'
                       || '</td><td>Tel&eacutefono'
                       || '</td><td>Producto'
                       || '</td><td>Gama'
                       || '</td><td>Tipo plan'
                       || '</td><td>&Oacuterden'
                       || '</td><td>&Oacuterden creada por'
                       || '</td><td>&Oacuterden cerrada por'
                       || '</td><td>Solicitud'
                       || '</td><td>Vendedor'
                       || '</td><td>Zona global'
                       || '</td><td>Vendedor det.'
                       || '</td><td>Canal'
                       || '</td><td>Zona det.'
                       || '</td><td>Supervisor dealer'
                       || '</td><td>Tipo consultor'
                       || '</td><td>Dealer'
                       || '</td><td>Tipo documento'
                       || '</td><td>Capacidad de endeudamiento'
                       || '</td><td>Evaluaci&oacuten'
                       || '</td><td>Bancarizaci&oacuten'
                       || '</td><td>Validaci&oacuten'
                       || '</td></tr>';

    FOR REC_EMP IN
      (    SELECT * FROM
            (SELECT a.ventas, a.vendedores, a.razonsocial, a.ruccompania,
                   a.fechaactivacion, a.contrato, a.telefono, a.producto, a.gama,
                   a.orden, a.ordencreadopor, a.ordencerradopor, a.vendedor,
                   a.zona_global, a.vendedor_detallado, a.canal, a.zona_detallada,
                   a.supervisor_dealer, a.tipo_consultor, a.dealer, a.tipodocumento,
                   a.capacidadendeudamiento, a.resultadoevaluacion, a.bancarizacion, b.solicitud, NVL(validacion.validacion, 'ACTIV. ANTES DE BIO') validacion
                   ,CASE WHEN UPPER(planes.PRODUCT) LIKE '%POST%' THEN 'Postpago'
                        WHEN UPPER(planes.PRODUCT) LIKE '%PRE%' THEN 'Prepago'
                        ELSE planes.product END  tipoplan
              FROM pf_multiseller_empresas a
              left join (SELECT * FROM
                            (select distinct codigoorden, codigocontratofuente, solicitud
                            , subcategoria, tipoprocesoorden
                            ,fechacreacionorden, nombreconsultor
                            , rank () over (partition by codigoorden order by fechacarga desc,codigocontratofuente  desc ) rank
                            from p_ordenes
                            WHERE tipoprocesoorden in ('VENTA MOVILES','PORTABILIDAD')
                            --AND codigocontratofuente <> '0'
                            AND estadoorden <> 'Anulada')
                          WHERE RANK = 1) b
              on TRIM(a.orden) = TRIM(TO_CHAR(b.codigoorden))--a.contrato = b. codigocontratofuente
              left join pm_planes planes
              on a.c_plan = planes.c_plan
              LEFT JOIN
                (SELECT contrato
                     , NVL(DECODE(validacion_identidad,'NOT BIOMETRIC','NO BIO: ','BIOMETRIC','BIO: ',validacion_identidad)
                     ||DECODE(resultado_validacion,'NO VALIDADO','',resultado_validacion),null) VALIDACION
                FROM p_inar PARTITION (P_201607)
                WHERE estadoinar in ('NEWS','ADDS','REAC')) VALIDACION
              ON a.contrato = validacion.contrato
              WHERE TRUNC(fechaactivacion) = TRUNC(V_FECHA)
              ORDER BY vendedores desc, ruccompania
                --AND a.vendedores>2)
            )
            WHERE ROWNUM < 20
      )
    LOOP
      HTML := HTML     || '<tr> <td>' || REC_EMP.ventas
                       || '</td><td>' || REC_EMP.vendedores
                       || '</td><td>' || REC_EMP.razonsocial
                       || '</td><td>' || REC_EMP.ruccompania
                       || '</td><td>' || REC_EMP.fechaactivacion
                       || '</td><td>' || REC_EMP.contrato
                       || '</td><td>' || REC_EMP.telefono
                       || '</td><td>' || REC_EMP.producto
                       || '</td><td>' || REC_EMP.gama
                       || '</td><td>' || REC_EMP.tipoplan
                       || '</td><td>' || REC_EMP.orden
                       || '</td><td>' || REC_EMP.ordencreadopor
                       || '</td><td>' || REC_EMP.ordencerradopor
                       || '</td><td>' || REC_EMP.solicitud
                       || '</td><td>' || REC_EMP.vendedor
                       || '</td><td>' || REC_EMP.zona_global
                       || '</td><td>' || REC_EMP.vendedor_detallado
                       || '</td><td>' || REC_EMP.canal
                       || '</td><td>' || REC_EMP.zona_detallada
                       || '</td><td>' || REC_EMP.supervisor_dealer
                       || '</td><td>' || REC_EMP.tipo_consultor
                       || '</td><td>' || REC_EMP.dealer
                       || '</td><td>' || REC_EMP.tipodocumento
                       || '</td><td>' || REC_EMP.capacidadendeudamiento
                       || '</td><td>' || REC_EMP.resultadoevaluacion
                       || '</td><td>' || REC_EMP.bancarizacion
                       || '</td><td>' || REC_EMP.validacion
                       || '</td></tr>';

    --DBMS_OUTPUT.PUT_LINE(length(html));

    END LOOP;
        HTML := HTML || '</table><br/>';
    END IF;

    P_TO := 'alejandra.linares@entel.pe';
    P_TO2 := 'miguel.pebes@entel.pe';
    P_TO3 := 'francisco.espinoza@entel.pe';
    P_TO4 := 'vanessa.paredes@entel.pe';
    P_TO5 := 'jimmy.robles@entel.pe';
    P_TO6 := 'luis.perez@entel.pe';
    p_TO7 := 'dora.moncada@entel.pe';
    --p_TO8 := 'gabriela.gonzales@entel.pe';
    p_TO9 := 'daniel.delzo@entel.pe';
    p_TO10 := 'paolo.ravello@entel.pe';


    P_FROM := 'ip_alertas@entel.pe';
    P_SUBJECT := 'Alerta: Multiseller '|| TO_CHAR(V_FECHA,'DD/MM/YYYY');
    P_TEXT := 'msg';
    P_HTML := HTML;
    P_SMTP_HOSTNAME := 'relay-procesos.entel.pe';
    P_SMTP_PORTNUM := '25';

    BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO3,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO4,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO5,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    --BEGIN HTML_EMAIL(    P_TO => P_TO6,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO7,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    --BEGIN HTML_EMAIL(    P_TO => P_TO8,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO9,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO10,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;

END MULTISELLER_NOTIFICAR;

PROCEDURE DUO_DOCUMENTO_OBTENER(pcursor OUT t_cursor, C_FECHA VARCHAR2) IS
BEGIN

OPEN pcursor FOR
SELECT a.razonsocial, a.ruccompania, a.tipodoc, a.dni_origen,
       TO_CHAR(a.fechaactivacion,'DD/MM/YYYY'), a.contrato, a.telefono, a.producto, a.gama,
       a.orden, a.ordencreadopor, a.ordencerradopor, a.vendedor,
       a.zglobal_tienda, a.vdetallado_departamento, a.canal,
       a.zdetallada_gcanal, a.sdealer_kam, a.tconsultor_gterritorio,
       a.dealer_divterritorio, a.tipo_tienda, a.cadena_dealer,
       a.socio_negocio, a.tipodocumento, a.capacidadendeudamiento,
       a.resultadoevaluacion, a.bancarizacion, a.fecha_proceso,
       a.fecha_ini, a.act_dni, a.act_ruc
  FROM pf_duo_documento a
  WHERE TO_CHAR(fecha_proceso,'DD/MM/YYYY') = C_FECHA
  ORDER BY (a.act_dni + a.act_ruc) desc , dni_origen, fechaactivacion;

END DUO_DOCUMENTO_OBTENER;

PROCEDURE OBTENER_MULTISELLER_EMPRESAS
(C_FECHAINICIO IN VARCHAR2, C_FECHAFIN IN VARCHAR2, pcursor OUT t_cursor) IS
BEGIN
    OPEN pcursor FOR
    SELECT NVL(VENTAS,'')
          ,NVL(VENDEDORES,'')
          ,NVL(RAZONSOCIAL,'')
          ,NVL(RUCCOMPANIA,'')
          ,NVL(TO_CHAR(FECHAACTIVACION,'DD/MM/YYYY'),'')
          ,NVL(CONTRATO,'')
          ,NVL(TELEFONO,'')
          ,NVL(PRODUCTO,'')
          ,NVL(GAMA,'')
          ,NVL(ORDEN,'')
          ,NVL(ORDENCREADOPOR,'')
          ,NVL(ORDENCERRADOPOR,'')
          ,NVL(VENDEDOR,'')
          ,NVL(ZONA_GLOBAL,'')
          ,NVL(VENDEDOR_DETALLADO,'')
          ,NVL(CANAL,'')
          ,NVL(ZONA_DETALLADA,'')
          ,NVL(SUPERVISOR_DEALER,'')
          ,NVL(TIPO_CONSULTOR,'')
          ,NVL(DEALER,'')
          ,NVL(TIPODOCUMENTO,'')
          ,NVL(CAPACIDADENDEUDAMIENTO,'')
          ,NVL(RESULTADOEVALUACION,'')
          ,NVL(BANCARIZACION,'')
      FROM PF_MULTISELLER_EMPRESAS
      WHERE TO_CHAR(FECHAACTIVACION,'DD/MM/YYYY') BETWEEN C_FECHAINICIO AND C_FECHAFIN
      ORDER BY vendedores desc, ruccompania ;

END OBTENER_MULTISELLER_EMPRESAS;

PROCEDURE OBTENER_MULTISELLER_PERSONAS
(C_FECHAINICIO IN VARCHAR2, C_FECHAFIN IN VARCHAR2, pcursor OUT t_cursor) IS
BEGIN

    OPEN pcursor FOR
    SELECT NVL(VENTAS,'')
          ,NVL(VENDEDORES,'')
          ,NVL(TIENDAS,'')
          ,NVL(RAZONSOCIAL,'')
          ,NVL(RUCCOMPANIA,'')
          ,NVL(TO_CHAR(FECHAACTIVACION,'DD/MM/YYYY'),'')
          ,NVL(CONTRATO,'')
          ,NVL(TELEFONO,'')
          ,NVL(PRODUCTO,'')
          ,NVL(GAMA,'')
          ,NVL(ORDEN,'')
          ,NVL(ORDENCREADOPOR,'')
          ,NVL(ORDENCERRADOPOR,'')
          ,NVL(VENDEDOR,'')
          ,NVL(TIENDA,'')
          ,NVL(DEPARTAMENTO,'')
          ,NVL(PROVINCIA,'')
          ,NVL(DISTRITO,'')
          ,NVL(MERCADO,'')
          ,NVL(GERENCIA_CANAL,'')
          ,NVL(CANAL_VENTA,'')
          ,NVL(KAM,'')
          ,NVL(GERENCIA_TERRITORIO,'')
          ,NVL(DIVISION_TERRITORIO,'')
          ,NVL(TIPO_TIENDA,'')
          ,NVL(CADENA_DEALER,'')
          ,NVL(SOCIO_NEGOCIO,'')
          ,NVL(TIPODOCUMENTO,'')
          ,NVL(CAPACIDADENDEUDAMIENTO,'')
          ,NVL(RESULTADOEVALUACION,'')
          ,NVL(BANCARIZACION,'')
      FROM PF_MULTISELLER_PERSONAS
      WHERE TO_CHAR(FECHAACTIVACION,'DD/MM/YYYY') BETWEEN C_FECHAINICIO AND C_FECHAFIN
      ORDER BY vendedores desc, tiendas desc, ruccompania ;

END OBTENER_MULTISELLER_PERSONAS;
/*
PROCEDURE ALERTA_MIGRACIONES_ORDEN(V_PROCESO  DATE) AS
  HTML CLOB;
  HTML2 CLOB;
  P_TO VARCHAR2(200);
  P_TO2 VARCHAR2(200);
  P_TO3 VARCHAR2(200);
  P_TO4 VARCHAR2(200);
  P_TO5 VARCHAR2(200);
  P_TO6 VARCHAR2(200);
  P_TO7 VARCHAR2(200);
  P_TO8 VARCHAR2(200);
  P_TO9 VARCHAR2(200);
  P_TO10 VARCHAR2(200);
  P_FROM VARCHAR2(200);
  P_SUBJECT VARCHAR2(200);
  P_TEXT VARCHAR2(200);
  P_HTML CLOB;
  P_SMTP_HOSTNAME VARCHAR2(200);
  P_SMTP_PORTNUM VARCHAR2(200);
  vfecha varchar2(8) := TO_CHAR(V_PROCESO,'YYYYMMDD');
  f_real date:=(v_proceso-1);
  correlativo number:=0;
  BEGIN
    P_HTML :='';

     HTML := '<h1 style = "font-size:20px;font-family:sans-serif; ">ALERTA: Control de Migraciones sin Ordenes ' || to_char(f_real,'dd/mm/yyyy')||
            '</h1>'||
             '<style>'||
                '  table { margin:0px;padding:0px;'||
                     '   border:1px solid #000000;'||
                     '   border-collapse: collapse;'||
                      '   border-spacing: 0;'||
                     '   height:100%;'||
                     '   margin:0px;padding:0px;'||
                   ' } .fr td{ '||
                       ' background-color:#3177e0;'||
                       ' text-align:center;'||
                       ' border-width:0px 0px 1px 1px;'||
                       ' font-size:12px;'||
                       ' font-family:sans-serif;'||
                       ' font-weight:bold;'||
                       ' color:#ffffff;'||
                   ' }  td{'||
                    '    vertical-align:middle;'||
                    '    background-color:#ffffff;'||
                    '    border:1px solid #000000;'||
                     '   border-width:0px 1px 1px 0px;'||
                     '   text-align:left;'||
                     '   padding:5px;'||
                     '   font-size:10px;'||
                      '  font-family:sans-serif;'||
                      '  color:#000000;'||
                   ' } p { font-size:14px;font-family:sans-serif; }' ||
             '</style>' ||
                '<p>Par&aacute;metros de alertas : </br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 1. Ordenes sin Plan</br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 2. Migracion de Renta Control a PostPago</br>'||


             '<table  border="1" >'||
                '<tr class=''fr''>'||
                    '<td >Nro</td>'||
                    '<td >Fecha Migracion</td>'||
                   -- '<td >Codigo Compania</td>'||
                  --  '<td >Compania</td>'||
                  --  '<td >Codigo Cuenta</td>'||
                    '<td >Telefono</td>'||
                   -- '<td >Codigo Contrato BSCS</td>'||
                    '<td >Plan Antiguo</td>'||
                    '<td >Plan Nuevo</td>'||
                  --  '<td >Codigo Orden</td>'||
                  --  '<td >Solicitud</td>'||

               ' </tr>';
    FOR REC IN
      (
         SELECT FECHA,CODIGOCOMPANIA,COMPANIA,CODIGOCUENTACOMPANIA,TELEFONO,CODIGOCONTRATOBSCS,PLAN_ANTIGUO,PLAN_NUEVO
         FROM PF_ALERTA_MIGRACION_PLANES where TRUNC(fecha) = TRUNC(f_real)
      )
    LOOP
    correlativo:=correlativo+1;
      HTML := HTML  || '<tr><td>' ||  correlativo ||

                        '</td><td>' || REC.FECHA ||
                        --'</td><td>' || REC.CODIGOCOMPANIA ||
                       -- '</td><td>' || REC.COMPANIA ||
                      --  '</td><td>' || REC.CODIGOCUENTACOMPANIA ||
                        '</td><td>' || REC.TELEFONO ||
                       -- '</td><td>' || REC.CODIGOCONTRATOBSCS ||
                        '</td><td>' || REC.PLAN_ANTIGUO ||
                        '</td><td>' || REC.PLAN_NUEVO ||
                        '</td></tr>';
      DBMS_OUTPUT.PUT_LINE(length(html));
    END LOOP;
    HTML := HTML || '</table><br/>';

    --P_TO := 'paolo.ravello@entel.pe';
    P_TO2 := 'miguel.pebes@entel.pe';
    --P_TO3 := 'francisco.espinoza@entel.pe';
   -- P_TO4 := 'vanessa.paredes@entel.pe';
    P_TO5 := 'jimmy.robles@entel.pe';
   -- P_TO6 := 'cynthia.barrera@entel.pe';
   -- p_TO7 := 'dora.moncada@entel.pe';
   -- p_TO8 := 'gabriela.gonzales@entel.pe';
    p_TO9 := 'daniel.delzo@entel.pe';
    p_TO10 := 'percy.rojas@entel.pe';


    P_FROM := 'ip_alertas@entel.pe';
    P_SUBJECT := 'Control de Migraciones sin Orden';
    P_TEXT := 'msg';
    P_HTML := HTML;
    --P_SMTP_HOSTNAME := 'relay-alertas.entel.pe';
    P_SMTP_HOSTNAME := 'relay-procesos.entel.pe';
    P_SMTP_PORTNUM := '25';

   -- BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
  --  BEGIN HTML_EMAIL(    P_TO => P_TO3,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
  --  BEGIN HTML_EMAIL(    P_TO => P_TO4,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO5,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
   -- BEGIN HTML_EMAIL(    P_TO => P_TO6,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    --BEGIN HTML_EMAIL(    P_TO => P_TO7,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
   -- BEGIN HTML_EMAIL(    P_TO => P_TO8,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO9,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO10,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
  EXCEPTION
        When Others Then
        DBMS_OUTPUT.put_line ('FIN ERROR: '||sqlerrm);


END ALERTA_MIGRACIONES_ORDEN;
*/
PROCEDURE GESTION_INCIDENTES_LISTAR (pFechaIni IN VARCHAR2, pFechaFin IN VARCHAR2, pTipoDoc IN VARCHAR2, pValorBuscador IN VARCHAR2, pSoloAsignados IN VARCHAR2, pcursor OUT t_cursor)
IS
    vValorBuscador VARCHAR2(200) := '%' || pValorBuscador || '%';
BEGIN

    OPEN pcursor FOR
    select  DIASEFECTIVOS,CODIGOINCIDENTE,to_char(FECHAINGRESOINCIDENTE,'dd/mm/yyyy') as FECHAINGRESOINCIDENTE,MONTORECLAMADOINCIDENTE,
            to_char(FECHACARGAINCIDENTE,'dd/mm/yyyy') as FECHACARGAINCIDENTE,CODIGOCOMPANIA,
            COMPANIA,REPLACE(DIRECCION,',',' ') DIRECCION,RUCCOMPANIA,CODIGOCUENTACOMPANIA,TELEFONOCONTRATO,CODIGOCONTRATOBSCS,CODIGOORDEN,SOLICITUDORDEN,
            TIPOPROCESOORDEN,GAMA_INAR,TIPODOCCOMPANIA,VENDEDOR_INAR,CANALVENTA_INAR,SOCIONEGOCIO_INAR,RFT,T0,LDI,ILIMITADOS, INCIDENTES_ANT, CANT_INCIDENTES,
            ASIGNADOA, periodo_incidente, /*flag_asignado,*/ to_char(fecha_asignacion,'dd/mm/yyyy') as fecha_asignacion
    from
        (
            select  A.*, A.CODIGOINCIDENTE || '|' || A.CODIGOCOMPANIA || '|' || A.COMPANIA || '|' || A.RUCCOMPANIA || '|' ||
                    A.codigocuentacompania || '|' || A.telefonocontrato || '|' || A.codigocontratobscs || '|' || A.codigoorden || '|' ||
                    A.solicitudorden || '|' || A.vendedor_inar || '|' || A.canalventa_inar || '|' || A.socionegocio_inar || '|' ||
                    A.asignadoa AS VALOR
            FROM    pf_incidentes_detalle A
            WHERE   A.fechacargaincidente >= TO_DATE(pFechaIni,'YYYYMMDD') AND A.fechacargaincidente <= TO_DATE(pFechaFin,'YYYYMMDD')
        )
    --where   trunc(fechacargaincidente) = (trunc(SYSDATE)-1)
    WHERE   ( pTipoDoc = '-1' OR TIPODOCCOMPANIA = pTipoDoc )
            AND ( VALOR LIKE vValorBuscador )
            --AND ( pSoloAsignados = '0' OR flag_asignado = '1' )
    order by decode(TIPODOCCOMPANIA,'RUC20',1,'RUC10',2,3), DIASEFECTIVOS;

END GESTION_INCIDENTES_LISTAR;

  PROCEDURE GESTION_INCIDENTES_ASIGNAR (pListaContratos IN VARCHAR2)
  IS
    vListaContratos VARCHAR2(1000) := REPLACE(trim(pListaContratos),' ' ,'');
    --vCodContrato NUMBER(10);

    /*CURSOR cursorContratos
    IS
        SELECT regexp_substr(vListaContratos,'[^,]+', 1, level) AS contrato FROM dual
        CONNECT BY regexp_substr(vListaContratos, '[^,]+', 1, level) is not null;*/

  BEGIN

    UPDATE  pf_incidentes_detalle
    SET     --flag_asignado = '1',
            FECHA_ASIGNACION = SYSDATE
    WHERE EXISTS ( SELECT CONTRATO
                    FROM (
                        SELECT regexp_substr(vListaContratos,'[^,]+', 1, level) AS contrato FROM dual
                        CONNECT BY regexp_substr(vListaContratos, '[^,]+', 1, level) is not null
                        )
                    WHERE pf_incidentes_detalle.codigocontratobscs = TO_NUMBER(contrato)
                 );
     COMMIT;

    /*FOR listaContratos IN cursorContratos
    LOOP
        vCodContrato := to_number(listaContratos.contrato);
        DBMS_OUTPUT.PUT_LINE('Contrato: ' || vCodContrato);
        UPDATE pf_incidentes_detalle
        SET flag_asignado = '1',
            FECHA_ASIGNACION = SYSDATE
        WHERE codigocontratobscs = vCodContrato;
        COMMIT;
    END LOOP;*/

  END GESTION_INCIDENTES_ASIGNAR;

/*PROCEDURE BUSCAR_MIGRACION_ORDENES(C_FECHA VARCHAR2,pcursor OUT t_cursor) IS
BEGIN

OPEN pcursor FOR
SELECT FECHA,CODIGOCOMPANIA,COMPANIA,CODIGOCUENTACOMPANIA,TELEFONO,CODIGOCONTRATOBSCS,PLAN_ANTIGUO,PLAN_NUEVO
FROM PF_ALERTA_MIGRACION_PLANES where TO_CHAR(fecha,'dd/mm/yyyy') = C_FECHA order by CODIGOCOMPANIA desc;

END BUSCAR_MIGRACION_ORDENES;
*/
PROCEDURE CHILE_RURAL_ALERTA(v_fecha DATE) IS
  HTML CLOB;
  HTML2 CLOB;
  P_TO VARCHAR2(200);
  P_TO2 VARCHAR2(200);
  P_TO3 VARCHAR2(200);
  P_TO4 VARCHAR2(200);
  P_TO5 VARCHAR2(200);
  P_TO6 VARCHAR2(200);
  P_FROM VARCHAR2(200);
  P_SUBJECT VARCHAR2(200);
  P_TEXT VARCHAR2(200);
  P_HTML CLOB;
  P_SMTP_HOSTNAME VARCHAR2(200);
  P_SMTP_PORTNUM VARCHAR2(200);

  V_MINUTOS_TOT_MES VARCHAR2(200);
  V_MINUTOS_TOT_DIA  VARCHAR2(200);
  V_LLAMADAS_TOT_DIA  NUMBER;

  BEGIN


    SELECT SUM(minutos) minutos, NVL(sum(llamadas),0) INTO V_MINUTOS_TOT_DIA, V_LLAMADAS_TOT_DIA
        FROM
        (SELECT servedmsisdn
             , avr_ciudad
             , COUNT(1) LLAMADAS
             , ROUND(SUM(CALLDURATION)/60) MINUTOS
             , COUNT(DISTINCT callednumbercdr) DEST_RURAL
         FROM temp_res_tel3g A
         LEFT JOIN pf_chile_wns_rural B
           ON INSTR(A.callednumbercdr, B.serie) > 0
        WHERE fechaproceso = TO_CHAR(V_FECHA, 'YYYYMMDD')
          AND B.serie is not NULL
          AND recordtype = '0'
          AND INSTR(A.callednumbercdr, B.serie) = 7
          AND SUBSTR(callednumbercdr,1,6) = '199000'
        GROUP BY servedmsisdn , avr_ciudad) ;



    P_HTML :='';

     HTML :=
             '<style>'||
                            '  table { '||
                                 '   border:1px solid #000000;'||
                                 '   border-spacing: 0;'||
                                 '   border-collapse: collapse;'||
                                 '   height:100%;'||
                                 '   margin:0px;padding:0px;'||
                               ' } .fr td{ '||
                                   ' background-color:#0E8E4C;'||
                                   ' text-align:center;'||
                                   ' border-width:0px 0px 1px 1px;'||
                                   ' font-size:12px;'||
                                   ' font-family:sans-serif;'||
                                   ' font-weight:bold;'||
                                   ' color:#ffffff;'||
                               ' }  td{'||
                                '    vertical-align:middle;'||
                                '    background-color:#ffffff;'||
                                '    border:1px solid #000000;'||
                                 '   border-width:0px 1px 1px 0px;'||
                                 '   text-align:left;'||
                                 '   padding:5px;'||
                                 '   font-size:10px;'||
                                  '  font-family:sans-serif;'||
                                  '  color:#000000;'||
                               ' } h2 {font-family:sans-serif; font-size:18px;' ||
                               ' } p {font-family:sans-serif; font-size:13px;}' ||
                         '</style>';



                html := html || '<h2>Consumos LDI especiales (Fecha : ' ||TO_CHAR(v_fecha, 'DD/MM/YYYY')|| ')</h2>' ||
                        '<p>Minutos en el día: '|| V_MINUTOS_TOT_DIA ||'</br>' ;
                 --       '   Minutos en el mes: '|| V_MINUTOS_TOT_MES ||'</p>';

                html := html ||
                   '<table>'||
                        '<tr class=''fr''>'||
                            '<td>Teléfono</td>'||
                            '<td>Serie</td>'||
                            '<td>Pa&iacutes</td>'||
                            '<td>C&oacutedigo Pa&iacutes</td>'||
                            '<td>Ciudad</td>'||
                            '<td>Llamadas</td>'||
                            '<td>Minutos</td>'||
                            '<td>Destinos</td>'||
                        '</tr>';


    FOR REC IN
      (/*
        SELECT T_DIA.dn_num
             , T_DIA.llamadas
             , TO_CHAR(T_DIA.minutos,'999,999') minutos
             , T_DIA.dest_rural
             , TO_CHAR(T_MES.minutos_mes,'999,999') minutos_mes
        FROM
        (SELECT DN_NUM
             , COUNT(1) LLAMADAS
             , ROUND(SUM(CALL_DURATION)/60) MINUTOS
             , COUNT(DISTINCT DESTINO) DEST_RURAL
         FROM PF_CHILE_TRAFICO A
         LEFT JOIN pf_chile_wns_rural B
           ON INSTR(A.destino, B.serie) > 0
        WHERE FECHA = TRUNC(V_FECHA)
          AND B.serie is not null
        GROUP BY DN_NUM ) T_DIA

        LEFT JOIN

        (SELECT DN_NUM
             , ROUND(SUM(CALL_DURATION)/60) MINUTOS_MES
         FROM PF_CHILE_TRAFICO A
         LEFT JOIN pf_chile_wns_rural B
           ON INSTR(A.destino, B.serie) > 0
        WHERE TRUNC(FECHA,'mm') = TRUNC(TRUNC(V_FECHA),'mm')
          AND B.serie is not null
        GROUP BY DN_NUM ) T_MES

        ON T_DIA.DN_NUM = T_MES.DN_NUM

        ORDER BY T_DIA.minutos DESC*/
         SELECT T_DIA.servedmsisdn dn_num
            , serie
            , avr_ciudad
            , cod_pais
            , pais
             , T_DIA.llamadas
             , TO_CHAR(T_DIA.minutos,'999,999') minutos
             , T_DIA.dest_rural
        FROM
        (SELECT servedmsisdn
             , serie
             , avr_ciudad
             , cod_pais
             , pais
             , COUNT(1) LLAMADAS
             , ROUND(SUM(CALLDURATION)/60) MINUTOS
             , COUNT(DISTINCT callednumbercdr) DEST_RURAL
         FROM temp_res_tel3g A
         LEFT JOIN pf_chile_wns_rural B
           ON INSTR(A.callednumbercdr, B.serie) > 0
        WHERE fechaproceso = TO_CHAR(V_FECHA, 'YYYYMMDD')
          AND B.serie is not NULL
          AND recordtype = '0'
          AND INSTR(A.callednumbercdr, B.serie) = 7
          AND SUBSTR(callednumbercdr,1,6) = '199000'
        GROUP BY servedmsisdn , b.avr_ciudad, b.cod_pais, b.pais, b.serie
           ) T_DIA
        ORDER BY T_DIA.minutos DESC


      )
    LOOP
      HTML := HTML  || '<tr><td>' ||  REC.DN_NUM ||
                       '</td><td>' ||  REC.serie ||
                       '</td><td>' ||  REC.pais ||
                       '</td><td>' ||  REC.cod_pais ||
                       '</td><td>' ||  REC.avr_ciudad ||
                       '</td><td>' ||  REC.LLAMADAS ||
                       '</td><td>' ||  REC.MINUTOS ||
                       '</td><td>' ||  REC.DEST_RURAL ||
                       '</td></tr>';
      --DBMS_OUTPUT.PUT_LINE(length(html));
    END LOOP;
    HTML := HTML || '</table>';

    P_TO  := 'alejandra.linares@entel.pe';
    P_TO2 := 'francisco.espinoza@entel.pe';
    P_TO3 := 'katia.jaimes@entel.pe';
    P_TO4 := 'cinthia.siccha@entel.pe';
    P_TO5 := 'mangel.pacora@entel.pe';
    P_TO6 := 'karina.tirado@entel.pe';

    P_FROM := 'ip_alertas@entel.pe';
    P_SUBJECT := 'Alerta de consumos LDI especiales';
    P_TEXT := 'msg';
    P_HTML := HTML;
    P_SMTP_HOSTNAME := 'relay-procesos.entel.pe';
    P_SMTP_PORTNUM := '25';


    IF V_LLAMADAS_TOT_DIA>0 THEN
        BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        BEGIN HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        BEGIN HTML_EMAIL(    P_TO => P_TO3,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        BEGIN HTML_EMAIL(    P_TO => P_TO4,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        BEGIN HTML_EMAIL(    P_TO => P_TO5,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
        BEGIN HTML_EMAIL(    P_TO => P_TO6,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    ELSE
        P_SUBJECT := 'Alerta de consumos a Chile rural - NO HAY ALERTAS';
        BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    END IF;
END CHILE_RURAL_ALERTA;

PROCEDURE MENSAJERIA_PROCESO (v_fecha DATE) IS
BEGIN

delete from pf_mensajeria_control where fecha = trunc(v_fecha);

insert into pf_mensajeria_control (fecha_carga, fecha, telefono, contrato, cod_cuenta,
                                   razon_social, nro_documento, tipo_persona, equipo,
                                   ciclo_fact, cod_plan, plan_tarifario, min_salientes,
                                   entel, llam_saliente, dest_salientes,
                                   disp_saliente
                                   , cantidad_sal, cantidad_ent, dispersion, alerta
                                   , ginifrec, ginidist, modafrec, modadist, cantidmodafrec,
                                   cantmodadist, cant_destinos)
select
    w.fecha_carga
    ,w.fecha
    ,'51'||telefono telefono
    ,codigocontratobscs CONTRATO
    ,codigocuentaresponsable COD_CUENTA
    ,compania RAZON_SOCIAL
    ,ruccompania NRO_DOCUMENTO,
    tipopersona TIPO_PERSONA
    , producto  EQUIPO
    , ciclofacturacioncontrato CICLO_FACT    ,
    codigoplantarifariobscs COD_PLAN
     ,PLANTARIFARIO PLAN_TARIFARIO
    ,y.min_sal
    ,y.entel
    ,y.llam_sal
    ,y.dest_sal
    ,y.disp_sal
    ,w.cantidad_sal
    ,w.cantidad_ent
    ,w.dispersion
    ,w.alerta
    ,ginifrec
    ,ginidist
    ,modafrec
    ,modadist
    ,cantidModaFrec
    ,CantModaDist
    ,CANT_DESTINOS
from (SELECT *
              FROM ( SELECT a.*
                          , row_number() over (PARTITION BY telefono
                                                   ORDER BY DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC
                                                          , fechacargacontrato desc) rn
                       FROM fotoequipos a)
             WHERE rn = 1) x
left join
(   SELECT ROUND(sum(callduration)/60,2) min_sal
         , servedmsisdn entel
         , sum(llamadas)llam_sal
         , count(DISTINCT SUBSTR(callednumbercdr,-9)) dest_sal
         , ROUND(count(DISTINCT SUBSTR(callednumbercdr,-9))/sum(llamadas),4) disp_Sal
      FROM temp_res_tel3g
     WHERE fechaproceso = TO_CHAR(v_fecha,'YYYYMMDD')
       AND recordtype ='0'
     GROUP BY servedmsisdn
   /*
    select

    min_sal MIN_SALIENTES, telefono ENTEL,periodo_facturacion PERIODO_FACT, llam_sal LLAM_SALIENTE,
    dest_sal DEST_SALIENTES, disp_sal DISP_SALIENTE, min_ent MIN_ENTRANTES, llam_ent LLAM_ENTRANTES, c_celdas CANT_CELDAS_SAL,
    celda_max CELDA_MAX, porc_celda PORC_MAX_CELDA_SAL

    from pf_ilimitados_metricas where periodo_facturacion=obtener_periodo_fact_actual(ciclo_facturacion, v_fecha) */
) y on '51'||x.telefono=y.entel

inner join
(
select  trunc(sysdate) fecha_carga
     , trunc(fecha) fecha
     , x.numero_origen
     , cantidad_sal cantidad_sal
     , cantidad_ent cantidad_ent
     , 0 ginifrec
     , 0 ginidist
     ,0 modafrec
     , 0 modadist
     , 0 cantidModaFrec
     ,0 CantModaDist,
    ROUND(cant_sal_dest/cantidad_sal,2) dispersion,
    Case when ROUND(cant_sal_dest/cantidad_sal,2)>=0.8 and cantidad_sal>=500 then 'ALERTA' end alerta
    ,cant_sal_dest CANT_DESTINOS
from mensajeria_saliente_af_detalle x where x.fecha=trunc(v_fecha)
/*
select distinct trunc(sysdate) fecha_carga
     , trunc(fecha) fecha
     , x.numero_origen
     , sum(distinct cantidad_sal) cantidad_sal
     ,sum(distinct cantidad_ent) cantidad_ent
     , 0 ginifrec
     , 0 ginidist
     ,STATS_MODE(frecuencia) modafrec
     , STATS_MODE(DISTANCIA) modadist,
    (
    select max(count(1)) cantidad
      from mensajeria_saliente_af_detalle y
     where y.fecha=trunc(v_fecha)  and y.numero_origen=x.numero_origen
     group by y.numero_origen,y.frecuencia
    ) cantidModaFrec,
    (
    select max(count(1)) cantidad
      from mensajeria_saliente_af_detalle y
     where y.fecha=trunc(v_fecha)  and y.numero_origen=x.numero_origen
     group by y.numero_origen,y.distancia
    ) CantModaDist,
    ROUND((count(distinct numero_destino)/sum(distinct cantidad_sal)),2) dispersion,
    Case when round((sum(distinct cantidad_sal)/count(distinct numero_destino)),2)>=0.8 and sum(distinct cantidad_sal)>=500 then 'ALERTA' end alerta
    ,count(distinct numero_destino) CANT_DESTINOS
from mensajeria_saliente_af_detalle x where x.fecha=trunc(v_fecha)
group by trunc(sysdate),trunc(fecha),x.numero_origen
*/
) W
on '51'||x.telefono=w.numero_origen;

commit;

END MENSAJERIA_PROCESO;

PROCEDURE MENSAJEROS_CONSULTAR( v_parametro VARCHAR2, pcursor OUT t_cursor) IS
BEGIN

OPEN pcursor FOR
SELECT a.dni_mensajero
     , a.nombre_mensajero
     , a.nombre_cliente
     , a.cuenta
     , a.ruc
     , a.nombre_fuente
     , a.fecha_fraude
     , a.tipo_fraude
     , a.telefono_contacto
     , a.nombre_contacto
     , a.visible
     , a.fecha_registro
     , a.tipo_doc
  FROM pf_control_mensajeros a
 WHERE UPPER(a.dni_mensajero) LIKE '%'|| UPPER(V_PARAMETRO) || '%'
    OR UPPER(a.nombre_mensajero) LIKE '%'|| UPPER(V_PARAMETRO) || '%'
    OR UPPER(a.nombre_cliente) LIKE '%'|| UPPER(V_PARAMETRO) || '%'
    OR UPPER(a.cuenta) LIKE '%'|| UPPER(V_PARAMETRO) || '%'
    OR UPPER(a.ruc) LIKE '%'|| UPPER(V_PARAMETRO) || '%'
    OR UPPER(a.tipo_fraude) LIKE '%'|| UPPER(V_PARAMETRO) || '%'
    OR UPPER(a.telefono_contacto) LIKE '%'|| UPPER(V_PARAMETRO) || '%'
    OR UPPER(a.nombre_contacto) LIKE '%'|| UPPER(V_PARAMETRO) || '%'  ;

END MENSAJEROS_CONSULTAR;

PROCEDURE MENSAJEROS_REGISTRAR( v_dni_mensajero VARCHAR2,v_nombre_mensajero VARCHAR2, v_nombre_cliente VARCHAR2
                            , v_cuenta VARCHAR2, v_ruc VARCHAR2, v_nombre_fuente VARCHAR2, v_fecha_fraude DATE
                            , v_tipo_fraude VARCHAR2,  v_telefono_contacto VARCHAR2, v_nombre_contacto VARCHAR2
                            , v_visible VARCHAR2, v_tipo_doc VARCHAR2) IS
BEGIN
INSERT INTO pf_control_mensajeros (dni_mensajero, nombre_mensajero, nombre_cliente, cuenta,
                                   ruc, nombre_fuente, fecha_fraude, tipo_fraude,
                                   telefono_contacto, nombre_contacto, visible,
                                   fecha_registro,tipo_doc)
  VALUES (v_dni_mensajero, v_nombre_mensajero, v_nombre_cliente
        , v_cuenta, v_ruc, v_nombre_fuente, v_fecha_fraude, v_tipo_fraude
        , v_telefono_contacto, v_nombre_contacto, v_visible, SYSDATE,v_tipo_doc);
COMMIT;
END MENSAJEROS_REGISTRAR;

PROCEDURE MENSAJEROS_LOG(v_usuario VARCHAR2, v_accion VARCHAR2, v_parametro VARCHAR2) IS
BEGIN

INSERT INTO pf_control_mensajeros_log (usuario, fecha, accion, parametro)
VALUES (v_usuario, SYSDATE, v_accion , v_parametro);

COMMIT;
END MENSAJEROS_LOG;

PROCEDURE SUPLANTADOS_ENTEL_GENERAR (V_FECHA DATE) AS

BEGIN
    DELETE FROM PF_SUPLANTADOS_ENTEL WHERE fechaactivacion = TRUNC(V_FECHA);

    INSERT INTO PF_SUPLANTADOS_ENTEL ( codigocuenta, razonsocial, ruccompania, puesto,
                                       gerencia, c_contrato, fechaactivacion, modeloequipo,
                                       gama, telefono, estadoinar, vendedor, c_plan, n_plan,
                                       cantactivados, imei_bscs, codigocompania, codigoorden,
                                       ordencreadopor, ordencerradopor, solicitud, origenorden)
    SELECT   t_inar.codigocuenta
           , t_inar.razonsocial
           , T_INAR.RUCCOMPANIA
           , t_lider.NOMBRE_PUESTO
           , t_lider.gerencia
           , t_inar.c_contrato
           , t_inar.fechaactivacion
           , T_INAR.MODELOEQUIPO
           , t_equipos.gamma gama
           , t_inar.nextel telefono
           , t_inar.estadoinar
           , t_inar.vendedor
           , t_inar.c_plan
           , t_inar.n_plan
           , t_inar.cantactivados
           , t_inar.imei_bscs
           , t_inar.codigocompania
           , o.codigoorden
           , o.ordencreadopor
           , o.ordencerradopor
           , o.solicitud
           , o.origenorden
        FROM ods_gpf.w_med_inar t_inar
        JOIN (SELECT *
                FROM P_EMPLEADO
               WHERE activo = 1
                 AND TRIM(UPPER(SUBSTR(nombre_puesto,1,INSTR(nombre_puesto,' '))))
                  IN ('SUPERVISOR', 'GERENTE', 'JEFE', 'SUBGERENTE', 'VICEPRESIDENTE')
              ) t_lider
          ON t_inar.ruccompania = t_lider.DNI
        LEFT JOIN (SELECT *
                     FROM (select nombre_inar,nombre_comercial,gamma
                                 ,ROW_NUMBER() over(partition by UPPER(nombre_inar) order by periodo desc)  rn
                            from ods_gpf.tnp_equipos)
                    WHERE rn = 1) t_equipos
          ON UPPER(t_inar.modeloequipo) = UPPER(t_equipos.nombre_inar)

        LEFT JOIN (SELECT * FROM
                       (SELECT distinct codigoorden, codigocontratofuente, solicitud, ordencreadopor, ordencerradopor
                                , subcategoria, tipoprocesoorden, origenorden origenorden
                                , fechacreacionorden, nombreconsultor
                                , ROW_NUMBER () over (partition by codigoorden order by fechacarga desc) rank
                           FROM p_ordenes
                          WHERE tipoprocesoorden in ('VENTA MOVILES','PORTABILIDAD')
                            AND estadoorden <> 'Anulada'
                            AND fechacreacionorden >= TRUNC(V_FECHA)-30 )
                    WHERE RANK = 1) o
          ON t_inar.c_contrato = o.codigocontratofuente
       WHERE TRUNC(fechaactivacion) = TRUNC(V_FECHA)
         AND ESTADOINAR IN ('ADDS','NEWS','REAC');

    COMMIT;

END SUPLANTADOS_ENTEL_GENERAR;


PROCEDURE SUPLANTADOS_ENTEL_NOTIFICAR (V_FECHA DATE) IS
  HTML CLOB;
  P_TO VARCHAR2(200);
  P_TO2 VARCHAR2(200);
  P_TO3 VARCHAR2(200);
  P_TO4 VARCHAR2(200);
  P_TO5 VARCHAR2(200);
  P_TO6 VARCHAR2(200);
  P_TO7 VARCHAR2(200);
  P_TO8 VARCHAR2(200);
  P_TO9 VARCHAR2(200);
  P_TO10 VARCHAR2(200);
  P_FROM VARCHAR2(200);
  P_SUBJECT VARCHAR2(200);
  P_TEXT VARCHAR2(200);
  P_HTML CLOB;
  P_SMTP_HOSTNAME VARCHAR2(200);
  P_SMTP_PORTNUM VARCHAR2(200);

  BEGIN
    P_HTML :='';

     HTML := '<h1 style = "font-size:15px;font-family:sans-serif; ">(Posibles) Suplantados Entel: L&iacutederes que hicieron activaciones' ||
            '</h1>'||
            '<h2 style = "font-size:12px;font-family:sans-serif; ">Fecha de activación : ' || TO_CHAR(V_FECHA,'DD/MM/YYYY')||
            '</h3>'||
             '<style>'||
                '  table { margin:0px;padding:0px;'||
                     '   border:1px solid #000000;'||
                     '   border-collapse: collapse;'||
                      '   border-spacing: 0;'||
                     '   height:100%;'||
                     '   margin:0px;padding:0px;'||
                   ' } .fr td{ '||
                       ' background-color:#3177e0;'||
                       ' text-align:center;'||
                       ' border-width:0px 0px 1px 1px;'||
                       ' font-size:12px;'||
                       ' font-family:sans-serif;'||
                       ' font-weight:bold;'||
                       ' color:#ffffff;'||
                   ' }  td{'||
                    '    vertical-align:middle;'||
                    '    background-color:#ffffff;'||
                    '    border:1px solid #000000;'||
                     '   border-width:0px 1px 1px 0px;'||
                     '   text-align:left;'||
                     '   padding:5px;'||
                     '   font-size:10px;'||
                      '  font-family:sans-serif;'||
                      '  color:#000000;'||
                   ' } p { font-size:14px;font-family:sans-serif; }' ||
             '</style>' ||

             '<table  border="1" >'||
                '<tr class=''fr''>'||
                    '<td >Nombre</td>'||
                    '<td >Nro. documento</td>'||
                    '<td >Puesto</td>'||
                    '<td >Gerencia</td>'||
                    '<td >Contrato</td>'||
                    '<td >Tel&eacutefono</td>'||
                    '<td >Modelo</td>'||
                    '<td >Gama</td>'||
                    '<td >Cod. Plan</td>'||
                    '<td >Plan</td>'||
                    '<td >Orden'||
                    '<td >Orden creado por'||
                    '<td >Orden cerrado por'||
                    '<td >Origen orden'||
                    '<td >Solicitud'||
                    '<td >Vendedor'||
                    '<td >Tienda'||
                    '<td >Departamento'||
                    '<td >Canal venta'||
                    '<td >Tipo tienda'||
                    '<td >Socio negocio'||
                    '<td >Validaci&oacuten'||
               ' </tr>';
    FOR REC IN
      (
            SELECT razonsocial
                 , ruccompania
                 , puesto
                 , gerencia
                 , c_contrato
                 , telefono
                 , modeloequipo
                 , gama
                 , c_plan
                 , n_plan
                 , codigoorden
                 , ordencreadopor
                 , ordencerradopor
                 , origenorden
                 , solicitud
                 , a.vendedor
                 , b.tienda
                 , b.departamento
                 , b.distrito
                 , b.canal_venta
                 , b.socio_negocio
                 , NVL(validacion.validacion, 'ACTIV. ANTES DE BIO') validacion
              FROM pf_suplantados_entel a
              LEFT JOIN tnp_canal_persona b
                ON a.vendedor = b.vendedor
              LEFT JOIN
                (SELECT contrato
                     , DECODE(validacion_identidad,'NOT BIOMETRIC','NO BIO: ','BIOMETRIC','BIO: ',validacion_identidad)
                     ||DECODE(resultado_validacion,'NO VALIDADO','',resultado_validacion) VALIDACION
                FROM p_inar
                WHERE estadoinar in ('NEWS','ADDS','REAC')) VALIDACION
               ON a.c_contrato = validacion.contrato
             WHERE fechaactivacion = TRUNC(V_FECHA)
      )
    LOOP
      HTML := HTML   ||  '<tr><td>' ||  REC.razonsocial ||
                         '</td><td>' || REC.ruccompania||
                         '</td><td>' || REC.puesto||
                         '</td><td>' || REC.gerencia||
                         '</td><td>' || REC.c_contrato||
                         '</td><td>' || REC.telefono||
                         '</td><td>' || REC.modeloequipo||
                         '</td><td>' || REC.gama||
                         '</td><td>' || REC.c_plan||
                         '</td><td>' || REC.n_plan||
                         '</td><td>' || REC.codigoorden||
                         '</td><td>' || REC.ordencreadopor||
                         '</td><td>' || REC.ordencerradopor ||
                         '</td><td>' || REC.origenorden||
                         '</td><td>' || REC.solicitud||
                         '</td><td>' || REC.vendedor||
                         '</td><td>' || REC.tienda||
                         '</td><td>' || REC.departamento||
                         '</td><td>' || REC.distrito||
                         '</td><td>' || REC.canal_venta||
                         '</td><td>' || REC.socio_negocio||
                         '</td><td>' || REC.validacion||
                        '</td></tr>';
      --DBMS_OUTPUT.PUT_LINE(length(html));
    END LOOP;
    HTML := HTML || '</table><br/>';

    P_TO := 'alejandra.linares@entel.pe';
    P_TO2 := 'francisco.espinoza@entel.pe';
    P_TO3 := 'jimmy.robles@entel.pe';
    P_TO4 := 'daniel.delzo@entel.pe';
    P_TO5 := 'manuel.tello@entel.pe';


    P_FROM := 'ip_alertas@entel.pe';
    P_SUBJECT := 'Alerta: Suplantados Entel';
    P_TEXT := 'msg';
    P_HTML := HTML;
    P_SMTP_HOSTNAME := 'relay-procesos.entel.pe';
    P_SMTP_PORTNUM := '25';

    BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO3,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO4,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO5,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;

END SUPLANTADOS_ENTEL_NOTIFICAR;

PROCEDURE ILIMITADOS_REPROCESO (V_FECHA DATE) IS

BEGIN
    --CORRER PROCESO DEL DIA -2 CUANDO CIERE EL CICLO
    /*IF TO_CHAR(SYSDATE,'DD') = '02' THEN
        BEGIN PAQUETE_FRAUDES.ilimitados_generar_reporte(SYSDATE-2); END;
        BEGIN paquete_fraudes.ilimitados_notificar(SYSDATE-2); END;
    ELSIF TO_CHAR(SYSDATE,'DD') = '10' THEN
        BEGIN PAQUETE_FRAUDES.ilimitados_generar_reporte(SYSDATE-2); END;
        BEGIN paquete_fraudes.ilimitados_notificar(SYSDATE-2); END;
    ELSIF TO_CHAR(SYSDATE,'DD') = '24' THEN
        BEGIN PAQUETE_FRAUDES.ilimitados_generar_reporte(SYSDATE-2); END;
        BEGIN paquete_fraudes.ilimitados_notificar(SYSDATE-2); END;
    ELSIF  TO_CHAR(SYSDATE,'DD') = '15' THEN
        BEGIN PAQUETE_FRAUDES.ilimitados_generar_reporte(SYSDATE-2); END;
        BEGIN paquete_fraudes.ilimitados_notificar(SYSDATE-2); END;
    END IF;*/

    IF TO_CHAR(V_FECHA,'DD') = '01' THEN
        BEGIN PAQUETE_FRAUDES.ilimitados_generar_reporte_dia(V_FECHA-1,0); END;
        BEGIN PAQUETE_FRAUDES.ILIMITADOS_NOTIFICAR_DIA(V_FECHA-1); END;
    END IF;

END ILIMITADOS_REPROCESO;

PROCEDURE ILIMITADOS_DESTINOS_ADIC (V_FECHA IN DATE) IS
BEGIN

    --PLANES CON LA CONDICION, ACTIVADOS O CON CDP DESDE EL 08/08/2016
    MERGE /*+PARALLEL(2)*/ INTO ( SELECT *
                   FROM pf_ilimitados_metricas
                  WHERE periodo_facturacion = obtener_periodo_fact_actual(ciclo_facturacion, V_FECHA)
                    AND c_plan IN (SELECT c_plan FROM pf_ilimitados_planes WHERE limite_destinos = 50 )
                ) A
    USING ( SELECT DISTINCT codigocontratobscs
              FROM fotoequipos FOTO
              LEFT JOIN
                   (SELECT DISTINCT A.codigocontratofuente
                            , A.fechacreacionorden
                            , A.fechacierreorden
                      FROM p_ordenes A
                      LEFT JOIN dwh_plantarifario B
                        ON A.codigoplantarifariofuturo = B.codigoplantarifario
                     WHERE B.codigoplantarifariobscs IN (SELECT c_plan FROM pf_ilimitados_planes WHERE limite_destinos = 50)
                       AND (A.tipoprocesoorden = 'CAMBIO DE MODELO'
                            OR A.subcategoria = 'SOLICITA CAMBIO PLAN TARIFARIO')
                       AND A.estadoorden = 'Cerrada'
                       AND codigoplantarifariofuturo <> codigoplantarifariooriginal
                       AND TRUNC(fechacreacionorden) >= TO_DATE('08/08/2016','DD/MM/YYYY')) CDP
              ON FOTO.codigocontratobscs = CDP.codigocontratofuente
             WHERE FOTO.codigoplantarifariobscs IN (SELECT c_plan
                                                 FROM pf_ilimitados_planes
                                                WHERE limite_destinos = 50)
               AND (fechaactivacioncontrato >= TO_DATE('08/08/2016','DD/MM/YYYY') OR CDP.codigocontratofuente IS NOT NULL)
     ) B
    ON (a.contrato = b.codigocontratobscs )
    WHEN MATCHED THEN UPDATE SET A.limite_destinos = 50;
    COMMIT;



    MERGE /*+PARALLEL(2)*/ INTO (  SELECT *
                    FROM pf_ilimitados_metricas
                   WHERE periodo_facturacion = obtener_periodo_fact_actual(ciclo_facturacion, V_FECHA)
                     AND c_plan IN (SELECT c_plan
                                      FROM pf_ilimitados_planes
                                     WHERE limite_destinos = 50)
                     AND limite_destinos = 50 )A
    USING  (SELECT contrato

                 , SUM(CASE WHEN rn<=50 THEN 1 ELSE 0 END) DESTINOS_BASE
                 , SUM(CASE WHEN rn<=50 THEN llamadas ELSE 0 END)  LLAMADAS_BASE
                 , ROUND(SUM(CASE WHEN rn<=50 THEN segundos ELSE 0 END)/60,4)  MINUTOS_BASE

                 , SUM(CASE WHEN rn>50 THEN 1 ELSE 0 END) DESTINOS_AD
                 , SUM(CASE WHEN rn>50 THEN llamadas ELSE 0 END)  LLAMADAS_AD
                 , ROUND(SUM(CASE WHEN rn>50 THEN segundos ELSE 0 END)/60,4)  MINUTOS_AD
                 , ROUND(SUM(CASE WHEN rn>50 THEN segundos ELSE 0 END)/60,4)*9.87  PRECIO_AD

             FROM (SELECT  ciclo
                         , contrato
                         , DECODE(tipo_destino,'LDI',callingnumbercdr,substr(calledNumberCDR,-9)) callednumbercdr
                         , MIN(FECHA) fecha_inicial
                         , SUM(callduration) segundos
                         , SUM(llamadas) llamadas
                         , ROW_NUMBER() OVER (PARTITION BY contrato ORDER BY MIN(FECHA)) RN
                      FROM pf_ilimitados_trafico
                     WHERE periodo_facturacion = obtener_periodo_fact_actual(ciclo, V_FECHA)
                      AND RECORDTYPE = '0'
                    GROUP BY DECODE(tipo_destino,'LDI',callingnumbercdr,substr(calledNumberCDR,-9))
                         , contrato
                         , ciclo )
             GROUP BY contrato ) B
     ON (A.contrato = B.contrato)
    WHEN MATCHED THEN UPDATE SET A.destinos_base = B.destinos_base
                               , A.llamadas_base = B.llamadas_base
                               , A.minutos_base = B.minutos_base
                               , A.destinos_ad = B.destinos_ad
                               , A.llamadas_ad = B.llamadas_ad
                               , A.minutos_ad = B.minutos_ad
                               , A.precio_ad = B.precio_ad;
    COMMIT;

    MERGE /*+PARALLEL(2)*/ INTO
                (  SELECT *
                     FROM pf_ilimitados_metricas
                    WHERE periodo_facturacion = obtener_periodo_fact_actual(ciclo_facturacion, V_FECHA)
                      AND c_plan IN (SELECT c_plan
                                      FROM pf_ilimitados_planes
                                     WHERE limite_destinos = 50)
                     AND limite_destinos = 50 )A
        USING ( SELECT contrato,c_plan, periodo_facturacion, ciclo_facturacion
                     , MAX(CASE WHEN NVL(dest_ant_1,0) > 0 THEN 1 ELSE 0 END +
                       CASE WHEN NVL(dest_ant_2,0) > 0 THEN 1 ELSE 0 END +
                       CASE WHEN NVL(dest_ant_3,0) > 0 THEN 1 ELSE 0 END) MESES_DEST_AD
                FROM
                        (SELECT contrato,c_plan, periodo_facturacion, destinos_ad,ciclo_facturacion
                             , LAG(destinos_ad,1,0) OVER (PARTITION BY contrato, c_plan,ciclo_facturacion ORDER BY periodo_facturacion ) dest_ant_1
                             , LAG(destinos_ad,2,0) OVER (PARTITION BY contrato, c_plan,ciclo_facturacion ORDER BY periodo_facturacion ) dest_ant_2
                             , LAG(destinos_ad,3,0) OVER (PARTITION BY contrato, c_plan,ciclo_facturacion ORDER BY periodo_facturacion ) dest_ant_3
                          FROM pf_ilimitados_metricas
                         WHERE limite_destinos IS NOT NULL
                           AND periodo_facturacion <= obtener_periodo_fact_actual(ciclo_facturacion, V_FECHA)
                           AND periodo_facturacion >= obtener_periodo_fact_actual(ciclo_facturacion, V_FECHA-180))
                WHERE periodo_facturacion = obtener_periodo_fact_actual(ciclo_facturacion, V_FECHA)
                GROUP BY contrato,c_plan, periodo_facturacion, ciclo_facturacion
                ) B
        ON (     a.contrato = b.contrato
             AND a.c_plan = b.c_plan
             AND a.periodo_facturacion=b.periodo_facturacion
             AND a.ciclo_facturacion = b.ciclo_facturacion)
        WHEN MATCHED THEN UPDATE SET a.MESES_DEST_AD = b.MESES_DEST_AD;

        COMMIT;

END ILIMITADOS_DESTINOS_ADIC;


PROCEDURE ILIMITADOS_OBTENER_DESTAD(vfecha varchar2,pcursor  OUT t_cursor) AS
    v_proceso date := TRUNC(to_date(vfecha,'DD/MM/YYYY'));

BEGIN
OPEN pcursor FOR
     SELECT TO_CHAR(c.fechaactivacioncontrato,'DD/MM/YYYY'),
            TO_CHAR(c.fechacargacontrato,'DD/MM/YYYY'),
            TO_CHAR(a.fecha_ini,'DD/MM/YYYY'),
            a.dias_trafico,
            a.contrato,
            c.codigocuentaresponsable cod_cuenta,
            c.compania razon_social,
            c.ruccompania nro_documento,
            obtener_tipodoc(c.ruccompania) tipo_documento,
            a.telefono entel,
            a.periodo_facturacion,
            a.ciclo_facturacion,
            a.c_plan,
            c.plantarifario,
            a.min_sal,
            a.llam_sal,
            a.dest_sal,
            a.disp_sal,
            a.min_ent,
            a.llam_ent,
            a.c_celdas,
            a.celda_max,
            a.porc_celda,
            a.min_c_riesgo min_celda_riesgo,
            ROUND(a.min_c_riesgo/a.min_sal,4 )ratio_riesgo,
            a.sal_onnet,
            a.sal_offnet,
            a.sal_ldi,
            a.condicion,
            a.Ranking,
            TO_CHAR(a.fecha_proceso,'DD/MM/YYYY'),
            TO_CHAR(a.fecha_carga,'DD/MM/YYYY'),
            a.dias_trafico,
            c.producto equipo,
            DECODE(d.portabilidad,'1','PORTADO','NO PORTADO'),
            c.identificadorconsultor,
            d.canal_de_venta,
            d.socio_negocio,
            d.tienda,
            d.cadena_dealer,
            d.gerencia_territorio,
            d.tipo_tienda
            ,d.gama_equipo
            ,d.rentabasica
            ,d.tipo_renta
            ,d.port_origen
            ,e.numcontratos
            ,CASE WHEN a.celda_max IN (SELECT celda_max FROM
                                            (SELECT celda_max,ROUND(SUM(MIN_SALIENTES),2)
                                             FROM
                                                (select contrato, MIN_SALIENTES,CELDA_MAX, DISP_SALIENTE
                                                    , rank () OVER (PARTITION BY contrato ORDER BY  FECHA_PROCESO DESC) RN
                                                    from pf_ilimitados_historico) A
                                            WHERE RN = 1 AND CELDA_MAX is not null
                                            group by celda_max
                                            ORDER BY ROUND(SUM(MIN_SALIENTES),2) DESC)
                                            WHERE ROWNUM <= 10)
                THEN 'RIESGO' ELSE NULL END CELDA_RIESGO
            , a.limite_destinos
            , a.destinos_base
            , a.llamadas_base
            , a.minutos_base
            , a.destinos_ad
            , a.llamadas_ad
            , a.minutos_ad
            , a.precio_ad
            , a.meses_dest_ad
          FROM PF_ILIMITADOS_METRICAS a
          LEFT JOIN (  SELECT *
                      FROM ( SELECT a.*
                                  , row_number() over (PARTITION BY telefono
                                                           ORDER BY DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC
                                                                  , fechacargacontrato desc) rn
                               FROM fotoequipos a)
                     WHERE rn = 1)  c
          ON a.contrato = c.codigocontratobscs
          LEFT JOIN (
            select  contrato,canal_de_venta,socio_negocio, tienda, cadena_dealer,gerencia_territorio,tipo_tienda,portabilidad
                        , gama_equipo, rentabasica, tipo_renta, modalidad_origen port_origen
                         from tnp_inar_personas_ods
            UNION ALL
            SELECT contrato, canal_venta,dealer,canal,zona_detallada,zona_global,tipo_consultor,portabilidad
                    , gama_equipo, rentabasica, tipo_renta, modalidad_origen
                        from tnp_inar_empresas_ods
            ) d
          ON a.contrato = d.contrato
          LEFT JOIN
          ( select codigocompania, count(distinct codigocontratobscs) numcontratos
                        from fotoequipos
                       where estadocontrato in ('Activo','Suspendido')
                         and product not like '%Pre%'
                    group by codigocompania ) e
          ON c.codigocompania = e.codigocompania
          where TRUNC(a.fecha_proceso) = TRUNC(v_proceso)
          AND a.limite_destinos = 50
          AND a.dest_sal>50;

END ILIMITADOS_OBTENER_DESTAD;

PROCEDURE INSERTAR_TEMPAJUSTESPREPAGO (v_SEQ varchar2,v_DN_NUM varchar2,v_USER_NAME varchar2,v_PROCESS_DATE varchar2,v_BATCH varchar2,v_SEQ_CARD varchar2,v_AMOUNT NUMBER,v_BALANCE_INIT NUMBER,v_BALANCE_END NUMBER,v_TYPE_ADJ varchar2,v_OBSERVATION varchar2,v_CO_ID varchar2,v_SUBBATCH varchar2,v_PERIODO varchar2) AS
BEGIN
INSERT INTO TEMP_AJUSTES_PREPAGO(SEQ,DN_NUM,USER_NAME,PROCESS_DATE,BATCH ,SEQ_CARD,AMOUNT,BALANCE_INIT ,BALANCE_END,TYPE_ADJ,OBSERVATION,CO_ID,SUBBATCH ,PERIODO)
VALUES (v_SEQ ,v_DN_NUM ,v_USER_NAME ,v_PROCESS_DATE ,v_BATCH ,v_SEQ_CARD ,v_AMOUNT ,v_BALANCE_INIT ,v_BALANCE_END ,v_TYPE_ADJ ,v_OBSERVATION ,v_CO_ID ,v_SUBBATCH,V_PERIODO);
  COMMIT;
  DBMS_OUTPUT.Put_Line('ingreso');
END INSERTAR_TEMPAJUSTESPREPAGO;

PROCEDURE VACIAR_TEMPAJUSTESPREPAGO  (v_PERIODO varchar2) AS
BEGIN
DELETE FROM TEMP_AJUSTES_PREPAGO WHERE PERIODO=V_PERIODO;
COMMIT;
END VACIAR_TEMPAJUSTESPREPAGO;

PROCEDURE PROCESAR_TEMPAJUSTESPREPAGO  (v_PERIODO varchar2) AS
BEGIN

  UPDATE TEMP_AJUSTES_PREPAGO SET PERIODO=v_PERIODO WHERE PERIODO IS NULL;
  COMMIT;

MERGE INTO (SELECT * FROM TEMP_AJUSTES_PREPAGO WHERE PERIODO=v_PERIODO) A
  USING (SELECT distinct codigocontratobscs,compania,codigocompania FROM FOTOEQUIPOS) B
  ON (A.CO_ID =B.CODIGOCONTRATOBSCS)
  WHEN MATCHED
  THEN UPDATE
  SET A.RAZONSOCIAL = B.COMPANIA, A.CODIGOCOMPANIA=B.CODIGOCOMPANIA;

delete from TEMP_AJUSTES_PREPAGO where substr(observation,1,1) in ('B','R','S','N');

MERGE INTO (SELECT * FROM TEMP_AJUSTES_PREPAGO WHERE PERIODO=v_PERIODO) A
  USING (select dn_num,ratio,CASE when ratio between 0 and 0.25 then '4' when ratio between 0.25 and 0.5  then '6' when ratio between 0.5 and 0.75 then '8' when ratio between 0.75 and 1 then '10' end clasificador from (
                select a.periodo,a.dn_num,a.cantidad,b.maximo,(a.cantidad/b.maximo) ratio from
                (SELECT to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm') periodo, dn_num,count(1) cantidad FROM TEMP_AJUSTES_PREPAGO WHERE PERIODO=v_PERIODO GROUP BY to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm'), dn_num) a
                left join
                (SELECT periodo,MAX(CANTIDAD) maximo FROM (SELECT to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm') periodo, dn_num,count(1) cantidad FROM TEMP_AJUSTES_PREPAGO WHERE PERIODO=v_PERIODO GROUP BY to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm'), dn_num) group by periodo) b
                on a.periodo=b.periodo
                )) B
  ON (A.dn_num =B.dn_num)
  WHEN MATCHED
  THEN UPDATE
  SET A.factor1 = B.clasificador;

MERGE INTO (SELECT * FROM TEMP_AJUSTES_PREPAGO WHERE PERIODO=v_PERIODO) A
  USING (select dn_num,ratio,CASE when ratio between 0 and 0.25 then '4' when ratio between 0.25 and 0.5  then '6' when ratio between 0.5 and 0.75 then '8' when ratio between 0.75 and 1 then '10' end clasificador from (
                select a.periodo,a.dn_num,a.monto,b.maximo,(a.monto/b.maximo) ratio from
                (SELECT to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm') periodo, dn_num,sum(decode(type_adj,'ANEG',-1,1)*amount) monto FROM TEMP_AJUSTES_PREPAGO WHERE PERIODO=v_PERIODO GROUP BY to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm'), dn_num) a
                left join
                (SELECT periodo,MAX(MONTO) maximo FROM (SELECT to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm') periodo, dn_num,sum(decode(type_adj,'ANEG',-1,1)*amount) monto FROM TEMP_AJUSTES_PREPAGO WHERE PERIODO=v_PERIODO GROUP BY to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm'), dn_num) group by periodo) b
                on a.periodo=b.periodo
                )) B
  ON (A.dn_num =B.dn_num)
  WHEN MATCHED
  THEN UPDATE
  SET A.factor3 = B.clasificador;

  MERGE INTO (SELECT * FROM TEMP_AJUSTES_PREPAGO WHERE PERIODO=v_PERIODO) A
  USING (select seq,'X' as identificador from TEMP_AJUSTES_PREPAGO where INSTR(razonsocial,substr(user_name,2,instr(user_name,'CCP')-3)) >0 and instr(user_name,'CCP')>0 and PERIODO=v_PERIODO
                union all
                select seq,'X' as identificador from TEMP_AJUSTES_PREPAGO where INSTR(razonsocial,substr(user_name,2,length(user_name)-2)) >0 and instr(user_name,'CCP')=0 and PERIODO=v_PERIODO) B
  ON (A.seq =B.seq)
  WHEN MATCHED
  THEN UPDATE
  SET A.factor5_1 = B.identificador;

  MERGE INTO (SELECT * FROM TEMP_AJUSTES_PREPAGO WHERE PERIODO=v_PERIODO) A
  USING (select seq,'X' as identificador from TEMP_AJUSTES_PREPAGO where INSTR(razonsocial,substr(user_name,2,instr(user_name,'CCP')-2)) >0 and instr(user_name,'CCP')>0 and PERIODO=v_PERIODO
                union all
                select seq,'X' as identificador from TEMP_AJUSTES_PREPAGO where INSTR(razonsocial,substr(user_name,2,length(user_name)-1)) >0 and instr(user_name,'CCP')=0 and PERIODO=v_PERIODO) B
  ON (A.seq =B.seq)
  WHEN MATCHED
  THEN UPDATE
  SET A.factor5_2 = B.identificador;

  update TEMP_AJUSTES_PREPAGO set amount=decode(type_adj,'ANEG',-1,1)*amount WHERE PERIODO=v_PERIODO;
  COMMIT;

  UPDATE TEMP_AJUSTES_PREPAGO
  SET UNIDAD_MEDIDA = CASE WHEN MOD(ROUND((BALAnCE_END-BALANCE_INIT),0),1024)=0 THEN 'MB'
                         WHEN MOD(ROUND((BALAnCE_END-BALANCE_INIT),0),60)=0   THEN 'Min' END
  WHERE UNIDAD_MEDIDA IS NULL;
  COMMIT;

  UPDATE TEMP_AJUSTES_PREPAGO
  SET UNIDAD_MEDIDA = 'Soles'
  WHERE UNIDAD_MEDIDA IS NULL;
  COMMIT;

  merge into
  (
  select to_number(co_id) as codigocontratobscs,plan_tarif as plantarifario,product,rta_bas as rentabasica from TEMP_AJUSTES_PREPAGO where plan_tarif is null
  ) A
  using (
  select codigocontratobscs,plantarifario,product,rentabasica from fotoequipos
  ) B
  on (a.codigocontratobscs=b.codigocontratobscs)
  WHEN MATCHED THEN
  UPDATE set a.plantarifario=b.plantarifario , a.product=b.product, a.rentabasica=b.rentabasica;
  commit;
END PROCESAR_TEMPAJUSTESPREPAGO;

PROCEDURE BAFI_RESUMEN_CELDA(V_FECHA DATE) IS
BEGIN
    DELETE FROM PF_HOGAR_DATOS_RES_CELDA WHERE fecha_proceso = TRUNC(V_FECHA);

    INSERT INTO PF_HOGAR_DATOS_RES_CELDA
    SELECT TRUNC(V_FECHA) fecha_proceso
         , a.telefono
         , a.contrato
         , F.plantarifario
         , F.codigoplantarifariobscs
         , F.fechaactivacioncontrato
         , F.ciclofacturacioncontrato
         , a.dias_trafico
         , a.dias_m3celdas
         , a.max_celdas_dia
         , a.min_celdas_dia
         , a.gb_3d
      FROM
            (SELECT A.telefono
                 , A.contrato
                 , count(1) dias_trafico
                 , sum(GB_dia) gb_3d
                 , SUM(CASE WHEN A.celdas_dia>3 THEN 1 ELSE 0 END) dias_m3celdas
                 , MAX(A.celdas_dia) max_celdas_dia
                 , MIN(A.celdas_dia) min_celdas_dia
              FROM
               (    SELECT fecproceso
                         , a.telefono, a.contrato
                         , SUM(ROUND(KB/(1024*1024),4)) GB_dia
                         , COUNT(DISTINCT obtener_codnodo(codcelda)) celdas_dia
                      FROM PF_HOGAR_DATOS a
                      LEFT JOIN p_datafill_site B
                        ON obtener_codnodo(A.codcelda) = B.site_id
                     WHERE fecproceso >= TO_CHAR(V_FECHA-2,'YYYYMMDD')
                       AND fecproceso <= TO_CHAR(V_FECHA,'YYYYMMDD')
                     GROUP BY fecproceso
                         , a.telefono, a.contrato
                 ) A
            GROUP BY A.telefono, A.contrato
            HAVING SUM(CASE WHEN A.celdas_dia>3 THEN 1 ELSE 0 END)>= 3 ) A
     LEFT JOIN p_fotoequiposmesanterior F
       ON A.contrato = F.codigocontratobscs;

    COMMIT;

END BAFI_RESUMEN_CELDA;

PROCEDURE BAFI_RESUMEN_MES(p_periodo varchar2)
as
BEGIN
DELETE FROM PF_HOGAR_DATOS_RESUMEN WHERE PERIODO=p_periodo;
COMMIT;
INSERT INTO PF_HOGAR_DATOS_RESUMEN(PERIODO ,TELEFONO ,CONTRATO ,PLANTARIFARIO ,CODIGOPLANTARIFARIOBSCS ,FECHAACTIVACIONCONTRATO ,REGION_FOTO ,CICLOFACTURACIONCONTRATO ,GB ,DURACION ,GB_LIMACALLAO ,GB_PROVINCIA ,PORC_LIMACALLAO ,PORC_PROVINCIA ,DIAS_TRAFICO ,MBPS_AVG ,MBPS_MIN ,MBPS_MAX ,CELDAS ,CELDA_MAX ,GB_CELDA ,PORC_CELDA ,GB_CELDA2 ,PORC_CELDA2 )
SELECT A.periodo
     , A.telefono
     , A.contrato
     , F.plantarifario
     , F.codigoplantarifariobscs
     , F.fechaactivacioncontrato
     , F.region region_foto
     , F.ciclofacturacioncontrato
     , A.gb
     , A.duracion
     , A.gb_limacallao
     , A.gb_provincia
     , ROUND(NULLIF(A.gb_limacallao/A.gb,0),4) porc_limacallao
     , ROUND(NULLIF(A.gb_provincia/A.gb,0),4) porc_provincia
     , A.dias_trafico
     , A.mbps_avg
     , A.mbps_min
     , A.mbps_max
     , A.celdas
     , B.celda_max
     , B.GB_CELDA
     , ROUND(NULLIF(B.GB_CELDA/A.GB,0),2)porc_celda
     , B2.GB_CELDA2
     , ROUND(NULLIF(B2.GB_CELDA2/A.GB,0),2)porc_celda2
  FROM (SELECT NVL(obtener_periodo_fact_actual(CICLO,TO_DATE(fecproceso,'YYYYMMDD')), SUBSTR(fecproceso,1,6)) periodo
             , a.telefono, a.contrato
             , SUM(ROUND(KB/(1024*1024),4)) GB
             , ROUND(sum(DECODE(B.departamento,'LIMA',KB,'CALLAO',KB,0))/(1024*1024),4) GB_LIMACALLAO
             , ROUND(sum(DECODE(B.departamento,'LIMA',0,'CALLAO',0,KB))/(1024*1024),4) GB_PROVINCIA
             , SUM(duracion) duracion
             , ROUND(MIN(mbps_min),4) mbps_min
             , ROUND(MAX(mbps_max),4) mbps_max
             , ROUND(SUM((kb/1024)*8)/SUM(duracion),4) mbps_avg
             , COUNT(DISTINCT obtener_codnodo(codcelda)) celdas
             , COUNT(DISTINCT fecproceso) dias_trafico
          FROM PF_HOGAR_DATOS a
          LEFT JOIN p_datafill_site B
            ON obtener_codnodo(A.codcelda) = B.site_id
          WHERE NVL(periodo_facturacion, SUBSTR(fecproceso,1,6)) = p_periodo
         GROUP BY NVL(obtener_periodo_fact_actual(CICLO,TO_DATE(fecproceso,'YYYYMMDD')), SUBSTR(fecproceso,1,6))
             , a.telefono, a.contrato
          HAVING SUM(ROUND(KB/(1024*1024),4))>0 ) A
LEFT JOIN
        (SELECT * FROM
                (SELECT telefono, contrato
                     , NVL(SUBSTR(site_name,INSTR(site_name,'_')+1,100), obtener_codnodo(codcelda))celda_max
                     , SUM(ROUND(KB/(1024*1024),4)) GB_CELDA
                     , row_number() OVER (PARTITION BY telefono ORDER BY NVL(sum(KB),0) DESC) RN
                FROM PF_HOGAR_DATOS A
                LEFT JOIN p_datafill_site B
                ON obtener_codnodo(A.codcelda) = B.site_id
                WHERE NVL(periodo_facturacion, SUBSTR(fecproceso,1,6)) = p_periodo
                GROUP BY telefono, contrato, NVL(SUBSTR(site_name,INSTR(site_name,'_')+1,100), obtener_codnodo(codcelda)) )
          WHERE RN = 1) B
ON A.telefono = B.telefono AND A.contrato = B.contrato
LEFT JOIN (    SELECT telefono, contrato , sum(GB_CELDA) GB_CELDA2 FROM
                (SELECT telefono, contrato
                     , NVL(SUBSTR(site_name,INSTR(site_name,'_')+1,100), obtener_codnodo(codcelda))celda_max
                     , SUM(ROUND(KB/(1024*1024),4)) GB_CELDA
                     , row_number() OVER (PARTITION BY telefono ORDER BY NVL(sum(KB),0) DESC) RN
                FROM PF_HOGAR_DATOS A
                LEFT JOIN p_datafill_site B
                ON obtener_codnodo(A.codcelda) = B.site_id
                WHERE NVL(periodo_facturacion, SUBSTR(fecproceso,1,6)) = p_periodo
                GROUP BY telefono, contrato, NVL(SUBSTR(b.site_name,INSTR(b.site_name,'_')+1,100), obtener_codnodo(codcelda)) )
          WHERE RN <= 2
    GROUP BY telefono, contrato) B2
ON A.telefono = B2.telefono AND A.contrato = B2.contrato
LEFT JOIN fotoequipos F
ON A.contrato = F.codigocontratobscs;
COMMIT;
END BAFI_RESUMEN_MES;

PROCEDURE PF_INAR_BAFI_RESUMEN(P_PERIODO VARCHAR2)
AS
BEGIN
DELETE FROM PF_INAR_BAFI WHERE PERIODO=P_PERIODO;
COMMIT;

INSERT INTO PF_INAR_BAFI(TELEFONO ,CONTRATO ,C_PLAN ,N_PLAN ,FECHAACTIVACION ,RUCCOMPANIA ,T0_D15 ,ESTADO_T0,PERIODO )
SELECT a.telefono
     , a.contrato
     , a.c_plan
     , a.n_plan
     , a.fechaactivacion
     , a.ruccompania
     , DECODE(b.contrato,NULL,'T0','Realizó tráfico') T0_d15
     , CASE WHEN a.fechaactivacion + 14 > (SYSDATE-5) THEN 'No cerrado' END estado_t0
     , a.periodo
 FROM
        (SELECT * FROM p_inar
          WHERE tipo IN ( 'Internet Hogar Post', 'Internet Hogar')
            AND estadoinar IN ('ADDS','NEWS') AND PERIODO=P_PERIODO) A
LEFT JOIN ( SELECT a.contrato , sum(kb)/(1024) MB
              FROM PF_HOGAR_DATOS A
              LEFT JOIN p_inar B
                ON a.contrato = b.contrato
             WHERE TO_DATE(fecproceso,'YYYYMMDD') BETWEEN
                b.fechaactivacion AND b.fechaactivacion + 14
             AND estadoinar IN ('ADDS','NEWS')
                GROUP BY a.contrato
                HAVING SUM(kb)/(1024)>=5  ) B
ON a.contrato = b.contrato;
COMMIT;
END PF_INAR_BAFI_RESUMEN;

PROCEDURE RFT_PREPAGO_RESULTADO(pcursor OUT t_cursor, V_PERIODO VARCHAR2) IS
BEGIN
    OPEN pcursor FOR
            SELECT base.periodo, base.c_contrato, base.n_plan, base.estadoinar, base.product,
               base.model_f, base.jer_canalventa, base.jer_territorio,
               base.terminal_nombreequipo, base.cantidadrecargas, base.montorecargas,
               base.rec_qrec7, base.rec_monto7, base.rec_qrec15, base.rec_monto15
             , RFT_15
             , RFT_30
             , tipo_telefono_trafico
             , telefono_trafico
             , c_plan_tel_trafico
             , plantarifario_tel_trafico
             , tipodoc_tel_trafico
             , product_tel_trafico
          FROM pf_rft_mercado_prepago_base base
          LEFT JOIN(SELECT t.contrato
                         , DECODE(t.telefono_trafico, t.telefono_inar,'Mismo teléfono', NULL, 'No encontrado', 'Otro teléfono') tipo_telefono_trafico
                         , t.telefono_trafico
                         , codigoplantarifariobscs C_PLAN_TEL_trafico
                         , plantarifario PLANTARIFARIO_TEL_trafico
                         , obtener_tipodoc(f.ruccompania) TIPODOC_TEL_trafico
                         , product PRODUCT_TEL_trafico
                      FROM
                    (   SELECT periodo, fecha_activacion, tipo_doc, contrato, imei, telefono_inar, telefono_trafico
                             , row_number() over(PARTITION BY contrato ORDER BY fecha_trafico) rn
                          FROM pf_t0_imei_detalle_prepago
                         WHERE periodo = V_PERIODO AND trafico = 1
                    ) T
                    LEFT JOIN (SELECT *
                                  FROM ( SELECT a.*
                                              , row_number() over (PARTITION BY telefono
                                                                       ORDER BY DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC
                                                                              , fechacargacontrato desc) rn
                                           FROM p_fotoequipos_historico   a
                                          WHERE periodo = V_PERIODO  )
                                 WHERE rn = 1) F
                     ON t.telefono_trafico = '51'||f.telefono
                    WHERE T.RN = 1) tel
        ON base.c_contrato = tel.contrato
        LEFT JOIN
                (SELECT contrato, DECODE(trafico,1,'Con tráfico',0,'RFT','No analizado') RFT_15
                  FROM pf_t0_imei_detalle_prepago
                 WHERE periodo = V_PERIODO
                   AND fecha_trafico = to_char(fecha_Activacion,'yyyymmdd')+14 ) RFT_15
          ON base.c_contrato = RFT_15.contrato
        LEFT JOIN
                (SELECT contrato, DECODE(trafico,1,'Con tráfico',0,'RFT','No analizado') RFT_30
                  FROM pf_t0_imei_detalle_prepago
                 WHERE periodo = V_PERIODO
                   AND fecha_trafico = to_char(fecha_Activacion,'yyyymmdd')+29) RFT_30
          ON base.c_contrato = RFT_30.contrato;


END RFT_PREPAGO_RESULTADO;


PROCEDURE ILIMITADOS_GENERAR_REPORTE_DIA (V_FECHA DATE, REP NUMBER) IS
c_part number;

BEGIN

    --GENERAR CELDAS DE RIESGO (EN BASE AL MES ANTERIOR Y MES EN CURSO)
    DELETE FROM pf_ilimitados_nodo_riesgo;
    COMMIT;

    INSERT INTO pf_ilimitados_nodo_riesgo
    SELECT * FROM
    (SELECT periodo, nodo_max, count(1) casos, SUM(min_sal) minutos
      FROM pf_ilimitados_mes_metricas
     WHERE periodo IN (TO_CHAR(ADD_MONTHS(V_FECHA,-1),'YYYYMM'), TO_CHAR(V_FECHA,'YYYYMM') )
       AND ALERTA LIKE 'ALERTA%'
       AND nodo_max IS NOT NULL
     GROUP BY nodo_max, periodo
     ORDER BY SUM(min_sal) DESC, count(1) DESC )
    WHERE ROWNUM<=10;
    COMMIT;

    --CARGAR TABLA DE TRÁFICO ILIMITADOS
    IF REP = 0 THEN
        BEGIN PAQUETE_FRAUDES.ILIMITADOS_DESCARGAR_TRAFICO(V_FECHA-2); END;
        BEGIN PAQUETE_FRAUDES.ILIMITADOS_DESCARGAR_TRAFICO(V_FECHA-1); END;
        BEGIN PAQUETE_FRAUDES.ILIMITADOS_DESCARGAR_TRAFICO(V_FECHA); END;
    END IF;

    --MÉTRICAS
    DELETE FROM pf_ilimitados_mes_metricas
     WHERE periodo = TO_CHAR(V_FECHA, 'YYYYMM');

    INSERT /*+APPEND*/ INTO pf_ilimitados_mes_metricas(periodo, contrato, ciclo, c_plan, n_plan, telefono,
                                                       fechaactivacioncontrato, ruccompania, codigocompania,
                                                       fecha_min_trafico, fecha_max_trafico, min_sal, llam_sal,
                                                       dest_sal, disp_sal, min_ent, llam_ent, min_123,
                                                       llam_123, cant_nodos, nodo_max, porc_nodo_max,
                                                       min_nod_riesgo, rat_nod_riesgo, alerta, min_sal_onnet,
                                                       min_sal_offnet, min_sal_ldi, ll_sal_onnet, ll_sal_offnet,
                                                       ll_sal_ldi, dest_sal_onnet, dest_sal_offnet,
                                                       dest_sal_ldi, dias_trafico, dias, fecha_ini,
                                                       fecha_proceso, fecha_carga, tipo_venta, mou, estado_mou)
            SELECT /*+PARALLEL(4)*/
                   base.periodo
                 , base.contrato
                 , base.ciclo
                 , base.c_plan
                 , base.n_plan
                 , base.telefono
                 , foto.fechaactivacioncontrato
                 , foto.ruccompania
                 , foto.codigocompania
                 , base.FECHA_MIN_TRAFICO
                 , base.FECHA_MAX_TRAFICO
                 , ROUND(NVL(b.MIN_SAL,0),2) min_sal
                 , NVL(b.LLAM_SAL,0) LLAM_SAL
                 , NVL(b.DEST_SAL,0) DEST_SAL
                 , ROUND((b.DEST_SAL/DECODE(NVL(b.LLAM_SAL,0),0,0.001,b.LLAM_SAL)),4) DISP_SAL
                 , ROUND(base.MIN_ENT,2) MIN_ENT
                 , base.LLAM_ENT
                 , ROUND(base.MIN_123,2) MIN_123
                 , base.LLAM_123
                 , b.C_CELDAS cant_celdas
                 , e.nodo celda_max
                 , ROUND(e.MAX_MIN_CELDA /DECODE(NVL(b.MIN_SAL,0),0,0.001,b.MIN_SAL) ,3) PORC_CELDA_max
                 , ROUND(b.MIN_C_RIESGO,2) MIN_CEL_RIESGO
                 , ROUND(b.MIN_C_RIESGO /DECODE(NVL(b.MIN_SAL,0),0,0.001,b.MIN_SAL) ,3) RAT_CEL_RIESGO
                 ,  CASE WHEN (     b.MIN_SAL> base.MOU
                               AND (b.DEST_SAL/DECODE(NVL(b.LLAM_SAL,0),0,0.001,b.LLAM_SAL)) >= 0.75
                               AND (e.MAX_MIN_CELDA /DECODE(NVL(b.MIN_SAL,0),0,0.001,b.MIN_SAL)) >= 0.5
                               AND base.MIN_ENT/(base.MIN_ENT + b.MIN_SAL) <= 0.05
                               AND b.dias_trafico < 16
                             ) THEN 'ALERTA 4'
                        WHEN (     b.MIN_SAL> base.MOU
                               AND (b.DEST_SAL/DECODE(NVL(b.LLAM_SAL,0),0,0.001,b.LLAM_SAL)) >= 0.75
                               AND (e.MAX_MIN_CELDA /DECODE(NVL(b.MIN_SAL,0),0,0.001,b.MIN_SAL)) >= 0.5
                               AND base.MIN_ENT/(base.MIN_ENT + b.MIN_SAL) <= 0.05
                             ) THEN 'ALERTA 3'
                        WHEN (     b.MIN_SAL> base.MOU
                               AND (b.DEST_SAL/DECODE(NVL(b.LLAM_SAL,0),0,0.001,b.LLAM_SAL)) >= 0.75
                               AND (e.MAX_MIN_CELDA /DECODE(NVL(b.MIN_SAL,0),0,0.001,b.MIN_SAL)) >= 0.5
                             ) THEN 'ALERTA 2'
                        WHEN (     b.MIN_SAL> base.MOU
                               AND (b.DEST_SAL/DECODE(NVL(b.LLAM_SAL,0),0,0.001,b.LLAM_SAL)) >= 0.75
                             ) THEN 'ALERTA 1'
                       ELSE NULL
                       END ALERTA
                 , ROUND(b.MIN_SAL_ONNET,2) MIN_SAL_ONNET
                 , ROUND(b.MIN_SAL_OFFNET,2) MIN_SAL_OFFNET
                 , ROUND(b.MIN_SAL_LDI,2) MIN_SAL_LDI
                 , b.LL_SAL_ONNET
                 , b.LL_SAL_OFFNET
                 , b.LL_SAL_LDI
                 , b.DEST_ONNET DEST_SAL_ONNET
                 , b.DEST_OFFNET DEST_SAL_OFFNET
                 , b.DEST_LDI DEST_SAL_LDI
                 , b.dias_trafico
                 , TO_CHAR(V_FECHA,'dd') DIAS
                 , TRUNC(V_FECHA,'mm') FECHA_INI
                 , TRUNC(V_FECHA) fecha_proceso
                 , SYSDATE fecha_carga
                 , base.tipo_venta
                 , base.mou
                 , CASE WHEN NVL(b.MIN_SAL,0) > base.mou THEN 'Supero MOU'
                        ELSE 'No supera MOU' END ESTADO_MOU
              FROM
            (--BASE DE CLIENTES CON TRÁFICO
              SELECT /*+PARALLEL(4)*/ TO_CHAR(X.FECHA, 'YYYYMM') periodo
                   , X.contrato
                   , X.ciclo
                   , X.c_plan
                   , PL.nombre n_plan
                   , X.servedmsisdn telefono
                   , NVL(NVL(tnp_per.t_venta,tnp_emp.t_venta),'CDP') tipo_venta
                   , DECODE(NVL(NVL(tnp_per.t_venta,tnp_emp.t_venta),'CDP')
                                , 'Portabilidad', pl.mou_porta, mou_venta) MOU
                   , MIN(FECHA) FECHA_MIN_TRAFICO
                   , MAX(FECHA) FECHA_MAX_TRAFICO
                   , SUM(llamadas) llamadas
                   , SUM(DECODE(recordtype,'1',llamadas,0)) LLAM_ENT
                   , SUM(DECODE(recordtype,'1',callDuration,0))/60 MIN_ENT
                   , SUM(DECODE(callednumbercdr,'123',llamadas,0)+DECODE(callingnumbercdr,'123',llamadas,0)) LLAM_123
                   , SUM(DECODE(callednumbercdr,'123',callDuration,0)+DECODE(callingnumbercdr,'123',callDuration,0))/60 MIN_123
                FROM ( SELECT *
                         FROM pf_ilimitados_trafico
                        WHERE FECHA >= TRUNC(V_FECHA,'mm')
                          AND FECHA <  TRUNC(V_FECHA)+1 ) X
                LEFT JOIN pf_ilimitados_planes PL
                  ON X.c_plan = PL.c_plan
                LEFT JOIN (SELECT contrato, DECODE(portabilidad,1,'Portabilidad','Venta') t_venta,fechaactivacion FROM tnp_inar_personas_ods) tnp_per
                  ON X.contrato = tnp_per.contrato
                LEFT JOIN (SELECT contrato, DECODE(portabilidad,1,'Portabilidad','Venta') t_venta, fechaactivacion FROM tnp_inar_empresas_ods) tnp_emp
                  ON X.contrato = tnp_emp.contrato
               GROUP BY TO_CHAR(X.FECHA, 'YYYYMM')
                   , X.contrato
                   , X.ciclo
                   , X.c_plan
                   , PL.nombre
                   , X.servedmsisdn
                   , NVL(NVL(tnp_per.t_venta,tnp_emp.t_venta),'CDP')
                   , DECODE(NVL(NVL(tnp_per.t_venta,tnp_emp.t_venta),'CDP')
                                , 'Portabilidad', pl.mou_porta, mou_venta)  ) base
             LEFT JOIN
              (--SALIENTES
              SELECT /*+PARALLEL(4)*/ contrato
                   , SUM(llamadas) LLAM_SAL
                   , SUM(callDuration)/60 MIN_SAL
                   , COUNT (DISTINCT DECODE(tipo_destino,'LDI',callingnumbercdr,substr(calledNumberCDR,-9)) ) DEST_SAL
                   , COUNT(DISTINCT nodo) C_CELDAS
                   , SUM(CASE WHEN nodo IN (SELECT nodo_max FROM pf_ilimitados_nodo_riesgo)
                              THEN CALLDURATION ELSE 0 END)/60 MIN_C_RIESGO
                   , COUNT(distinct fecha) dias_trafico

                   , SUM( CASE tipo_destino WHEN 'ONNET' THEN callDuration ELSE 0 END ) /60 MIN_SAL_ONNET
                   , SUM( CASE tipo_destino WHEN 'OFFNET' THEN callDuration ELSE 0 END ) /60 MIN_SAL_OFFNET
                   , SUM( CASE tipo_destino WHEN 'LDI' THEN callDuration ELSE 0 END ) /60 MIN_SAL_LDI

                   , SUM( CASE tipo_destino WHEN 'ONNET' THEN llamadas ELSE 0 END )  LL_SAL_ONNET
                   , SUM( CASE tipo_destino WHEN 'OFFNET' THEN llamadas ELSE 0 END ) LL_SAL_OFFNET
                   , SUM( CASE tipo_destino WHEN 'LDI' THEN llamadas ELSE 0 END )  LL_SAL_LDI

                   , COUNT(DISTINCT CASE tipo_destino WHEN 'ONNET' THEN callednumbercdr END) DEST_ONNET
                   , COUNT(DISTINCT CASE tipo_destino WHEN 'OFFNET' THEN callednumbercdr END) DEST_OFFNET
                   , COUNT(DISTINCT CASE tipo_destino WHEN 'LDI' THEN callednumbercdr END) DEST_LDI
               FROM pf_ilimitados_trafico
              WHERE recordtype = '0'
                AND FECHA >= TRUNC(V_FECHA,'mm')
                AND FECHA < TRUNC(V_FECHA)+1
              GROUP BY contrato ) b
             ON base.contrato=b.contrato
             LEFT JOIN
              (--MINUTOS POR NODO
                     SELECT a.contrato
                          , a.nodo
                          , a.MAX_MIN_CELDA
                      FROM  (SELECT contrato
                                  , nodo
                                  , SUM (callDuration)/60  MAX_MIN_CELDA
                                  , ROW_NUMBER() OVER (PARTITION BY contrato ORDER BY SUM (callDuration)/60  DESC) as RN
                               FROM pf_ilimitados_trafico
                              WHERE recordtype = '0'
                                AND FECHA >= TRUNC(V_FECHA,'mm')
                                AND FECHA < TRUNC(V_FECHA)+1
                              GROUP BY contrato
                                     , nodo) a
                      WHERE RN=1
              )e
              ON base.contrato=e.contrato
             LEFT JOIN fotoequipos foto
              ON base.contrato = foto.codigocontratobscs;


    COMMIT;

    ---GUARDAR HISOTRIAL
    DELETE FROM pf_ilimitados_mes_alertas WHERE TRUNC(FECHA_PROCESO) = TRUNC(V_FECHA);
    INSERT /*+APPEND*/ INTO pf_ilimitados_mes_alertas
        SELECT periodo, contrato, ciclo, c_plan, n_plan, telefono,
               fechaactivacioncontrato, ruccompania, codigocompania,
               fecha_min_trafico, fecha_max_trafico, min_sal, llam_sal,
               dest_sal, disp_sal, min_ent, llam_ent, min_123,
               llam_123, cant_nodos, nodo_max, porc_nodo_max,
               min_nod_riesgo, rat_nod_riesgo, alerta, min_sal_onnet,
               min_sal_offnet, min_sal_ldi, ll_sal_onnet, ll_sal_offnet,
               ll_sal_ldi, dest_sal_onnet, dest_sal_offnet,
               dest_sal_ldi, dias_trafico, dias, fecha_ini,
               fecha_proceso, fecha_carga, tipo_venta, mou, estado_mou
          FROM pf_ilimitados_mes_metricas a
         WHERE TRUNC(FECHA_PROCESO) = TRUNC(V_FECHA)
           AND ALERTA IS NOT NULL;

    COMMIT;

END ILIMITADOS_GENERAR_REPORTE_DIA;


PROCEDURE ILIMITADOS_GENERAR_REPORTE_MES (V_PERIODO VARCHAR2) IS
V_COSTO_RED_VOZ NUMBER;
V_COSTO_RED_DATOS NUMBER;
V_GASTOS_ADM NUMBER;
V_GASTOS_MANT NUMBER;
V_GASTOS_INCOBR NUMBER;
BEGIN

    --VARIABLES DE COSTOS
    SELECT costo_soles INTO V_COSTO_RED_VOZ
      FROM (SELECT *
              FROM pf_rentabilidad
             WHERE descripcion = 'COSTO_RED_VOZ'
               AND TO_CHAR(inicio_vigencia,'YYYYMM') <= V_PERIODO
             ORDER BY inicio_vigencia DESC) a
      WHERE ROWNUM = 1;

    SELECT costo_soles INTO V_COSTO_RED_DATOS
      FROM (SELECT *
              FROM pf_rentabilidad
             WHERE descripcion = 'COSTO_RED_DATOS'
               AND TO_CHAR(inicio_vigencia,'YYYYMM') <= V_PERIODO
             ORDER BY inicio_vigencia DESC) a
      WHERE ROWNUM = 1;

    SELECT costo_soles INTO V_GASTOS_ADM
      FROM (SELECT *
              FROM pf_rentabilidad
             WHERE descripcion = 'GASTOS_ADM'
               AND TO_CHAR(inicio_vigencia,'YYYYMM') <= V_PERIODO
             ORDER BY inicio_vigencia DESC) a
      WHERE ROWNUM = 1;

    SELECT costo_soles INTO V_GASTOS_MANT
      FROM (SELECT *
              FROM pf_rentabilidad
             WHERE descripcion = 'GASTOS_MANT'
               AND TO_CHAR(inicio_vigencia,'YYYYMM') <= V_PERIODO
             ORDER BY inicio_vigencia DESC) a
      WHERE ROWNUM = 1;

    SELECT costo_soles INTO V_GASTOS_INCOBR
      FROM (SELECT *
              FROM pf_rentabilidad
             WHERE descripcion = 'GASTOS_INCOBR'
               AND TO_CHAR(inicio_vigencia,'YYYYMM') <= V_PERIODO
             ORDER BY inicio_vigencia DESC) a
      WHERE ROWNUM = 1;


    --DATOS (VOLUMEN Y COSTOS)
    MERGE INTO (SELECT * FROM pf_ilimitados_mes_metricas WHERE PERIODO = V_PERIODO) BASE
    USING (/*SELECT contrato, telefono, ROUND(kb_tot/1024,2) MB_TOT,
            ROUND( (kb_tot-(KB_S_111_GSM+KB_S_111_3G+KB_S_111_4G+KB_S_113_GSM+KB_S_113_3G
                    +KB_S_113_4G+KB_D_112_3G+KB_D_112_GSM+KB_D_112_4G+KB_D_150_3G
                    +KB_D_150_GSM+KB_D_150_4G+KB_D_200_3G+KB_D_200_GSM+KB_D_200_4G
                    +KB_D_300_3G+KB_D_300_GSM+KB_D_300_4G+KB_D_400_3G+KB_D_400_GSM
                    +KB_D_400_4G+KB_D_117_3G+KB_D_117_GSM+KB_D_117_4G ))/1024,2) MB_NO_OTT,
            ROUND((KB_S_111_GSM+KB_S_111_3G+KB_S_111_4G+KB_S_113_GSM+KB_S_113_3G
            +KB_S_113_4G+KB_D_112_3G+KB_D_112_GSM+KB_D_112_4G+KB_D_150_3G
            +KB_D_150_GSM+KB_D_150_4G+KB_D_200_3G+KB_D_200_GSM+KB_D_200_4G
            +KB_D_300_3G+KB_D_300_GSM+KB_D_300_4G+KB_D_400_3G+KB_D_400_GSM
            +KB_D_400_4G+KB_D_117_3G+KB_D_117_GSM+KB_D_117_4G )/1024,2) MB_OTT
      FROM p_trafico_navegacion
     WHERE PERIODO = V_PERIODO*/
            SELECT contrato, telefono
                 , ROUND(SUM(NVL(ilimitado_kb_2g,0)+NVL(ilimitado_kb_3g,0)+NVL(ilimitado_kb_4g,0)
                            +NVL(cobrable_kb_2g,0)+NVL(cobrable_kb_3g,0)+NVL(cobrable_kb_4g,0))/1024,2) MB_TOT
               --  , NULL MB_OTT
               --  , NULL MB_OTT
              FROM p_trafico_internet
             WHERE PERIODO = V_PERIODO
             GROUP BY contrato, telefono
           ) DAT
        ON (BASE.TELEFONO = DAT.TELEFONO AND BASE.CONTRATO = DAT.CONTRATO)
      WHEN MATCHED THEN UPDATE SET    BASE.mb_total = DAT.MB_TOT
                                --    , BASE.mb_ott = DAT.MB_OTT
                                --    , BASE.mb_no_ott = DAT.MB_NO_OTT
                                    , BASE.costo_red_datos = ROUND(DAT.MB_TOT*V_COSTO_RED_DATOS*(-1),2);
    COMMIT;


    MERGE INTO (SELECT * FROM pf_ilimitados_mes_metricas WHERE PERIODO = V_PERIODO) BASE
    USING ( SELECT contrato
                  , ingreso_ix_usd *((tc_compra+tc_venta)/2) ingreso_ix
                  , costo_ix_usd*((tc_compra+tc_venta)/2) costo_ix
                  , ROUND(ingreso_recargas/1.18) ingreso_recargas
               FROM pe_ingresos_usuario i
               LEFT JOIN tipo_cambio c
                 ON i.periodo = c.periodo
              WHERE i.periodo = V_PERIODO ) ING
      ON (TO_CHAR(BASE.CONTRATO) = ING.CONTRATO)
    WHEN MATCHED THEN UPDATE SET   BASE.ingreso_ix = ING.ingreso_ix
                                 , BASE.ingreso_recargas = ING.ingreso_recargas
                                 , BASE.costo_ix_voz = ING.costo_ix;
    COMMIT;

    MERGE INTO (SELECT * FROM pf_ilimitados_mes_metricas WHERE PERIODO = V_PERIODO) BASE
    USING pm_planes PL
      ON (BASE.c_plan = PL.c_plan)
    WHEN MATCHED THEN UPDATE SET BASE.RTABASIC = PL.rtabasic;


    UPDATE pf_ilimitados_mes_metricas
       SET costo_red_voz = (-1) * V_COSTO_RED_VOZ * (min_sal+min_ent)
         , gastos_adm = (-1) * V_GASTOS_ADM
         , gastos_mant = (-1) * V_GASTOS_MANT
         , gastos_incobr = (-1) * V_GASTOS_INCOBR
         , rentabilidad = NVL(rtabasic,0)+NVL(ingreso_ix,0)+NVL(ingreso_recargas,0)
                          +NVL(costo_ix_voz,0)+NVL(costo_red_datos,0)+NVL(costo_red_voz,0)
                          +NVL(gastos_adm,0)+NVL(gastos_mant,0)+NVL(gastos_incobr,0)
         , estado_rentababilidad = CASE WHEN NVL(rtabasic,0)+NVL(ingreso_ix,0)+NVL(ingreso_recargas,0)
                                      +NVL(costo_ix_voz,0)+NVL(costo_red_datos,0)+NVL(costo_red_voz,0)
                                      +NVL(gastos_adm,0)+NVL(gastos_mant,0)+NVL(gastos_incobr,0) >= 0 THEN 'Rentable'
                                      ELSE 'No rentable' END
     WHERE PERIODO = V_PERIODO;

    COMMIT;


    --RENTABILIDAD DE MESES PASADOS
    MERGE INTO (SELECT * FROM pf_ilimitados_mes_metricas WHERE PERIODO = V_PERIODO) BASE
    USING (SELECT *
             FROM pf_ilimitados_mes_metricas
            WHERE PERIODO = TO_CHAR(ADD_MONTHS(TO_DATE(V_PERIODO,'YYYYMM'),-1),'YYYYMM') ) M1
      ON (BASE.contrato = M1.contrato
      AND base.telefono = m1.telefono
      AND base.c_plan = m1.c_plan
      AND base.ciclo = m1.ciclo)
    WHEN MATCHED THEN UPDATE SET BASE.rentabilidad_m1 = M1.rentabilidad;

    MERGE INTO (SELECT * FROM pf_ilimitados_mes_metricas WHERE PERIODO = V_PERIODO) BASE
        USING (SELECT *
                 FROM pf_ilimitados_mes_metricas
                WHERE PERIODO = TO_CHAR(ADD_MONTHS(TO_DATE(V_PERIODO,'YYYYMM'),-2),'YYYYMM') ) M2
          ON (BASE.contrato = M2.contrato
          AND base.telefono = m2.telefono
          AND base.c_plan = m2.c_plan
          AND base.ciclo = m2.ciclo)
        WHEN MATCHED THEN UPDATE SET BASE.rentabilidad_m2 = M2.rentabilidad;

    MERGE INTO (SELECT * FROM pf_ilimitados_mes_metricas WHERE PERIODO = V_PERIODO) BASE
        USING (SELECT *
                 FROM pf_ilimitados_mes_metricas
                WHERE PERIODO = TO_CHAR(ADD_MONTHS(TO_DATE(V_PERIODO,'YYYYMM'),-3),'YYYYMM') ) M3
          ON (BASE.contrato = M3.contrato
          AND base.telefono = m3.telefono
          AND base.c_plan = m3.c_plan
          AND base.ciclo = m3.ciclo)
        WHEN MATCHED THEN UPDATE SET BASE.rentabilidad_m3 = M3.rentabilidad;
    COMMIT;

END ILIMITADOS_GENERAR_REPORTE_MES;

PROCEDURE ILIMITADOS_OBTENER_ALERTAS_DIA(vfecha varchar2,pcursor  OUT t_cursor) AS
    v_proceso date := TRUNC(to_date(vfecha,'DD/MM/YYYY'));
BEGIN
 OPEN pcursor FOR
    SELECT TO_CHAR(SYSDATE,'DD/MM/YYYY') fec_registro
         , c.razonsocial
         , a.telefono
         , 'Móvil local' tipo_servicio
         , obtener_tipodoc_2(a.ruccompania) tipo_doc
         , a.ruccompania
         , 'UI_LOCAL_'||TO_CHAR(SYSDATE,'YYYYMMDD') desc_ui
         , f.numerocuentaresponsable
         , c.direccion
         , a.contrato
         , a.n_plan
         , a.dias
         , TO_CHAR(a.fecha_ini,'DD/MM/YYYY')
         , TO_CHAR(a.fecha_proceso,'DD/MM/YYYY')
         , a.dias_trafico
         , 'Móvil local' caso_ui
         , (min_sal_onnet+ min_sal_offnet) min_loc
         , ROUND((min_sal_onnet+ min_sal_offnet)/NULLIF(a.dias_trafico,0),2) prom_min_dia
         , (ll_sal_onnet+ ll_sal_offnet) llam_loc
         , ROUND((ll_sal_onnet+ ll_sal_offnet)/NULLIF(a.dias_trafico,0),2) prom_llam_dia
         , (a.dest_sal_onnet + a.dest_sal_offnet) dest_loc
         , ROUND((a.dest_sal_onnet + a.dest_sal_offnet)/NULLIF(ll_sal_onnet+ ll_sal_offnet,0),4) disp_loc
         , min_sal_ldi
         , ll_sal_ldi
         , dest_sal_ldi
         , ROUND(dest_sal_ldi/NULLIF(ll_sal_ldi,0),4) disp_ldi
         , '-', '-', '-'
         , min_ent
         , llam_ent
         , '-'
         , a.cant_celdas
         , a.porc_celda_max
         , '-', '-', '-', '-'
         , ROWNUM
         , f.estadocontrato
         , TO_CHAR(a.fechaactivacioncontrato,'DD/MM/YYYY')
         , a.telefono
         , f.numerocuentacompania
         , c.razonsocial
         , obtener_tipodoc_2(a.ruccompania) tipo_doc2
         , f.tipopersona
         , f.producto
         , f.plantarifario
      FROM pf_ilimitados_mes_alertas  a
      LEFT JOIN p_compania c
        ON a.codigocompania = c.codigocompania
      LEFT JOIN fotoequipos f
        ON a.contrato = f.codigocontratobscs
     WHERE a.fecha_proceso = TRUNC(v_proceso)
       AND a.ruccompania NOT IN (SELECT ruc FROM pf_whitelist)
       AND contrato||a.periodo NOT IN (
                SELECT contrato||periodo
                  FROM pf_ilimitados_mes_alertas
                 WHERE TRUNC(fecha_proceso) BETWEEN TRUNC(v_proceso)-30 AND TRUNC(v_proceso)-1 );

END ILIMITADOS_OBTENER_ALERTAS_DIA;

PROCEDURE ILIMITADOS_NOTIFICAR_DIA(v_proceso DATE) IS
  HTML CLOB;
  HTML2 CLOB;
  P_TO VARCHAR2(200);
  P_TO2 VARCHAR2(200);
  P_TO3 VARCHAR2(200);
  P_TO4 VARCHAR2(200);
  P_TO5 VARCHAR2(200);
  P_TO6 VARCHAR2(200);
  P_TO7 VARCHAR2(200);
  P_TO8 VARCHAR2(200);
  P_TO9 VARCHAR2(200);
  P_TO10 VARCHAR2(200);
  P_FROM VARCHAR2(200);
  P_SUBJECT VARCHAR2(200);
  P_TEXT VARCHAR2(200);
  P_HTML CLOB;
  P_SMTP_HOSTNAME VARCHAR2(200);
  P_SMTP_PORTNUM VARCHAR2(200);
  vfecha varchar2(8) := TO_CHAR(V_PROCESO,'YYYYMMDD');
  BEGIN
    P_HTML :='';

     HTML := '<h1 style = "font-size:20px;font-family:sans-serif; ">ALERTA: Control de planes ilimitados (Fecha: '|| TO_CHAR(v_proceso,'DD/MM/YYYY') ||')' ||
            '</h1>'||
             '<style>'||
                '  table { margin:0px;padding:0px;'||
                     '   border:1px solid #000000;'||
                     '   border-collapse: collapse;'||
                      '   border-spacing: 0;'||
                     '   height:100%;'||
                     '   margin:0px;padding:0px;'||
                   ' } .fr td{ '||
                       ' background-color:#3177e0;'||
                       ' text-align:center;'||
                       ' border-width:0px 0px 1px 1px;'||
                       ' font-size:12px;'||
                       ' font-family:sans-serif;'||
                       ' font-weight:bold;'||
                       ' color:#ffffff;'||
                   ' }  td{'||
                    '    vertical-align:middle;'||
                    '    background-color:#ffffff;'||
                    '    border:1px solid #000000;'||
                     '   border-width:0px 1px 1px 0px;'||
                     '   text-align:left;'||
                     '   padding:5px;'||
                     '   font-size:10px;'||
                      '  font-family:sans-serif;'||
                      '  color:#000000;'||
                   ' } p { font-size:14px;font-family:sans-serif; }' ||
             '</style>' ||
                '<p>Par&aacute;metros de alertas : </br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 1. M&aacute;s de 2000 minutos salientes</br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 2. Menos de 16 d&iacute;as de tr&aacute;fico</br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 3. M&aacute;s del 50% de tr&aacute;fico en la misma celda</br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 4. Menos de 100 minutos entrantes</br>'||
                '&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp 5. M&aacute;s de 80% de dispersi&oacute;n</p>'||

             '<table  border="1" >'||
                '<tr class=''fr''>'||
                --style="width:50px;text-align:center"
                    '<td >Fecha activaci&oacute;n</td>'||
                    '<td >Fecha &nbsp ini. an&aacute;lisis</td>'||
                    '<td >D&iacute;as </td>'||
                    '<td >Contrato</td>'||
                    '<td >Raz&oacute;n &nbsp social &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</td>'||
                    '<td >Nro documento</td>'||
                    '<td >Tipo documento</td>'||
                    '<td >Entel</td>'||
                    '<td >Periodo fact.</td>'||
                    '<td >Ciclo fact.</td>'||
                    '<td >C&oacute;digo plan</td>'||
                    '<td >Plan Tarifario</td>'||
                    '<td >Minutos salientes</td>'||
                    '<td >Llamadas salientes</td>'||
                    '<td >Destinos salientes</td>'||
                    '<td >Dispersi&oacute;n saliente</td>'||
                    '<td >Minutos entrantes</td>'||
                    '<td >Llamadas entrantes</td>'||
                    '<td >Celdas salientes</td>'||
                    '<td >Porcentaje en cel. max</td>'||
                    '<td >Minutos sal onnet</td>'||
                    '<td >Minutos sal offnet</td>'||
                    '<td >Minutos sal ldi</td>'||
                    '<td >Condici&oacute;n</td>'||
                    '<td >Fecha Proceso</td>'||
                    '<td >D&iacute;as tr&aacute;fico</td>'||
               ' </tr>';
    FOR REC IN
      (
            SELECT fechaactivacioncontrato f_activacion_contrato, fecha_ini, dias,
                   a.contrato, razonsocial razon_social, a.ruccompania nro_documento,
                   obtener_tipodoc_2(a.ruccompania) tipo_documento, A.telefono entel, A.periodo, A.ciclo,
                   c_plan cod_plan, n_plan plan_tarifario, min_sal min_salientes, llam_sal llam_salientes,
                   dest_sal dest_salientes, disp_sal disp_saliente,min_ent min_entrantes,
                   llam_ent llam_entrantes,cant_celdas  cant_celdas_sal,
                   porc_celda_max porc_max_celda_sal, min_sal_onnet, min_sal_offnet, min_sal_ldi, alerta condicion,
                   TO_CHAR(fecha_proceso,'DD/MM/YYYY') fecha_proceso, dias_trafico
              FROM pf_ilimitados_mes_alertas A
              LEFT JOIN p_compania B
                ON a.codigocompania = b.codigocompania
             WHERE TRUNC(fecha_proceso) = TRUNC(V_PROCESO)
               AND a.ruccompania NOT IN (SELECT ruc FROM pf_whitelist)
               AND  a.contrato||periodo not in (
                        select contrato||periodo
                        from pf_ilimitados_mes_alertas
                        where TRUNC(fecha_proceso) <= TRUNC(V_PROCESO-1)
                      )
               AND ROWNUM<25
             ORDER BY condicion desc
      )
    LOOP
      HTML := HTML  || '<tr><td>' ||  REC.f_activacion_contrato ||
                        '</td><td>' || REC.fecha_ini ||
                        '</td><td align="right">' || REC.dias ||
                        '</td><td>' || REC.contrato ||
                        '</td><td>' || REC.razon_social ||
                        '</td><td>' || REC.nro_documento ||
                        '</td><td>' || rec.tipo_documento ||
                        '</td><td>' || REC.entel ||
                        '</td><td>' || REC.periodo ||
                        '</td><td>' || rec.ciclo||
                        '</td><td>' || REC.cod_plan ||
                        '</td><td>' || REC.plan_tarifario ||
                        '</td><td align="right">' || rec.min_salientes ||
                        '</td><td align="right">' || REC.llam_salientes ||
                        '</td><td align="right">' || REC.dest_salientes ||
                        '</td><td align="right">' || rec.disp_saliente ||
                        '</td><td align="right">' || REC.min_entrantes ||
                        '</td><td align="right">' || REC.llam_entrantes ||
                        '</td><td align="right">' || REC.cant_celdas_sal ||
                        '</td><td align="right">' || REC.porc_max_celda_sal ||
                        '</td><td align="right">' || REC.min_sal_onnet ||
                        '</td><td align="right">' || REC.min_sal_offnet ||
                        '</td><td align="right">' || REC.min_sal_ldi ||
                        '</td><td align="right">' || REC.condicion ||
                        '</td><td align="right">' || REC.fecha_proceso ||
                        '</td><td align="right">' || REC.dias_trafico ||
                        '</td></tr>';
    END LOOP;
    HTML := HTML || '</table><br/>';

    P_TO := 'alejandra.linares@entel.pe';
    P_TO2 := 'pamela.pimentel@entel.pe';
    P_TO3 := 'francisco.espinoza@entel.pe';
    P_TO4 := 'ana.muedas@entel.pe';
    P_TO5 := 'jimmy.robles@entel.pe';
    p_TO9 := 'daniel.delzo@entel.pe';

    P_FROM := 'ip_alertas@entel.pe';
    P_SUBJECT := 'Control de planes ilimitados';
    P_TEXT := 'msg';
    P_HTML := HTML;
    P_SMTP_HOSTNAME := 'relay-procesos.entel.pe';
    P_SMTP_PORTNUM := '25';

    BEGIN HTML_EMAIL(    P_TO => P_TO,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO2,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO3,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO4,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO5,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;
    BEGIN HTML_EMAIL(    P_TO => P_TO9,    P_FROM => P_FROM,    P_SUBJECT => P_SUBJECT,    P_TEXT => P_TEXT,    P_HTML => P_HTML,   P_SMTP_HOSTNAME => P_SMTP_HOSTNAME,    P_SMTP_PORTNUM => P_SMTP_PORTNUM  ); END;

END ILIMITADOS_NOTIFICAR_DIA;

PROCEDURE PF_BASE_NOCOMERCIAL(pcursor OUT t_cursor) AS
BEGIN
OPEN pcursor FOR
SELECT nvl(TELEFONO,'-'),nvl(CODIGOCONTRATOBSCS,'0'),nvl(NUMEROCUENTARESPONSABLE,'-'),nvl((TO_CHAR(FECHAACTIVACIONCONTRATO,'dd/mm/yyyy')),'-'),nvl(PLANTARIFARIO,'-'),nvl(PRODUCTO,'-'),nvl(SIM,'-'),nvl(IMEI,'-'),nvl(ESTADOCONTRATO,'-')
FROM (
SELECT DISTINCT TELEFONO,CODIGOCONTRATOBSCS,NUMEROCUENTARESPONSABLE,FECHAACTIVACIONCONTRATO,PLANTARIFARIO,PRODUCTO,SIM,IMEI,ESTADOCONTRATO
  FROM FOTOEQUIPOS
  WHERE ESTADOCONTRATO IN ('Activo','Suspendido')
  AND (NUMEROCUENTARESPONSABLE LIKE '4.9596%'
       OR NUMEROCUENTARESPONSABLE LIKE '5.15583%'
       OR NUMEROCUENTARESPONSABLE LIKE '5.25193%'
       OR NUMEROCUENTARESPONSABLE LIKE '1.16395554%')
  MINUS
  SELECT TELEFONO,CONTRATO,CUENTA,FECHA_ACTIVACION,PLAN_TARIFARIO,PRODUCTO,SIM,IMEI,STATUS FROM PF_BASE_NOCOMERCIAL);

END PF_BASE_NOCOMERCIAL;

PROCEDURE PROCESARAJUSTESPREPAGO(V_PERIODO VARCHAR2) AS
BEGIN
delete from TEMP_AJUSTES_PREPAGO where periodo=v_PERIODO;
commit;
insert into TEMP_AJUSTES_PREPAGO
select  XX.seq,XX.dn_num,XX.user_name,XX.process_date,XX.batch,
            XX.seq_card,decode(XX.type_adj,'ANEG',-1,1)*XX.amount as amount ,XX.balance_init,XX.balance_end,XX.type_adj,
            XX.observation,XX.co_id,XX.subbatch,XX.periodo,XX.razonsocial,
            XX.codigocompania,XX.factor1,XX.factor3,
            CASE WHEN INSTR(XX.razonsocial,substr(XX.user_name,2,instr(XX.user_name,'CCP')-3)) >0 and instr(XX.user_name,'CCP')>0 THEN 'X'
            WHEN INSTR(XX.razonsocial,substr(XX.user_name,2,length(XX.user_name)-2)) >0 and instr(XX.user_name,'CCP')=0 THEN 'X'
            ELSE '' END as factor5_1,
            CASE WHEN INSTR(XX.razonsocial,substr(XX.user_name,2,instr(XX.user_name,'CCP')-2)) >0 and instr(XX.user_name,'CCP')>0 THEN 'X'
            WHEN INSTR(XX.razonsocial,substr(XX.user_name,2,length(XX.user_name)-1)) >0 and instr(XX.user_name,'CCP')=0 THEN 'X'
            ELSE '' END as factor5_2,
            CASE WHEN REGEXP_count(OBSERVATION,'\d') <= 1 THEN 'X'
            ELSE '' END as factor9,
            /*CASE WHEN MOD(ROUND((BALAnCE_END-BALANCE_INIT),0),1024)=0 THEN 'MB'
                         WHEN MOD(ROUND((BALAnCE_END-BALANCE_INIT),0),60)=0   THEN 'Min'
                         ELSE 'Soles' END as UNIDAD_MEDIDA,
            */
            CASE WHEN decode(XX.type_adj,'ANEG',-1,1)*XX.amount>0 AND ROUND(ROUND((BALAnCE_END-BALANCE_INIT),0)/(decode(XX.type_adj,'ANEG',-1,1)*XX.amount),0) = 1024 THEN 'MB'
                         WHEN decode(XX.type_adj,'ANEG',-1,1)*XX.amount>0 AND ROUND(ROUND((BALAnCE_END-BALANCE_INIT),0)/(decode(XX.type_adj,'ANEG',-1,1)*XX.amount),0) = 60   THEN 'Min'
                         WHEN decode(XX.type_adj,'ANEG',-1,1)*XX.amount>0 AND ROUND(ROUND((BALAnCE_END-BALANCE_INIT),0)/(decode(XX.type_adj,'ANEG',-1,1)*XX.amount),0) = 100   THEN 'Soles'
                         ELSE 'SMS' END as UNIDAD_MEDIDA,
            XX.plantarifario as plan_tarif,XX.product,XX.rentabasica as rta_bas,
            XX.ruccompania,
            CASE WHEN UPPER(USER_NAME) like '%CCP' THEN 'CCP'
            WHEN UPPER(USER_NAME) like '%SCC-EMP' THEN 'SCC'
            WHEN UPPER(USER_NAME) like '-TE' THEN 'TE'
            ELSE 'OTROS' END as terminacion
from
(
  select a.seq,a.dn_num,a.user_name,a.process_date,a.batch,
              a.seq_card,a.amount,a.balance_init,a.balance_end,a.type_adj,
              a.observation,a.co_id,a.subbatch,a.periodo,b.razonsocial,
              b.codigocompania,c.clasificador as factor1,d.clasificador as factor3,
              b.plantarifario,b.product,b.rentabasica,b.ruccompania
  from (
  select * from IN_AJUSTES_PREPAGO_A
  where substr(observation,1,1) not in ('B','R','S','N')
  ) A,
  (
  select codigocontratobscs,compania as razonsocial,codigocompania,plantarifario,product,rentabasica,ruccompania from fotoequipos
  ) B,
  (
  select dn_num,ratio,CASE when ratio between 0 and 0.25 then '4' when ratio between 0.25 and 0.5  then '6' when ratio between 0.5 and 0.75 then '8' when ratio between 0.75 and 1 then '10' end clasificador from (
  select a.periodo,a.dn_num,a.cantidad,b.maximo,(a.cantidad/b.maximo) ratio from
  (
    SELECT to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm') periodo, dn_num,count(1) cantidad
    FROM IN_AJUSTES_PREPAGO_A
    GROUP BY to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm'), dn_num
  ) a,
  (
    SELECT periodo,MAX(CANTIDAD) maximo
    FROM
    (
      SELECT to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm') periodo, dn_num,count(1) cantidad
      FROM IN_AJUSTES_PREPAGO_A
      GROUP BY to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm'), dn_num
    )
  group by periodo
  ) b
  where a.periodo=b.periodo (+)
  )
  ) C,
  (
  select dn_num,ratio,CASE when ratio between 0 and 0.25 then '4' when ratio between 0.25 and 0.5  then '6' when ratio between 0.5 and 0.75 then '8' when ratio between 0.75 and 1 then '10' end clasificador from (
  select a.periodo,a.dn_num,a.monto,b.maximo,(a.monto/b.maximo) ratio from
  (
    SELECT to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm') periodo, dn_num,sum(decode(type_adj,'ANEG',-1,1)*amount) monto
    FROM IN_AJUSTES_PREPAGO_A
    GROUP BY to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm'), dn_num) a,
  (
    SELECT periodo,MAX(MONTO) maximo
    FROM
    (
      SELECT to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm') periodo, dn_num,sum(decode(type_adj,'ANEG',-1,1)*amount) monto
      FROM IN_AJUSTES_PREPAGO_A
      GROUP BY to_char(to_date(process_date,'dd-mon-yy','NLS_DATE_LANGUAGE = AMERICAN'),'yyyymm'), dn_num
    )
  group by periodo
  ) b
  where a.periodo=b.periodo(+)
  )
  ) D
  where A.CO_ID =B.CODIGOCONTRATOBSCS (+) and
  A.dn_num=C.dn_num (+) and
  A.dn_num=D.dn_num (+)
) XX;
commit;
END PROCESARAJUSTESPREPAGO;

PROCEDURE BYPASSTOTAL(V_FECHA DATE) IS
v_dest_dni NUMBER;
v_dest_ruc10 NUMBER;
v_dest_ruc20 NUMBER;
v_min_sal_dni NUMBER;
v_min_sal_ruc10 NUMBER;
v_min_sal_ruc20 NUMBER;
BEGIN
    SELECT dest_dni-10, dest_ruc10-10, dest_ruc20-10
         , min_sal_dni-100, min_sal_ruc10-100, min_sal_ruc20-100
      INTO v_dest_dni, v_dest_ruc10, v_dest_ruc20
         , v_min_sal_dni, v_min_sal_ruc10, v_min_sal_ruc20
      FROM pf_ui_reglas
     WHERE fecha = TRUNC(V_FECHA) ;

    --ORIGEN DESTINO
    DELETE FROM pf_ui_origen_destino WHERE FECHA = TRUNC(V_FECHA);
    INSERT INTO pf_ui_origen_destino
     SELECT x.*
          , F.product
          , obtener_tipodoc_2(f.ruccompania) tipodoc
          , COUNT(1) OVER (PARTITION BY nro_2) NRO_2C
          , count(DISTINCT nro_2) OVER (PARTITION BY servedmsisdn) comunic_served
          , TRUNC(V_FECHA) fecha
       FROM
        (SELECT /*+PARALLEL(5)*/
            distinct  servedmsisdn
                , DECODE(recordtype, '1', SUBSTR(callingnumbercdr,-9), '0', SUBSTR(callednumbercdr,-9) ) nro_2
          FROM (SELECT *   FROM temp_res_tel3g a
                 WHERE fechaproceso >= TO_CHAR(TRUNC(V_FECHA)-6,'YYYYMMDD')
                   AND fechaproceso <= TO_CHAR(TRUNC(V_FECHA),'YYYYMMDD')
                   AND SUBSTR(SUBSTR(callednumberCDR,-9),1,1)='9'
                   AND SUBSTR(SUBSTR(callingnumberCDR,-9),1,1)='9'
                   AND DECODE(recordtype, '1', SUBSTR(callingnumbercdr,-9), '0', SUBSTR(callednumbercdr,-9) ) IS NOT NULL
                   AND DECODE(recordtype, '1', SUBSTR(callingnumbercdr,-9), '0', SUBSTR(callednumbercdr,-9) ) <> '998103182'
                   AND DECODE(recordtype, '1', SUBSTR(callingnumbercdr,-9), '0', SUBSTR(callednumbercdr,-9) ) <> '998106245'
            )
         WHERE servedmsisdn IN (SELECT servedmsisdn
                                  FROM pf_ui_boxplot
                                 WHERE destinos >= DECODE(TIPODOC,'DNI',v_dest_dni,'RUC10',v_dest_ruc10,'RUC20',v_dest_ruc20)
                                   AND minutos  >= DECODE(TIPODOC,'DNI',v_min_sal_dni,'RUC10',v_min_sal_ruc10,'RUC20',v_min_sal_ruc20))
         ) X
      LEFT JOIN (SELECT *
                   FROM ( SELECT a.*
                              , row_number() over (PARTITION BY telefono
                                                       ORDER BY DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC
                                                              , fechacargacontrato desc) rn
                           FROM fotoequipos a)
                  WHERE rn = 1) f
      ON x.servedmsisdn = '51'||f.telefono;
     COMMIT;

    --NRO ENTEL
    DELETE FROM pf_ui_entel_grafo WHERE FECHA = TRUNC(V_FECHA);
    INSERT INTO pf_ui_entel_grafo
    SELECT fecha, servedmsisdn, product, tipodoc
         , SUM(nro_2c) nro_2c
         , max(comunic_served) comunic_served
         , SUM(nro_2c) - max(comunic_served) cal
      FROM pf_ui_origen_destino
     WHERE FECHA = TRUNC(V_FECHA)
     GROUP BY fecha, servedmsisdn, product, tipodoc;

    EXECUTE IMMEDIATE 'TRUNCATE TABLE pf_ui_trafico';
    INSERT /*+APPEND*/ INTO pf_ui_trafico
    SELECT a.*
      FROM temp_res_tel3g a
      JOIN (SELECT servedmsisdn
              FROM pf_ui_boxplot A
             --WHERE destinos >= DECODE(TIPODOC,'DNI',70,'RUC10',100,'RUC20',140)
             --  AND MINUTOS  >= DECODE(TIPODOC,'DNI',650,'RUC10',750,'RUC20',800)
             WHERE destinos >= DECODE(TIPODOC,'DNI',v_dest_dni,'RUC10',v_dest_ruc10,'RUC20',v_dest_ruc20)
               AND minutos  >= DECODE(TIPODOC,'DNI',v_min_sal_dni,'RUC10',v_min_sal_ruc10,'RUC20',v_min_sal_ruc20)
           ) B
        ON a.servedmsisdn = b.servedmsisdn
     WHERE fechaproceso >= TO_CHAR(TRUNC(V_FECHA)-6,'YYYYMMDD')
       AND fechaproceso <= TO_CHAR(TRUNC(V_FECHA),'YYYYMMDD');
    COMMIT;

    DELETE FROM pf_ui_metricas WHERE fecha_proceso = TRUNC(V_FECHA);
    INSERT INTO pf_ui_metricas
        SELECT /*+PARALLEL(4)*/
               foto.ciclofacturacioncontrato
             , foto.codigocontratobscs
             , foto.codigoplantarifariobscs
             , foto.plantarifario
             , base.servedmsisdn telefono
             , foto.fechaactivacioncontrato
             , foto.ruccompania
             , foto.codigocompania
             , base.FECHA_MIN_TRAFICO
             , base.FECHA_MAX_TRAFICO
             , ROUND(NVL(b.MIN_SAL,0),2) min_sal
             , NVL(b.LLAM_SAL,0) LLAM_SAL
             , NVL(b.DEST_SAL,0) DEST_SAL
             , ROUND((b.DEST_SAL/DECODE(NVL(b.LLAM_SAL,0),0,0.001,b.LLAM_SAL)),4) DISP_SAL
             , ROUND(base.MIN_ENT,2) MIN_ENT
             , base.LLAM_ENT
             , ROUND(base.MIN_123,2) MIN_123
             , base.LLAM_123
             , b.C_CELDAS cant_celdas
             , e.nodo celda_max
             , ROUND(e.MAX_MIN_CELDA /DECODE(NVL(b.MIN_SAL,0),0,0.001,b.MIN_SAL) ,3) PORC_CELDA_max
             , ROUND(b.MIN_C_RIESGO,2) MIN_CEL_RIESGO
             , ROUND(b.MIN_C_RIESGO /DECODE(NVL(b.MIN_SAL,0),0,0.001,b.MIN_SAL) ,3) RAT_CEL_RIESGO
             , ROUND(b.MIN_SAL_ONNET,2) MIN_SAL_ONNET
             , ROUND(b.MIN_SAL_OFFNET,2) MIN_SAL_OFFNET
             , ROUND(b.MIN_SAL_LDI,2) MIN_SAL_LDI
             , b.LL_SAL_ONNET
             , b.LL_SAL_OFFNET
             , b.LL_SAL_LDI
             , b.DEST_ONNET DEST_SAL_ONNET
             , b.DEST_OFFNET DEST_SAL_OFFNET
             , b.DEST_LDI DEST_SAL_LDI
             , b.dias_trafico
             , TRUNC(V_FECHA) fecha_proceso
             , SYSDATE fecha_carga
          FROM
        (--BASE DE CLIENTES CON TRÁFICO
          SELECT /*+PARALLEL(4)*/ X.servedmsisdn
               , MIN(fechaproceso) FECHA_MIN_TRAFICO
               , MAX(fechaproceso) FECHA_MAX_TRAFICO
               , SUM(llamadas) llamadas
               , SUM(DECODE(recordtype,'1',llamadas,0)) LLAM_ENT
               , SUM(DECODE(recordtype,'1',callDuration,0))/60 MIN_ENT
               , SUM(DECODE(callednumbercdr,'123',llamadas,0)+DECODE(callingnumbercdr,'123',llamadas,0)) LLAM_123
               , SUM(DECODE(callednumbercdr,'123',callDuration,0)+DECODE(callingnumbercdr,'123',callDuration,0))/60 MIN_123
            FROM pf_ui_trafico X
           GROUP BY X.servedmsisdn ) base
         LEFT JOIN
          (--SALIENTES
          SELECT /*+PARALLEL(4)*/ servedmsisdn
               , SUM(llamadas) LLAM_SAL
               , SUM(callDuration)/60 MIN_SAL
               , COUNT (DISTINCT DECODE(obtener_tipo_destino(calledNumberCDR,calledNumberWNS),'LDI',callingnumbercdr,substr(calledNumberCDR,-9)) ) DEST_SAL
               , COUNT(DISTINCT obtener_codcelda(celda)) C_CELDAS
               , SUM(CASE WHEN obtener_codcelda(celda) IN (SELECT nodo_max FROM pf_ilimitados_nodo_riesgo)
                          THEN CALLDURATION ELSE 0 END)/60 MIN_C_RIESGO
               , COUNT(distinct fechaproceso) dias_trafico

               , SUM( CASE obtener_tipo_destino(calledNumberCDR,calledNumberWNS) WHEN 'ONNET' THEN callDuration ELSE 0 END ) /60 MIN_SAL_ONNET
               , SUM( CASE obtener_tipo_destino(calledNumberCDR,calledNumberWNS) WHEN 'OFFNET' THEN callDuration ELSE 0 END ) /60 MIN_SAL_OFFNET
               , SUM( CASE obtener_tipo_destino(calledNumberCDR,calledNumberWNS) WHEN 'LDI' THEN callDuration ELSE 0 END ) /60 MIN_SAL_LDI

               , SUM( CASE obtener_tipo_destino(calledNumberCDR,calledNumberWNS) WHEN 'ONNET' THEN llamadas ELSE 0 END )  LL_SAL_ONNET
               , SUM( CASE obtener_tipo_destino(calledNumberCDR,calledNumberWNS) WHEN 'OFFNET' THEN llamadas ELSE 0 END ) LL_SAL_OFFNET
               , SUM( CASE obtener_tipo_destino(calledNumberCDR,calledNumberWNS) WHEN 'LDI' THEN llamadas ELSE 0 END )  LL_SAL_LDI

               , COUNT(DISTINCT CASE obtener_tipo_destino(calledNumberCDR,calledNumberWNS) WHEN 'ONNET' THEN callednumbercdr END) DEST_ONNET
               , COUNT(DISTINCT CASE obtener_tipo_destino(calledNumberCDR,calledNumberWNS) WHEN 'OFFNET' THEN callednumbercdr END) DEST_OFFNET
               , COUNT(DISTINCT CASE obtener_tipo_destino(calledNumberCDR,calledNumberWNS) WHEN 'LDI' THEN callednumbercdr END) DEST_LDI
           FROM pf_ui_trafico
          WHERE recordtype = '0'
          GROUP BY servedmsisdn ) b
         ON base.servedmsisdn=b.servedmsisdn
         LEFT JOIN
          (--MINUTOS POR NODO
                 SELECT a.servedmsisdn
                      , a.nodo
                      , a.MAX_MIN_CELDA
                  FROM  (SELECT servedmsisdn
                              , obtener_codcelda(celda) nodo
                              , SUM (callDuration)/60  MAX_MIN_CELDA
                              , ROW_NUMBER() OVER (PARTITION BY servedmsisdn ORDER BY SUM (callDuration)/60  DESC) as RN
                           FROM pf_ui_trafico
                          WHERE recordtype = '0'
                          GROUP BY servedmsisdn
                                 , obtener_codcelda(celda)) a
                  WHERE RN=1
          )e
          ON base.servedmsisdn=e.servedmsisdn
         LEFT JOIN (SELECT *
                      FROM ( SELECT a.*
                                  , row_number() over (PARTITION BY telefono
                                                           ORDER BY DECODE(ESTADOCONTRATO,'Desactivado',2,1) ASC
                                                                  , fechacargacontrato desc) rn
                               FROM fotoequipos a)
                     WHERE rn = 1) foto
          ON base.servedmsisdn = '51'||foto.telefono;
    COMMIT;
END BYPASSTOTAL;

PROCEDURE PF_ROAMING_NRTRDEI(P_FECHAI VARCHAR2,P_FECHAF VARCHAR2,P_TIPO VARCHAR2,pcursor OUT t_cursor) AS
V_TIPO VARCHAR2(10) := TRIM(P_TIPO);
V_FECHAI DATE;
V_FECHAF DATE;
BEGIN
        IF V_TIPO = 'MES' THEN
            V_FECHAI := TRUNC(TO_DATE(P_FECHAI, 'yyyy-mm'),'month');
            V_FECHAF := LAST_DAY(TO_DATE(P_FECHAF, 'yyyy-mm'));
        ELSE
            V_FECHAI := TO_DATE(P_FECHAI,'YYYY-MM-DD');
            V_FECHAF := TO_DATE(P_FECHAF,'YYYY-MM-DD');
        END IF;
OPEN pcursor FOR
SELECT
    NVL(nrtrde.imsi,tapin.imsi) IMSI,
    NVL(nrtrde.msisdn,tapin.telefono) TELEFONO,
    NVL(fechaevento,fecha) FECHA,
    nrtrde.voz_minutos VOZ_MINUTOS_NRTRDE,
    nrtrde.sms SMS_NRTRDE,
    tapin.voz_minutos VOZ_MINUTOS_TAPIN,
    tapin.sms SMS_TAPIN,
    (tapin.voz_minutos - nrtrde.voz_minutos) DIF_VOZ,
    (tapin.sms - nrtrde.sms) DIF_SMS,
    CASE WHEN ROUND(DECODE(tapin.voz_minutos,0,0,nrtrde.voz_minutos/tapin.voz_minutos)) >= 0.3 THEN '1'
    WHEN ROUND(DECODE(tapin.voz_minutos,0,0,nrtrde.voz_minutos/tapin.voz_minutos)) < 0.3 THEN '0' END VOZ_FLAG,
    CASE WHEN ROUND(DECODE(tapin.sms,0,0,nrtrde.sms/tapin.sms)) >= 0.3 THEN '1'
    WHEN ROUND(DECODE(tapin.sms,0,0,nrtrde.sms/tapin.sms)) < 0.3 THEN '0' END SMS_FLAG
FROM
(SELECT
    imsi,
    msisdn,
    TRUNC(fechaevento) fechaevento,
    ROUND(SUM(DECODE(tiposervicio,'VOICE',duracion,0))/60) VOZ_MINUTOS,
    SUM(DECODE(tiposervicio,'SMS',duracion,0)) SMS
  FROM pf_roaming_nrtrde
  WHERE TRUNC(fechaevento) BETWEEN V_FECHAI AND V_FECHAF
  GROUP BY imsi,msisdn, TRUNC(fechaevento)) nrtrde
JOIN
(SELECT
    imsi,
    telefono,
    fecha,
    SUM(DECODE(tipollamada,'LLAMADAS VOZ',consumo,0)) VOZ_MINUTOS,
    SUM(DECODE(tipollamada,'MENSAJES',consumo,0)) SMS
  FROM roam_detalle3g_fecllam
  WHERE fecha BETWEEN V_FECHAI AND V_FECHAF
  GROUP BY imsi,telefono, fecha) tapin
ON nrtrde.imsi = tapin.imsi AND nrtrde.fechaevento = tapin.fecha;

END PF_ROAMING_NRTRDEI;

PROCEDURE PF_ROAMING_NRTRDEO(P_FECHAI VARCHAR2,P_FECHAF VARCHAR2,P_TIPO VARCHAR2,pcursor OUT t_cursor) AS
V_TIPO VARCHAR2(10) := TRIM(P_TIPO);
V_FECHAI DATE;
V_FECHAF DATE;
BEGIN
        IF V_TIPO = 'MES' THEN
            V_FECHAI := TRUNC(TO_DATE(P_FECHAI, 'yyyy-mm'),'month');
            V_FECHAF := LAST_DAY(TO_DATE(P_FECHAF, 'yyyy-mm'));
        ELSE
            V_FECHAI := TO_DATE(P_FECHAI,'YYYY-MM-DD');
            V_FECHAF := TO_DATE(P_FECHAF,'YYYY-MM-DD');
        END IF;
OPEN pcursor FOR
SELECT
    NVL(nrtrde.tadig,tapin.roamingpartner) OPERADOR,
    NVL(fechaevento,fecha) FECHA,
    nrtrde.voz_minutos VOZ_MINUTOS_NRTRDE,
    nrtrde.sms SMS_NRTRDE,
    tapin.voz_minutos VOZ_MINUTOS_TAPIN,
    tapin.sms SMS_TAPIN,
    (tapin.voz_minutos - nrtrde.voz_minutos) DIF_VOZ,
    (tapin.sms - nrtrde.sms) DIF_SMS,
    CASE WHEN ROUND(DECODE(tapin.voz_minutos,0,0,nrtrde.voz_minutos/tapin.voz_minutos)) >= 0.3 THEN '1'
    WHEN ROUND(DECODE(tapin.voz_minutos,0,0,nrtrde.voz_minutos/tapin.voz_minutos)) < 0.3 THEN '0' END VOZ_FLAG,
    CASE WHEN ROUND(DECODE(tapin.sms,0,0,nrtrde.sms/tapin.sms)) >= 0.3 THEN '1'
    WHEN ROUND(DECODE(tapin.sms,0,0,nrtrde.sms/tapin.sms)) < 0.3 THEN '0' END SMS_FLAG
FROM
(SELECT
    tadig,
    TRUNC(fechaevento) fechaevento,
    ROUND(SUM(DECODE(tiposervicio,'VOICE',duracion,0))/60) VOZ_MINUTOS,
    SUM(DECODE(tiposervicio,'SMS',duracion,0)) SMS
  FROM pf_roaming_nrtrde
  WHERE TRUNC(fechaevento) BETWEEN V_FECHAI AND V_FECHAF
  GROUP BY tadig, TRUNC(fechaevento)) nrtrde
JOIN
(SELECT
    roamingpartner,
    fecha,
    SUM(DECODE(tipollamada,'LLAMADAS VOZ',consumo,0)) VOZ_MINUTOS,
    SUM(DECODE(tipollamada,'MENSAJES',consumo,0)) SMS
  FROM roam_detalle3g_fecllam
  WHERE fecha BETWEEN V_FECHAI AND V_FECHAF
  GROUP BY roamingpartner, fecha) tapin
ON nrtrde.tadig = tapin.roamingpartner AND nrtrde.fechaevento = tapin.fecha;

END PF_ROAMING_NRTRDEO;

PROCEDURE PF_ROAMING_NRTRDEP(P_FECHAI VARCHAR2,P_FECHAF VARCHAR2,P_TIPO VARCHAR2,pcursor OUT t_cursor) AS
V_TIPO VARCHAR2(10) := TRIM(P_TIPO);
V_FECHAI DATE;
V_FECHAF DATE;
BEGIN
        IF V_TIPO = 'MES' THEN
            V_FECHAI := TRUNC(TO_DATE(P_FECHAI, 'yyyy-mm'),'month');
            V_FECHAF := LAST_DAY(TO_DATE(P_FECHAF, 'yyyy-mm'));
        ELSE
            V_FECHAI := TO_DATE(P_FECHAI,'YYYY-MM-DD');
            V_FECHAF := TO_DATE(P_FECHAF,'YYYY-MM-DD');
        END IF;
OPEN pcursor FOR
SELECT
    NVL(nrtrde.pais,tapin.pais) PAIS,
    NVL(fechaevento,fecha) FECHA,
    nrtrde.voz_minutos VOZ_MINUTOS_NRTRDE,
    nrtrde.sms SMS_NRTRDE,
    tapin.voz_minutos VOZ_MINUTOS_TAPIN,
    tapin.sms SMS_TAPIN,
    (tapin.voz_minutos - nrtrde.voz_minutos) DIF_VOZ,
    (tapin.sms - nrtrde.sms) DIF_SMS,
    CASE WHEN ROUND(DECODE(tapin.voz_minutos,0,0,nrtrde.voz_minutos/tapin.voz_minutos)) >= 0.3 THEN '1'
    WHEN ROUND(DECODE(tapin.voz_minutos,0,0,nrtrde.voz_minutos/tapin.voz_minutos)) < 0.3 THEN '0' END VOZ_FLAG,
    CASE WHEN ROUND(DECODE(tapin.sms,0,0,nrtrde.sms/tapin.sms)) >= 0.3 THEN '1'
    WHEN ROUND(DECODE(tapin.sms,0,0,nrtrde.sms/tapin.sms)) < 0.3 THEN '0' END SMS_FLAG
FROM
(SELECT
    SUBSTR(tadig,1,3) pais,
    TRUNC(fechaevento) fechaevento,
    ROUND(SUM(DECODE(tiposervicio,'VOICE',duracion,0))/60) VOZ_MINUTOS,
    SUM(DECODE(tiposervicio,'SMS',duracion,0)) SMS
  FROM pf_roaming_nrtrde
  WHERE TRUNC(fechaevento) BETWEEN V_FECHAI AND V_FECHAF
  GROUP BY tadig, TRUNC(fechaevento)) nrtrde
JOIN
(SELECT
    SUBSTR(roamingpartner,1,3) pais,
    fecha,
    SUM(DECODE(tipollamada,'LLAMADAS VOZ',consumo,0)) VOZ_MINUTOS,
    SUM(DECODE(tipollamada,'MENSAJES',consumo,0)) SMS
  FROM roam_detalle3g_fecllam
  WHERE fecha BETWEEN V_FECHAI AND V_FECHAF
  GROUP BY roamingpartner, fecha) tapin
ON nrtrde.pais = tapin.pais AND nrtrde.fechaevento = tapin.fecha;

END PF_ROAMING_NRTRDEP;

 PROCEDURE PROCESAR_ANOMALIASPREEVAL AS
 BEGIN
DELETE FROM TEMPORAL_PROCESAMIENTO where conteo is not null;
COMMIT;
INSERT INTO TEMPORAL_PROCESAMIENTO
select m.*,n.resultadoevaluacion,n.motivo,n.detalle_motivo,
p.distrito,p.direccion,
n.destypecustomer,o.conteo,NVL(q.can_apro,0)+NVL(q.can_condi,0) APR from
(
select typeoper,tipo_operacion,ruccompania,nextel,nro_orden,clasificacion,nrocontrato,contrato,n_plan,codigoorden,subcategoria,fechacreacion,ruccompania||'-'||SUBSTR(nextel,-9)||'-'||clasif as llave,clasif from (
select DECODE(x.tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,x.tipo_operacion,x.ruccompania,x.nextel,x.nro_orden,x.clasificacion,
            x.nrocontrato,x.contrato,x.n_plan,y.codigoorden,y.subcategoria,y.fechacreacion,x.clasif
from (
select a.tipo_operacion,a.ruccompania,a.nextel,a.nro_orden,b.clasificacion,b.nrocontrato,a.contrato,a.n_plan,DECODE(NVL(c.tipo_portabilidad,'-'),'Móvil postpago','POST','Móvil prepago','PRE','OTRO') as clasif
from TNP_INAR_PERSONAS_ODS a,
(
select * from (
select distinct 'multiple' as clasificacion,nro_orden,count(distinct contrato) nrocontrato
from TNP_INAR_PERSONAS_ODS
where periodo=to_char(sysdate-01,'yyyymm') and c_plan not in ('2167','2089') and tipo_operacion like '%Portabilidad%' and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
group by nro_orden having count(distinct nextel)>1
union all
select distinct 'unico' as clasificacion,nro_orden,count(distinct contrato) nrocontrato
from TNP_INAR_PERSONAS_ODS
where periodo=to_char(sysdate-01,'yyyymm') and c_plan not in ('2167','2089') and tipo_operacion like '%Portabilidad%' and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
group by nro_orden having count(distinct nextel)=1
)
) b,
(
select inicio_rango,tipo_portabilidad from (
select inicio_rango,tipo_portabilidad,row_number () over (partition by inicio_rango order by numero_secuencial desc) as rn from tnp_portabilidad where mensaje='SPR'
) where rn='1'
) c
where a.nro_orden=b.nro_orden and
SUBSTR(a.nextel,-9)=c.inicio_rango (+) and
to_char(a.fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
) x,
(
select * from (
select codigoorden,subcategoria,to_char(fechacreacionorden,'yyyymmdd') as fechacreacion,row_number () over (partition by codigoorden order by fechacarga desc) as rn from p_ordenes
) where rn=1
) y
where x.nro_orden=y.codigoorden
)
) m,
(
select * from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,llave,row_number () over (partition by llave order by fechacreacion desc) rn from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,
ruccompania || '-' || numero_preevaluado || '-' || typeoper as llave
from (
select ruccompania,to_char(fechacreacion,'yyyymmdd') as fechacreacion,
DECODE(tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,
numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer
from TNP_PRE_EVALUACIONES
where periodo in (to_char(ADD_MONTHS(sysdate-01,-1),'yyyymm'),to_char(sysdate-01,'yyyymm'))
) where typeoper<>'-'
)
)
where rn=1
) n,
(
select llave,count(1) conteo from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,llave from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,
ruccompania as llave
from (
select ruccompania,to_char(fechacreacion,'yyyymmdd') as fechacreacion,
DECODE(tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,
numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer
from TNP_PRE_EVALUACIONES
where periodo in (to_char(ADD_MONTHS(sysdate-01,-1),'yyyymm'),to_char(sysdate-01,'yyyymm'))
) where typeoper<>'-'
)
)
group by llave
) o
,
(
select * from p_compania
) p,
(
select ruccompania as llave,
SUM(DECODE(resultadoevaluacion,'PRE APROBADO',1,0)) can_apro,
SUM(DECODE(resultadoevaluacion,'DESAPROBADO',1,0)) can_desapro,
SUM(DECODE(resultadoevaluacion,'CONDICIONADO',1,0)) can_condi
from (
select ruccompania,to_char(fechacreacion,'yyyymmdd') as fechacreacion,
DECODE(tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,
numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo
from TNP_PRE_EVALUACIONES
where to_char(fechacreacion,'yyyymmdd')>=to_char(add_months(sysdate-1,-1),'yyyymm')||'15' and to_char(fechacreacion,'yyyymmdd')<=to_char(add_months(sysdate-1,0),'yyyymm')||'30'
) where typeoper<>'-'
group by ruccompania
) q
where m.llave=n.llave (+)
and m.ruccompania=o.llave (+)
and m.ruccompania=p.ruccompania(+)
and m.ruccompania=q.llave(+);
commit;
DELETE FROM FA_DIARIO_ANOMAL_PREEVAL WHERE to_char(fechaproceso,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd');
commit;
INSERT INTO FA_DIARIO_ANOMAL_PREEVAL
select sysdate-01 as fechaproceso,J.ESCENARIO,J.TYPEOPER,J.TIPO_OPERACION,J.RUCCOMPANIA,J.NEXTEL,J.NRO_ORDEN,J.CLASIFICACION,J.NROCONTRATO,J.CONTRATO,J.N_PLAN,
J.CODIGOORDEN,J.SUBCATEGORIA,J.FECHACREACION,J.LLAVE,J.CLASIF,J.RESULTADOEVALUACION,J.MOTIVO,J.DETALLE_MOTIVO,J.DISTRITO,J.DIRECCION,J.DESTYPECUSTOMER,J.CONTEO,J.APR,
k.periodo,k.fecha,k.codigocuenta,k.fechaactivacion,k.fechaingresocliente,k.codigocompania,k.ruccompania as ruccompania_er,k.razonsocial,k.contrato as contrato_er,k.nextel as nextel_er,k.modeloequipo,k.gama_equipo,k.rango_equipos,
k.c_plan,k.n_plan as n_plan_er,k.t_plan,k.tech,k.product,k.estadoinar,k.metrica,k.unidades_gross,k.vendedor,k.tipodoc,k.giro_negoc,k.cantactivados,k.rentabasica,k.dealer,k.imei,k.imei_bscs,k.ciclo,k.region,
k.departamento,k.provincia,k.distrito as distrito_er,k.solucion,k.VALORINCOMEPREDICTOR,k.BANCARIZACION,k.RIESGOFINANCIERO,k.FECHAPREEVALUACION,k.RESULTADOEVALUACION as resultadoevaluacion_er,
k.CAPACIDADENDEUDAMIENTO,k.VALORRIESGOPREDICTOR,k.RANGOVRP,k.CANAL_VENTA,k.FECHA_FACTURACION,k.FECHA_VENCIMIENTO,k.MONTO_FACTURACION,
k.MONTO_TOTAL_DEUDA,k.FLAG_PAGO,k.PAGO_TOTAL,k.VALORTOPEEQUIPOS,k.TYPECUSTOMER,k.DESTYPECUSTOMER as destypecustomer_er,k.TYPEBUSINESS,k.DESTYPEBUSINESS,k.TIENDA,
k.KAM,k.DIVISION_TERRITORIO,k.CADENA_DEALER,k.CANAL_DE_VENTA,k.FECHAPAGO,k.PORTABILIDAD,k.JERARQUIA_DISTRITO,k.SOCIO_NEGOCIO,k.GERENCIA_TERRITORIO,
k.TIPO_TIENDA,k.CEDENTE,k.RECEPTOR,k.MODALIDAD_ORIGEN,k.SCORING,k.FECHA_PORTABILIDAD,k.TOPE_EN_RECIBO,k.RANGODEBTCAPACITY,k.RENTATOTAL,k.RANGORENTATOTAL,
k.MONTO_TOTAL_DEUDA_ANT,k.TIPO_RENTA,k.FACTOR_PROR,MONTO_PROR,k.CLIENTERECURRENTE,k.DEUDA_CONTRATO,k.DEUDA_POR_PRORATEAR,k.DEUDA_PRORATEADA,
k.PAGO_PRORATEADO,k.DEUDA_NETA,k.DEUDA_NETA_ANT,k.DEUDA_FINAL_CONT,k.MONTOPAGOSABONO,k.MONTOSALDOANTERIOR,k.MONTODEUDAATRASADA,k.NRO_ORDEN as nro_orden_er,
k.MONTO_FACT1,k.MONTO_FACT2,k.POS_NAME,k.FLAG_TP,k.CATEGORIA,k.PRECIO_VENTA,k.MODELO_ORDEN,k.KIT,k.T0,k.RFT,k.TERMINAL,k.TIPO_OPERACION as tipo_operacion_er,k.TIPO_OPERACION_2,
k.CANAL_VENTAVF,k.TYPECUSTOMER2,k.T0_A_FECHA,k.DIA_MES,k.FECHA_DIA_MES,k.RFT_A_FECHA,k.RFT_DIA_MES,k.RFT_FECHA_DIA_MES,k.NUMERO_OPERACION,k.PREEV_PDV,
k.NUMERO_PREEVALUADO,k.CICLO_IDEAL,k.COD_SOLICITUD,k.RFT_TELEFONO_TRAFICO,k.RFT_TELEFONO_TRAFICO_CORTE,k.ULTIMA_ACTUALIZACION,k.ESTADOINAR_MED,k.CONTADOR
from (
select *
from (
select ESCENARIO,priodidadescenario,TYPEOPER,TIPO_OPERACION,RUCCOMPANIA,NEXTEL,NRO_ORDEN,CLASIFICACION,NROCONTRATO,CONTRATO,N_PLAN,CODIGOORDEN,SUBCATEGORIA,FECHACREACION,LLAVE,CLASIF,RESULTADOEVALUACION,MOTIVO,DETALLE_MOTIVO,DISTRITO,DIRECCION,DESTYPECUSTOMER,CONTEO,APR,ROW_NUMBER () OVER (PARTITION BY NEXTEL ORDER BY priodidadescenario asc) RN
from (
select ESCENARIO,DECODE(ESCENARIO,'ESCENARIO 4',1,'ESCENARIO 1',2,'ESCENARIO 2',3,'ESCENARIO 3',4) as priodidadescenario,TYPEOPER,TIPO_OPERACION,RUCCOMPANIA,NEXTEL,NRO_ORDEN,CLASIFICACION,NROCONTRATO,CONTRATO,N_PLAN,CODIGOORDEN,SUBCATEGORIA,FECHACREACION,LLAVE,CLASIF,RESULTADOEVALUACION,MOTIVO,DETALLE_MOTIVO,DISTRITO,DIRECCION,DESTYPECUSTOMER,CONTEO,APR from (
select 'ESCENARIO 1' as ESCENARIO,TYPEOPER,TIPO_OPERACION,RUCCOMPANIA,NEXTEL,NRO_ORDEN,CLASIFICACION,NROCONTRATO,CONTRATO,N_PLAN,CODIGOORDEN,SUBCATEGORIA,FECHACREACION,LLAVE,CLASIF,RESULTADOEVALUACION,MOTIVO,DETALLE_MOTIVO,DISTRITO,DIRECCION,DESTYPECUSTOMER,CONTEO,APR  from (
select * from (
select * from TEMPORAL_PROCESAMIENTO where APR=0 and resultadoevaluacion = 'DESAPROBADO' and conteo>0
) where resultadoevaluacion = 'DESAPROBADO' and conteo>0
)
UNION ALL
select 'ESCENARIO 2' as ESCENARIO,TYPEOPER,TIPO_OPERACION,RUCCOMPANIA,NEXTEL,NRO_ORDEN,CLASIFICACION,NROCONTRATO,CONTRATO,N_PLAN,CODIGOORDEN,SUBCATEGORIA,FECHACREACION,LLAVE,'No Aplica' as CLASIF,RESULTADOEVALUACION,MOTIVO,DETALLE_MOTIVO,DISTRITO,DIRECCION,DESTYPECUSTOMER,CONTEO,-1 as APR  from (
select * from (
select m.*,n.resultadoevaluacion,n.motivo,n.detalle_motivo,p.distrito,p.direccion,n.destypecustomer,o.conteo from
(
select typeoper,tipo_operacion,ruccompania,nextel,nro_orden,clasificacion,nrocontrato,contrato,n_plan,codigoorden,subcategoria,fechacreacion,ruccompania||'-'||SUBSTR(nextel,-9) as llave from (
select DECODE(x.tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,x.tipo_operacion,x.ruccompania,x.nextel,x.nro_orden,x.clasificacion,x.nrocontrato,x.contrato,x.n_plan,y.codigoorden,y.subcategoria,y.fechacreacion from (
select a.tipo_operacion,a.ruccompania,a.nextel,a.nro_orden,b.clasificacion,b.nrocontrato,a.contrato,a.n_plan
from TNP_INAR_PERSONAS_ODS a,
(
select * from (
select distinct 'multiple' as clasificacion,nro_orden,count(distinct contrato) nrocontrato
from TNP_INAR_PERSONAS_ODS
where periodo=to_char(sysdate-01,'yyyymm') and c_plan not in ('2167','2089') and tipo_operacion like '%Portabilidad%' and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
group by nro_orden having count(distinct nextel)>1
union all
select distinct 'unico' as clasificacion,nro_orden,count(distinct contrato) nrocontrato
from TNP_INAR_PERSONAS_ODS
where periodo=to_char(sysdate-01,'yyyymm') and c_plan not in ('2167','2089') and tipo_operacion like '%Portabilidad%' and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
group by nro_orden having count(distinct nextel)=1
)
) b
where a.nro_orden=b.nro_orden
and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
) x,
(
select * from (
select codigoorden,subcategoria,to_char(fechacreacionorden,'yyyymmdd') as fechacreacion,row_number () over (partition by codigoorden order by fechacarga desc) as rn from p_ordenes
) where rn=1
) y
where x.nro_orden=y.codigoorden
)
) m,
(
select * from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,llave,row_number () over (partition by llave order by fechacreacion desc) rn from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,
ruccompania || '-' || numero_preevaluado as llave
from (
select ruccompania,to_char(fechacreacion,'yyyymmdd') as fechacreacion,
DECODE(tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,
numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer
from TNP_PRE_EVALUACIONES
where periodo in (to_char(ADD_MONTHS(sysdate-01,-1),'yyyymm'),to_char(sysdate-01,'yyyymm'))
) where typeoper<>'-'
)
)
where rn=1
) n,
(
select llave,count(1) conteo from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,llave from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,
ruccompania as llave
from (
select ruccompania,to_char(fechacreacion,'yyyymmdd') as fechacreacion,
DECODE(tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,
numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer
from TNP_PRE_EVALUACIONES
where periodo in (to_char(ADD_MONTHS(sysdate-01,-1),'yyyymm'),to_char(sysdate-01,'yyyymm'))
) where typeoper<>'-'
)
)
group by llave
) o,
(
select * from p_compania
) p
where m.llave=n.llave (+)
and m.ruccompania=o.llave (+)
and m.ruccompania=p.ruccompania(+)
) where resultadoevaluacion is null and conteo>0
)
UNION ALL
select 'ESCENARIO 3' as ESCENARIO,TYPEOPER,TIPO_OPERACION,RUCCOMPANIA,NEXTEL,NRO_ORDEN,CLASIFICACION,NROCONTRATO,CONTRATO,N_PLAN,CODIGOORDEN,SUBCATEGORIA,FECHACREACION,LLAVE,CLASIF,RESULTADOEVALUACION,MOTIVO,DETALLE_MOTIVO,DISTRITO,DIRECCION,DESTYPECUSTOMER,CONTEO,-1 as APR  from (
select * from (
select m.*,n.resultadoevaluacion,n.motivo,n.detalle_motivo,p.distrito,p.direccion,n.destypecustomer,o.conteo from
(
select typeoper,tipo_operacion,ruccompania,nextel,nro_orden,clasificacion,nrocontrato,contrato,n_plan,codigoorden,subcategoria,fechacreacion,ruccompania||'-'||SUBSTR(nextel,-9)||'-'||clasif as llave,clasif from (
select DECODE(x.tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,x.tipo_operacion,x.ruccompania,x.nextel,x.nro_orden,x.clasificacion,
            x.nrocontrato,x.contrato,x.n_plan,y.codigoorden,y.subcategoria,y.fechacreacion,x.clasif
from (
select a.tipo_operacion,a.ruccompania,a.nextel,a.nro_orden,b.clasificacion,b.nrocontrato,a.contrato,a.n_plan,DECODE(NVL(c.tipo_portabilidad,'-'),'Móvil postpago','POST','Móvil prepago','PRE','OTRO') as clasif
from TNP_INAR_PERSONAS_ODS a,
(
select * from (
select distinct 'multiple' as clasificacion,nro_orden,count(distinct contrato) nrocontrato
from TNP_INAR_PERSONAS_ODS
where periodo=to_char(sysdate-01,'yyyymm') and c_plan not in ('2167','2089') and tipo_operacion like '%Portabilidad%' and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
group by nro_orden having count(distinct nextel)>1
union all
select distinct 'unico' as clasificacion,nro_orden,count(distinct contrato) nrocontrato
from TNP_INAR_PERSONAS_ODS
where periodo=to_char(sysdate-01,'yyyymm') and c_plan not in ('2167','2089') and tipo_operacion like '%Portabilidad%' and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
group by nro_orden having count(distinct nextel)=1
)
) b,
(
select inicio_rango,tipo_portabilidad from (
select inicio_rango,tipo_portabilidad,row_number () over (partition by inicio_rango order by numero_secuencial desc) as rn from tnp_portabilidad where mensaje='SPR'
) where rn='1'
) c
where a.nro_orden=b.nro_orden and
SUBSTR(a.nextel,-9)=c.inicio_rango (+)
and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
) x,
(
select * from (
select codigoorden,subcategoria,to_char(fechacreacionorden,'yyyymmdd') as fechacreacion,row_number () over (partition by codigoorden order by fechacarga desc) as rn from p_ordenes
) where rn=1
) y
where x.nro_orden=y.codigoorden
)
) m,
(
select * from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,llave,row_number () over (partition by llave order by fechacreacion desc) rn from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,
ruccompania || '-' || numero_preevaluado || '-' || typeoper as llave
from (
select ruccompania,to_char(fechacreacion,'yyyymmdd') as fechacreacion,
DECODE(tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,
numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer
from TNP_PRE_EVALUACIONES
where periodo in (to_char(ADD_MONTHS(sysdate-01,-1),'yyyymm'),to_char(sysdate-01,'yyyymm'))
) where typeoper<>'-'
)
)
where rn=1
) n,
(
select llave,count(1) conteo from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,llave from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,
ruccompania as llave
from (
select ruccompania,to_char(fechacreacion,'yyyymmdd') as fechacreacion,
DECODE(tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,
numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer
from TNP_PRE_EVALUACIONES
where periodo in (to_char(ADD_MONTHS(sysdate-01,-1),'yyyymm'),to_char(sysdate-01,'yyyymm'))
) where typeoper<>'-'
)
)
group by llave
) o,
(
select * from p_compania
) p
where m.llave=n.llave (+)
and m.ruccompania=o.llave (+)
and m.ruccompania=p.ruccompania(+)
) where resultadoevaluacion is null and conteo>0
) where (clasif='POST' and SUBCATEGORIA='SOLICITUD DE PORTABILIDAD PREPAGO')
or (clasif='PRE' and SUBCATEGORIA='SOLICITUD DE PORTABILIDAD POSTPAGO')
UNION ALL
select 'ESCENARIO 2' as ESCENARIO,TYPEOPER,TIPO_OPERACION,RUCCOMPANIA,NEXTEL,NRO_ORDEN,CLASIFICACION,NROCONTRATO,CONTRATO,N_PLAN,CODIGOORDEN,SUBCATEGORIA,FECHACREACION,LLAVE,CLASIF,RESULTADOEVALUACION,MOTIVO,DETALLE_MOTIVO,DISTRITO,DIRECCION,DESTYPECUSTOMER,CONTEO,-1 as APR  from (
select * from (
select m.*,n.resultadoevaluacion,n.motivo,n.detalle_motivo,p.distrito,p.direccion,n.destypecustomer,o.conteo from
(
select typeoper,tipo_operacion,ruccompania,nextel,nro_orden,clasificacion,nrocontrato,contrato,n_plan,codigoorden,subcategoria,fechacreacion,ruccompania||'-'||SUBSTR(nextel,-9)||'-'||clasif as llave,clasif from (
select DECODE(x.tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,x.tipo_operacion,x.ruccompania,x.nextel,x.nro_orden,x.clasificacion,
            x.nrocontrato,x.contrato,x.n_plan,y.codigoorden,y.subcategoria,y.fechacreacion,x.clasif
from (
select a.tipo_operacion,a.ruccompania,a.nextel,a.nro_orden,b.clasificacion,b.nrocontrato,a.contrato,a.n_plan,DECODE(NVL(c.tipo_portabilidad,'-'),'Móvil postpago','POST','Móvil prepago','PRE','OTRO') as clasif
from TNP_INAR_PERSONAS_ODS a,
(
select * from (
select distinct 'multiple' as clasificacion,nro_orden,count(distinct contrato) nrocontrato
from TNP_INAR_PERSONAS_ODS
where periodo=to_char(sysdate-01,'yyyymm') and c_plan not in ('2167','2089') and tipo_operacion like '%Portabilidad%' and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
group by nro_orden having count(distinct nextel)>1
union all
select distinct 'unico' as clasificacion,nro_orden,count(distinct contrato) nrocontrato
from TNP_INAR_PERSONAS_ODS
where periodo=to_char(sysdate-01,'yyyymm') and c_plan not in ('2167','2089') and tipo_operacion like '%Portabilidad%' and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
group by nro_orden having count(distinct nextel)=1
)
) b,
(
select inicio_rango,tipo_portabilidad from (
select inicio_rango,tipo_portabilidad,row_number () over (partition by inicio_rango order by numero_secuencial desc) as rn from tnp_portabilidad where mensaje='SPR'
) where rn='1'
) c
where a.nro_orden=b.nro_orden and
SUBSTR(a.nextel,-9)=c.inicio_rango (+)
and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
) x,
(
select * from (
select codigoorden,subcategoria,to_char(fechacreacionorden,'yyyymmdd') as fechacreacion,row_number () over (partition by codigoorden order by fechacarga desc) as rn from p_ordenes
) where rn=1
) y
where x.nro_orden=y.codigoorden
)
) m,
(
select * from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,llave,row_number () over (partition by llave order by fechacreacion desc) rn from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,
ruccompania || '-' || numero_preevaluado || '-' || typeoper as llave
from (
select ruccompania,to_char(fechacreacion,'yyyymmdd') as fechacreacion,
DECODE(tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,
numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer
from TNP_PRE_EVALUACIONES
where periodo in (to_char(ADD_MONTHS(sysdate-01,-1),'yyyymm'),to_char(sysdate-01,'yyyymm'))
) where typeoper<>'-'
)
)
where rn=1
) n,
(
select llave,count(1) conteo from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,llave from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,
ruccompania as llave
from (
select ruccompania,to_char(fechacreacion,'yyyymmdd') as fechacreacion,
DECODE(tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,
numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer
from TNP_PRE_EVALUACIONES
where periodo in (to_char(ADD_MONTHS(sysdate-01,-1),'yyyymm'),to_char(sysdate-01,'yyyymm'))
) where typeoper<>'-'
)
)
group by llave
) o,
(
select * from p_compania
) p
where m.llave=n.llave (+)
and m.ruccompania=o.llave (+)
and m.ruccompania=p.ruccompania(+)
) where resultadoevaluacion is null and conteo>0
) where (clasif='POST' and SUBCATEGORIA='SOLICITUD DE PORTABILIDAD POSTPAGO')
or (clasif='PRE' and SUBCATEGORIA='SOLICITUD DE PORTABILIDAD PREPAGO')
UNION ALL
select 'ESCENARIO 4' as ESCENARIO,TYPEOPER,TIPO_OPERACION,RUCCOMPANIA,NEXTEL,NRO_ORDEN,CLASIFICACION,NROCONTRATO,CONTRATO,N_PLAN,CODIGOORDEN,SUBCATEGORIA,FECHACREACION,LLAVE,'No Aplica' as CLASIF,RESULTADOEVALUACION,MOTIVO,DETALLE_MOTIVO,DISTRITO,DIRECCION,DESTYPECUSTOMER,CONTEO,-1 as APR  from (
select * from (
select m.*,n.resultadoevaluacion,n.motivo,n.detalle_motivo,p.distrito,p.direccion,n.destypecustomer,o.conteo from
(
select typeoper,tipo_operacion,ruccompania,nextel,nro_orden,clasificacion,nrocontrato,contrato,n_plan,codigoorden,subcategoria,fechacreacion,ruccompania as llave from (
select DECODE(x.tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,x.tipo_operacion,x.ruccompania,x.nextel,x.nro_orden,x.clasificacion,x.nrocontrato,x.contrato,x.n_plan,y.codigoorden,y.subcategoria,y.fechacreacion from (
select a.tipo_operacion,a.ruccompania,a.nextel,a.nro_orden,b.clasificacion,b.nrocontrato,a.contrato,a.n_plan
from TNP_INAR_PERSONAS_ODS a,
(
select * from (
select distinct 'multiple' as clasificacion,nro_orden,count(distinct contrato) nrocontrato
from TNP_INAR_PERSONAS_ODS
where periodo=to_char(sysdate-01,'yyyymm') and c_plan not in ('2167','2089') and tipo_operacion like '%Portabilidad%' and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
group by nro_orden having count(distinct nextel)>1
union all
select distinct 'unico' as clasificacion,nro_orden,count(distinct contrato) nrocontrato
from TNP_INAR_PERSONAS_ODS
where periodo=to_char(sysdate-01,'yyyymm') and c_plan not in ('2167','2089') and tipo_operacion like '%Portabilidad%' and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
group by nro_orden having count(distinct nextel)=1
)
) b
where a.nro_orden=b.nro_orden
and to_char(fecha,'yyyymmdd')=to_char(sysdate-01,'yyyymmdd')
) x,
(
select * from (
select codigoorden,subcategoria,to_char(fechacreacionorden,'yyyymmdd') as fechacreacion,row_number () over (partition by codigoorden order by fechacarga desc) as rn from p_ordenes
) where rn=1
) y
where x.nro_orden=y.codigoorden
)
) m,
(
select * from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,
ruccompania  as llave,row_number () over (partition by numero_preevaluado,ruccompania order by fechacreacion desc) rn
from (
select ruccompania,to_char(fechacreacion,'yyyymmdd') as fechacreacion,
DECODE(tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,
numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo ,destypecustomer
from TNP_PRE_EVALUACIONES
where periodo in (to_char(ADD_MONTHS(sysdate-01,-1),'yyyymm'),to_char(sysdate-01,'yyyymm'))
)
) where rn=1
) n,
(
select llave,count(1) conteo from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,llave from (
select ruccompania,fechacreacion,typeoper,numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer,
ruccompania as llave
from (
select ruccompania,to_char(fechacreacion,'yyyymmdd') as fechacreacion,
DECODE(tipo_operacion,'Portabilidad_Origen_Prepago','PRE','Portabilidad_Origen_Postpago','POST','-') as typeoper,
numero_preevaluado,resultadoevaluacion,motivo,detalle_motivo,destypecustomer
from TNP_PRE_EVALUACIONES
where periodo in (to_char(ADD_MONTHS(sysdate-01,-1),'yyyymm'),to_char(sysdate-01,'yyyymm'))
)
)
)
group by llave
) o,
(
select * from p_compania
) p
where m.llave=n.llave (+)
and m.llave=o.llave (+)
and m.llave=p.ruccompania(+)
) where resultadoevaluacion is null
)
)

)
)
where rn=1
) j,
(select periodo,fecha,codigocuenta,fechaactivacion,fechaingresocliente,codigocompania,ruccompania,razonsocial,contrato,nextel,modeloequipo,gama_equipo,rango_equipos,
c_plan,n_plan,t_plan,tech,product,estadoinar,metrica,unidades_gross,vendedor,tipodoc,giro_negoc,cantactivados,rentabasica,dealer,imei,imei_bscs,ciclo,region,departamento,
provincia,distrito,solucion,VALORINCOMEPREDICTOR,BANCARIZACION,RIESGOFINANCIERO,FECHAPREEVALUACION,RESULTADOEVALUACION,CAPACIDADENDEUDAMIENTO,
VALORRIESGOPREDICTOR,RANGOVRP,CANAL_VENTA,FECHA_FACTURACION,FECHA_VENCIMIENTO,MONTO_FACTURACION,MONTO_TOTAL_DEUDA,FLAG_PAGO,
PAGO_TOTAL,VALORTOPEEQUIPOS,TYPECUSTOMER,DESTYPECUSTOMER,TYPEBUSINESS,DESTYPEBUSINESS,TIENDA,KAM,DIVISION_TERRITORIO,
CADENA_DEALER,CANAL_DE_VENTA,FECHAPAGO,PORTABILIDAD,JERARQUIA_DISTRITO,SOCIO_NEGOCIO,GERENCIA_TERRITORIO,TIPO_TIENDA,CEDENTE,
RECEPTOR,MODALIDAD_ORIGEN,SCORING,FECHA_PORTABILIDAD,TOPE_EN_RECIBO,RANGODEBTCAPACITY,RENTATOTAL,RANGORENTATOTAL,
MONTO_TOTAL_DEUDA_ANT,TIPO_RENTA,FACTOR_PROR,MONTO_PROR,CLIENTERECURRENTE,DEUDA_CONTRATO,DEUDA_POR_PRORATEAR,DEUDA_PRORATEADA,
PAGO_PRORATEADO,DEUDA_NETA,DEUDA_NETA_ANT,DEUDA_FINAL_CONT,MONTOPAGOSABONO,MONTOSALDOANTERIOR,MONTODEUDAATRASADA,NRO_ORDEN,
MONTO_FACT1,MONTO_FACT2,POS_NAME,FLAG_TP,CATEGORIA,PRECIO_VENTA,MODELO_ORDEN,KIT,T0,RFT,TERMINAL,TIPO_OPERACION,TIPO_OPERACION_2,
CANAL_VENTAVF,TYPECUSTOMER2,T0_A_FECHA,DIA_MES,FECHA_DIA_MES,RFT_A_FECHA,RFT_DIA_MES,RFT_FECHA_DIA_MES,NUMERO_OPERACION,PREEV_PDV,
NUMERO_PREEVALUADO,CICLO_IDEAL,COD_SOLICITUD,RFT_TELEFONO_TRAFICO,RFT_TELEFONO_TRAFICO_CORTE,ULTIMA_ACTUALIZACION,ESTADOINAR_MED,
row_number() over (partition by ruccompania order by fechaactivacion desc) as CONTADOR from TNP_INAR_PERSONAS_ODS where periodo=to_char(sysdate-01,'yyyymm')
) k
where j.ruccompania=k.ruccompania (+);
commit;
END PROCESAR_ANOMALIASPREEVAL;

END PAQUETE_FRAUDES;